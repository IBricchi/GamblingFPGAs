
labOral.elf:     file format elf32-littlenios2
labOral.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0402023c

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00013a3c memsz 0x00013a3c flags r-x
    LOAD off    0x00015000 vaddr 0x00000000 paddr 0x04033a5c align 2**12
         filesz 0x0000256c memsz 0x00002858 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000021c  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013820  0402023c  0402023c  0000123c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000924  00000000  04033a5c  00015000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c48  00000924  04034380  00015924  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  0000256c  04035fc8  0001756c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00002858  00002858  0001756c  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  04035fc8  04035fc8  0001756c  2**0
                  CONTENTS
  8 .comment      0000002d  00000000  00000000  0001756c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001458  00000000  00000000  000175a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info   0003b8f1  00000000  00000000  000189f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000eb6b  00000000  00000000  000542e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line   0001c28d  00000000  00000000  00062e54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  00002f88  00000000  00000000  0007f0e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    00004926  00000000  00000000  0008206c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    00021d47  00000000  00000000  00086992  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_alt_sim_info 00000030  00000000  00000000  000a86dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00002c40  00000000  00000000  000a8710  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .thread_model 00000003  00000000  00000000  000af1ae  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000af1b1  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000af1bd  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000af1be  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000af1bf  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000af1c3  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000af1c7  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  000af1cb  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000af1d4  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000af1dd  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000e  00000000  00000000  000af1e6  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000043  00000000  00000000  000af1f4  2**0
                  CONTENTS, READONLY
 30 .jdi          0000544d  00000000  00000000  000af237  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000928f1  00000000  00000000  000b4684  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
0402023c l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000924 l    d  .rwdata	00000000 .rwdata
0000256c l    d  .bss	00000000 .bss
00002858 l    d  .sdram	00000000 .sdram
04035fc8 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../labOral_bsp//obj/HAL/src/crt0.o
04020284 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 bet.c
00000000 l    df *ABS*	00000000 bitify.c
00000000 l    df *ABS*	00000000 digify.c
00000000 l    df *ABS*	00000000 filter.c
00000000 l    df *ABS*	00000000 jsonDecode.c
00000000 l    df *ABS*	00000000 jsonEncode.c
00000000 l    df *ABS*	00000000 printDec.c
00000000 l    df *ABS*	00000000 request.c
00000000 l    df *ABS*	00000000 setup.c
00000000 l    df *ABS*	00000000 shake.c
00000000 l    df *ABS*	00000000 timerLoop.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fclose.c
04023460 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0402390c l     F .text	00000008 __fp_lock
04023920 l     F .text	00000008 __fp_unlock
04023928 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 ftello.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
00000964 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
04025b6c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0402823c l     F .text	000000c0 __sbprintf
0000041c l     O .rodata	00000010 blanks.1
0000040c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
0402867c l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
000004c8 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
0402bf30 l     F .text	000000f4 __sprint_r.part.0
0402d38c l     F .text	000000c0 __sbprintf
000005fc l     O .rodata	00000010 blanks.1
000005ec l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
04030f54 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
04031060 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
040310c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
04031350 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
04031430 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
04031598 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
04031684 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
04031858 l     F .text	0000003c alt_get_errno
04031894 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
04031aa0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00002560 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
04031ce8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
04031e1c l     F .text	00000034 alt_dev_reg
000014a4 l     O .rwdata	00001060 jtag_uart
00002504 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
04032114 l     F .text	00000210 altera_avalon_jtag_uart_irq
04032324 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
04032968 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
04032fb0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
040333c8 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
04021c14 g     F .text	00000218 requestLoop
000025a0 g     O .bss	00000004 alt_instruction_exception_handler
0402b81c g     F .text	00000070 _mprec_log10
0402b908 g     F .text	00000060 __any_on
0402a530 g     F .text	00000058 _isatty_r
000004d4 g     O .rodata	00000028 __mprec_tinytens
04031794 g     F .text	0000007c alt_main
04025a90 g     F .text	000000cc _puts_r
00002758 g     O .bss	00000100 alt_irq
0402a5a8 g     F .text	00000064 _lseek_r
04020880 g     F .text	00000044 float_to_fixed
04034380 g       *ABS*	00000000 __flash_rwdata_start
04029fc0 g     F .text	000000b8 __sflags
0402fbc0 g     F .text	00000080 .hidden __eqdf2
00002858 g       *ABS*	00000000 __alt_heap_start
040208c4 g     F .text	0000004c fixed_to_float
0402df4c g     F .text	00000060 _kill_r
0402d918 g     F .text	0000006c _wcrtomb_r
0402dabc g     F .text	00000098 _signal_r
04025f78 g     F .text	0000005c __sseek
04023c60 g     F .text	00000010 __sinit
040282fc g     F .text	00000148 __swbuf_r
0402d7d0 g     F .text	00000074 _setlocale_r
04023a90 g     F .text	00000068 __sfmoreglue
04031834 g     F .text	00000024 __malloc_unlock
04022ad0 g     F .text	000003f4 .hidden __divsf3
00002570 g     O .bss	00000004 fp
0402a6dc g     F .text	0000012c memmove
04023c4c g     F .text	00000014 _cleanup
0402a808 g     F .text	000000a4 _Balloc
04023278 g     F .text	00000070 .hidden __fixsfsi
04021f40 g     F .text	000004c0 sys_timer_isr
0402fc40 g     F .text	000000e8 .hidden __gtdf2
040336a0 g     F .text	00000024 altera_nios2_gen2_irq_init
04020000 g     F .entry	0000001c __reset
0402a588 g     F .text	00000008 __localeconv_l
04032bb4 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
04020020 g       *ABS*	00000000 __flash_exceptions_start
040246d8 g     F .text	00000060 _fstat_r
00002574 g     O .bss	00000004 errno
04025dc8 g     F .text	0000007c __srget
04025ef0 g     F .text	00000008 __seofread
00002590 g     O .bss	00000004 alt_argv
0000a530 g       *ABS*	00000000 _gp
040311b0 g     F .text	00000020 getpid
00001324 g     O .rwdata	00000180 alt_fd_list
04021e2c g     F .text	00000054 setupAccelerometer
04024b3c g     F .text	0000007c _getc_r
04024bb8 g     F .text	00000090 getc
0403315c g     F .text	00000090 alt_find_dev
04025690 g     F .text	00000100 memcpy
04023914 g     F .text	0000000c _cleanup_r
04030e0c g     F .text	000000b8 .hidden __floatsidf
04033478 g     F .text	0000007c alt_io_redirect
0402fd28 g     F .text	000000e8 .hidden __ltdf2
04033a5c g       *ABS*	00000000 __DTOR_END__
04025b5c g     F .text	00000010 puts
04033754 g     F .text	00000098 alt_exception_cause_generated_bad_addr
04021e80 g     F .text	00000038 setupPeripherals
0402b774 g     F .text	000000a8 __ratio
0402d370 g     F .text	0000001c __vfiprintf_internal
040206f0 g     F .text	00000190 digify
04032520 g     F .text	00000220 altera_avalon_jtag_uart_read
04024e90 g     F .text	00000010 malloc
040225a4 g     F .text	00000064 .hidden __udivsi3
0403138c g     F .text	000000a4 isatty
0402db54 g     F .text	000000c4 _raise_r
0402d44c g     F .text	00000064 __assert_func
00000524 g     O .rodata	000000c8 __mprec_tens
040336c4 g     F .text	00000090 alt_icache_flush
00002580 g     O .bss	00000004 __malloc_top_pad
0402dfac g     F .text	00000004 _getpid_r
0402a590 g     F .text	0000000c _localeconv_r
0402ac54 g     F .text	000000b0 __i2b
0402a078 g     F .text	000004b8 __sfvwrite_r
0402dc18 g     F .text	000000bc __sigtramp_r
04020a5c g     F .text	00000144 filt
04025e44 g     F .text	00000058 _sbrk_r
040217dc g     F .text	0000004c writeString
0402b968 g     F .text	00000064 _read_r
00002554 g     O .rwdata	00000004 alt_max_fd
04023520 g     F .text	00000070 _fclose_r
0402197c g     F .text	00000194 print_dec
04023888 g     F .text	00000084 fflush
0000257c g     O .bss	00000004 __malloc_max_sbrked_mem
040311d0 g     F .text	00000180 alt_irq_register
04020604 g     F .text	000000ec bitify
0402ea74 g     F .text	000008f0 .hidden __adddf3
0402123c g     F .text	00000090 readStrInput
0402b508 g     F .text	00000108 __b2d
0402e540 g     F .text	00000534 .hidden __umoddi3
040316c0 g     F .text	000000d4 lseek
00002534 g     O .rwdata	00000004 _global_impure_ptr
0402b9cc g     F .text	00000564 _realloc_r
00002858 g       *ABS*	00000000 __bss_end
04033598 g     F .text	00000108 alt_tick
0402dfb0 g     F .text	00000590 .hidden __udivdi3
0402d734 g     F .text	00000024 _fputwc_r
000004fc g     O .rodata	00000028 __mprec_bigtens
0402aa08 g     F .text	00000138 __s2b
0402da48 g     F .text	00000018 abort
04030ec4 g     F .text	00000090 .hidden __floatunsidf
0402b228 g     F .text	00000058 __mcmp
04023c80 g     F .text	00000014 __fp_lock_all
040334f4 g     F .text	000000a4 alt_alarm_stop
00002588 g     O .bss	00000004 alt_irq_active
040242d8 g     F .text	000003e4 _fseeko_r
040200fc g     F .exceptions	000000cc alt_irq_handler
000012fc g     O .rwdata	00000028 alt_dev_null
040210f8 g     F .text	00000144 readIntInput
04032f64 g     F .text	0000004c alt_dcache_flush_all
0402ab40 g     F .text	00000064 __hi0bits
04030d8c g     F .text	00000080 .hidden __fixdfsi
0402247c g     F .text	00000034 setupTimerLoop
0000256c g       *ABS*	00000000 __ram_rwdata_end
04022400 g     F .text	0000007c timer_init
0000254c g     O .rwdata	00000008 alt_dev_list
04023dfc g     F .text	00000048 _fputc_r
04031d24 g     F .text	000000f8 write
040258e4 g     F .text	000000cc _putc_r
00000924 g       *ABS*	00000000 __ram_rodata_end
04031100 g     F .text	000000b0 fstat
04023dd8 g     F .text	00000024 fprintf
0403146c g     F .text	0000012c kill
0402fd28 g     F .text	000000e8 .hidden __ledf2
0402af58 g     F .text	00000148 __pow5mult
0402c03c g     F .text	00001334 ___vfiprintf_internal_r
04022608 g     F .text	0000005c .hidden __umodsi3
00002858 g       *ABS*	00000000 end
04020ddc g     F .text	000000ec readStr
040246bc g     F .text	0000001c fseeko
040242bc g     F .text	0000001c fseek
04032060 g     F .text	000000b4 altera_avalon_jtag_uart_init
040201c8 g     F .exceptions	00000074 alt_instruction_exception_entry
04033a5c g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
040329e8 g     F .text	0000007c alt_avalon_timer_sc_init
0402340c g     F .text	00000054 .hidden __clzsi2
04032740 g     F .text	00000228 altera_avalon_jtag_uart_write
04023c70 g     F .text	00000004 __sfp_lock_acquire
0402a60c g     F .text	000000d0 memchr
0402612c g     F .text	000020f4 ___vfprintf_internal_r
04023fbc g     F .text	000002fc _free_r
00000760 g     O .rodata	00000180 _ctype_b
0402d844 g     F .text	0000000c __locale_mb_cur_max
0403393c g     F .text	00000120 __call_exitprocs
04025d54 g     F .text	00000074 __srget_r
0000253c g     O .rwdata	00000004 __malloc_sbrk_base
0402023c g     F .text	0000004c _start
00002598 g     O .bss	00000004 _alt_tick_rate
04024854 g     F .text	00000010 ftello
0402b0a0 g     F .text	00000188 __lshift
0402031c g     F .text	000002e8 Bet
0000259c g     O .bss	00000004 _alt_nticks
0402dd90 g     F .text	000000a0 signal
04031adc g     F .text	000000fc read
04031e8c g     F .text	00000070 alt_sys_init
04032aa0 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
040232e8 g     F .text	00000124 .hidden __floatsisf
04020910 g     F .text	0000003c fixed_mult
04025880 g     F .text	00000064 _open_r
040338ac g     F .text	00000090 __register_exitproc
0402ad04 g     F .text	00000254 __multiply
040323c4 g     F .text	00000068 altera_avalon_jtag_uart_close
00000924 g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00002730 g     O .bss	00000028 __malloc_current_mallinfo
04021bc8 g     F .text	0000004c closeFP
0402b610 g     F .text	00000164 __d2b
04021828 g     F .text	00000154 writeOutput
040212cc g     F .text	0000019c readStrArrayInput
04031efc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
040332f4 g     F .text	000000a0 alt_get_fd
04032c88 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
04028624 g     F .text	00000058 _close_r
04033834 g     F .text	00000078 memcmp
04031fbc g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00002858 g       *ABS*	00000000 __alt_stack_base
0403200c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
040249a4 g     F .text	000000c4 _fwrite_r
04021b78 g     F .text	00000050 openFP
04024738 g     F .text	0000011c _ftello_r
040284c0 g     F .text	00000164 __swsetup_r
0402f364 g     F .text	0000085c .hidden __divdf3
04023af8 g     F .text	00000154 __sfp
0402b88c g     F .text	0000007c __copybits
00000d88 g     O .rwdata	00000408 __malloc_av_
04023c7c g     F .text	00000004 __sinit_lock_release
0402fe10 g     F .text	00000674 .hidden __muldf3
04025e9c g     F .text	00000054 __sread
040331ec g     F .text	00000108 alt_find_file
04032fec g     F .text	000000a8 alt_dev_llist_insert
04031810 g     F .text	00000024 __malloc_lock
04023db0 g     F .text	00000028 _fprintf_r
04031c30 g     F .text	000000b8 sbrk
04023828 g     F .text	00000060 _fflush_r
0402d4c4 g     F .text	000000b4 _calloc_r
04023d98 g     F .text	00000018 fopen
0000256c g       *ABS*	00000000 __bss_start
000025a4 g     O .bss	00000010 data
04025790 g     F .text	000000f0 memset
04020288 g     F .text	00000094 main
00002594 g     O .bss	00000004 alt_envp
00002578 g     O .bss	00000004 __malloc_max_total_mem
04020cfc g     F .text	000000e0 checkName
04031f5c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04028444 g     F .text	00000018 __swbuf
04025fd4 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
04023590 g     F .text	00000070 fclose
04028878 g     F .text	00001748 _dtoa_r
04024eb0 g     F .text	000007e0 _malloc_r
0402da18 g     F .text	00000030 __ascii_wctomb
00002558 g     O .rwdata	00000004 alt_errno
0402d578 g     F .text	00000020 _fiprintf_r
0402de30 g     F .text	00000060 _init_signal
04024864 g     F .text	00000098 _fwalk
0402d8c4 g     F .text	0000000c _mbtowc_r
040259b0 g     F .text	000000e0 putc
040224b0 g     F .text	00000080 .hidden __divsi3
04023ea0 g     F .text	0000011c _malloc_trim_r
04033a5c g       *ABS*	00000000 __CTOR_END__
04022ec4 g     F .text	000003b4 .hidden __mulsf3
04025fdc g     F .text	000000b8 strcmp
04033a5c g       *ABS*	00000000 __flash_rodata_start
04033a5c g       *ABS*	00000000 __DTOR_LIST__
04021b10 g     F .text	00000068 clear_dec
0402fbc0 g     F .text	00000080 .hidden __nedf2
04031e50 g     F .text	0000003c alt_irq_init
04031bd8 g     F .text	00000058 alt_release_fd
000002c4 g     O .rodata	00000100 .hidden __clz_tab
00002584 g     O .bss	00000004 _PathLocale
040337ec g     F .text	00000014 atexit
0402845c g     F .text	00000064 _write_r
0402d850 g     F .text	00000074 setlocale
04021720 g     F .text	00000070 writeBool
00002538 g     O .rwdata	00000004 _impure_ptr
0000258c g     O .bss	00000004 alt_argc
04023600 g     F .text	00000228 __sflush_r
040330f8 g     F .text	00000064 _do_dtors
040242b8 g     F .text	00000004 _fseek_r
04025b88 g     F .text	000001cc __srefill_r
04020020 g       .exceptions	00000000 alt_irq_entry
0402d8d0 g     F .text	00000044 __ascii_mbtowc
0402b4ac g     F .text	0000005c __ulp
04023c94 g     F .text	00000014 __fp_unlock_all
00002530 g     O .rwdata	00000001 pwm
04023e44 g     F .text	0000005c fputc
00002544 g     O .rwdata	00000008 alt_fs_list
0402094c g     F .text	00000110 quantised_filt
000025e8 g     O .bss	0000001c outputData
04020020 g       *ABS*	00000000 __ram_exceptions_start
00002604 g     O .bss	0000012c filterData
04032a64 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
0402a59c g     F .text	0000000c localeconv
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
04024df8 g     F .text	00000098 __swhatbuf_r
04024a68 g     F .text	000000d4 fwrite
0000256c g       *ABS*	00000000 _edata
00002858 g       *ABS*	00000000 _end
0402d5d0 g     F .text	00000164 __fputwc
0402023c g       *ABS*	00000000 __ram_exceptions_end
0403242c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
04025ef8 g     F .text	00000080 __swrite
00002540 g     O .rwdata	00000004 __malloc_trim_threshold
04033800 g     F .text	00000034 exit
0402d598 g     F .text	00000038 fiprintf
0402d914 g     F .text	00000004 _vfiprintf_r
040248fc g     F .text	000000a8 _fwalk_reent
0402b280 g     F .text	0000022c __mdiff
04022530 g     F .text	00000074 .hidden __modsi3
04032d5c g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
04021790 g     F .text	0000004c writeInt
04000000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
04023c74 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
0000065c g     O .rodata	00000101 _ctype_
04030d38 g     F .text	00000054 .hidden __unorddf2
04023ca8 g     F .text	000000f0 _fopen_r
04020c58 g     F .text	000000a4 setupInputData
0403108c g     F .text	00000038 _exit
04032e30 g     F .text	00000134 alt_alarm_start
04032ae4 g     F .text	00000068 alt_up_accelerometer_spi_read
04032b4c g     F .text	00000068 alt_up_accelerometer_spi_write
04024c48 g     F .text	000001b0 __smakebuf_r
04026094 g     F .text	00000098 strlen
00000924 g     O .rwdata	00000040 betData
0402da60 g     F .text	0000005c _init_signal_r
0403194c g     F .text	00000154 open
0402fc40 g     F .text	000000e8 .hidden __gedf2
0402d4b0 g     F .text	00000014 __assert
0402c024 g     F .text	00000018 __sprint_r
04033394 g     F .text	00000034 alt_icache_flush_all
0000255c g     O .rwdata	00000004 alt_priority_mask
04020ba0 g     F .text	000000b8 filterAccelerometer
04028220 g     F .text	0000001c __vfprintf_internal
0402da0c g     F .text	0000000c _wctomb_r
04030484 g     F .text	000008b4 .hidden __subdf3
04020ec8 g     F .text	00000230 readBoolInput
0402aba4 g     F .text	000000b0 __lo0bits
04021468 g     F .text	000002b8 readInput
00002564 g     O .rwdata	00000008 alt_alarm_list
04033094 g     F .text	00000064 _do_ctors
0402de90 g     F .text	000000bc __sigtramp
0402d984 g     F .text	00000088 wcrtomb
000025b4 g     O .bss	00000034 inputData
04030f90 g     F .text	000000d0 close
04022664 g     F .text	0000046c .hidden __addsf3
00001190 g     O .rwdata	0000016c __global_locale
04031600 g     F .text	00000084 alt_load
0402d758 g     F .text	00000078 fputwc
0402dcd4 g     F .text	000000bc raise
04024ea0 g     F .text	00000010 free
04023c78 g     F .text	00000004 __sinit_lock_acquire
0402a8d0 g     F .text	00000138 __multadd
04021eb8 g     F .text	00000088 shake
0402a8ac g     F .text	00000024 _Bfree
0000256c g     O .bss	00000004 dataSrc



Disassembly of section .entry:

04020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 4020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 402000c:	00bffd16 	blt	zero,r2,4020004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020010:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020014:	08408f14 	ori	at,at,572
    jmp r1
 4020018:	0800683a 	jmp	at
 402001c:	00000000 	call	0 <__alt_mem_sdram>

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201c80 	call	40201c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 4020118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0ffff17 	ldw	r3,-4(fp)
 4020130:	e0bffe17 	ldw	r2,-8(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001226 	beq	r2,zero,4020184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 402013c:	e0bffd17 	ldw	r2,-12(fp)
 4020140:	100690fa 	slli	r3,r2,3
 4020144:	00800034 	movhi	r2,0
 4020148:	1885883a 	add	r2,r3,r2
 402014c:	10c9d617 	ldw	r3,10072(r2)
 4020150:	e0bffd17 	ldw	r2,-12(fp)
 4020154:	100890fa 	slli	r4,r2,3
 4020158:	00800034 	movhi	r2,0
 402015c:	2085883a 	add	r2,r4,r2
 4020160:	1089d717 	ldw	r2,10076(r2)
 4020164:	e17ffd17 	ldw	r5,-12(fp)
 4020168:	1009883a 	mov	r4,r2
 402016c:	183ee83a 	callr	r3
#endif
        break;
 4020170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 4020174:	0005313a 	rdctl	r2,ipending
 4020178:	e0bffb15 	stw	r2,-20(fp)
  return active;
 402017c:	e0bffb17 	ldw	r2,-20(fp)
 4020180:	00000706 	br	40201a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
 4020184:	e0bffe17 	ldw	r2,-8(fp)
 4020188:	1085883a 	add	r2,r2,r2
 402018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 4020190:	e0bffd17 	ldw	r2,-12(fp)
 4020194:	10800044 	addi	r2,r2,1
 4020198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 402019c:	003fe306 	br	402012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 40201a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 40201a4:	e0bfff17 	ldw	r2,-4(fp)
 40201a8:	103fdd1e 	bne	r2,zero,4020120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201ac:	0001883a 	nop
}
 40201b0:	0001883a 	nop
 40201b4:	e037883a 	mov	sp,fp
 40201b8:	dfc00117 	ldw	ra,4(sp)
 40201bc:	df000017 	ldw	fp,0(sp)
 40201c0:	dec00204 	addi	sp,sp,8
 40201c4:	f800283a 	ret

040201c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201c8:	defffb04 	addi	sp,sp,-20
 40201cc:	dfc00415 	stw	ra,16(sp)
 40201d0:	df000315 	stw	fp,12(sp)
 40201d4:	df000304 	addi	fp,sp,12
 40201d8:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 40201dc:	000531fa 	rdctl	r2,exception
 40201e0:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 40201e4:	e0bfff17 	ldw	r2,-4(fp)
 40201e8:	1004d0ba 	srli	r2,r2,2
 40201ec:	108007cc 	andi	r2,r2,31
 40201f0:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 40201f4:	0005333a 	rdctl	r2,badaddr
 40201f8:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40201fc:	d0a01c17 	ldw	r2,-32656(gp)
 4020200:	10000726 	beq	r2,zero,4020220 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 4020204:	d0a01c17 	ldw	r2,-32656(gp)
 4020208:	e0ffff17 	ldw	r3,-4(fp)
 402020c:	e1bffe17 	ldw	r6,-8(fp)
 4020210:	e17ffd17 	ldw	r5,-12(fp)
 4020214:	1809883a 	mov	r4,r3
 4020218:	103ee83a 	callr	r2
 402021c:	00000206 	br	4020228 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020220:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4020224:	0005883a 	mov	r2,zero
}
 4020228:	e037883a 	mov	sp,fp
 402022c:	dfc00117 	ldw	ra,4(sp)
 4020230:	df000017 	ldw	fp,0(sp)
 4020234:	dec00204 	addi	sp,sp,8
 4020238:	f800283a 	ret

Disassembly of section .text:

0402023c <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 402023c:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4020240:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 4020244:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 4020248:	00bffd16 	blt	zero,r2,4020240 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 402024c:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 4020250:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4020254:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 4020258:	d6a94c14 	ori	gp,gp,42288
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 402025c:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 4020260:	10895b14 	ori	r2,r2,9580

    movhi r3, %hi(__bss_end)
 4020264:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 4020268:	18ca1614 	ori	r3,r3,10328

    beq r2, r3, 1f
 402026c:	10c00326 	beq	r2,r3,402027c <_start+0x40>

0:
    stw zero, (r2)
 4020270:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4020274:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4020278:	10fffd36 	bltu	r2,r3,4020270 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 402027c:	40316000 	call	4031600 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020280:	40317940 	call	4031794 <alt_main>

04020284 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4020284:	003fff06 	br	4020284 <alt_after_alt_main>

04020288 <main>:
OutputData outputData;
DataSrc dataSrc;



int main(){
 4020288:	defffe04 	addi	sp,sp,-8
 402028c:	dfc00115 	stw	ra,4(sp)
 4020290:	df000015 	stw	fp,0(sp)
 4020294:	d839883a 	mov	fp,sp
	// clearing segments
	clear_dec();
 4020298:	4021b100 	call	4021b10 <clear_dec>

	// setup inputData
	setupInputData();
 402029c:	4020c580 	call	4020c58 <setupInputData>

	// setup peripherals
	if (setupPeripherals()) {
 40202a0:	4021e800 	call	4021e80 <setupPeripherals>
 40202a4:	10000226 	beq	r2,zero,40202b0 <main+0x28>
		return 1;
 40202a8:	00800044 	movi	r2,1
 40202ac:	00001606 	br	4020308 <main+0x80>
	}

	// setup jtag
	if(openFP()){
 40202b0:	4021b780 	call	4021b78 <openFP>
 40202b4:	10000a26 	beq	r2,zero,40202e0 <main+0x58>
		fprintf(stderr, "Unable to access jtag.\n");
 40202b8:	d0a00217 	ldw	r2,-32760(gp)
 40202bc:	10800317 	ldw	r2,12(r2)
 40202c0:	100f883a 	mov	r7,r2
 40202c4:	018005c4 	movi	r6,23
 40202c8:	01400044 	movi	r5,1
 40202cc:	01000034 	movhi	r4,0
 40202d0:	21000004 	addi	r4,r4,0
 40202d4:	4024a680 	call	4024a68 <fwrite>
		return 1;
 40202d8:	00800044 	movi	r2,1
 40202dc:	00000a06 	br	4020308 <main+0x80>
	}

	// setup timer
	setupTimerLoop();
 40202e0:	402247c0 	call	402247c <setupTimerLoop>

	// start main execution
	printf("Running ..\n");
 40202e4:	01000034 	movhi	r4,0
 40202e8:	21000604 	addi	r4,r4,24
 40202ec:	4025b5c0 	call	4025b5c <puts>

	// run request loop
	requestLoop();
 40202f0:	4021c140 	call	4021c14 <requestLoop>

	// close jtag
	closeFP();
 40202f4:	4021bc80 	call	4021bc8 <closeFP>

	printf("Complete\n");
 40202f8:	01000034 	movhi	r4,0
 40202fc:	21000904 	addi	r4,r4,36
 4020300:	4025b5c0 	call	4025b5c <puts>

	return 0;
 4020304:	0005883a 	mov	r2,zero
}
 4020308:	e037883a 	mov	sp,fp
 402030c:	dfc00117 	ldw	ra,4(sp)
 4020310:	df000017 	ldw	fp,0(sp)
 4020314:	dec00204 	addi	sp,sp,8
 4020318:	f800283a 	ret

0402031c <Bet>:

#include "bet.h"
#include "bitify.h"

int Bet(alt_32  *count, int *segvalue, int *maxQ, alt_32 x_value, uint16_t switch_read, uint button_read, int m_digits[], int bet_value[])
{
 402031c:	deffed04 	addi	sp,sp,-76
 4020320:	dfc01215 	stw	ra,72(sp)
 4020324:	df001115 	stw	fp,68(sp)
 4020328:	dc001015 	stw	r16,64(sp)
 402032c:	df001104 	addi	fp,sp,68
 4020330:	e13ff315 	stw	r4,-52(fp)
 4020334:	e17ff215 	stw	r5,-56(fp)
 4020338:	e1bff115 	stw	r6,-60(fp)
 402033c:	e1fff015 	stw	r7,-64(fp)
 4020340:	e0800217 	ldw	r2,8(fp)
 4020344:	e0bfef0d 	sth	r2,-68(fp)
	// Setting up and defining
	int range = 43;
 4020348:	00800ac4 	movi	r2,43
 402034c:	e0bffe15 	stw	r2,-8(fp)
	int min = -25;
 4020350:	00bff9c4 	movi	r2,-25
 4020354:	e0bffd15 	stw	r2,-12(fp)
	int xval = x_value;
 4020358:	e0bff017 	ldw	r2,-64(fp)
 402035c:	e0bffc15 	stw	r2,-16(fp)

	// Digifying switch values
	int s_digits[6];
	bitify(s_digits, switch_read);
 4020360:	e0ffef0b 	ldhu	r3,-68(fp)
 4020364:	e0bff404 	addi	r2,fp,-48
 4020368:	180b883a 	mov	r5,r3
 402036c:	1009883a 	mov	r4,r2
 4020370:	40206040 	call	4020604 <bitify>

	// If switch locked
	if(s_digits[*segvalue] == 1 ){
 4020374:	e0bff217 	ldw	r2,-56(fp)
 4020378:	10800017 	ldw	r2,0(r2)
 402037c:	100490ba 	slli	r2,r2,2
 4020380:	e0ffff04 	addi	r3,fp,-4
 4020384:	1885883a 	add	r2,r3,r2
 4020388:	10bff517 	ldw	r2,-44(r2)
 402038c:	10800058 	cmpnei	r2,r2,1
 4020390:	1000331e 	bne	r2,zero,4020460 <Bet+0x144>
		//printf("locked switch: %d ", *segvalue);
		print_dec(bet_value[*segvalue], *segvalue);
 4020394:	e0bff217 	ldw	r2,-56(fp)
 4020398:	10800017 	ldw	r2,0(r2)
 402039c:	100490ba 	slli	r2,r2,2
 40203a0:	e0c00517 	ldw	r3,20(fp)
 40203a4:	1885883a 	add	r2,r3,r2
 40203a8:	10c00017 	ldw	r3,0(r2)
 40203ac:	e0bff217 	ldw	r2,-56(fp)
 40203b0:	10800017 	ldw	r2,0(r2)
 40203b4:	100b883a 	mov	r5,r2
 40203b8:	1809883a 	mov	r4,r3
 40203bc:	402197c0 	call	402197c <print_dec>
		if(bet_value[*segvalue] != m_digits[*segvalue]){
 40203c0:	e0bff217 	ldw	r2,-56(fp)
 40203c4:	10800017 	ldw	r2,0(r2)
 40203c8:	100490ba 	slli	r2,r2,2
 40203cc:	e0c00517 	ldw	r3,20(fp)
 40203d0:	1885883a 	add	r2,r3,r2
 40203d4:	10c00017 	ldw	r3,0(r2)
 40203d8:	e0bff217 	ldw	r2,-56(fp)
 40203dc:	10800017 	ldw	r2,0(r2)
 40203e0:	100490ba 	slli	r2,r2,2
 40203e4:	e1000417 	ldw	r4,16(fp)
 40203e8:	2085883a 	add	r2,r4,r2
 40203ec:	10800017 	ldw	r2,0(r2)
 40203f0:	18800326 	beq	r3,r2,4020400 <Bet+0xe4>
			*maxQ=1;
 40203f4:	e0bff117 	ldw	r2,-60(fp)
 40203f8:	00c00044 	movi	r3,1
 40203fc:	10c00015 	stw	r3,0(r2)
		}
		//printf(" %d \n", mx);
		if(*segvalue == 0){
 4020400:	e0bff217 	ldw	r2,-56(fp)
 4020404:	10800017 	ldw	r2,0(r2)
 4020408:	1000041e 	bne	r2,zero,402041c <Bet+0x100>
			*segvalue = 5;
 402040c:	e0bff217 	ldw	r2,-56(fp)
 4020410:	00c00144 	movi	r3,5
 4020414:	10c00015 	stw	r3,0(r2)
 4020418:	00005706 	br	4020578 <Bet+0x25c>
		}
		else{
			*segvalue = *segvalue - 1;
 402041c:	e0bff217 	ldw	r2,-56(fp)
 4020420:	10800017 	ldw	r2,0(r2)
 4020424:	10ffffc4 	addi	r3,r2,-1
 4020428:	e0bff217 	ldw	r2,-56(fp)
 402042c:	10c00015 	stw	r3,0(r2)
			if(*maxQ == 1){
 4020430:	e0bff117 	ldw	r2,-60(fp)
 4020434:	10800017 	ldw	r2,0(r2)
 4020438:	10800058 	cmpnei	r2,r2,1
 402043c:	10004e1e 	bne	r2,zero,4020578 <Bet+0x25c>
				m_digits[*segvalue] = 9;
 4020440:	e0bff217 	ldw	r2,-56(fp)
 4020444:	10800017 	ldw	r2,0(r2)
 4020448:	100490ba 	slli	r2,r2,2
 402044c:	e0c00417 	ldw	r3,16(fp)
 4020450:	1885883a 	add	r2,r3,r2
 4020454:	00c00244 	movi	r3,9
 4020458:	10c00015 	stw	r3,0(r2)
 402045c:	00004606 	br	4020578 <Bet+0x25c>
			}
		}
	}
	// If switch unlocked
	else if(s_digits[*segvalue] == 0){
 4020460:	e0bff217 	ldw	r2,-56(fp)
 4020464:	10800017 	ldw	r2,0(r2)
 4020468:	100490ba 	slli	r2,r2,2
 402046c:	e0ffff04 	addi	r3,fp,-4
 4020470:	1885883a 	add	r2,r3,r2
 4020474:	10bff517 	ldw	r2,-44(r2)
 4020478:	10003f1e 	bne	r2,zero,4020578 <Bet+0x25c>
		if(m_digits[*segvalue] == 0){
 402047c:	e0bff217 	ldw	r2,-56(fp)
 4020480:	10800017 	ldw	r2,0(r2)
 4020484:	100490ba 	slli	r2,r2,2
 4020488:	e0c00417 	ldw	r3,16(fp)
 402048c:	1885883a 	add	r2,r3,r2
 4020490:	10800017 	ldw	r2,0(r2)
 4020494:	1000071e 	bne	r2,zero,40204b4 <Bet+0x198>
			bet_value[*segvalue] = 0;
 4020498:	e0bff217 	ldw	r2,-56(fp)
 402049c:	10800017 	ldw	r2,0(r2)
 40204a0:	100490ba 	slli	r2,r2,2
 40204a4:	e0c00517 	ldw	r3,20(fp)
 40204a8:	1885883a 	add	r2,r3,r2
 40204ac:	10000015 	stw	zero,0(r2)
 40204b0:	00002606 	br	402054c <Bet+0x230>
		}
		else{
			int intermedA = ((m_digits[*segvalue]*100)/range) + 1;
 40204b4:	e0bff217 	ldw	r2,-56(fp)
 40204b8:	10800017 	ldw	r2,0(r2)
 40204bc:	100490ba 	slli	r2,r2,2
 40204c0:	e0c00417 	ldw	r3,16(fp)
 40204c4:	1885883a 	add	r2,r3,r2
 40204c8:	10800017 	ldw	r2,0(r2)
 40204cc:	10801924 	muli	r2,r2,100
 40204d0:	e17ffe17 	ldw	r5,-8(fp)
 40204d4:	1009883a 	mov	r4,r2
 40204d8:	40224b00 	call	40224b0 <__divsi3>
 40204dc:	10800044 	addi	r2,r2,1
 40204e0:	e0bffb15 	stw	r2,-20(fp)
			int intermedB = (intermedA*xval) - (intermedA*min);
 40204e4:	e0fffb17 	ldw	r3,-20(fp)
 40204e8:	e0bffc17 	ldw	r2,-16(fp)
 40204ec:	1887383a 	mul	r3,r3,r2
 40204f0:	e13ffb17 	ldw	r4,-20(fp)
 40204f4:	e0bffd17 	ldw	r2,-12(fp)
 40204f8:	2085383a 	mul	r2,r4,r2
 40204fc:	1885c83a 	sub	r2,r3,r2
 4020500:	e0bffa15 	stw	r2,-24(fp)
			bet_value[*segvalue] = m_digits[*segvalue] - (intermedB/100);
 4020504:	e0bff217 	ldw	r2,-56(fp)
 4020508:	10800017 	ldw	r2,0(r2)
 402050c:	100490ba 	slli	r2,r2,2
 4020510:	e0c00417 	ldw	r3,16(fp)
 4020514:	1885883a 	add	r2,r3,r2
 4020518:	14000017 	ldw	r16,0(r2)
 402051c:	e0bffa17 	ldw	r2,-24(fp)
 4020520:	017fe704 	movi	r5,-100
 4020524:	1009883a 	mov	r4,r2
 4020528:	40224b00 	call	40224b0 <__divsi3>
 402052c:	1009883a 	mov	r4,r2
 4020530:	e0bff217 	ldw	r2,-56(fp)
 4020534:	10800017 	ldw	r2,0(r2)
 4020538:	100490ba 	slli	r2,r2,2
 402053c:	e0c00517 	ldw	r3,20(fp)
 4020540:	1885883a 	add	r2,r3,r2
 4020544:	8107883a 	add	r3,r16,r4
 4020548:	10c00015 	stw	r3,0(r2)
		}
		print_dec(bet_value[*segvalue], *segvalue);
 402054c:	e0bff217 	ldw	r2,-56(fp)
 4020550:	10800017 	ldw	r2,0(r2)
 4020554:	100490ba 	slli	r2,r2,2
 4020558:	e0c00517 	ldw	r3,20(fp)
 402055c:	1885883a 	add	r2,r3,r2
 4020560:	10c00017 	ldw	r3,0(r2)
 4020564:	e0bff217 	ldw	r2,-56(fp)
 4020568:	10800017 	ldw	r2,0(r2)
 402056c:	100b883a 	mov	r5,r2
 4020570:	1809883a 	mov	r4,r3
 4020574:	402197c0 	call	402197c <print_dec>
	}

	return ((bet_value[5]*100000)+(bet_value[4]*10000)+(bet_value[3]*1000)+(bet_value[2]*100)+(bet_value[1]*10)+(bet_value[0]));
 4020578:	e0800517 	ldw	r2,20(fp)
 402057c:	10800504 	addi	r2,r2,20
 4020580:	10c00017 	ldw	r3,0(r2)
 4020584:	008000b4 	movhi	r2,2
 4020588:	10a1a804 	addi	r2,r2,-31072
 402058c:	1887383a 	mul	r3,r3,r2
 4020590:	e0800517 	ldw	r2,20(fp)
 4020594:	10800404 	addi	r2,r2,16
 4020598:	10800017 	ldw	r2,0(r2)
 402059c:	1089c424 	muli	r2,r2,10000
 40205a0:	1887883a 	add	r3,r3,r2
 40205a4:	e0800517 	ldw	r2,20(fp)
 40205a8:	10800304 	addi	r2,r2,12
 40205ac:	10800017 	ldw	r2,0(r2)
 40205b0:	1080fa24 	muli	r2,r2,1000
 40205b4:	1887883a 	add	r3,r3,r2
 40205b8:	e0800517 	ldw	r2,20(fp)
 40205bc:	10800204 	addi	r2,r2,8
 40205c0:	10800017 	ldw	r2,0(r2)
 40205c4:	10801924 	muli	r2,r2,100
 40205c8:	1887883a 	add	r3,r3,r2
 40205cc:	e0800517 	ldw	r2,20(fp)
 40205d0:	10800104 	addi	r2,r2,4
 40205d4:	10800017 	ldw	r2,0(r2)
 40205d8:	108002a4 	muli	r2,r2,10
 40205dc:	1887883a 	add	r3,r3,r2
 40205e0:	e0800517 	ldw	r2,20(fp)
 40205e4:	10800017 	ldw	r2,0(r2)
 40205e8:	1885883a 	add	r2,r3,r2
}
 40205ec:	e6ffff04 	addi	sp,fp,-4
 40205f0:	dfc00217 	ldw	ra,8(sp)
 40205f4:	df000117 	ldw	fp,4(sp)
 40205f8:	dc000017 	ldw	r16,0(sp)
 40205fc:	dec00304 	addi	sp,sp,12
 4020600:	f800283a 	ret

04020604 <bitify>:
 */

#include "bitify.h"

void bitify(int bits[], uint16_t num )
{
 4020604:	defffd04 	addi	sp,sp,-12
 4020608:	df000215 	stw	fp,8(sp)
 402060c:	df000204 	addi	fp,sp,8
 4020610:	e13fff15 	stw	r4,-4(fp)
 4020614:	2805883a 	mov	r2,r5
 4020618:	e0bffe0d 	sth	r2,-8(fp)
	bits[0] = num & 0b0000000001;
 402061c:	e0bffe0b 	ldhu	r2,-8(fp)
 4020620:	10c0004c 	andi	r3,r2,1
 4020624:	e0bfff17 	ldw	r2,-4(fp)
 4020628:	10c00015 	stw	r3,0(r2)
	bits[1] = (num & 0b0000000010)/2;
 402062c:	e0bffe0b 	ldhu	r2,-8(fp)
 4020630:	1080008c 	andi	r2,r2,2
 4020634:	e0ffff17 	ldw	r3,-4(fp)
 4020638:	18c00104 	addi	r3,r3,4
 402063c:	1008d7fa 	srli	r4,r2,31
 4020640:	2085883a 	add	r2,r4,r2
 4020644:	1005d07a 	srai	r2,r2,1
 4020648:	18800015 	stw	r2,0(r3)
	bits[2] = (num & 0b0000000100)/4;
 402064c:	e0bffe0b 	ldhu	r2,-8(fp)
 4020650:	1100010c 	andi	r4,r2,4
 4020654:	e0bfff17 	ldw	r2,-4(fp)
 4020658:	10c00204 	addi	r3,r2,8
 402065c:	2005883a 	mov	r2,r4
 4020660:	1000010e 	bge	r2,zero,4020668 <bitify+0x64>
 4020664:	108000c4 	addi	r2,r2,3
 4020668:	1005d0ba 	srai	r2,r2,2
 402066c:	18800015 	stw	r2,0(r3)
	bits[3] = (num & 0b0000001000)/8;
 4020670:	e0bffe0b 	ldhu	r2,-8(fp)
 4020674:	1100020c 	andi	r4,r2,8
 4020678:	e0bfff17 	ldw	r2,-4(fp)
 402067c:	10c00304 	addi	r3,r2,12
 4020680:	2005883a 	mov	r2,r4
 4020684:	1000010e 	bge	r2,zero,402068c <bitify+0x88>
 4020688:	108001c4 	addi	r2,r2,7
 402068c:	1005d0fa 	srai	r2,r2,3
 4020690:	18800015 	stw	r2,0(r3)
	bits[4] = (num & 0b0000010000)/16;
 4020694:	e0bffe0b 	ldhu	r2,-8(fp)
 4020698:	1100040c 	andi	r4,r2,16
 402069c:	e0bfff17 	ldw	r2,-4(fp)
 40206a0:	10c00404 	addi	r3,r2,16
 40206a4:	2005883a 	mov	r2,r4
 40206a8:	1000010e 	bge	r2,zero,40206b0 <bitify+0xac>
 40206ac:	108003c4 	addi	r2,r2,15
 40206b0:	1005d13a 	srai	r2,r2,4
 40206b4:	18800015 	stw	r2,0(r3)
	bits[5] = (num & 0b0000100000)/32;
 40206b8:	e0bffe0b 	ldhu	r2,-8(fp)
 40206bc:	1100080c 	andi	r4,r2,32
 40206c0:	e0bfff17 	ldw	r2,-4(fp)
 40206c4:	10c00504 	addi	r3,r2,20
 40206c8:	2005883a 	mov	r2,r4
 40206cc:	1000010e 	bge	r2,zero,40206d4 <bitify+0xd0>
 40206d0:	108007c4 	addi	r2,r2,31
 40206d4:	1005d17a 	srai	r2,r2,5
 40206d8:	18800015 	stw	r2,0(r3)

}
 40206dc:	0001883a 	nop
 40206e0:	e037883a 	mov	sp,fp
 40206e4:	df000017 	ldw	fp,0(sp)
 40206e8:	dec00104 	addi	sp,sp,4
 40206ec:	f800283a 	ret

040206f0 <digify>:
 */

#include "digify.h"

void digify(int digs[], int num )
{
 40206f0:	defffa04 	addi	sp,sp,-24
 40206f4:	dfc00515 	stw	ra,20(sp)
 40206f8:	df000415 	stw	fp,16(sp)
 40206fc:	dc000315 	stw	r16,12(sp)
 4020700:	df000404 	addi	fp,sp,16
 4020704:	e13ffd15 	stw	r4,-12(fp)
 4020708:	e17ffc15 	stw	r5,-16(fp)
	 int getrid;
	 digs[5] = num/100000;
 402070c:	e0bffd17 	ldw	r2,-12(fp)
 4020710:	14000504 	addi	r16,r2,20
 4020714:	e0bffc17 	ldw	r2,-16(fp)
 4020718:	014000b4 	movhi	r5,2
 402071c:	2961a804 	addi	r5,r5,-31072
 4020720:	1009883a 	mov	r4,r2
 4020724:	40224b00 	call	40224b0 <__divsi3>
 4020728:	80800015 	stw	r2,0(r16)
	 getrid = (digs[5]*10);
 402072c:	e0bffd17 	ldw	r2,-12(fp)
 4020730:	10800504 	addi	r2,r2,20
 4020734:	10800017 	ldw	r2,0(r2)
 4020738:	108002a4 	muli	r2,r2,10
 402073c:	e0bffe15 	stw	r2,-8(fp)
	 digs[4] = num/10000 - getrid;
 4020740:	e0bffc17 	ldw	r2,-16(fp)
 4020744:	0149c404 	movi	r5,10000
 4020748:	1009883a 	mov	r4,r2
 402074c:	40224b00 	call	40224b0 <__divsi3>
 4020750:	1009883a 	mov	r4,r2
 4020754:	e0bffd17 	ldw	r2,-12(fp)
 4020758:	10800404 	addi	r2,r2,16
 402075c:	e0fffe17 	ldw	r3,-8(fp)
 4020760:	20c7c83a 	sub	r3,r4,r3
 4020764:	10c00015 	stw	r3,0(r2)
	 getrid = (getrid*10) + (digs[4]*10);
 4020768:	e0bffd17 	ldw	r2,-12(fp)
 402076c:	10800404 	addi	r2,r2,16
 4020770:	10c00017 	ldw	r3,0(r2)
 4020774:	e0bffe17 	ldw	r2,-8(fp)
 4020778:	1885883a 	add	r2,r3,r2
 402077c:	108002a4 	muli	r2,r2,10
 4020780:	e0bffe15 	stw	r2,-8(fp)
	 digs[3] = num/1000  - getrid;
 4020784:	e0bffc17 	ldw	r2,-16(fp)
 4020788:	0140fa04 	movi	r5,1000
 402078c:	1009883a 	mov	r4,r2
 4020790:	40224b00 	call	40224b0 <__divsi3>
 4020794:	1009883a 	mov	r4,r2
 4020798:	e0bffd17 	ldw	r2,-12(fp)
 402079c:	10800304 	addi	r2,r2,12
 40207a0:	e0fffe17 	ldw	r3,-8(fp)
 40207a4:	20c7c83a 	sub	r3,r4,r3
 40207a8:	10c00015 	stw	r3,0(r2)
	 getrid = (getrid*10) + (digs[3]*10);
 40207ac:	e0bffd17 	ldw	r2,-12(fp)
 40207b0:	10800304 	addi	r2,r2,12
 40207b4:	10c00017 	ldw	r3,0(r2)
 40207b8:	e0bffe17 	ldw	r2,-8(fp)
 40207bc:	1885883a 	add	r2,r3,r2
 40207c0:	108002a4 	muli	r2,r2,10
 40207c4:	e0bffe15 	stw	r2,-8(fp)
	 digs[2] = num/100 - getrid;
 40207c8:	e0bffc17 	ldw	r2,-16(fp)
 40207cc:	01401904 	movi	r5,100
 40207d0:	1009883a 	mov	r4,r2
 40207d4:	40224b00 	call	40224b0 <__divsi3>
 40207d8:	1009883a 	mov	r4,r2
 40207dc:	e0bffd17 	ldw	r2,-12(fp)
 40207e0:	10800204 	addi	r2,r2,8
 40207e4:	e0fffe17 	ldw	r3,-8(fp)
 40207e8:	20c7c83a 	sub	r3,r4,r3
 40207ec:	10c00015 	stw	r3,0(r2)
	 getrid = (getrid*10) + (digs[2]*10);
 40207f0:	e0bffd17 	ldw	r2,-12(fp)
 40207f4:	10800204 	addi	r2,r2,8
 40207f8:	10c00017 	ldw	r3,0(r2)
 40207fc:	e0bffe17 	ldw	r2,-8(fp)
 4020800:	1885883a 	add	r2,r3,r2
 4020804:	108002a4 	muli	r2,r2,10
 4020808:	e0bffe15 	stw	r2,-8(fp)
	 digs[1] = num/10 - getrid;
 402080c:	e0bffc17 	ldw	r2,-16(fp)
 4020810:	01400284 	movi	r5,10
 4020814:	1009883a 	mov	r4,r2
 4020818:	40224b00 	call	40224b0 <__divsi3>
 402081c:	1009883a 	mov	r4,r2
 4020820:	e0bffd17 	ldw	r2,-12(fp)
 4020824:	10800104 	addi	r2,r2,4
 4020828:	e0fffe17 	ldw	r3,-8(fp)
 402082c:	20c7c83a 	sub	r3,r4,r3
 4020830:	10c00015 	stw	r3,0(r2)
	 getrid = (getrid*10) + (digs[1]*10);
 4020834:	e0bffd17 	ldw	r2,-12(fp)
 4020838:	10800104 	addi	r2,r2,4
 402083c:	10c00017 	ldw	r3,0(r2)
 4020840:	e0bffe17 	ldw	r2,-8(fp)
 4020844:	1885883a 	add	r2,r3,r2
 4020848:	108002a4 	muli	r2,r2,10
 402084c:	e0bffe15 	stw	r2,-8(fp)
	 digs[0] = num - getrid;
 4020850:	e0fffc17 	ldw	r3,-16(fp)
 4020854:	e0bffe17 	ldw	r2,-8(fp)
 4020858:	1887c83a 	sub	r3,r3,r2
 402085c:	e0bffd17 	ldw	r2,-12(fp)
 4020860:	10c00015 	stw	r3,0(r2)
}
 4020864:	0001883a 	nop
 4020868:	e6ffff04 	addi	sp,fp,-4
 402086c:	dfc00217 	ldw	ra,8(sp)
 4020870:	df000117 	ldw	fp,4(sp)
 4020874:	dc000017 	ldw	r16,0(sp)
 4020878:	dec00304 	addi	sp,sp,12
 402087c:	f800283a 	ret

04020880 <float_to_fixed>:
 */
#include "filter.h"


int float_to_fixed(float input)
{
 4020880:	defffd04 	addi	sp,sp,-12
 4020884:	dfc00215 	stw	ra,8(sp)
 4020888:	df000115 	stw	fp,4(sp)
 402088c:	df000104 	addi	fp,sp,4
 4020890:	e13fff15 	stw	r4,-4(fp)
		return (int) (input * (1 << 8));
 4020894:	0150e034 	movhi	r5,17280
 4020898:	e13fff17 	ldw	r4,-4(fp)
 402089c:	4022ec40 	call	4022ec4 <__mulsf3>
 40208a0:	1007883a 	mov	r3,r2
 40208a4:	1805883a 	mov	r2,r3
 40208a8:	1009883a 	mov	r4,r2
 40208ac:	40232780 	call	4023278 <__fixsfsi>
}
 40208b0:	e037883a 	mov	sp,fp
 40208b4:	dfc00117 	ldw	ra,4(sp)
 40208b8:	df000017 	ldw	fp,0(sp)
 40208bc:	dec00204 	addi	sp,sp,8
 40208c0:	f800283a 	ret

040208c4 <fixed_to_float>:

float fixed_to_float(int input)
{
 40208c4:	defffd04 	addi	sp,sp,-12
 40208c8:	dfc00215 	stw	ra,8(sp)
 40208cc:	df000115 	stw	fp,4(sp)
 40208d0:	df000104 	addi	fp,sp,4
 40208d4:	e13fff15 	stw	r4,-4(fp)
	return ((float)input / (float) (1 << 8));
 40208d8:	e13fff17 	ldw	r4,-4(fp)
 40208dc:	40232e80 	call	40232e8 <__floatsisf>
 40208e0:	1007883a 	mov	r3,r2
 40208e4:	0150e034 	movhi	r5,17280
 40208e8:	1809883a 	mov	r4,r3
 40208ec:	4022ad00 	call	4022ad0 <__divsf3>
 40208f0:	1007883a 	mov	r3,r2
 40208f4:	1809883a 	mov	r4,r3
 40208f8:	2005883a 	mov	r2,r4
}
 40208fc:	e037883a 	mov	sp,fp
 4020900:	dfc00117 	ldw	ra,4(sp)
 4020904:	df000017 	ldw	fp,0(sp)
 4020908:	dec00204 	addi	sp,sp,8
 402090c:	f800283a 	ret

04020910 <fixed_mult>:

int fixed_mult(int x, int y)
{
 4020910:	defffd04 	addi	sp,sp,-12
 4020914:	df000215 	stw	fp,8(sp)
 4020918:	df000204 	addi	fp,sp,8
 402091c:	e13fff15 	stw	r4,-4(fp)
 4020920:	e17ffe15 	stw	r5,-8(fp)
	return (x * y) / (1 << 4);
 4020924:	e0ffff17 	ldw	r3,-4(fp)
 4020928:	e0bffe17 	ldw	r2,-8(fp)
 402092c:	1885383a 	mul	r2,r3,r2
 4020930:	1000010e 	bge	r2,zero,4020938 <fixed_mult+0x28>
 4020934:	108003c4 	addi	r2,r2,15
 4020938:	1005d13a 	srai	r2,r2,4
}
 402093c:	e037883a 	mov	sp,fp
 4020940:	df000017 	ldw	fp,0(sp)
 4020944:	dec00104 	addi	sp,sp,4
 4020948:	f800283a 	ret

0402094c <quantised_filt>:

void quantised_filt(int coef[], int buffer[], int x_read, int * quantised, int N)
{
 402094c:	defff704 	addi	sp,sp,-36
 4020950:	dfc00815 	stw	ra,32(sp)
 4020954:	df000715 	stw	fp,28(sp)
 4020958:	df000704 	addi	fp,sp,28
 402095c:	e13ffc15 	stw	r4,-16(fp)
 4020960:	e17ffb15 	stw	r5,-20(fp)
 4020964:	e1bffa15 	stw	r6,-24(fp)
 4020968:	e1fff915 	stw	r7,-28(fp)
	int intermediate = 0;
 402096c:	e03fff15 	stw	zero,-4(fp)

	for(int i=(N-1); i>0; i--)
 4020970:	e0800217 	ldw	r2,8(fp)
 4020974:	10bfffc4 	addi	r2,r2,-1
 4020978:	e0bffe15 	stw	r2,-8(fp)
 402097c:	00001006 	br	40209c0 <quantised_filt+0x74>
	        {  buffer[i] = buffer[i-1];  }
 4020980:	e0fffe17 	ldw	r3,-8(fp)
 4020984:	00900034 	movhi	r2,16384
 4020988:	10bfffc4 	addi	r2,r2,-1
 402098c:	1885883a 	add	r2,r3,r2
 4020990:	100490ba 	slli	r2,r2,2
 4020994:	e0fffb17 	ldw	r3,-20(fp)
 4020998:	1887883a 	add	r3,r3,r2
 402099c:	e0bffe17 	ldw	r2,-8(fp)
 40209a0:	100490ba 	slli	r2,r2,2
 40209a4:	e13ffb17 	ldw	r4,-20(fp)
 40209a8:	2085883a 	add	r2,r4,r2
 40209ac:	18c00017 	ldw	r3,0(r3)
 40209b0:	10c00015 	stw	r3,0(r2)
	for(int i=(N-1); i>0; i--)
 40209b4:	e0bffe17 	ldw	r2,-8(fp)
 40209b8:	10bfffc4 	addi	r2,r2,-1
 40209bc:	e0bffe15 	stw	r2,-8(fp)
 40209c0:	e0bffe17 	ldw	r2,-8(fp)
 40209c4:	00bfee16 	blt	zero,r2,4020980 <quantised_filt+0x34>
	        buffer[0] = x_read;
 40209c8:	e0bffb17 	ldw	r2,-20(fp)
 40209cc:	e0fffa17 	ldw	r3,-24(fp)
 40209d0:	10c00015 	stw	r3,0(r2)
	for(int i=0; i<(N-1); i++)
 40209d4:	e03ffd15 	stw	zero,-12(fp)
 40209d8:	00001306 	br	4020a28 <quantised_filt+0xdc>
			{ intermediate = intermediate + (fixed_mult(buffer[i], coef[i]));
 40209dc:	e0bffd17 	ldw	r2,-12(fp)
 40209e0:	100490ba 	slli	r2,r2,2
 40209e4:	e0fffb17 	ldw	r3,-20(fp)
 40209e8:	1885883a 	add	r2,r3,r2
 40209ec:	11000017 	ldw	r4,0(r2)
 40209f0:	e0bffd17 	ldw	r2,-12(fp)
 40209f4:	100490ba 	slli	r2,r2,2
 40209f8:	e0fffc17 	ldw	r3,-16(fp)
 40209fc:	1885883a 	add	r2,r3,r2
 4020a00:	10800017 	ldw	r2,0(r2)
 4020a04:	100b883a 	mov	r5,r2
 4020a08:	40209100 	call	4020910 <fixed_mult>
 4020a0c:	1007883a 	mov	r3,r2
 4020a10:	e0bfff17 	ldw	r2,-4(fp)
 4020a14:	10c5883a 	add	r2,r2,r3
 4020a18:	e0bfff15 	stw	r2,-4(fp)
	for(int i=0; i<(N-1); i++)
 4020a1c:	e0bffd17 	ldw	r2,-12(fp)
 4020a20:	10800044 	addi	r2,r2,1
 4020a24:	e0bffd15 	stw	r2,-12(fp)
 4020a28:	e0800217 	ldw	r2,8(fp)
 4020a2c:	10bfffc4 	addi	r2,r2,-1
 4020a30:	e0fffd17 	ldw	r3,-12(fp)
 4020a34:	18bfe916 	blt	r3,r2,40209dc <quantised_filt+0x90>
			//printf("QUAN: i: %d  buf: %d   coef: %d   inter: %d\n", i, buffer[i], coef[i], intermediate);
			}
			//printf("\n qfilt: %d  unq: %d\n", intermediate, (int)fixed_to_float(intermediate));
	*quantised = intermediate;
 4020a38:	e0bff917 	ldw	r2,-28(fp)
 4020a3c:	e0ffff17 	ldw	r3,-4(fp)
 4020a40:	10c00015 	stw	r3,0(r2)

}
 4020a44:	0001883a 	nop
 4020a48:	e037883a 	mov	sp,fp
 4020a4c:	dfc00117 	ldw	ra,4(sp)
 4020a50:	df000017 	ldw	fp,0(sp)
 4020a54:	dec00204 	addi	sp,sp,8
 4020a58:	f800283a 	ret

04020a5c <filt>:

void filt(float buffer[], int x_read, float * filtered, int N)
{
 4020a5c:	deffdf04 	addi	sp,sp,-132
 4020a60:	dfc02015 	stw	ra,128(sp)
 4020a64:	df001f15 	stw	fp,124(sp)
 4020a68:	df001f04 	addi	fp,sp,124
 4020a6c:	e13fe415 	stw	r4,-112(fp)
 4020a70:	e17fe315 	stw	r5,-116(fp)
 4020a74:	e1bfe215 	stw	r6,-120(fp)
 4020a78:	e1ffe115 	stw	r7,-124(fp)
	float coef[24] = {0.00464135470656760, 0.00737747226463043, -0.00240768675012549, -0.00711018685736960, 0.00326564674118811, 6.11463173516297e-05, -0.00935761974859676, 0.00397493281996669, 0.00437887161977042, -0.0133160721439149, 0.00304771783859210, 0.0114361953193935, -0.0179286984033957, -0.00107408161324030, 0.0222597890359562, -0.0224772654507762, -0.0108744542661829, 0.0395972756447093, -0.0263221720611839, -0.0337570326573828, 0.0751987217099385, -0.0288978194901786, -0.120354853218164, 0.287921968939103};
 4020a7c:	e0ffe504 	addi	r3,fp,-108
 4020a80:	00800034 	movhi	r2,0
 4020a84:	10800c04 	addi	r2,r2,48
 4020a88:	01001804 	movi	r4,96
 4020a8c:	200d883a 	mov	r6,r4
 4020a90:	100b883a 	mov	r5,r2
 4020a94:	1809883a 	mov	r4,r3
 4020a98:	40256900 	call	4025690 <memcpy>
	float intermediate=0;
 4020a9c:	e03fff15 	stw	zero,-4(fp)
	for(int i=(N-1); i>0; i--)
 4020aa0:	e0bfe117 	ldw	r2,-124(fp)
 4020aa4:	10bfffc4 	addi	r2,r2,-1
 4020aa8:	e0bffe15 	stw	r2,-8(fp)
 4020aac:	00001006 	br	4020af0 <filt+0x94>
	        {  buffer[i] = buffer[i-1];  }
 4020ab0:	e0fffe17 	ldw	r3,-8(fp)
 4020ab4:	00900034 	movhi	r2,16384
 4020ab8:	10bfffc4 	addi	r2,r2,-1
 4020abc:	1885883a 	add	r2,r3,r2
 4020ac0:	100490ba 	slli	r2,r2,2
 4020ac4:	e0ffe417 	ldw	r3,-112(fp)
 4020ac8:	1889883a 	add	r4,r3,r2
 4020acc:	e0bffe17 	ldw	r2,-8(fp)
 4020ad0:	100490ba 	slli	r2,r2,2
 4020ad4:	e0ffe417 	ldw	r3,-112(fp)
 4020ad8:	1885883a 	add	r2,r3,r2
 4020adc:	20c00017 	ldw	r3,0(r4)
 4020ae0:	10c00015 	stw	r3,0(r2)
	for(int i=(N-1); i>0; i--)
 4020ae4:	e0bffe17 	ldw	r2,-8(fp)
 4020ae8:	10bfffc4 	addi	r2,r2,-1
 4020aec:	e0bffe15 	stw	r2,-8(fp)
 4020af0:	e0bffe17 	ldw	r2,-8(fp)
 4020af4:	00bfee16 	blt	zero,r2,4020ab0 <filt+0x54>
	        buffer[0] = (float)x_read;
 4020af8:	e13fe317 	ldw	r4,-116(fp)
 4020afc:	40232e80 	call	40232e8 <__floatsisf>
 4020b00:	1007883a 	mov	r3,r2
 4020b04:	e0bfe417 	ldw	r2,-112(fp)
 4020b08:	10c00015 	stw	r3,0(r2)
	for(int i=0; i<(N-1); i++)
 4020b0c:	e03ffd15 	stw	zero,-12(fp)
 4020b10:	00001606 	br	4020b6c <filt+0x110>
			{ intermediate = intermediate + (buffer[i]*coef[i]);
 4020b14:	e0bffd17 	ldw	r2,-12(fp)
 4020b18:	100490ba 	slli	r2,r2,2
 4020b1c:	e0ffe417 	ldw	r3,-112(fp)
 4020b20:	1885883a 	add	r2,r3,r2
 4020b24:	10c00017 	ldw	r3,0(r2)
 4020b28:	e0bffd17 	ldw	r2,-12(fp)
 4020b2c:	100490ba 	slli	r2,r2,2
 4020b30:	e085883a 	add	r2,fp,r2
 4020b34:	113fe517 	ldw	r4,-108(r2)
 4020b38:	200b883a 	mov	r5,r4
 4020b3c:	1809883a 	mov	r4,r3
 4020b40:	4022ec40 	call	4022ec4 <__mulsf3>
 4020b44:	1007883a 	mov	r3,r2
 4020b48:	1805883a 	mov	r2,r3
 4020b4c:	100b883a 	mov	r5,r2
 4020b50:	e13fff17 	ldw	r4,-4(fp)
 4020b54:	40226640 	call	4022664 <__addsf3>
 4020b58:	1007883a 	mov	r3,r2
 4020b5c:	e0ffff15 	stw	r3,-4(fp)
	for(int i=0; i<(N-1); i++)
 4020b60:	e0bffd17 	ldw	r2,-12(fp)
 4020b64:	10800044 	addi	r2,r2,1
 4020b68:	e0bffd15 	stw	r2,-12(fp)
 4020b6c:	e0bfe117 	ldw	r2,-124(fp)
 4020b70:	10bfffc4 	addi	r2,r2,-1
 4020b74:	e0fffd17 	ldw	r3,-12(fp)
 4020b78:	18bfe616 	blt	r3,r2,4020b14 <filt+0xb8>
			//printf("FILT: i: %d  buf: %d   coef: %d   inter: %d\n", i, (int)buffer[i], (int)coef[i], (int)intermediate);
			}
			//printf("\nfilt: %d\n", (int)intermediate);
	*filtered = intermediate;
 4020b7c:	e0bfe217 	ldw	r2,-120(fp)
 4020b80:	e0ffff17 	ldw	r3,-4(fp)
 4020b84:	10c00015 	stw	r3,0(r2)

}
 4020b88:	0001883a 	nop
 4020b8c:	e037883a 	mov	sp,fp
 4020b90:	dfc00117 	ldw	ra,4(sp)
 4020b94:	df000017 	ldw	fp,0(sp)
 4020b98:	dec00204 	addi	sp,sp,8
 4020b9c:	f800283a 	ret

04020ba0 <filterAccelerometer>:

void filterAccelerometer(FilterData* src){
 4020ba0:	defffd04 	addi	sp,sp,-12
 4020ba4:	dfc00215 	stw	ra,8(sp)
 4020ba8:	df000115 	stw	fp,4(sp)
 4020bac:	df000104 	addi	fp,sp,4
 4020bb0:	e13fff15 	stw	r4,-4(fp)
	//Filtering x-axis values
	filt(src->xbuffer, data.acc_x_read, &src->xfiltered, 24);
 4020bb4:	e0ffff17 	ldw	r3,-4(fp)
 4020bb8:	00800034 	movhi	r2,0
 4020bbc:	10896917 	ldw	r2,9636(r2)
 4020bc0:	1009883a 	mov	r4,r2
 4020bc4:	e0bfff17 	ldw	r2,-4(fp)
 4020bc8:	10801804 	addi	r2,r2,96
 4020bcc:	01c00604 	movi	r7,24
 4020bd0:	100d883a 	mov	r6,r2
 4020bd4:	200b883a 	mov	r5,r4
 4020bd8:	1809883a 	mov	r4,r3
 4020bdc:	4020a5c0 	call	4020a5c <filt>
	//Filtering x-axis values
	filt(src->ybuffer, data.acc_y_read, &src->yfiltered, 24);
 4020be0:	e0bfff17 	ldw	r2,-4(fp)
 4020be4:	10c01904 	addi	r3,r2,100
 4020be8:	00800034 	movhi	r2,0
 4020bec:	10896a17 	ldw	r2,9640(r2)
 4020bf0:	1009883a 	mov	r4,r2
 4020bf4:	e0bfff17 	ldw	r2,-4(fp)
 4020bf8:	10803104 	addi	r2,r2,196
 4020bfc:	01c00604 	movi	r7,24
 4020c00:	100d883a 	mov	r6,r2
 4020c04:	200b883a 	mov	r5,r4
 4020c08:	1809883a 	mov	r4,r3
 4020c0c:	4020a5c0 	call	4020a5c <filt>
	//Filtering x-axis values
	filt(src->zbuffer, data.acc_z_read, &src->zfiltered, 24);
 4020c10:	e0bfff17 	ldw	r2,-4(fp)
 4020c14:	10c03204 	addi	r3,r2,200
 4020c18:	00800034 	movhi	r2,0
 4020c1c:	10896b17 	ldw	r2,9644(r2)
 4020c20:	1009883a 	mov	r4,r2
 4020c24:	e0bfff17 	ldw	r2,-4(fp)
 4020c28:	10804a04 	addi	r2,r2,296
 4020c2c:	01c00604 	movi	r7,24
 4020c30:	100d883a 	mov	r6,r2
 4020c34:	200b883a 	mov	r5,r4
 4020c38:	1809883a 	mov	r4,r3
 4020c3c:	4020a5c0 	call	4020a5c <filt>
}
 4020c40:	0001883a 	nop
 4020c44:	e037883a 	mov	sp,fp
 4020c48:	dfc00117 	ldw	ra,4(sp)
 4020c4c:	df000017 	ldw	fp,0(sp)
 4020c50:	dec00204 	addi	sp,sp,8
 4020c54:	f800283a 	ret

04020c58 <setupInputData>:
 *      Author: IBricchi
 */

#include "jsonDecode.h"

void setupInputData(){
 4020c58:	defffa04 	addi	sp,sp,-24
 4020c5c:	dfc00515 	stw	ra,20(sp)
 4020c60:	df000415 	stw	fp,16(sp)
 4020c64:	dc000315 	stw	r16,12(sp)
 4020c68:	df000404 	addi	fp,sp,16
	int a_length = 5;
 4020c6c:	00800144 	movi	r2,5
 4020c70:	e0bffd15 	stw	r2,-12(fp)
	int w_length = 100;
 4020c74:	00801904 	movi	r2,100
 4020c78:	e0bffc15 	stw	r2,-16(fp)
	inputData.availableNextMoves = malloc(sizeof(char[a_length][w_length]));
 4020c7c:	e0fffc17 	ldw	r3,-16(fp)
 4020c80:	e0bffd17 	ldw	r2,-12(fp)
 4020c84:	1885383a 	mul	r2,r3,r2
 4020c88:	1009883a 	mov	r4,r2
 4020c8c:	4024e900 	call	4024e90 <malloc>
 4020c90:	1007883a 	mov	r3,r2
 4020c94:	00800034 	movhi	r2,0
 4020c98:	10c96f15 	stw	r3,9660(r2)
	for(int i = 0; i < a_length; i++){
 4020c9c:	e03ffe15 	stw	zero,-8(fp)
 4020ca0:	00000b06 	br	4020cd0 <setupInputData+0x78>
		inputData.availableNextMoves[i] = malloc(sizeof(char) * w_length);
 4020ca4:	e13ffc17 	ldw	r4,-16(fp)
 4020ca8:	00800034 	movhi	r2,0
 4020cac:	10c96f17 	ldw	r3,9660(r2)
 4020cb0:	e0bffe17 	ldw	r2,-8(fp)
 4020cb4:	100490ba 	slli	r2,r2,2
 4020cb8:	18a1883a 	add	r16,r3,r2
 4020cbc:	4024e900 	call	4024e90 <malloc>
 4020cc0:	80800015 	stw	r2,0(r16)
	for(int i = 0; i < a_length; i++){
 4020cc4:	e0bffe17 	ldw	r2,-8(fp)
 4020cc8:	10800044 	addi	r2,r2,1
 4020ccc:	e0bffe15 	stw	r2,-8(fp)
 4020cd0:	e0fffe17 	ldw	r3,-8(fp)
 4020cd4:	e0bffd17 	ldw	r2,-12(fp)
 4020cd8:	18bff216 	blt	r3,r2,4020ca4 <setupInputData+0x4c>
	}
}
 4020cdc:	0001883a 	nop
 4020ce0:	0001883a 	nop
 4020ce4:	e6ffff04 	addi	sp,fp,-4
 4020ce8:	dfc00217 	ldw	ra,8(sp)
 4020cec:	df000117 	ldw	fp,4(sp)
 4020cf0:	dc000017 	ldw	r16,0(sp)
 4020cf4:	dec00304 	addi	sp,sp,12
 4020cf8:	f800283a 	ret

04020cfc <checkName>:

int checkName(FILE* in, char* c, char* name, int size){
 4020cfc:	defff904 	addi	sp,sp,-28
 4020d00:	dfc00615 	stw	ra,24(sp)
 4020d04:	df000515 	stw	fp,20(sp)
 4020d08:	df000504 	addi	fp,sp,20
 4020d0c:	e13ffe15 	stw	r4,-8(fp)
 4020d10:	e17ffd15 	stw	r5,-12(fp)
 4020d14:	e1bffc15 	stw	r6,-16(fp)
 4020d18:	e1fffb15 	stw	r7,-20(fp)
    // check that name is correct
    for(int i = 0; i < size; i++){
 4020d1c:	e03fff15 	stw	zero,-4(fp)
 4020d20:	00001706 	br	4020d80 <checkName+0x84>
        *c = getc(in);
 4020d24:	e13ffe17 	ldw	r4,-8(fp)
 4020d28:	4024bb80 	call	4024bb8 <getc>
 4020d2c:	1007883a 	mov	r3,r2
 4020d30:	e0bffd17 	ldw	r2,-12(fp)
 4020d34:	10c00005 	stb	r3,0(r2)
        if(*c != name[i]){
 4020d38:	e0bffd17 	ldw	r2,-12(fp)
 4020d3c:	11000003 	ldbu	r4,0(r2)
 4020d40:	e0bfff17 	ldw	r2,-4(fp)
 4020d44:	e0fffc17 	ldw	r3,-16(fp)
 4020d48:	1885883a 	add	r2,r3,r2
 4020d4c:	10800003 	ldbu	r2,0(r2)
 4020d50:	20c03fcc 	andi	r3,r4,255
 4020d54:	18c0201c 	xori	r3,r3,128
 4020d58:	18ffe004 	addi	r3,r3,-128
 4020d5c:	10803fcc 	andi	r2,r2,255
 4020d60:	1080201c 	xori	r2,r2,128
 4020d64:	10bfe004 	addi	r2,r2,-128
 4020d68:	18800226 	beq	r3,r2,4020d74 <checkName+0x78>
            return 1;
 4020d6c:	00800044 	movi	r2,1
 4020d70:	00001506 	br	4020dc8 <checkName+0xcc>
    for(int i = 0; i < size; i++){
 4020d74:	e0bfff17 	ldw	r2,-4(fp)
 4020d78:	10800044 	addi	r2,r2,1
 4020d7c:	e0bfff15 	stw	r2,-4(fp)
 4020d80:	e0ffff17 	ldw	r3,-4(fp)
 4020d84:	e0bffb17 	ldw	r2,-20(fp)
 4020d88:	18bfe616 	blt	r3,r2,4020d24 <checkName+0x28>
        }
    }
    // read semicolon
    *c = getc(in);
 4020d8c:	e13ffe17 	ldw	r4,-8(fp)
 4020d90:	4024bb80 	call	4024bb8 <getc>
 4020d94:	1007883a 	mov	r3,r2
 4020d98:	e0bffd17 	ldw	r2,-12(fp)
 4020d9c:	10c00005 	stb	r3,0(r2)
    if(*c != ':') return 1;
 4020da0:	e0bffd17 	ldw	r2,-12(fp)
 4020da4:	10800003 	ldbu	r2,0(r2)
 4020da8:	10803fcc 	andi	r2,r2,255
 4020dac:	1080201c 	xori	r2,r2,128
 4020db0:	10bfe004 	addi	r2,r2,-128
 4020db4:	10800ea0 	cmpeqi	r2,r2,58
 4020db8:	1000021e 	bne	r2,zero,4020dc4 <checkName+0xc8>
 4020dbc:	00800044 	movi	r2,1
 4020dc0:	00000106 	br	4020dc8 <checkName+0xcc>
    // if everything checks out
    return 0;
 4020dc4:	0005883a 	mov	r2,zero
}
 4020dc8:	e037883a 	mov	sp,fp
 4020dcc:	dfc00117 	ldw	ra,4(sp)
 4020dd0:	df000017 	ldw	fp,0(sp)
 4020dd4:	dec00204 	addi	sp,sp,8
 4020dd8:	f800283a 	ret

04020ddc <readStr>:

// assumes that if string is opened it will terminate
// does not check for un closed strings
// assumes that enough space is avaiable in store for string
int readStr(FILE* in, char* c, char* store){
 4020ddc:	defffa04 	addi	sp,sp,-24
 4020de0:	dfc00515 	stw	ra,20(sp)
 4020de4:	df000415 	stw	fp,16(sp)
 4020de8:	df000404 	addi	fp,sp,16
 4020dec:	e13ffe15 	stw	r4,-8(fp)
 4020df0:	e17ffd15 	stw	r5,-12(fp)
 4020df4:	e1bffc15 	stw	r6,-16(fp)
    if(*c != '"')
 4020df8:	e0bffd17 	ldw	r2,-12(fp)
 4020dfc:	10800003 	ldbu	r2,0(r2)
 4020e00:	10803fcc 	andi	r2,r2,255
 4020e04:	1080201c 	xori	r2,r2,128
 4020e08:	10bfe004 	addi	r2,r2,-128
 4020e0c:	108008a0 	cmpeqi	r2,r2,34
 4020e10:	1000021e 	bne	r2,zero,4020e1c <readStr+0x40>
        return 1;
 4020e14:	00800044 	movi	r2,1
 4020e18:	00002606 	br	4020eb4 <readStr+0xd8>
    int i = 0;
 4020e1c:	e03fff15 	stw	zero,-4(fp)
    *c = getc(in);
 4020e20:	e13ffe17 	ldw	r4,-8(fp)
 4020e24:	4024bb80 	call	4024bb8 <getc>
 4020e28:	1007883a 	mov	r3,r2
 4020e2c:	e0bffd17 	ldw	r2,-12(fp)
 4020e30:	10c00005 	stb	r3,0(r2)
    while(*c != '"'){
 4020e34:	00000e06 	br	4020e70 <readStr+0x94>
        store[i++] = *c;
 4020e38:	e0bfff17 	ldw	r2,-4(fp)
 4020e3c:	10c00044 	addi	r3,r2,1
 4020e40:	e0ffff15 	stw	r3,-4(fp)
 4020e44:	1007883a 	mov	r3,r2
 4020e48:	e0bffc17 	ldw	r2,-16(fp)
 4020e4c:	10c5883a 	add	r2,r2,r3
 4020e50:	e0fffd17 	ldw	r3,-12(fp)
 4020e54:	18c00003 	ldbu	r3,0(r3)
 4020e58:	10c00005 	stb	r3,0(r2)
        *c = getc(in);
 4020e5c:	e13ffe17 	ldw	r4,-8(fp)
 4020e60:	4024bb80 	call	4024bb8 <getc>
 4020e64:	1007883a 	mov	r3,r2
 4020e68:	e0bffd17 	ldw	r2,-12(fp)
 4020e6c:	10c00005 	stb	r3,0(r2)
    while(*c != '"'){
 4020e70:	e0bffd17 	ldw	r2,-12(fp)
 4020e74:	10800003 	ldbu	r2,0(r2)
 4020e78:	10803fcc 	andi	r2,r2,255
 4020e7c:	1080201c 	xori	r2,r2,128
 4020e80:	10bfe004 	addi	r2,r2,-128
 4020e84:	10800898 	cmpnei	r2,r2,34
 4020e88:	103feb1e 	bne	r2,zero,4020e38 <readStr+0x5c>
    }
    store[i] = '\0';
 4020e8c:	e0bfff17 	ldw	r2,-4(fp)
 4020e90:	e0fffc17 	ldw	r3,-16(fp)
 4020e94:	1885883a 	add	r2,r3,r2
 4020e98:	10000005 	stb	zero,0(r2)
    *c = getc(in);
 4020e9c:	e13ffe17 	ldw	r4,-8(fp)
 4020ea0:	4024bb80 	call	4024bb8 <getc>
 4020ea4:	1007883a 	mov	r3,r2
 4020ea8:	e0bffd17 	ldw	r2,-12(fp)
 4020eac:	10c00005 	stb	r3,0(r2)
    return 0;
 4020eb0:	0005883a 	mov	r2,zero
}
 4020eb4:	e037883a 	mov	sp,fp
 4020eb8:	dfc00117 	ldw	ra,4(sp)
 4020ebc:	df000017 	ldw	fp,0(sp)
 4020ec0:	dec00204 	addi	sp,sp,8
 4020ec4:	f800283a 	ret

04020ec8 <readBoolInput>:

int readBoolInput(FILE* in, char* c, char* name, int size, int* store){
 4020ec8:	defff604 	addi	sp,sp,-40
 4020ecc:	dfc00915 	stw	ra,36(sp)
 4020ed0:	df000815 	stw	fp,32(sp)
 4020ed4:	df000804 	addi	fp,sp,32
 4020ed8:	e13ffb15 	stw	r4,-20(fp)
 4020edc:	e17ffa15 	stw	r5,-24(fp)
 4020ee0:	e1bff915 	stw	r6,-28(fp)
 4020ee4:	e1fff815 	stw	r7,-32(fp)
    // check name and colon
    if(checkName(in, c, name, size))
 4020ee8:	e1fff817 	ldw	r7,-32(fp)
 4020eec:	e1bff917 	ldw	r6,-28(fp)
 4020ef0:	e17ffa17 	ldw	r5,-24(fp)
 4020ef4:	e13ffb17 	ldw	r4,-20(fp)
 4020ef8:	4020cfc0 	call	4020cfc <checkName>
 4020efc:	10000226 	beq	r2,zero,4020f08 <readBoolInput+0x40>
        return 1;
 4020f00:	00800044 	movi	r2,1
 4020f04:	00007706 	br	40210e4 <readBoolInput+0x21c>

    // read value
    *c = getc(in);
 4020f08:	e13ffb17 	ldw	r4,-20(fp)
 4020f0c:	4024bb80 	call	4024bb8 <getc>
 4020f10:	1007883a 	mov	r3,r2
 4020f14:	e0bffa17 	ldw	r2,-24(fp)
 4020f18:	10c00005 	stb	r3,0(r2)
    // check if true
    if(*c == 't' | *c == 'T'){
 4020f1c:	e0bffa17 	ldw	r2,-24(fp)
 4020f20:	10800003 	ldbu	r2,0(r2)
 4020f24:	10803fcc 	andi	r2,r2,255
 4020f28:	1080201c 	xori	r2,r2,128
 4020f2c:	10bfe004 	addi	r2,r2,-128
 4020f30:	10801d20 	cmpeqi	r2,r2,116
 4020f34:	1007883a 	mov	r3,r2
 4020f38:	e0bffa17 	ldw	r2,-24(fp)
 4020f3c:	10800003 	ldbu	r2,0(r2)
 4020f40:	10803fcc 	andi	r2,r2,255
 4020f44:	1080201c 	xori	r2,r2,128
 4020f48:	10bfe004 	addi	r2,r2,-128
 4020f4c:	10801520 	cmpeqi	r2,r2,84
 4020f50:	1884b03a 	or	r2,r3,r2
 4020f54:	10803fcc 	andi	r2,r2,255
 4020f58:	10002926 	beq	r2,zero,4021000 <readBoolInput+0x138>
        const char* comp = "rue";
 4020f5c:	00800034 	movhi	r2,0
 4020f60:	10802404 	addi	r2,r2,144
 4020f64:	e0bffc15 	stw	r2,-16(fp)
        for(int i = 0; i < 3; i++){
 4020f68:	e03fff15 	stw	zero,-4(fp)
 4020f6c:	00001706 	br	4020fcc <readBoolInput+0x104>
            *c = getc(in);
 4020f70:	e13ffb17 	ldw	r4,-20(fp)
 4020f74:	4024bb80 	call	4024bb8 <getc>
 4020f78:	1007883a 	mov	r3,r2
 4020f7c:	e0bffa17 	ldw	r2,-24(fp)
 4020f80:	10c00005 	stb	r3,0(r2)
            if(*c != comp[i])
 4020f84:	e0bffa17 	ldw	r2,-24(fp)
 4020f88:	11000003 	ldbu	r4,0(r2)
 4020f8c:	e0bfff17 	ldw	r2,-4(fp)
 4020f90:	e0fffc17 	ldw	r3,-16(fp)
 4020f94:	1885883a 	add	r2,r3,r2
 4020f98:	10800003 	ldbu	r2,0(r2)
 4020f9c:	20c03fcc 	andi	r3,r4,255
 4020fa0:	18c0201c 	xori	r3,r3,128
 4020fa4:	18ffe004 	addi	r3,r3,-128
 4020fa8:	10803fcc 	andi	r2,r2,255
 4020fac:	1080201c 	xori	r2,r2,128
 4020fb0:	10bfe004 	addi	r2,r2,-128
 4020fb4:	18800226 	beq	r3,r2,4020fc0 <readBoolInput+0xf8>
                return 1;
 4020fb8:	00800044 	movi	r2,1
 4020fbc:	00004906 	br	40210e4 <readBoolInput+0x21c>
        for(int i = 0; i < 3; i++){
 4020fc0:	e0bfff17 	ldw	r2,-4(fp)
 4020fc4:	10800044 	addi	r2,r2,1
 4020fc8:	e0bfff15 	stw	r2,-4(fp)
 4020fcc:	e0bfff17 	ldw	r2,-4(fp)
 4020fd0:	108000d0 	cmplti	r2,r2,3
 4020fd4:	103fe61e 	bne	r2,zero,4020f70 <readBoolInput+0xa8>
        }
        *store = 1;
 4020fd8:	e0800217 	ldw	r2,8(fp)
 4020fdc:	00c00044 	movi	r3,1
 4020fe0:	10c00015 	stw	r3,0(r2)
        *c = getc(in);
 4020fe4:	e13ffb17 	ldw	r4,-20(fp)
 4020fe8:	4024bb80 	call	4024bb8 <getc>
 4020fec:	1007883a 	mov	r3,r2
 4020ff0:	e0bffa17 	ldw	r2,-24(fp)
 4020ff4:	10c00005 	stb	r3,0(r2)
        return 0;
 4020ff8:	0005883a 	mov	r2,zero
 4020ffc:	00003906 	br	40210e4 <readBoolInput+0x21c>
    }
    // check if false
    else if(*c == 'f' | *c == 'F'){
 4021000:	e0bffa17 	ldw	r2,-24(fp)
 4021004:	10800003 	ldbu	r2,0(r2)
 4021008:	10803fcc 	andi	r2,r2,255
 402100c:	1080201c 	xori	r2,r2,128
 4021010:	10bfe004 	addi	r2,r2,-128
 4021014:	108019a0 	cmpeqi	r2,r2,102
 4021018:	1007883a 	mov	r3,r2
 402101c:	e0bffa17 	ldw	r2,-24(fp)
 4021020:	10800003 	ldbu	r2,0(r2)
 4021024:	10803fcc 	andi	r2,r2,255
 4021028:	1080201c 	xori	r2,r2,128
 402102c:	10bfe004 	addi	r2,r2,-128
 4021030:	108011a0 	cmpeqi	r2,r2,70
 4021034:	1884b03a 	or	r2,r3,r2
 4021038:	10803fcc 	andi	r2,r2,255
 402103c:	10002826 	beq	r2,zero,40210e0 <readBoolInput+0x218>
        const char* comp = "alse";
 4021040:	00800034 	movhi	r2,0
 4021044:	10802504 	addi	r2,r2,148
 4021048:	e0bffd15 	stw	r2,-12(fp)
        for(int i = 0; i < 4; i++){
 402104c:	e03ffe15 	stw	zero,-8(fp)
 4021050:	00001706 	br	40210b0 <readBoolInput+0x1e8>
            *c = getc(in);
 4021054:	e13ffb17 	ldw	r4,-20(fp)
 4021058:	4024bb80 	call	4024bb8 <getc>
 402105c:	1007883a 	mov	r3,r2
 4021060:	e0bffa17 	ldw	r2,-24(fp)
 4021064:	10c00005 	stb	r3,0(r2)
            if(*c != comp[i])
 4021068:	e0bffa17 	ldw	r2,-24(fp)
 402106c:	11000003 	ldbu	r4,0(r2)
 4021070:	e0bffe17 	ldw	r2,-8(fp)
 4021074:	e0fffd17 	ldw	r3,-12(fp)
 4021078:	1885883a 	add	r2,r3,r2
 402107c:	10800003 	ldbu	r2,0(r2)
 4021080:	20c03fcc 	andi	r3,r4,255
 4021084:	18c0201c 	xori	r3,r3,128
 4021088:	18ffe004 	addi	r3,r3,-128
 402108c:	10803fcc 	andi	r2,r2,255
 4021090:	1080201c 	xori	r2,r2,128
 4021094:	10bfe004 	addi	r2,r2,-128
 4021098:	18800226 	beq	r3,r2,40210a4 <readBoolInput+0x1dc>
                return 1;
 402109c:	00800044 	movi	r2,1
 40210a0:	00001006 	br	40210e4 <readBoolInput+0x21c>
        for(int i = 0; i < 4; i++){
 40210a4:	e0bffe17 	ldw	r2,-8(fp)
 40210a8:	10800044 	addi	r2,r2,1
 40210ac:	e0bffe15 	stw	r2,-8(fp)
 40210b0:	e0bffe17 	ldw	r2,-8(fp)
 40210b4:	10800110 	cmplti	r2,r2,4
 40210b8:	103fe61e 	bne	r2,zero,4021054 <readBoolInput+0x18c>
        }
        *store = 0;
 40210bc:	e0800217 	ldw	r2,8(fp)
 40210c0:	10000015 	stw	zero,0(r2)
        *c = getc(in);
 40210c4:	e13ffb17 	ldw	r4,-20(fp)
 40210c8:	4024bb80 	call	4024bb8 <getc>
 40210cc:	1007883a 	mov	r3,r2
 40210d0:	e0bffa17 	ldw	r2,-24(fp)
 40210d4:	10c00005 	stb	r3,0(r2)
        return 0;
 40210d8:	0005883a 	mov	r2,zero
 40210dc:	00000106 	br	40210e4 <readBoolInput+0x21c>
    }
    // anything else is an error
    return 1;
 40210e0:	00800044 	movi	r2,1
}
 40210e4:	e037883a 	mov	sp,fp
 40210e8:	dfc00117 	ldw	ra,4(sp)
 40210ec:	df000017 	ldw	fp,0(sp)
 40210f0:	dec00204 	addi	sp,sp,8
 40210f4:	f800283a 	ret

040210f8 <readIntInput>:

int readIntInput(FILE* in, char* c, char* name, int size, int* store){
 40210f8:	defffa04 	addi	sp,sp,-24
 40210fc:	dfc00515 	stw	ra,20(sp)
 4021100:	df000415 	stw	fp,16(sp)
 4021104:	df000404 	addi	fp,sp,16
 4021108:	e13fff15 	stw	r4,-4(fp)
 402110c:	e17ffe15 	stw	r5,-8(fp)
 4021110:	e1bffd15 	stw	r6,-12(fp)
 4021114:	e1fffc15 	stw	r7,-16(fp)
    // check name and semi colon
    if(checkName(in, c, name, size) == 1)
 4021118:	e1fffc17 	ldw	r7,-16(fp)
 402111c:	e1bffd17 	ldw	r6,-12(fp)
 4021120:	e17ffe17 	ldw	r5,-8(fp)
 4021124:	e13fff17 	ldw	r4,-4(fp)
 4021128:	4020cfc0 	call	4020cfc <checkName>
 402112c:	10800058 	cmpnei	r2,r2,1
 4021130:	1000021e 	bne	r2,zero,402113c <readIntInput+0x44>
        return 1;
 4021134:	00800044 	movi	r2,1
 4021138:	00003b06 	br	4021228 <readIntInput+0x130>

    // read value
    *store = 0;
 402113c:	e0800217 	ldw	r2,8(fp)
 4021140:	10000015 	stw	zero,0(r2)
    *c = getc(in);
 4021144:	e13fff17 	ldw	r4,-4(fp)
 4021148:	4024bb80 	call	4024bb8 <getc>
 402114c:	1007883a 	mov	r3,r2
 4021150:	e0bffe17 	ldw	r2,-8(fp)
 4021154:	10c00005 	stb	r3,0(r2)
    if('0' > *c | *c > '9')
 4021158:	e0bffe17 	ldw	r2,-8(fp)
 402115c:	10800003 	ldbu	r2,0(r2)
 4021160:	10803fcc 	andi	r2,r2,255
 4021164:	1080201c 	xori	r2,r2,128
 4021168:	10bfe004 	addi	r2,r2,-128
 402116c:	10800c10 	cmplti	r2,r2,48
 4021170:	1007883a 	mov	r3,r2
 4021174:	e0bffe17 	ldw	r2,-8(fp)
 4021178:	10800003 	ldbu	r2,0(r2)
 402117c:	10803fcc 	andi	r2,r2,255
 4021180:	1080201c 	xori	r2,r2,128
 4021184:	10bfe004 	addi	r2,r2,-128
 4021188:	10800e88 	cmpgei	r2,r2,58
 402118c:	1884b03a 	or	r2,r3,r2
 4021190:	10803fcc 	andi	r2,r2,255
 4021194:	10000226 	beq	r2,zero,40211a0 <readIntInput+0xa8>
        return 1;
 4021198:	00800044 	movi	r2,1
 402119c:	00002206 	br	4021228 <readIntInput+0x130>
    do{
        *store = *store * 10 + *c - '0';
 40211a0:	e0800217 	ldw	r2,8(fp)
 40211a4:	10800017 	ldw	r2,0(r2)
 40211a8:	10c002a4 	muli	r3,r2,10
 40211ac:	e0bffe17 	ldw	r2,-8(fp)
 40211b0:	10800003 	ldbu	r2,0(r2)
 40211b4:	10803fcc 	andi	r2,r2,255
 40211b8:	1080201c 	xori	r2,r2,128
 40211bc:	10bfe004 	addi	r2,r2,-128
 40211c0:	1885883a 	add	r2,r3,r2
 40211c4:	10fff404 	addi	r3,r2,-48
 40211c8:	e0800217 	ldw	r2,8(fp)
 40211cc:	10c00015 	stw	r3,0(r2)
        *c = getc(in);
 40211d0:	e13fff17 	ldw	r4,-4(fp)
 40211d4:	4024bb80 	call	4024bb8 <getc>
 40211d8:	1007883a 	mov	r3,r2
 40211dc:	e0bffe17 	ldw	r2,-8(fp)
 40211e0:	10c00005 	stb	r3,0(r2)
    }
    while('0' <= *c & *c <= '9');
 40211e4:	e0bffe17 	ldw	r2,-8(fp)
 40211e8:	10800003 	ldbu	r2,0(r2)
 40211ec:	10803fcc 	andi	r2,r2,255
 40211f0:	1080201c 	xori	r2,r2,128
 40211f4:	10bfe004 	addi	r2,r2,-128
 40211f8:	10800c08 	cmpgei	r2,r2,48
 40211fc:	1007883a 	mov	r3,r2
 4021200:	e0bffe17 	ldw	r2,-8(fp)
 4021204:	10800003 	ldbu	r2,0(r2)
 4021208:	10803fcc 	andi	r2,r2,255
 402120c:	1080201c 	xori	r2,r2,128
 4021210:	10bfe004 	addi	r2,r2,-128
 4021214:	10800e90 	cmplti	r2,r2,58
 4021218:	1884703a 	and	r2,r3,r2
 402121c:	10803fcc 	andi	r2,r2,255
 4021220:	103fdf1e 	bne	r2,zero,40211a0 <readIntInput+0xa8>
    return 0;
 4021224:	0005883a 	mov	r2,zero
}
 4021228:	e037883a 	mov	sp,fp
 402122c:	dfc00117 	ldw	ra,4(sp)
 4021230:	df000017 	ldw	fp,0(sp)
 4021234:	dec00204 	addi	sp,sp,8
 4021238:	f800283a 	ret

0402123c <readStrInput>:

int readStrInput(FILE* in, char* c, char* name, int size, char* store){
 402123c:	defffa04 	addi	sp,sp,-24
 4021240:	dfc00515 	stw	ra,20(sp)
 4021244:	df000415 	stw	fp,16(sp)
 4021248:	df000404 	addi	fp,sp,16
 402124c:	e13fff15 	stw	r4,-4(fp)
 4021250:	e17ffe15 	stw	r5,-8(fp)
 4021254:	e1bffd15 	stw	r6,-12(fp)
 4021258:	e1fffc15 	stw	r7,-16(fp)
    if(checkName(in, c, name, size) == 1)
 402125c:	e1fffc17 	ldw	r7,-16(fp)
 4021260:	e1bffd17 	ldw	r6,-12(fp)
 4021264:	e17ffe17 	ldw	r5,-8(fp)
 4021268:	e13fff17 	ldw	r4,-4(fp)
 402126c:	4020cfc0 	call	4020cfc <checkName>
 4021270:	10800058 	cmpnei	r2,r2,1
 4021274:	1000021e 	bne	r2,zero,4021280 <readStrInput+0x44>
        return 1;
 4021278:	00800044 	movi	r2,1
 402127c:	00000e06 	br	40212b8 <readStrInput+0x7c>

    // get value
    *c = getc(in);
 4021280:	e13fff17 	ldw	r4,-4(fp)
 4021284:	4024bb80 	call	4024bb8 <getc>
 4021288:	1007883a 	mov	r3,r2
 402128c:	e0bffe17 	ldw	r2,-8(fp)
 4021290:	10c00005 	stb	r3,0(r2)
    if(readStr(in, c, store) == 1)
 4021294:	e1800217 	ldw	r6,8(fp)
 4021298:	e17ffe17 	ldw	r5,-8(fp)
 402129c:	e13fff17 	ldw	r4,-4(fp)
 40212a0:	4020ddc0 	call	4020ddc <readStr>
 40212a4:	10800058 	cmpnei	r2,r2,1
 40212a8:	1000021e 	bne	r2,zero,40212b4 <readStrInput+0x78>
        return 1;
 40212ac:	00800044 	movi	r2,1
 40212b0:	00000106 	br	40212b8 <readStrInput+0x7c>

    return 0;
 40212b4:	0005883a 	mov	r2,zero
}
 40212b8:	e037883a 	mov	sp,fp
 40212bc:	dfc00117 	ldw	ra,4(sp)
 40212c0:	df000017 	ldw	fp,0(sp)
 40212c4:	dec00204 	addi	sp,sp,8
 40212c8:	f800283a 	ret

040212cc <readStrArrayInput>:

// if starting [ is found assumes remaining ] will be found
// does not check for unclosed ]
// assumes that stroe will have enough space for array
int readStrArrayInput(FILE* in, char* c, char* name, int size, char** store, int* storeCount){
 40212cc:	defff904 	addi	sp,sp,-28
 40212d0:	dfc00615 	stw	ra,24(sp)
 40212d4:	df000515 	stw	fp,20(sp)
 40212d8:	df000504 	addi	fp,sp,20
 40212dc:	e13ffe15 	stw	r4,-8(fp)
 40212e0:	e17ffd15 	stw	r5,-12(fp)
 40212e4:	e1bffc15 	stw	r6,-16(fp)
 40212e8:	e1fffb15 	stw	r7,-20(fp)
    if(checkName(in, c, name, size) == -1)
 40212ec:	e1fffb17 	ldw	r7,-20(fp)
 40212f0:	e1bffc17 	ldw	r6,-16(fp)
 40212f4:	e17ffd17 	ldw	r5,-12(fp)
 40212f8:	e13ffe17 	ldw	r4,-8(fp)
 40212fc:	4020cfc0 	call	4020cfc <checkName>
 4021300:	10bfffd8 	cmpnei	r2,r2,-1
 4021304:	1000021e 	bne	r2,zero,4021310 <readStrArrayInput+0x44>
        return -1;
 4021308:	00bfffc4 	movi	r2,-1
 402130c:	00005106 	br	4021454 <readStrArrayInput+0x188>

    // get value
    *c = getc(in);
 4021310:	e13ffe17 	ldw	r4,-8(fp)
 4021314:	4024bb80 	call	4024bb8 <getc>
 4021318:	1007883a 	mov	r3,r2
 402131c:	e0bffd17 	ldw	r2,-12(fp)
 4021320:	10c00005 	stb	r3,0(r2)
    if(*c != '[')
 4021324:	e0bffd17 	ldw	r2,-12(fp)
 4021328:	10800003 	ldbu	r2,0(r2)
 402132c:	10803fcc 	andi	r2,r2,255
 4021330:	1080201c 	xori	r2,r2,128
 4021334:	10bfe004 	addi	r2,r2,-128
 4021338:	108016e0 	cmpeqi	r2,r2,91
 402133c:	1000021e 	bne	r2,zero,4021348 <readStrArrayInput+0x7c>
        return 1;
 4021340:	00800044 	movi	r2,1
 4021344:	00004306 	br	4021454 <readStrArrayInput+0x188>
    *c = getc(in);
 4021348:	e13ffe17 	ldw	r4,-8(fp)
 402134c:	4024bb80 	call	4024bb8 <getc>
 4021350:	1007883a 	mov	r3,r2
 4021354:	e0bffd17 	ldw	r2,-12(fp)
 4021358:	10c00005 	stb	r3,0(r2)
    int i = 0;
 402135c:	e03fff15 	stw	zero,-4(fp)
    while(*c != ']'){
 4021360:	00002c06 	br	4021414 <readStrArrayInput+0x148>
        if(readStr(in, c, store[i++]))
 4021364:	e0bfff17 	ldw	r2,-4(fp)
 4021368:	10c00044 	addi	r3,r2,1
 402136c:	e0ffff15 	stw	r3,-4(fp)
 4021370:	100490ba 	slli	r2,r2,2
 4021374:	e0c00217 	ldw	r3,8(fp)
 4021378:	1885883a 	add	r2,r3,r2
 402137c:	10800017 	ldw	r2,0(r2)
 4021380:	100d883a 	mov	r6,r2
 4021384:	e17ffd17 	ldw	r5,-12(fp)
 4021388:	e13ffe17 	ldw	r4,-8(fp)
 402138c:	4020ddc0 	call	4020ddc <readStr>
 4021390:	10000226 	beq	r2,zero,402139c <readStrArrayInput+0xd0>
            return 1;
 4021394:	00800044 	movi	r2,1
 4021398:	00002e06 	br	4021454 <readStrArrayInput+0x188>
        if(*c != ',' & *c != ']')
 402139c:	e0bffd17 	ldw	r2,-12(fp)
 40213a0:	10800003 	ldbu	r2,0(r2)
 40213a4:	10803fcc 	andi	r2,r2,255
 40213a8:	1080201c 	xori	r2,r2,128
 40213ac:	10bfe004 	addi	r2,r2,-128
 40213b0:	10800b18 	cmpnei	r2,r2,44
 40213b4:	1007883a 	mov	r3,r2
 40213b8:	e0bffd17 	ldw	r2,-12(fp)
 40213bc:	10800003 	ldbu	r2,0(r2)
 40213c0:	10803fcc 	andi	r2,r2,255
 40213c4:	1080201c 	xori	r2,r2,128
 40213c8:	10bfe004 	addi	r2,r2,-128
 40213cc:	10801758 	cmpnei	r2,r2,93
 40213d0:	1884703a 	and	r2,r3,r2
 40213d4:	10803fcc 	andi	r2,r2,255
 40213d8:	10000226 	beq	r2,zero,40213e4 <readStrArrayInput+0x118>
            return 1;
 40213dc:	00800044 	movi	r2,1
 40213e0:	00001c06 	br	4021454 <readStrArrayInput+0x188>
        if(*c == ',')
 40213e4:	e0bffd17 	ldw	r2,-12(fp)
 40213e8:	10800003 	ldbu	r2,0(r2)
 40213ec:	10803fcc 	andi	r2,r2,255
 40213f0:	1080201c 	xori	r2,r2,128
 40213f4:	10bfe004 	addi	r2,r2,-128
 40213f8:	10800b18 	cmpnei	r2,r2,44
 40213fc:	1000051e 	bne	r2,zero,4021414 <readStrArrayInput+0x148>
            *c = getc(in);
 4021400:	e13ffe17 	ldw	r4,-8(fp)
 4021404:	4024bb80 	call	4024bb8 <getc>
 4021408:	1007883a 	mov	r3,r2
 402140c:	e0bffd17 	ldw	r2,-12(fp)
 4021410:	10c00005 	stb	r3,0(r2)
    while(*c != ']'){
 4021414:	e0bffd17 	ldw	r2,-12(fp)
 4021418:	10800003 	ldbu	r2,0(r2)
 402141c:	10803fcc 	andi	r2,r2,255
 4021420:	1080201c 	xori	r2,r2,128
 4021424:	10bfe004 	addi	r2,r2,-128
 4021428:	10801758 	cmpnei	r2,r2,93
 402142c:	103fcd1e 	bne	r2,zero,4021364 <readStrArrayInput+0x98>
    }
    *storeCount = i;
 4021430:	e0800317 	ldw	r2,12(fp)
 4021434:	e0ffff17 	ldw	r3,-4(fp)
 4021438:	10c00015 	stw	r3,0(r2)
    *c = getc(in);
 402143c:	e13ffe17 	ldw	r4,-8(fp)
 4021440:	4024bb80 	call	4024bb8 <getc>
 4021444:	1007883a 	mov	r3,r2
 4021448:	e0bffd17 	ldw	r2,-12(fp)
 402144c:	10c00005 	stb	r3,0(r2)
    return 0;
 4021450:	0005883a 	mov	r2,zero
}
 4021454:	e037883a 	mov	sp,fp
 4021458:	dfc00117 	ldw	ra,4(sp)
 402145c:	df000017 	ldw	fp,0(sp)
 4021460:	dec00204 	addi	sp,sp,8
 4021464:	f800283a 	ret

04021468 <readInput>:

int readInput(FILE* in, InputData* out){
 4021468:	defff904 	addi	sp,sp,-28
 402146c:	dfc00615 	stw	ra,24(sp)
 4021470:	df000515 	stw	fp,20(sp)
 4021474:	df000504 	addi	fp,sp,20
 4021478:	e13ffe15 	stw	r4,-8(fp)
 402147c:	e17ffd15 	stw	r5,-12(fp)
    char c = getc(in);
 4021480:	e13ffe17 	ldw	r4,-8(fp)
 4021484:	4024bb80 	call	4024bb8 <getc>
 4021488:	e0bfffc5 	stb	r2,-1(fp)
    // errors return 1
    if(c == '{'){
 402148c:	e0bfffc3 	ldbu	r2,-1(fp)
 4021490:	10803fcc 	andi	r2,r2,255
 4021494:	1080201c 	xori	r2,r2,128
 4021498:	10bfe004 	addi	r2,r2,-128
 402149c:	10801ed8 	cmpnei	r2,r2,123
 40214a0:	1000991e 	bne	r2,zero,4021708 <readInput+0x2a0>
        if(readBoolInput(in, &c, "\"isTurn\"", 8, &out->isTurn))
 40214a4:	e0bffd17 	ldw	r2,-12(fp)
 40214a8:	e0ffffc4 	addi	r3,fp,-1
 40214ac:	d8800015 	stw	r2,0(sp)
 40214b0:	01c00204 	movi	r7,8
 40214b4:	01800034 	movhi	r6,0
 40214b8:	31802704 	addi	r6,r6,156
 40214bc:	180b883a 	mov	r5,r3
 40214c0:	e13ffe17 	ldw	r4,-8(fp)
 40214c4:	4020ec80 	call	4020ec8 <readBoolInput>
 40214c8:	10000226 	beq	r2,zero,40214d4 <readInput+0x6c>
            return 1;
 40214cc:	00800044 	movi	r2,1
 40214d0:	00008e06 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 40214d4:	e0bfffc3 	ldbu	r2,-1(fp)
 40214d8:	10803fcc 	andi	r2,r2,255
 40214dc:	1080201c 	xori	r2,r2,128
 40214e0:	10bfe004 	addi	r2,r2,-128
 40214e4:	10800b20 	cmpeqi	r2,r2,44
 40214e8:	1000021e 	bne	r2,zero,40214f4 <readInput+0x8c>
            return 1;
 40214ec:	00800044 	movi	r2,1
 40214f0:	00008606 	br	402170c <readInput+0x2a4>
        if(readIntInput(in, &c, "\"currentPlayerNumber\"", 21, &out->currentPlayerNumber))
 40214f4:	e0bffd17 	ldw	r2,-12(fp)
 40214f8:	10800104 	addi	r2,r2,4
 40214fc:	e0ffffc4 	addi	r3,fp,-1
 4021500:	d8800015 	stw	r2,0(sp)
 4021504:	01c00544 	movi	r7,21
 4021508:	01800034 	movhi	r6,0
 402150c:	31802a04 	addi	r6,r6,168
 4021510:	180b883a 	mov	r5,r3
 4021514:	e13ffe17 	ldw	r4,-8(fp)
 4021518:	40210f80 	call	40210f8 <readIntInput>
 402151c:	10000226 	beq	r2,zero,4021528 <readInput+0xc0>
            return 1;
 4021520:	00800044 	movi	r2,1
 4021524:	00007906 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 4021528:	e0bfffc3 	ldbu	r2,-1(fp)
 402152c:	10803fcc 	andi	r2,r2,255
 4021530:	1080201c 	xori	r2,r2,128
 4021534:	10bfe004 	addi	r2,r2,-128
 4021538:	10800b20 	cmpeqi	r2,r2,44
 402153c:	1000021e 	bne	r2,zero,4021548 <readInput+0xe0>
            return 1;
 4021540:	00800044 	movi	r2,1
 4021544:	00007106 	br	402170c <readInput+0x2a4>
        if(readStrArrayInput(in, &c, "\"availableNextMoves\"", 20, out->availableNextMoves, &out->aviablableNextMovesCount))
 4021548:	e0bffd17 	ldw	r2,-12(fp)
 402154c:	10800217 	ldw	r2,8(r2)
 4021550:	e0fffd17 	ldw	r3,-12(fp)
 4021554:	18c00304 	addi	r3,r3,12
 4021558:	e13fffc4 	addi	r4,fp,-1
 402155c:	d8c00115 	stw	r3,4(sp)
 4021560:	d8800015 	stw	r2,0(sp)
 4021564:	01c00504 	movi	r7,20
 4021568:	01800034 	movhi	r6,0
 402156c:	31803004 	addi	r6,r6,192
 4021570:	200b883a 	mov	r5,r4
 4021574:	e13ffe17 	ldw	r4,-8(fp)
 4021578:	40212cc0 	call	40212cc <readStrArrayInput>
 402157c:	10000226 	beq	r2,zero,4021588 <readInput+0x120>
            return 1;
 4021580:	00800044 	movi	r2,1
 4021584:	00006106 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 4021588:	e0bfffc3 	ldbu	r2,-1(fp)
 402158c:	10803fcc 	andi	r2,r2,255
 4021590:	1080201c 	xori	r2,r2,128
 4021594:	10bfe004 	addi	r2,r2,-128
 4021598:	10800b20 	cmpeqi	r2,r2,44
 402159c:	1000021e 	bne	r2,zero,40215a8 <readInput+0x140>
            return 1;
 40215a0:	00800044 	movi	r2,1
 40215a4:	00005906 	br	402170c <readInput+0x2a4>
        if(readIntInput(in, &c, "\"moneyAvailableAmount\"", 22, &out->moneyAvailableAmount))
 40215a8:	e0bffd17 	ldw	r2,-12(fp)
 40215ac:	10800404 	addi	r2,r2,16
 40215b0:	e0ffffc4 	addi	r3,fp,-1
 40215b4:	d8800015 	stw	r2,0(sp)
 40215b8:	01c00584 	movi	r7,22
 40215bc:	01800034 	movhi	r6,0
 40215c0:	31803604 	addi	r6,r6,216
 40215c4:	180b883a 	mov	r5,r3
 40215c8:	e13ffe17 	ldw	r4,-8(fp)
 40215cc:	40210f80 	call	40210f8 <readIntInput>
 40215d0:	10000226 	beq	r2,zero,40215dc <readInput+0x174>
            return 1;
 40215d4:	00800044 	movi	r2,1
 40215d8:	00004c06 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 40215dc:	e0bfffc3 	ldbu	r2,-1(fp)
 40215e0:	10803fcc 	andi	r2,r2,255
 40215e4:	1080201c 	xori	r2,r2,128
 40215e8:	10bfe004 	addi	r2,r2,-128
 40215ec:	10800b20 	cmpeqi	r2,r2,44
 40215f0:	1000021e 	bne	r2,zero,40215fc <readInput+0x194>
            return 1;
 40215f4:	00800044 	movi	r2,1
 40215f8:	00004406 	br	402170c <readInput+0x2a4>
        if(readIntInput(in, &c, "\"minimumNextBetAmount\"", 22, &out->minimumNextBetAmount))
 40215fc:	e0bffd17 	ldw	r2,-12(fp)
 4021600:	10800504 	addi	r2,r2,20
 4021604:	e0ffffc4 	addi	r3,fp,-1
 4021608:	d8800015 	stw	r2,0(sp)
 402160c:	01c00584 	movi	r7,22
 4021610:	01800034 	movhi	r6,0
 4021614:	31803c04 	addi	r6,r6,240
 4021618:	180b883a 	mov	r5,r3
 402161c:	e13ffe17 	ldw	r4,-8(fp)
 4021620:	40210f80 	call	40210f8 <readIntInput>
 4021624:	10000226 	beq	r2,zero,4021630 <readInput+0x1c8>
            return 1;
 4021628:	00800044 	movi	r2,1
 402162c:	00003706 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 4021630:	e0bfffc3 	ldbu	r2,-1(fp)
 4021634:	10803fcc 	andi	r2,r2,255
 4021638:	1080201c 	xori	r2,r2,128
 402163c:	10bfe004 	addi	r2,r2,-128
 4021640:	10800b20 	cmpeqi	r2,r2,44
 4021644:	1000021e 	bne	r2,zero,4021650 <readInput+0x1e8>
            return 1;
 4021648:	00800044 	movi	r2,1
 402164c:	00002f06 	br	402170c <readInput+0x2a4>
        if(readIntInput(in, &c, "\"relativeCardScore\"", 19, &out->relativeCardScore))
 4021650:	e0bffd17 	ldw	r2,-12(fp)
 4021654:	10800604 	addi	r2,r2,24
 4021658:	e0ffffc4 	addi	r3,fp,-1
 402165c:	d8800015 	stw	r2,0(sp)
 4021660:	01c004c4 	movi	r7,19
 4021664:	01800034 	movhi	r6,0
 4021668:	31804204 	addi	r6,r6,264
 402166c:	180b883a 	mov	r5,r3
 4021670:	e13ffe17 	ldw	r4,-8(fp)
 4021674:	40210f80 	call	40210f8 <readIntInput>
 4021678:	10000226 	beq	r2,zero,4021684 <readInput+0x21c>
            return 1;
 402167c:	00800044 	movi	r2,1
 4021680:	00002206 	br	402170c <readInput+0x2a4>
        // check for comma
        if(c != ',')
 4021684:	e0bfffc3 	ldbu	r2,-1(fp)
 4021688:	10803fcc 	andi	r2,r2,255
 402168c:	1080201c 	xori	r2,r2,128
 4021690:	10bfe004 	addi	r2,r2,-128
 4021694:	10800b20 	cmpeqi	r2,r2,44
 4021698:	1000021e 	bne	r2,zero,40216a4 <readInput+0x23c>
            return 1;
 402169c:	00800044 	movi	r2,1
 40216a0:	00001a06 	br	402170c <readInput+0x2a4>
        if(readIntInput(in, &c, "\"failedPeekAttemptsCurrentGame\"", 31, &out->failedPeekAttemptsCurrentGame))
 40216a4:	e0bffd17 	ldw	r2,-12(fp)
 40216a8:	10800704 	addi	r2,r2,28
 40216ac:	e0ffffc4 	addi	r3,fp,-1
 40216b0:	d8800015 	stw	r2,0(sp)
 40216b4:	01c007c4 	movi	r7,31
 40216b8:	01800034 	movhi	r6,0
 40216bc:	31804704 	addi	r6,r6,284
 40216c0:	180b883a 	mov	r5,r3
 40216c4:	e13ffe17 	ldw	r4,-8(fp)
 40216c8:	40210f80 	call	40210f8 <readIntInput>
 40216cc:	10000226 	beq	r2,zero,40216d8 <readInput+0x270>
            return 1;
 40216d0:	00800044 	movi	r2,1
 40216d4:	00000d06 	br	402170c <readInput+0x2a4>
        // read final }
        if(c != '}')
 40216d8:	e0bfffc3 	ldbu	r2,-1(fp)
 40216dc:	10803fcc 	andi	r2,r2,255
 40216e0:	1080201c 	xori	r2,r2,128
 40216e4:	10bfe004 	addi	r2,r2,-128
 40216e8:	10801f60 	cmpeqi	r2,r2,125
 40216ec:	1000021e 	bne	r2,zero,40216f8 <readInput+0x290>
            return 1;
 40216f0:	00800044 	movi	r2,1
 40216f4:	00000506 	br	402170c <readInput+0x2a4>
        // consume newline
        getc(in);
 40216f8:	e13ffe17 	ldw	r4,-8(fp)
 40216fc:	4024bb80 	call	4024bb8 <getc>
        return 0;
 4021700:	0005883a 	mov	r2,zero
 4021704:	00000106 	br	402170c <readInput+0x2a4>
    }
    return 1;
 4021708:	00800044 	movi	r2,1
}
 402170c:	e037883a 	mov	sp,fp
 4021710:	dfc00117 	ldw	ra,4(sp)
 4021714:	df000017 	ldw	fp,0(sp)
 4021718:	dec00204 	addi	sp,sp,8
 402171c:	f800283a 	ret

04021720 <writeBool>:
 *      Author: IBricchi
 */

#include "jsonEncode.h"

void writeBool(FILE* out, char* name, int val){
 4021720:	defffb04 	addi	sp,sp,-20
 4021724:	dfc00415 	stw	ra,16(sp)
 4021728:	df000315 	stw	fp,12(sp)
 402172c:	df000304 	addi	fp,sp,12
 4021730:	e13fff15 	stw	r4,-4(fp)
 4021734:	e17ffe15 	stw	r5,-8(fp)
 4021738:	e1bffd15 	stw	r6,-12(fp)
	if(val){
 402173c:	e0bffd17 	ldw	r2,-12(fp)
 4021740:	10000726 	beq	r2,zero,4021760 <writeBool+0x40>
		fprintf(out, "\"%s\":true", name, val);
 4021744:	e1fffd17 	ldw	r7,-12(fp)
 4021748:	e1bffe17 	ldw	r6,-8(fp)
 402174c:	01400034 	movhi	r5,0
 4021750:	29404f04 	addi	r5,r5,316
 4021754:	e13fff17 	ldw	r4,-4(fp)
 4021758:	4023dd80 	call	4023dd8 <fprintf>
	}
	else{
		fprintf(out, "\"%s\":false", name, val);
	}
}
 402175c:	00000606 	br	4021778 <writeBool+0x58>
		fprintf(out, "\"%s\":false", name, val);
 4021760:	e1fffd17 	ldw	r7,-12(fp)
 4021764:	e1bffe17 	ldw	r6,-8(fp)
 4021768:	01400034 	movhi	r5,0
 402176c:	29405204 	addi	r5,r5,328
 4021770:	e13fff17 	ldw	r4,-4(fp)
 4021774:	4023dd80 	call	4023dd8 <fprintf>
}
 4021778:	0001883a 	nop
 402177c:	e037883a 	mov	sp,fp
 4021780:	dfc00117 	ldw	ra,4(sp)
 4021784:	df000017 	ldw	fp,0(sp)
 4021788:	dec00204 	addi	sp,sp,8
 402178c:	f800283a 	ret

04021790 <writeInt>:

void writeInt(FILE* out, char* name, int val){
 4021790:	defffb04 	addi	sp,sp,-20
 4021794:	dfc00415 	stw	ra,16(sp)
 4021798:	df000315 	stw	fp,12(sp)
 402179c:	df000304 	addi	fp,sp,12
 40217a0:	e13fff15 	stw	r4,-4(fp)
 40217a4:	e17ffe15 	stw	r5,-8(fp)
 40217a8:	e1bffd15 	stw	r6,-12(fp)
	fprintf(out, "\"%s\":%i", name, val);
 40217ac:	e1fffd17 	ldw	r7,-12(fp)
 40217b0:	e1bffe17 	ldw	r6,-8(fp)
 40217b4:	01400034 	movhi	r5,0
 40217b8:	29405504 	addi	r5,r5,340
 40217bc:	e13fff17 	ldw	r4,-4(fp)
 40217c0:	4023dd80 	call	4023dd8 <fprintf>
}
 40217c4:	0001883a 	nop
 40217c8:	e037883a 	mov	sp,fp
 40217cc:	dfc00117 	ldw	ra,4(sp)
 40217d0:	df000017 	ldw	fp,0(sp)
 40217d4:	dec00204 	addi	sp,sp,8
 40217d8:	f800283a 	ret

040217dc <writeString>:

void writeString(FILE* out, char* name, char* val){
 40217dc:	defffb04 	addi	sp,sp,-20
 40217e0:	dfc00415 	stw	ra,16(sp)
 40217e4:	df000315 	stw	fp,12(sp)
 40217e8:	df000304 	addi	fp,sp,12
 40217ec:	e13fff15 	stw	r4,-4(fp)
 40217f0:	e17ffe15 	stw	r5,-8(fp)
 40217f4:	e1bffd15 	stw	r6,-12(fp)
	fprintf(out, "\"%s\":\"%s\"", name, val);
 40217f8:	e1fffd17 	ldw	r7,-12(fp)
 40217fc:	e1bffe17 	ldw	r6,-8(fp)
 4021800:	01400034 	movhi	r5,0
 4021804:	29405704 	addi	r5,r5,348
 4021808:	e13fff17 	ldw	r4,-4(fp)
 402180c:	4023dd80 	call	4023dd8 <fprintf>
}
 4021810:	0001883a 	nop
 4021814:	e037883a 	mov	sp,fp
 4021818:	dfc00117 	ldw	ra,4(sp)
 402181c:	df000017 	ldw	fp,0(sp)
 4021820:	dec00204 	addi	sp,sp,8
 4021824:	f800283a 	ret

04021828 <writeOutput>:

int writeOutput(FILE* out, OutputData* in){
 4021828:	defffc04 	addi	sp,sp,-16
 402182c:	dfc00315 	stw	ra,12(sp)
 4021830:	df000215 	stw	fp,8(sp)
 4021834:	df000204 	addi	fp,sp,8
 4021838:	e13fff15 	stw	r4,-4(fp)
 402183c:	e17ffe15 	stw	r5,-8(fp)
	fprintf(out,"{");
 4021840:	e17fff17 	ldw	r5,-4(fp)
 4021844:	01001ec4 	movi	r4,123
 4021848:	4023e440 	call	4023e44 <fputc>
	writeBool(out,"isActiveData",outputData.isActiveData);
 402184c:	00800034 	movhi	r2,0
 4021850:	10897a17 	ldw	r2,9704(r2)
 4021854:	100d883a 	mov	r6,r2
 4021858:	01400034 	movhi	r5,0
 402185c:	29405a04 	addi	r5,r5,360
 4021860:	e13fff17 	ldw	r4,-4(fp)
 4021864:	40217200 	call	4021720 <writeBool>
	fprintf(out,",");
 4021868:	e17fff17 	ldw	r5,-4(fp)
 402186c:	01000b04 	movi	r4,44
 4021870:	4023e440 	call	4023e44 <fputc>
	writeBool(out,"showCardsMe",outputData.showCardsMe);
 4021874:	00800034 	movhi	r2,0
 4021878:	10897b17 	ldw	r2,9708(r2)
 402187c:	100d883a 	mov	r6,r2
 4021880:	01400034 	movhi	r5,0
 4021884:	29405e04 	addi	r5,r5,376
 4021888:	e13fff17 	ldw	r4,-4(fp)
 402188c:	40217200 	call	4021720 <writeBool>
	fprintf(out,",");
 4021890:	e17fff17 	ldw	r5,-4(fp)
 4021894:	01000b04 	movi	r4,44
 4021898:	4023e440 	call	4023e44 <fputc>
	writeBool(out,"showCardsIfPeek",outputData.showCardsEveryone);
 402189c:	00800034 	movhi	r2,0
 40218a0:	10897c17 	ldw	r2,9712(r2)
 40218a4:	100d883a 	mov	r6,r2
 40218a8:	01400034 	movhi	r5,0
 40218ac:	29406104 	addi	r5,r5,388
 40218b0:	e13fff17 	ldw	r4,-4(fp)
 40218b4:	40217200 	call	4021720 <writeBool>
	fprintf(out,",");
 40218b8:	e17fff17 	ldw	r5,-4(fp)
 40218bc:	01000b04 	movi	r4,44
 40218c0:	4023e440 	call	4023e44 <fputc>
	writeBool(out,"newTryPeek",outputData.newTryPeek);
 40218c4:	00800034 	movhi	r2,0
 40218c8:	10897d17 	ldw	r2,9716(r2)
 40218cc:	100d883a 	mov	r6,r2
 40218d0:	01400034 	movhi	r5,0
 40218d4:	29406504 	addi	r5,r5,404
 40218d8:	e13fff17 	ldw	r4,-4(fp)
 40218dc:	40217200 	call	4021720 <writeBool>
	fprintf(out,",");
 40218e0:	e17fff17 	ldw	r5,-4(fp)
 40218e4:	01000b04 	movi	r4,44
 40218e8:	4023e440 	call	4023e44 <fputc>
	writeInt(out,"newTryPeekPlayerNumber",outputData.newTryPeekPlayerNumber);
 40218ec:	00800034 	movhi	r2,0
 40218f0:	10897e17 	ldw	r2,9720(r2)
 40218f4:	100d883a 	mov	r6,r2
 40218f8:	01400034 	movhi	r5,0
 40218fc:	29406804 	addi	r5,r5,416
 4021900:	e13fff17 	ldw	r4,-4(fp)
 4021904:	40217900 	call	4021790 <writeInt>
	fprintf(out,",");
 4021908:	e17fff17 	ldw	r5,-4(fp)
 402190c:	01000b04 	movi	r4,44
 4021910:	4023e440 	call	4023e44 <fputc>
	writeString(out,"newMoveType",outputData.newMoveType);
 4021914:	00800034 	movhi	r2,0
 4021918:	10897f17 	ldw	r2,9724(r2)
 402191c:	100d883a 	mov	r6,r2
 4021920:	01400034 	movhi	r5,0
 4021924:	29406e04 	addi	r5,r5,440
 4021928:	e13fff17 	ldw	r4,-4(fp)
 402192c:	40217dc0 	call	40217dc <writeString>
	fprintf(out,",");
 4021930:	e17fff17 	ldw	r5,-4(fp)
 4021934:	01000b04 	movi	r4,44
 4021938:	4023e440 	call	4023e44 <fputc>
	writeInt(out,"newBetAmount",outputData.newBetAmount);
 402193c:	00800034 	movhi	r2,0
 4021940:	10898017 	ldw	r2,9728(r2)
 4021944:	100d883a 	mov	r6,r2
 4021948:	01400034 	movhi	r5,0
 402194c:	29407104 	addi	r5,r5,452
 4021950:	e13fff17 	ldw	r4,-4(fp)
 4021954:	40217900 	call	4021790 <writeInt>
	fprintf(out,"}");
 4021958:	e17fff17 	ldw	r5,-4(fp)
 402195c:	01001f44 	movi	r4,125
 4021960:	4023e440 	call	4023e44 <fputc>
}
 4021964:	0001883a 	nop
 4021968:	e037883a 	mov	sp,fp
 402196c:	dfc00117 	ldw	ra,4(sp)
 4021970:	df000017 	ldw	fp,0(sp)
 4021974:	dec00204 	addi	sp,sp,8
 4021978:	f800283a 	ret

0402197c <print_dec>:
 */

#include "printDec.h"

void print_dec(int dig, int base)
{
 402197c:	defffc04 	addi	sp,sp,-16
 4021980:	df000315 	stw	fp,12(sp)
 4021984:	df000304 	addi	fp,sp,12
 4021988:	e13ffe15 	stw	r4,-8(fp)
 402198c:	e17ffd15 	stw	r5,-12(fp)
 4021990:	e0bffe17 	ldw	r2,-8(fp)
 4021994:	108002e8 	cmpgeui	r2,r2,11
 4021998:	1000311e 	bne	r2,zero,4021a60 <print_dec+0xe4>
 402199c:	e0bffe17 	ldw	r2,-8(fp)
 40219a0:	100690ba 	slli	r3,r2,2
 40219a4:	008100b4 	movhi	r2,1026
 40219a8:	1885883a 	add	r2,r3,r2
 40219ac:	10866d17 	ldw	r2,6580(r2)
 40219b0:	1000683a 	jmp	r2
 40219b4:	040219e0 	cmpeqi	r16,zero,2151
 40219b8:	040219ec 	andhi	r16,zero,2151
 40219bc:	040219f8 	rdprs	r16,zero,2151
 40219c0:	04021a04 	movi	r16,2152
 40219c4:	04021a10 	cmplti	r16,zero,2152
 40219c8:	04021a1c 	xori	r16,zero,2152
 40219cc:	04021a28 	cmpgeui	r16,zero,2152
 40219d0:	04021a34 	movhi	r16,2152
 40219d4:	04021a40 	call	4021a4 <_gp+0x3f7c74>
 40219d8:	04021a48 	cmpgei	r16,zero,2153
 40219dc:	04021a54 	movui	r16,2153
	int prod;
 	switch(dig){
 			case 0: prod = 0b1000000; break;
 40219e0:	00801004 	movi	r2,64
 40219e4:	e0bfff15 	stw	r2,-4(fp)
 40219e8:	00001d06 	br	4021a60 <print_dec+0xe4>
 			case 1: prod = 0b1111001; break;
 40219ec:	00801e44 	movi	r2,121
 40219f0:	e0bfff15 	stw	r2,-4(fp)
 40219f4:	00001a06 	br	4021a60 <print_dec+0xe4>
 			case 2: prod = 0b0100100; break;
 40219f8:	00800904 	movi	r2,36
 40219fc:	e0bfff15 	stw	r2,-4(fp)
 4021a00:	00001706 	br	4021a60 <print_dec+0xe4>
 			case 3: prod = 0b0110000; break;
 4021a04:	00800c04 	movi	r2,48
 4021a08:	e0bfff15 	stw	r2,-4(fp)
 4021a0c:	00001406 	br	4021a60 <print_dec+0xe4>
 			case 4: prod = 0b0011001; break;
 4021a10:	00800644 	movi	r2,25
 4021a14:	e0bfff15 	stw	r2,-4(fp)
 4021a18:	00001106 	br	4021a60 <print_dec+0xe4>
 			case 5: prod = 0b0010010; break;
 4021a1c:	00800484 	movi	r2,18
 4021a20:	e0bfff15 	stw	r2,-4(fp)
 4021a24:	00000e06 	br	4021a60 <print_dec+0xe4>
 			case 6: prod = 0b0000010; break;
 4021a28:	00800084 	movi	r2,2
 4021a2c:	e0bfff15 	stw	r2,-4(fp)
 4021a30:	00000b06 	br	4021a60 <print_dec+0xe4>
 			case 7: prod = 0b1111000; break;
 4021a34:	00801e04 	movi	r2,120
 4021a38:	e0bfff15 	stw	r2,-4(fp)
 4021a3c:	00000806 	br	4021a60 <print_dec+0xe4>
 			case 8: prod = 0b0000000; break;
 4021a40:	e03fff15 	stw	zero,-4(fp)
 4021a44:	00000606 	br	4021a60 <print_dec+0xe4>
 			case 9: prod = 0b0011000; break;
 4021a48:	00800604 	movi	r2,24
 4021a4c:	e0bfff15 	stw	r2,-4(fp)
 4021a50:	00000306 	br	4021a60 <print_dec+0xe4>
 			case 10: prod = 0b1111111; break;
 4021a54:	00801fc4 	movi	r2,127
 4021a58:	e0bfff15 	stw	r2,-4(fp)
 4021a5c:	0001883a 	nop
 4021a60:	e0bffd17 	ldw	r2,-12(fp)
 4021a64:	108001a8 	cmpgeui	r2,r2,6
 4021a68:	1000241e 	bne	r2,zero,4021afc <print_dec+0x180>
 4021a6c:	e0bffd17 	ldw	r2,-12(fp)
 4021a70:	100690ba 	slli	r3,r2,2
 4021a74:	008100b4 	movhi	r2,1026
 4021a78:	1885883a 	add	r2,r3,r2
 4021a7c:	1086a117 	ldw	r2,6788(r2)
 4021a80:	1000683a 	jmp	r2
 4021a84:	04021a9c 	xori	r16,zero,2154
 4021a88:	04021aac 	andhi	r16,zero,2154
 4021a8c:	04021abc 	xorhi	r16,zero,2154
 4021a90:	04021acc 	andi	r16,zero,2155
 4021a94:	04021adc 	xori	r16,zero,2155
 4021a98:	04021aec 	andhi	r16,zero,2155

 	}
	switch(base){
 			case 0: IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE, prod); break;
 4021a9c:	e0ffff17 	ldw	r3,-4(fp)
 4021aa0:	00810034 	movhi	r2,1024
 4021aa4:	10c01435 	stwio	r3,80(r2)
 4021aa8:	00001406 	br	4021afc <print_dec+0x180>
 			case 1: IOWR_ALTERA_AVALON_PIO_DATA(HEX_1_BASE, prod); break;
 4021aac:	e0ffff17 	ldw	r3,-4(fp)
 4021ab0:	00810034 	movhi	r2,1024
 4021ab4:	10c01035 	stwio	r3,64(r2)
 4021ab8:	00001006 	br	4021afc <print_dec+0x180>
 			case 2: IOWR_ALTERA_AVALON_PIO_DATA(HEX_2_BASE, prod); break;
 4021abc:	e0ffff17 	ldw	r3,-4(fp)
 4021ac0:	00810034 	movhi	r2,1024
 4021ac4:	10c00c35 	stwio	r3,48(r2)
 4021ac8:	00000c06 	br	4021afc <print_dec+0x180>
 			case 3: IOWR_ALTERA_AVALON_PIO_DATA(HEX_3_BASE, prod); break;
 4021acc:	e0ffff17 	ldw	r3,-4(fp)
 4021ad0:	00810034 	movhi	r2,1024
 4021ad4:	10c00835 	stwio	r3,32(r2)
 4021ad8:	00000806 	br	4021afc <print_dec+0x180>
 			case 4: IOWR_ALTERA_AVALON_PIO_DATA(HEX_4_BASE, prod); break;
 4021adc:	e0ffff17 	ldw	r3,-4(fp)
 4021ae0:	00810034 	movhi	r2,1024
 4021ae4:	10c00435 	stwio	r3,16(r2)
 4021ae8:	00000406 	br	4021afc <print_dec+0x180>
 			case 5: IOWR_ALTERA_AVALON_PIO_DATA(HEX_5_BASE, prod); break;
 4021aec:	e0ffff17 	ldw	r3,-4(fp)
 4021af0:	00810034 	movhi	r2,1024
 4021af4:	10c00035 	stwio	r3,0(r2)
 4021af8:	0001883a 	nop
 			}

}
 4021afc:	0001883a 	nop
 4021b00:	e037883a 	mov	sp,fp
 4021b04:	df000017 	ldw	fp,0(sp)
 4021b08:	dec00104 	addi	sp,sp,4
 4021b0c:	f800283a 	ret

04021b10 <clear_dec>:

void clear_dec()
{
 4021b10:	deffff04 	addi	sp,sp,-4
 4021b14:	df000015 	stw	fp,0(sp)
 4021b18:	d839883a 	mov	fp,sp
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE, 0b1111111);
 4021b1c:	00c01fc4 	movi	r3,127
 4021b20:	00810034 	movhi	r2,1024
 4021b24:	10c01435 	stwio	r3,80(r2)
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_1_BASE, 0b1111111);
 4021b28:	00c01fc4 	movi	r3,127
 4021b2c:	00810034 	movhi	r2,1024
 4021b30:	10c01035 	stwio	r3,64(r2)
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_2_BASE, 0b1111111);
 4021b34:	00c01fc4 	movi	r3,127
 4021b38:	00810034 	movhi	r2,1024
 4021b3c:	10c00c35 	stwio	r3,48(r2)
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_3_BASE, 0b1111111);
 4021b40:	00c01fc4 	movi	r3,127
 4021b44:	00810034 	movhi	r2,1024
 4021b48:	10c00835 	stwio	r3,32(r2)
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_4_BASE, 0b1111111);
 4021b4c:	00c01fc4 	movi	r3,127
 4021b50:	00810034 	movhi	r2,1024
 4021b54:	10c00435 	stwio	r3,16(r2)
	 IOWR_ALTERA_AVALON_PIO_DATA(HEX_5_BASE, 0b1111111);
 4021b58:	00c01fc4 	movi	r3,127
 4021b5c:	00810034 	movhi	r2,1024
 4021b60:	10c00035 	stwio	r3,0(r2)
}
 4021b64:	0001883a 	nop
 4021b68:	e037883a 	mov	sp,fp
 4021b6c:	df000017 	ldw	fp,0(sp)
 4021b70:	dec00104 	addi	sp,sp,4
 4021b74:	f800283a 	ret

04021b78 <openFP>:
#include "jsonDecode.h"
#include "jsonEncode.h"

FILE* fp;

int openFP(){
 4021b78:	defffe04 	addi	sp,sp,-8
 4021b7c:	dfc00115 	stw	ra,4(sp)
 4021b80:	df000015 	stw	fp,0(sp)
 4021b84:	d839883a 	mov	fp,sp
	fp = fopen ("/dev/jtag_uart", "r+");
 4021b88:	01400034 	movhi	r5,0
 4021b8c:	29407504 	addi	r5,r5,468
 4021b90:	01000034 	movhi	r4,0
 4021b94:	21007604 	addi	r4,r4,472
 4021b98:	4023d980 	call	4023d98 <fopen>
 4021b9c:	d0a01015 	stw	r2,-32704(gp)
	if(!fp)
 4021ba0:	d0a01017 	ldw	r2,-32704(gp)
 4021ba4:	1000021e 	bne	r2,zero,4021bb0 <openFP+0x38>
		return 1;
 4021ba8:	00800044 	movi	r2,1
 4021bac:	00000106 	br	4021bb4 <openFP+0x3c>
	return 0;
 4021bb0:	0005883a 	mov	r2,zero
}
 4021bb4:	e037883a 	mov	sp,fp
 4021bb8:	dfc00117 	ldw	ra,4(sp)
 4021bbc:	df000017 	ldw	fp,0(sp)
 4021bc0:	dec00204 	addi	sp,sp,8
 4021bc4:	f800283a 	ret

04021bc8 <closeFP>:

void closeFP(){
 4021bc8:	defffe04 	addi	sp,sp,-8
 4021bcc:	dfc00115 	stw	ra,4(sp)
 4021bd0:	df000015 	stw	fp,0(sp)
 4021bd4:	d839883a 	mov	fp,sp
	fprintf(fp, "Closing the JTAG UART file handle.\n %c",0x4);
 4021bd8:	d0a01017 	ldw	r2,-32704(gp)
 4021bdc:	01800104 	movi	r6,4
 4021be0:	01400034 	movhi	r5,0
 4021be4:	29407a04 	addi	r5,r5,488
 4021be8:	1009883a 	mov	r4,r2
 4021bec:	4023dd80 	call	4023dd8 <fprintf>
	fclose(fp);
 4021bf0:	d0a01017 	ldw	r2,-32704(gp)
 4021bf4:	1009883a 	mov	r4,r2
 4021bf8:	40235900 	call	4023590 <fclose>
}
 4021bfc:	0001883a 	nop
 4021c00:	e037883a 	mov	sp,fp
 4021c04:	dfc00117 	ldw	ra,4(sp)
 4021c08:	df000017 	ldw	fp,0(sp)
 4021c0c:	dec00204 	addi	sp,sp,8
 4021c10:	f800283a 	ret

04021c14 <requestLoop>:

void requestLoop(){
 4021c14:	defffc04 	addi	sp,sp,-16
 4021c18:	dfc00315 	stw	ra,12(sp)
 4021c1c:	df000215 	stw	fp,8(sp)
 4021c20:	df000204 	addi	fp,sp,8
	char prompt = 0;
 4021c24:	e03ffec5 	stb	zero,-5(fp)
	if (fp) {
 4021c28:	d0a01017 	ldw	r2,-32704(gp)
 4021c2c:	10007a26 	beq	r2,zero,4021e18 <requestLoop+0x204>
//			inputData.moneyAvailableAmount = 12345;
//			inputData.relativeCardScore = 50;
//			outputData.newBetAmount = 0;

			// read input
			if(readInput(fp, &inputData)){
 4021c30:	d0a01017 	ldw	r2,-32704(gp)
 4021c34:	01400034 	movhi	r5,0
 4021c38:	29496d04 	addi	r5,r5,9652
 4021c3c:	1009883a 	mov	r4,r2
 4021c40:	40214680 	call	4021468 <readInput>
 4021c44:	10000926 	beq	r2,zero,4021c6c <requestLoop+0x58>
				fprintf(stderr, "ERROR: Unable to parse input json.\n");
 4021c48:	d0a00217 	ldw	r2,-32760(gp)
 4021c4c:	10800317 	ldw	r2,12(r2)
 4021c50:	100f883a 	mov	r7,r2
 4021c54:	018008c4 	movi	r6,35
 4021c58:	01400044 	movi	r5,1
 4021c5c:	01000034 	movhi	r4,0
 4021c60:	21008404 	addi	r4,r4,528
 4021c64:	4024a680 	call	4024a68 <fwrite>
				return;
 4021c68:	00006b06 	br	4021e18 <requestLoop+0x204>
			}

			// process input strings
			inputData.allowFold = 0;
 4021c6c:	00800034 	movhi	r2,0
 4021c70:	10097515 	stw	zero,9684(r2)
			inputData.allowCheck = 0;
 4021c74:	00800034 	movhi	r2,0
 4021c78:	10097615 	stw	zero,9688(r2)
			inputData.allowBet = 0;
 4021c7c:	00800034 	movhi	r2,0
 4021c80:	10097715 	stw	zero,9692(r2)
			inputData.allowCall = 0;
 4021c84:	00800034 	movhi	r2,0
 4021c88:	10097815 	stw	zero,9696(r2)
			inputData.allowRaise = 0;
 4021c8c:	00800034 	movhi	r2,0
 4021c90:	10097915 	stw	zero,9700(r2)
			for(int i = 0; i < inputData.aviablableNextMovesCount; i++){
 4021c94:	e03fff15 	stw	zero,-4(fp)
 4021c98:	00004e06 	br	4021dd4 <requestLoop+0x1c0>
				if(!strcmp(inputData.availableNextMoves[i], "fold")){
 4021c9c:	00800034 	movhi	r2,0
 4021ca0:	10c96f17 	ldw	r3,9660(r2)
 4021ca4:	e0bfff17 	ldw	r2,-4(fp)
 4021ca8:	100490ba 	slli	r2,r2,2
 4021cac:	1885883a 	add	r2,r3,r2
 4021cb0:	10800017 	ldw	r2,0(r2)
 4021cb4:	01400034 	movhi	r5,0
 4021cb8:	29408d04 	addi	r5,r5,564
 4021cbc:	1009883a 	mov	r4,r2
 4021cc0:	4025fdc0 	call	4025fdc <strcmp>
 4021cc4:	1000041e 	bne	r2,zero,4021cd8 <requestLoop+0xc4>
					inputData.allowFold = 1;
 4021cc8:	00c00044 	movi	r3,1
 4021ccc:	00800034 	movhi	r2,0
 4021cd0:	10c97515 	stw	r3,9684(r2)
					continue;
 4021cd4:	00003c06 	br	4021dc8 <requestLoop+0x1b4>
				}
				else if(!strcmp(inputData.availableNextMoves[i], "check")){
 4021cd8:	00800034 	movhi	r2,0
 4021cdc:	10c96f17 	ldw	r3,9660(r2)
 4021ce0:	e0bfff17 	ldw	r2,-4(fp)
 4021ce4:	100490ba 	slli	r2,r2,2
 4021ce8:	1885883a 	add	r2,r3,r2
 4021cec:	10800017 	ldw	r2,0(r2)
 4021cf0:	01400034 	movhi	r5,0
 4021cf4:	29408f04 	addi	r5,r5,572
 4021cf8:	1009883a 	mov	r4,r2
 4021cfc:	4025fdc0 	call	4025fdc <strcmp>
 4021d00:	1000041e 	bne	r2,zero,4021d14 <requestLoop+0x100>
					inputData.allowCheck = 1;
 4021d04:	00c00044 	movi	r3,1
 4021d08:	00800034 	movhi	r2,0
 4021d0c:	10c97615 	stw	r3,9688(r2)
					continue;
 4021d10:	00002d06 	br	4021dc8 <requestLoop+0x1b4>
				}
				else if(!strcmp(inputData.availableNextMoves[i], "bet")){
 4021d14:	00800034 	movhi	r2,0
 4021d18:	10c96f17 	ldw	r3,9660(r2)
 4021d1c:	e0bfff17 	ldw	r2,-4(fp)
 4021d20:	100490ba 	slli	r2,r2,2
 4021d24:	1885883a 	add	r2,r3,r2
 4021d28:	10800017 	ldw	r2,0(r2)
 4021d2c:	01400034 	movhi	r5,0
 4021d30:	29409104 	addi	r5,r5,580
 4021d34:	1009883a 	mov	r4,r2
 4021d38:	4025fdc0 	call	4025fdc <strcmp>
 4021d3c:	1000041e 	bne	r2,zero,4021d50 <requestLoop+0x13c>
					inputData.allowBet = 1;
 4021d40:	00c00044 	movi	r3,1
 4021d44:	00800034 	movhi	r2,0
 4021d48:	10c97715 	stw	r3,9692(r2)
					continue;
 4021d4c:	00001e06 	br	4021dc8 <requestLoop+0x1b4>
				}
				else if(!strcmp(inputData.availableNextMoves[i], "call")){
 4021d50:	00800034 	movhi	r2,0
 4021d54:	10c96f17 	ldw	r3,9660(r2)
 4021d58:	e0bfff17 	ldw	r2,-4(fp)
 4021d5c:	100490ba 	slli	r2,r2,2
 4021d60:	1885883a 	add	r2,r3,r2
 4021d64:	10800017 	ldw	r2,0(r2)
 4021d68:	01400034 	movhi	r5,0
 4021d6c:	29409204 	addi	r5,r5,584
 4021d70:	1009883a 	mov	r4,r2
 4021d74:	4025fdc0 	call	4025fdc <strcmp>
 4021d78:	1000041e 	bne	r2,zero,4021d8c <requestLoop+0x178>
					inputData.allowCall = 1;
 4021d7c:	00c00044 	movi	r3,1
 4021d80:	00800034 	movhi	r2,0
 4021d84:	10c97815 	stw	r3,9696(r2)
					continue;
 4021d88:	00000f06 	br	4021dc8 <requestLoop+0x1b4>
				}
				else if(!strcmp(inputData.availableNextMoves[i], "raise")){
 4021d8c:	00800034 	movhi	r2,0
 4021d90:	10c96f17 	ldw	r3,9660(r2)
 4021d94:	e0bfff17 	ldw	r2,-4(fp)
 4021d98:	100490ba 	slli	r2,r2,2
 4021d9c:	1885883a 	add	r2,r3,r2
 4021da0:	10800017 	ldw	r2,0(r2)
 4021da4:	01400034 	movhi	r5,0
 4021da8:	29409404 	addi	r5,r5,592
 4021dac:	1009883a 	mov	r4,r2
 4021db0:	4025fdc0 	call	4025fdc <strcmp>
 4021db4:	1000041e 	bne	r2,zero,4021dc8 <requestLoop+0x1b4>
					inputData.allowRaise = 1;
 4021db8:	00c00044 	movi	r3,1
 4021dbc:	00800034 	movhi	r2,0
 4021dc0:	10c97915 	stw	r3,9700(r2)
					continue;
 4021dc4:	0001883a 	nop
			for(int i = 0; i < inputData.aviablableNextMovesCount; i++){
 4021dc8:	e0bfff17 	ldw	r2,-4(fp)
 4021dcc:	10800044 	addi	r2,r2,1
 4021dd0:	e0bfff15 	stw	r2,-4(fp)
 4021dd4:	00800034 	movhi	r2,0
 4021dd8:	10897017 	ldw	r2,9664(r2)
 4021ddc:	e0ffff17 	ldw	r3,-4(fp)
 4021de0:	18bfae16 	blt	r3,r2,4021c9c <requestLoop+0x88>
				}
			}

			// print output;
			printf("<data>\n");
 4021de4:	01000034 	movhi	r4,0
 4021de8:	21009604 	addi	r4,r4,600
 4021dec:	4025b5c0 	call	4025b5c <puts>
			writeOutput(fp, &outputData);
 4021df0:	d0a01017 	ldw	r2,-32704(gp)
 4021df4:	01400034 	movhi	r5,0
 4021df8:	29497a04 	addi	r5,r5,9704
 4021dfc:	1009883a 	mov	r4,r2
 4021e00:	40218280 	call	4021828 <writeOutput>

			// resetting values:
			outputData.isActiveData = 0;
 4021e04:	00800034 	movhi	r2,0
 4021e08:	10097a15 	stw	zero,9704(r2)
			outputData.newTryPeek = 0;
 4021e0c:	00800034 	movhi	r2,0
 4021e10:	10097d15 	stw	zero,9716(r2)
			if(readInput(fp, &inputData)){
 4021e14:	003f8606 	br	4021c30 <requestLoop+0x1c>
		}
	}
}
 4021e18:	e037883a 	mov	sp,fp
 4021e1c:	dfc00117 	ldw	ra,4(sp)
 4021e20:	df000017 	ldw	fp,0(sp)
 4021e24:	dec00204 	addi	sp,sp,8
 4021e28:	f800283a 	ret

04021e2c <setupAccelerometer>:
 *      Author: IBricchi
 */

#include "setup.h"

int setupAccelerometer(){
 4021e2c:	defffe04 	addi	sp,sp,-8
 4021e30:	dfc00115 	stw	ra,4(sp)
 4021e34:	df000015 	stw	fp,0(sp)
 4021e38:	d839883a 	mov	fp,sp
	dataSrc.acc = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
 4021e3c:	01000034 	movhi	r4,0
 4021e40:	21009804 	addi	r4,r4,608
 4021e44:	4032a640 	call	4032a64 <alt_up_accelerometer_spi_open_dev>
 4021e48:	d0a00f15 	stw	r2,-32708(gp)
	if (dataSrc.acc == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
 4021e4c:	d0a00f17 	ldw	r2,-32708(gp)
 4021e50:	1000051e 	bne	r2,zero,4021e68 <setupAccelerometer+0x3c>
		printf("ERROR: Unable to access accelerometer.\n");
 4021e54:	01000034 	movhi	r4,0
 4021e58:	21009e04 	addi	r4,r4,632
 4021e5c:	4025b5c0 	call	4025b5c <puts>
		return 1;
 4021e60:	00800044 	movi	r2,1
 4021e64:	00000106 	br	4021e6c <setupAccelerometer+0x40>
	}
	return 0;
 4021e68:	0005883a 	mov	r2,zero
}
 4021e6c:	e037883a 	mov	sp,fp
 4021e70:	dfc00117 	ldw	ra,4(sp)
 4021e74:	df000017 	ldw	fp,0(sp)
 4021e78:	dec00204 	addi	sp,sp,8
 4021e7c:	f800283a 	ret

04021e80 <setupPeripherals>:

int setupPeripherals(){
 4021e80:	defffe04 	addi	sp,sp,-8
 4021e84:	dfc00115 	stw	ra,4(sp)
 4021e88:	df000015 	stw	fp,0(sp)
 4021e8c:	d839883a 	mov	fp,sp
	// try to setup accelerometer
	if(setupAccelerometer())
 4021e90:	4021e2c0 	call	4021e2c <setupAccelerometer>
 4021e94:	10000226 	beq	r2,zero,4021ea0 <setupPeripherals+0x20>
		return 1;
 4021e98:	00800044 	movi	r2,1
 4021e9c:	00000106 	br	4021ea4 <setupPeripherals+0x24>

	return 0;
 4021ea0:	0005883a 	mov	r2,zero
}
 4021ea4:	e037883a 	mov	sp,fp
 4021ea8:	dfc00117 	ldw	ra,4(sp)
 4021eac:	df000017 	ldw	fp,0(sp)
 4021eb0:	dec00204 	addi	sp,sp,8
 4021eb4:	f800283a 	ret

04021eb8 <shake>:

#include "shake.h"


int shake(alt_32 * count, alt_32 * previous_value, alt_32 new_data )
{
 4021eb8:	defffb04 	addi	sp,sp,-20
 4021ebc:	df000415 	stw	fp,16(sp)
 4021ec0:	df000404 	addi	fp,sp,16
 4021ec4:	e13ffe15 	stw	r4,-8(fp)
 4021ec8:	e17ffd15 	stw	r5,-12(fp)
 4021ecc:	e1bffc15 	stw	r6,-16(fp)
	alt_32 intermediate = 0;
 4021ed0:	e03fff15 	stw	zero,-4(fp)

	if(*count == 10000 )
 4021ed4:	e0bffe17 	ldw	r2,-8(fp)
 4021ed8:	10800017 	ldw	r2,0(r2)
 4021edc:	1089c418 	cmpnei	r2,r2,10000
 4021ee0:	10000e1e 	bne	r2,zero,4021f1c <shake+0x64>
	{
		intermediate = abs(*previous_value - new_data);
 4021ee4:	e0bffd17 	ldw	r2,-12(fp)
 4021ee8:	10c00017 	ldw	r3,0(r2)
 4021eec:	e0bffc17 	ldw	r2,-16(fp)
 4021ef0:	1885c83a 	sub	r2,r3,r2
 4021ef4:	1000010e 	bge	r2,zero,4021efc <shake+0x44>
 4021ef8:	0085c83a 	sub	r2,zero,r2
 4021efc:	e0bfff15 	stw	r2,-4(fp)
		if(intermediate > 10)
 4021f00:	e0bfff17 	ldw	r2,-4(fp)
 4021f04:	108002d0 	cmplti	r2,r2,11
 4021f08:	1000021e 	bne	r2,zero,4021f14 <shake+0x5c>
		{return 1;}
 4021f0c:	00800044 	movi	r2,1
 4021f10:	00000706 	br	4021f30 <shake+0x78>
		else
		{return 0;}
 4021f14:	0005883a 	mov	r2,zero
 4021f18:	00000506 	br	4021f30 <shake+0x78>

		*count = -1;
		*previous_value = new_data;
	}

	*count = *count + 1;
 4021f1c:	e0bffe17 	ldw	r2,-8(fp)
 4021f20:	10800017 	ldw	r2,0(r2)
 4021f24:	10c00044 	addi	r3,r2,1
 4021f28:	e0bffe17 	ldw	r2,-8(fp)
 4021f2c:	10c00015 	stw	r3,0(r2)


}
 4021f30:	e037883a 	mov	sp,fp
 4021f34:	df000017 	ldw	fp,0(sp)
 4021f38:	dec00104 	addi	sp,sp,4
 4021f3c:	f800283a 	ret

04021f40 <sys_timer_isr>:

extern FILE* fp;

FilterData filterData;
BetData betData = {5,0,0,{0},{0},0};
void sys_timer_isr() {
 4021f40:	defff704 	addi	sp,sp,-36
 4021f44:	dfc00815 	stw	ra,32(sp)
 4021f48:	df000715 	stw	fp,28(sp)
 4021f4c:	df000704 	addi	fp,sp,28
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
 4021f50:	0007883a 	mov	r3,zero
 4021f54:	00810134 	movhi	r2,1028
 4021f58:	10c40035 	stwio	r3,4096(r2)

    if (pwm > PWM_PERIOD) {
 4021f5c:	d0a00003 	ldbu	r2,-32768(gp)
 4021f60:	10803fcc 	andi	r2,r2,255
 4021f64:	10800470 	cmpltui	r2,r2,17
 4021f68:	10011c1e 	bne	r2,zero,40223dc <sys_timer_isr+0x49c>
		// get data
		alt_up_accelerometer_spi_read_x_axis(dataSrc.acc, & data.acc_x_read);
 4021f6c:	d0a00f17 	ldw	r2,-32708(gp)
 4021f70:	01400034 	movhi	r5,0
 4021f74:	29496904 	addi	r5,r5,9636
 4021f78:	1009883a 	mov	r4,r2
 4021f7c:	4032bb40 	call	4032bb4 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(dataSrc.acc, & data.acc_y_read);
 4021f80:	d0a00f17 	ldw	r2,-32708(gp)
 4021f84:	01400034 	movhi	r5,0
 4021f88:	29496a04 	addi	r5,r5,9640
 4021f8c:	1009883a 	mov	r4,r2
 4021f90:	4032c880 	call	4032c88 <alt_up_accelerometer_spi_read_y_axis>
		alt_up_accelerometer_spi_read_z_axis(dataSrc.acc, & data.acc_z_read);
 4021f94:	d0a00f17 	ldw	r2,-32708(gp)
 4021f98:	01400034 	movhi	r5,0
 4021f9c:	29496b04 	addi	r5,r5,9644
 4021fa0:	1009883a 	mov	r4,r2
 4021fa4:	4032d5c0 	call	4032d5c <alt_up_accelerometer_spi_read_z_axis>
		data.switch_read = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
 4021fa8:	00810034 	movhi	r2,1024
 4021fac:	10801c37 	ldwio	r2,112(r2)
 4021fb0:	1007883a 	mov	r3,r2
 4021fb4:	00800034 	movhi	r2,0
 4021fb8:	10c96c0d 	sth	r3,9648(r2)
		data.button_read = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
 4021fbc:	00810034 	movhi	r2,1024
 4021fc0:	10802037 	ldwio	r2,128(r2)
 4021fc4:	1007883a 	mov	r3,r2
 4021fc8:	00800034 	movhi	r2,0
 4021fcc:	10c96c85 	stb	r3,9650(r2)

		//Filtering x-axis values
		filt(filterData.xbuffer, data.acc_x_read, &filterData.xfiltered, 24);
 4021fd0:	00800034 	movhi	r2,0
 4021fd4:	10896917 	ldw	r2,9636(r2)
 4021fd8:	01c00604 	movi	r7,24
 4021fdc:	01800034 	movhi	r6,0
 4021fe0:	31899904 	addi	r6,r6,9828
 4021fe4:	100b883a 	mov	r5,r2
 4021fe8:	01000034 	movhi	r4,0
 4021fec:	21098104 	addi	r4,r4,9732
 4021ff0:	4020a5c0 	call	4020a5c <filt>
		//Filtering x-axis values
		filt(filterData.ybuffer, data.acc_y_read, &filterData.yfiltered, 24);
 4021ff4:	00800034 	movhi	r2,0
 4021ff8:	10896a17 	ldw	r2,9640(r2)
 4021ffc:	01c00604 	movi	r7,24
 4022000:	01800034 	movhi	r6,0
 4022004:	3189b204 	addi	r6,r6,9928
 4022008:	100b883a 	mov	r5,r2
 402200c:	01000034 	movhi	r4,0
 4022010:	21099a04 	addi	r4,r4,9832
 4022014:	4020a5c0 	call	4020a5c <filt>
		//Filtering x-axis values
		filt(filterData.zbuffer, data.acc_z_read, &filterData.zfiltered, 24);
 4022018:	00800034 	movhi	r2,0
 402201c:	10896b17 	ldw	r2,9644(r2)
 4022020:	01c00604 	movi	r7,24
 4022024:	01800034 	movhi	r6,0
 4022028:	3189cb04 	addi	r6,r6,10028
 402202c:	100b883a 	mov	r5,r2
 4022030:	01000034 	movhi	r4,0
 4022034:	2109b304 	addi	r4,r4,9932
 4022038:	4020a5c0 	call	4020a5c <filt>
		// Takes yfiltered and relative card score  	  //
		// Returns 2 bits, 				  //
		// LSB is show cards me		          //
		// MSB is show cards all 			  //

		int peek = ALT_CI_TILT_0((((int)filterData.yfiltered)+30), inputData.relativeCardScore);
 402203c:	00800034 	movhi	r2,0
 4022040:	1089b217 	ldw	r2,9928(r2)
 4022044:	1009883a 	mov	r4,r2
 4022048:	40232780 	call	4023278 <__fixsfsi>
 402204c:	10800784 	addi	r2,r2,30
 4022050:	00c00034 	movhi	r3,0
 4022054:	18c97317 	ldw	r3,9676(r3)
 4022058:	10c5c032 	custom	0,r2,r2,r3
 402205c:	e0bffe15 	stw	r2,-8(fp)
		outputData.showCardsMe = (peek & 0b01);
 4022060:	e0bffe17 	ldw	r2,-8(fp)
 4022064:	10c0004c 	andi	r3,r2,1
 4022068:	00800034 	movhi	r2,0
 402206c:	10c97b15 	stw	r3,9708(r2)
		outputData.showCardsEveryone = (peek & 0b10);    // If peek attempt calculations going on in hardware, need extra input from server
 4022070:	e0bffe17 	ldw	r2,-8(fp)
 4022074:	10c0008c 	andi	r3,r2,2
 4022078:	00800034 	movhi	r2,0
 402207c:	10c97c15 	stw	r3,9712(r2)
		//-----------------------------------------------//
		//            Peek attempt function 		  //
		//-----------------------------------------------//
		// checks is turn and button val		  //

		if(inputData.isTurn == 0 && data.button_read == 2)
 4022080:	00800034 	movhi	r2,0
 4022084:	10896d17 	ldw	r2,9652(r2)
 4022088:	10000c1e 	bne	r2,zero,40220bc <sys_timer_isr+0x17c>
 402208c:	00800034 	movhi	r2,0
 4022090:	10896c83 	ldbu	r2,9650(r2)
 4022094:	10803fcc 	andi	r2,r2,255
 4022098:	10800098 	cmpnei	r2,r2,2
 402209c:	1000071e 	bne	r2,zero,40220bc <sys_timer_isr+0x17c>
		{
			outputData.newTryPeek = 1;
 40220a0:	00c00044 	movi	r3,1
 40220a4:	00800034 	movhi	r2,0
 40220a8:	10c97d15 	stw	r3,9716(r2)
			outputData.newTryPeekPlayerNumber = inputData.currentPlayerNumber;
 40220ac:	00800034 	movhi	r2,0
 40220b0:	10c96e17 	ldw	r3,9656(r2)
 40220b4:	00800034 	movhi	r2,0
 40220b8:	10c97e15 	stw	r3,9720(r2)
		//-----------------------------------------------//
		// checks not folding or all in then runs bet 	  //
		// returns integer value of bet amount           //
		// only occurs during go			  //

		if(inputData.isTurn == 1)
 40220bc:	00800034 	movhi	r2,0
 40220c0:	10896d17 	ldw	r2,9652(r2)
 40220c4:	10800058 	cmpnei	r2,r2,1
 40220c8:	1000c21e 	bne	r2,zero,40223d4 <sys_timer_isr+0x494>
		{
			if(inputData.allowFold && data.button_read == 2){
 40220cc:	00800034 	movhi	r2,0
 40220d0:	10897517 	ldw	r2,9684(r2)
 40220d4:	10000d26 	beq	r2,zero,402210c <sys_timer_isr+0x1cc>
 40220d8:	00800034 	movhi	r2,0
 40220dc:	10896c83 	ldbu	r2,9650(r2)
 40220e0:	10803fcc 	andi	r2,r2,255
 40220e4:	10800098 	cmpnei	r2,r2,2
 40220e8:	1000081e 	bne	r2,zero,402210c <sys_timer_isr+0x1cc>
				outputData.newMoveType = "fold";
 40220ec:	00800034 	movhi	r2,0
 40220f0:	1080a804 	addi	r2,r2,672
 40220f4:	00c00034 	movhi	r3,0
 40220f8:	18897f15 	stw	r2,9724(r3)
				outputData.isActiveData = 1;
 40220fc:	00c00044 	movi	r3,1
 4022100:	00800034 	movhi	r2,0
 4022104:	10c97a15 	stw	r3,9704(r2)
 4022108:	0000b206 	br	40223d4 <sys_timer_isr+0x494>
			}
			else if((inputData.allowCheck|inputData.allowCall) & ((data.switch_read & 0b0010000000) == 0b0010000000) & data.button_read == 1){
 402210c:	00800034 	movhi	r2,0
 4022110:	10c97617 	ldw	r3,9688(r2)
 4022114:	00800034 	movhi	r2,0
 4022118:	10897817 	ldw	r2,9696(r2)
 402211c:	1886b03a 	or	r3,r3,r2
 4022120:	00800034 	movhi	r2,0
 4022124:	10896c0b 	ldhu	r2,9648(r2)
 4022128:	10bfffcc 	andi	r2,r2,65535
 402212c:	1080200c 	andi	r2,r2,128
 4022130:	1004c03a 	cmpne	r2,r2,zero
 4022134:	10803fcc 	andi	r2,r2,255
 4022138:	1886703a 	and	r3,r3,r2
 402213c:	00800034 	movhi	r2,0
 4022140:	10896c83 	ldbu	r2,9650(r2)
 4022144:	10803fcc 	andi	r2,r2,255
 4022148:	10800060 	cmpeqi	r2,r2,1
 402214c:	10803fcc 	andi	r2,r2,255
 4022150:	1884703a 	and	r2,r3,r2
 4022154:	10000e26 	beq	r2,zero,4022190 <sys_timer_isr+0x250>
				outputData.newMoveType = inputData.allowCheck?"check":"call";
 4022158:	00800034 	movhi	r2,0
 402215c:	10897617 	ldw	r2,9688(r2)
 4022160:	10000326 	beq	r2,zero,4022170 <sys_timer_isr+0x230>
 4022164:	00800034 	movhi	r2,0
 4022168:	1080aa04 	addi	r2,r2,680
 402216c:	00000206 	br	4022178 <sys_timer_isr+0x238>
 4022170:	00800034 	movhi	r2,0
 4022174:	1080ac04 	addi	r2,r2,688
 4022178:	00c00034 	movhi	r3,0
 402217c:	18897f15 	stw	r2,9724(r3)
				outputData.isActiveData = 1;
 4022180:	00c00044 	movi	r3,1
 4022184:	00800034 	movhi	r2,0
 4022188:	10c97a15 	stw	r3,9704(r2)
 402218c:	00009106 	br	40223d4 <sys_timer_isr+0x494>
			}
			else if(inputData.allowBet | inputData.allowRaise){
 4022190:	00800034 	movhi	r2,0
 4022194:	10c97717 	ldw	r3,9692(r2)
 4022198:	00800034 	movhi	r2,0
 402219c:	10897917 	ldw	r2,9700(r2)
 40221a0:	1884b03a 	or	r2,r3,r2
 40221a4:	10008b26 	beq	r2,zero,40223d4 <sys_timer_isr+0x494>
				if((data.switch_read & 0b0100000000) == 0b0100000000){
 40221a8:	00800034 	movhi	r2,0
 40221ac:	10896c0b 	ldhu	r2,9648(r2)
 40221b0:	10bfffcc 	andi	r2,r2,65535
 40221b4:	1080400c 	andi	r2,r2,256
 40221b8:	10001f26 	beq	r2,zero,4022238 <sys_timer_isr+0x2f8>
					betData.bet_total = Bet(&betData.bcount, &betData.segvalue, &betData.maxQ, filterData.xfiltered, data.switch_read, data.button_read, betData.m_digits, betData.bet_value);
 40221bc:	00800034 	movhi	r2,0
 40221c0:	10899917 	ldw	r2,9828(r2)
 40221c4:	1009883a 	mov	r4,r2
 40221c8:	40232780 	call	4023278 <__fixsfsi>
 40221cc:	100b883a 	mov	r5,r2
 40221d0:	00800034 	movhi	r2,0
 40221d4:	10896c0b 	ldhu	r2,9648(r2)
 40221d8:	10ffffcc 	andi	r3,r2,65535
 40221dc:	00800034 	movhi	r2,0
 40221e0:	10896c83 	ldbu	r2,9650(r2)
 40221e4:	11003fcc 	andi	r4,r2,255
 40221e8:	00800034 	movhi	r2,0
 40221ec:	10825204 	addi	r2,r2,2376
 40221f0:	d8800315 	stw	r2,12(sp)
 40221f4:	00800034 	movhi	r2,0
 40221f8:	10824c04 	addi	r2,r2,2352
 40221fc:	d8800215 	stw	r2,8(sp)
 4022200:	d9000115 	stw	r4,4(sp)
 4022204:	d8c00015 	stw	r3,0(sp)
 4022208:	280f883a 	mov	r7,r5
 402220c:	01800034 	movhi	r6,0
 4022210:	31824b04 	addi	r6,r6,2348
 4022214:	01400034 	movhi	r5,0
 4022218:	29424904 	addi	r5,r5,2340
 402221c:	01000034 	movhi	r4,0
 4022220:	21024a04 	addi	r4,r4,2344
 4022224:	402031c0 	call	402031c <Bet>
 4022228:	1007883a 	mov	r3,r2
 402222c:	00800034 	movhi	r2,0
 4022230:	10c25815 	stw	r3,2400(r2)
 4022234:	00004406 	br	4022348 <sys_timer_isr+0x408>
				}
				else{
					betData.segvalue = 5;
 4022238:	00c00144 	movi	r3,5
 402223c:	00800034 	movhi	r2,0
 4022240:	10c24915 	stw	r3,2340(r2)
					betData.bcount = 0;
 4022244:	00800034 	movhi	r2,0
 4022248:	10024a15 	stw	zero,2344(r2)
					betData.maxQ = 0;
 402224c:	00800034 	movhi	r2,0
 4022250:	10024b15 	stw	zero,2348(r2)
					betData.bet_total = 0;
 4022254:	00800034 	movhi	r2,0
 4022258:	10025815 	stw	zero,2400(r2)
					for(int i = 0; i < 6; i++){
 402225c:	e03fff15 	stw	zero,-4(fp)
 4022260:	00001206 	br	40222ac <sys_timer_isr+0x36c>
						betData.bet_value[i] = 0;
 4022264:	e0bfff17 	ldw	r2,-4(fp)
 4022268:	10800244 	addi	r2,r2,9
 402226c:	100690ba 	slli	r3,r2,2
 4022270:	00800034 	movhi	r2,0
 4022274:	1885883a 	add	r2,r3,r2
 4022278:	10024915 	stw	zero,2340(r2)
						betData.m_digits[i] = 0;
 402227c:	e0bfff17 	ldw	r2,-4(fp)
 4022280:	108000c4 	addi	r2,r2,3
 4022284:	100690ba 	slli	r3,r2,2
 4022288:	00800034 	movhi	r2,0
 402228c:	1885883a 	add	r2,r3,r2
 4022290:	10024915 	stw	zero,2340(r2)
						print_dec(10, i);
 4022294:	e17fff17 	ldw	r5,-4(fp)
 4022298:	01000284 	movi	r4,10
 402229c:	402197c0 	call	402197c <print_dec>
					for(int i = 0; i < 6; i++){
 40222a0:	e0bfff17 	ldw	r2,-4(fp)
 40222a4:	10800044 	addi	r2,r2,1
 40222a8:	e0bfff15 	stw	r2,-4(fp)
 40222ac:	e0bfff17 	ldw	r2,-4(fp)
 40222b0:	10800190 	cmplti	r2,r2,6
 40222b4:	103feb1e 	bne	r2,zero,4022264 <sys_timer_isr+0x324>
					}
					digify(betData.m_digits, inputData.moneyAvailableAmount);
 40222b8:	00800034 	movhi	r2,0
 40222bc:	10897117 	ldw	r2,9668(r2)
 40222c0:	100b883a 	mov	r5,r2
 40222c4:	01000034 	movhi	r4,0
 40222c8:	21024c04 	addi	r4,r4,2352
 40222cc:	40206f00 	call	40206f0 <digify>
					betData.bet_total = Bet(&betData.bcount, &betData.segvalue, &betData.maxQ, filterData.xfiltered, data.switch_read, data.button_read, betData.m_digits, betData.bet_value);
 40222d0:	00800034 	movhi	r2,0
 40222d4:	10899917 	ldw	r2,9828(r2)
 40222d8:	1009883a 	mov	r4,r2
 40222dc:	40232780 	call	4023278 <__fixsfsi>
 40222e0:	100b883a 	mov	r5,r2
 40222e4:	00800034 	movhi	r2,0
 40222e8:	10896c0b 	ldhu	r2,9648(r2)
 40222ec:	10ffffcc 	andi	r3,r2,65535
 40222f0:	00800034 	movhi	r2,0
 40222f4:	10896c83 	ldbu	r2,9650(r2)
 40222f8:	11003fcc 	andi	r4,r2,255
 40222fc:	00800034 	movhi	r2,0
 4022300:	10825204 	addi	r2,r2,2376
 4022304:	d8800315 	stw	r2,12(sp)
 4022308:	00800034 	movhi	r2,0
 402230c:	10824c04 	addi	r2,r2,2352
 4022310:	d8800215 	stw	r2,8(sp)
 4022314:	d9000115 	stw	r4,4(sp)
 4022318:	d8c00015 	stw	r3,0(sp)
 402231c:	280f883a 	mov	r7,r5
 4022320:	01800034 	movhi	r6,0
 4022324:	31824b04 	addi	r6,r6,2348
 4022328:	01400034 	movhi	r5,0
 402232c:	29424904 	addi	r5,r5,2340
 4022330:	01000034 	movhi	r4,0
 4022334:	21024a04 	addi	r4,r4,2344
 4022338:	402031c0 	call	402031c <Bet>
 402233c:	1007883a 	mov	r3,r2
 4022340:	00800034 	movhi	r2,0
 4022344:	10c25815 	stw	r3,2400(r2)
				}
				if(data.button_read == 1){
 4022348:	00800034 	movhi	r2,0
 402234c:	10896c83 	ldbu	r2,9650(r2)
 4022350:	10803fcc 	andi	r2,r2,255
 4022354:	10800058 	cmpnei	r2,r2,1
 4022358:	10001e1e 	bne	r2,zero,40223d4 <sys_timer_isr+0x494>
					outputData.newMoveType = inputData.allowBet?"bet":"raise";
 402235c:	00800034 	movhi	r2,0
 4022360:	10897717 	ldw	r2,9692(r2)
 4022364:	10000326 	beq	r2,zero,4022374 <sys_timer_isr+0x434>
 4022368:	00800034 	movhi	r2,0
 402236c:	1080ae04 	addi	r2,r2,696
 4022370:	00000206 	br	402237c <sys_timer_isr+0x43c>
 4022374:	00800034 	movhi	r2,0
 4022378:	1080af04 	addi	r2,r2,700
 402237c:	00c00034 	movhi	r3,0
 4022380:	18897f15 	stw	r2,9724(r3)
					int b = betData.bet_total;
 4022384:	00800034 	movhi	r2,0
 4022388:	10825817 	ldw	r2,2400(r2)
 402238c:	e0bffd15 	stw	r2,-12(fp)
					if(b < inputData.moneyAvailableAmount && b >= inputData.minimumNextBetAmount)	// Fixing edge case
 4022390:	00800034 	movhi	r2,0
 4022394:	10897117 	ldw	r2,9668(r2)
 4022398:	e0fffd17 	ldw	r3,-12(fp)
 402239c:	18800b0e 	bge	r3,r2,40223cc <sys_timer_isr+0x48c>
 40223a0:	00800034 	movhi	r2,0
 40223a4:	10897217 	ldw	r2,9672(r2)
 40223a8:	e0fffd17 	ldw	r3,-12(fp)
 40223ac:	18800716 	blt	r3,r2,40223cc <sys_timer_isr+0x48c>
					{
						outputData.newBetAmount = b;
 40223b0:	e0fffd17 	ldw	r3,-12(fp)
 40223b4:	00800034 	movhi	r2,0
 40223b8:	10c98015 	stw	r3,9728(r2)
						outputData.isActiveData = 1;
 40223bc:	00c00044 	movi	r3,1
 40223c0:	00800034 	movhi	r2,0
 40223c4:	10c97a15 	stw	r3,9704(r2)
 40223c8:	00000206 	br	40223d4 <sys_timer_isr+0x494>
					}
					else
					{
						outputData.newBetAmount = 0;
 40223cc:	00800034 	movhi	r2,0
 40223d0:	10098015 	stw	zero,9728(r2)
					}
				}
			}
		}
		pwm = 0;
 40223d4:	d0200005 	stb	zero,-32768(gp)
    }
    else{
    	pwm++;
    }
}
 40223d8:	00000306 	br	40223e8 <sys_timer_isr+0x4a8>
    	pwm++;
 40223dc:	d0a00003 	ldbu	r2,-32768(gp)
 40223e0:	10800044 	addi	r2,r2,1
 40223e4:	d0a00005 	stb	r2,-32768(gp)
}
 40223e8:	0001883a 	nop
 40223ec:	e037883a 	mov	sp,fp
 40223f0:	dfc00117 	ldw	ra,4(sp)
 40223f4:	df000017 	ldw	fp,0(sp)
 40223f8:	dec00204 	addi	sp,sp,8
 40223fc:	f800283a 	ret

04022400 <timer_init>:

void timer_init(void * isr) {
 4022400:	defffd04 	addi	sp,sp,-12
 4022404:	dfc00215 	stw	ra,8(sp)
 4022408:	df000115 	stw	fp,4(sp)
 402240c:	df000104 	addi	fp,sp,4
 4022410:	e13fff15 	stw	r4,-4(fp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
 4022414:	00c000c4 	movi	r3,3
 4022418:	00810134 	movhi	r2,1028
 402241c:	10c40135 	stwio	r3,4100(r2)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
 4022420:	0007883a 	mov	r3,zero
 4022424:	00810134 	movhi	r2,1028
 4022428:	10c40035 	stwio	r3,4096(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0900);
 402242c:	00c24004 	movi	r3,2304
 4022430:	00810134 	movhi	r2,1028
 4022434:	10c40235 	stwio	r3,4104(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
 4022438:	0007883a 	mov	r3,zero
 402243c:	00810134 	movhi	r2,1028
 4022440:	10c40335 	stwio	r3,4108(r2)
    alt_irq_register(TIMER_IRQ, 0, isr);
 4022444:	e0bfff17 	ldw	r2,-4(fp)
 4022448:	100d883a 	mov	r6,r2
 402244c:	000b883a 	mov	r5,zero
 4022450:	01000084 	movi	r4,2
 4022454:	40311d00 	call	40311d0 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
 4022458:	00c001c4 	movi	r3,7
 402245c:	00810134 	movhi	r2,1028
 4022460:	10c40135 	stwio	r3,4100(r2)
}
 4022464:	0001883a 	nop
 4022468:	e037883a 	mov	sp,fp
 402246c:	dfc00117 	ldw	ra,4(sp)
 4022470:	df000017 	ldw	fp,0(sp)
 4022474:	dec00204 	addi	sp,sp,8
 4022478:	f800283a 	ret

0402247c <setupTimerLoop>:

void setupTimerLoop(){
 402247c:	defffe04 	addi	sp,sp,-8
 4022480:	dfc00115 	stw	ra,4(sp)
 4022484:	df000015 	stw	fp,0(sp)
 4022488:	d839883a 	mov	fp,sp
	timer_init(sys_timer_isr);
 402248c:	010100b4 	movhi	r4,1026
 4022490:	2107d004 	addi	r4,r4,8000
 4022494:	40224000 	call	4022400 <timer_init>
}
 4022498:	0001883a 	nop
 402249c:	e037883a 	mov	sp,fp
 40224a0:	dfc00117 	ldw	ra,4(sp)
 40224a4:	df000017 	ldw	fp,0(sp)
 40224a8:	dec00204 	addi	sp,sp,8
 40224ac:	f800283a 	ret

040224b0 <__divsi3>:
 40224b0:	20001a16 	blt	r4,zero,402251c <__divsi3+0x6c>
 40224b4:	000f883a 	mov	r7,zero
 40224b8:	2800020e 	bge	r5,zero,40224c4 <__divsi3+0x14>
 40224bc:	014bc83a 	sub	r5,zero,r5
 40224c0:	39c0005c 	xori	r7,r7,1
 40224c4:	200d883a 	mov	r6,r4
 40224c8:	00c00044 	movi	r3,1
 40224cc:	2900092e 	bgeu	r5,r4,40224f4 <__divsi3+0x44>
 40224d0:	00800804 	movi	r2,32
 40224d4:	00c00044 	movi	r3,1
 40224d8:	00000106 	br	40224e0 <__divsi3+0x30>
 40224dc:	10001226 	beq	r2,zero,4022528 <__divsi3+0x78>
 40224e0:	294b883a 	add	r5,r5,r5
 40224e4:	10bfffc4 	addi	r2,r2,-1
 40224e8:	18c7883a 	add	r3,r3,r3
 40224ec:	293ffb36 	bltu	r5,r4,40224dc <__divsi3+0x2c>
 40224f0:	18000d26 	beq	r3,zero,4022528 <__divsi3+0x78>
 40224f4:	0005883a 	mov	r2,zero
 40224f8:	31400236 	bltu	r6,r5,4022504 <__divsi3+0x54>
 40224fc:	314dc83a 	sub	r6,r6,r5
 4022500:	10c4b03a 	or	r2,r2,r3
 4022504:	1806d07a 	srli	r3,r3,1
 4022508:	280ad07a 	srli	r5,r5,1
 402250c:	183ffa1e 	bne	r3,zero,40224f8 <__divsi3+0x48>
 4022510:	38000126 	beq	r7,zero,4022518 <__divsi3+0x68>
 4022514:	0085c83a 	sub	r2,zero,r2
 4022518:	f800283a 	ret
 402251c:	0109c83a 	sub	r4,zero,r4
 4022520:	01c00044 	movi	r7,1
 4022524:	003fe406 	br	40224b8 <__divsi3+0x8>
 4022528:	0005883a 	mov	r2,zero
 402252c:	003ff806 	br	4022510 <__divsi3+0x60>

04022530 <__modsi3>:
 4022530:	20001916 	blt	r4,zero,4022598 <__modsi3+0x68>
 4022534:	000f883a 	mov	r7,zero
 4022538:	2005883a 	mov	r2,r4
 402253c:	2800010e 	bge	r5,zero,4022544 <__modsi3+0x14>
 4022540:	014bc83a 	sub	r5,zero,r5
 4022544:	00c00044 	movi	r3,1
 4022548:	2900092e 	bgeu	r5,r4,4022570 <__modsi3+0x40>
 402254c:	01800804 	movi	r6,32
 4022550:	00c00044 	movi	r3,1
 4022554:	00000106 	br	402255c <__modsi3+0x2c>
 4022558:	30000d26 	beq	r6,zero,4022590 <__modsi3+0x60>
 402255c:	294b883a 	add	r5,r5,r5
 4022560:	31bfffc4 	addi	r6,r6,-1
 4022564:	18c7883a 	add	r3,r3,r3
 4022568:	293ffb36 	bltu	r5,r4,4022558 <__modsi3+0x28>
 402256c:	18000826 	beq	r3,zero,4022590 <__modsi3+0x60>
 4022570:	1806d07a 	srli	r3,r3,1
 4022574:	11400136 	bltu	r2,r5,402257c <__modsi3+0x4c>
 4022578:	1145c83a 	sub	r2,r2,r5
 402257c:	280ad07a 	srli	r5,r5,1
 4022580:	183ffb1e 	bne	r3,zero,4022570 <__modsi3+0x40>
 4022584:	38000126 	beq	r7,zero,402258c <__modsi3+0x5c>
 4022588:	0085c83a 	sub	r2,zero,r2
 402258c:	f800283a 	ret
 4022590:	2005883a 	mov	r2,r4
 4022594:	003ffb06 	br	4022584 <__modsi3+0x54>
 4022598:	0109c83a 	sub	r4,zero,r4
 402259c:	01c00044 	movi	r7,1
 40225a0:	003fe506 	br	4022538 <__modsi3+0x8>

040225a4 <__udivsi3>:
 40225a4:	200d883a 	mov	r6,r4
 40225a8:	2900152e 	bgeu	r5,r4,4022600 <__udivsi3+0x5c>
 40225ac:	28001416 	blt	r5,zero,4022600 <__udivsi3+0x5c>
 40225b0:	00800804 	movi	r2,32
 40225b4:	00c00044 	movi	r3,1
 40225b8:	00000206 	br	40225c4 <__udivsi3+0x20>
 40225bc:	10000e26 	beq	r2,zero,40225f8 <__udivsi3+0x54>
 40225c0:	28000516 	blt	r5,zero,40225d8 <__udivsi3+0x34>
 40225c4:	294b883a 	add	r5,r5,r5
 40225c8:	10bfffc4 	addi	r2,r2,-1
 40225cc:	18c7883a 	add	r3,r3,r3
 40225d0:	293ffa36 	bltu	r5,r4,40225bc <__udivsi3+0x18>
 40225d4:	18000826 	beq	r3,zero,40225f8 <__udivsi3+0x54>
 40225d8:	0005883a 	mov	r2,zero
 40225dc:	31400236 	bltu	r6,r5,40225e8 <__udivsi3+0x44>
 40225e0:	314dc83a 	sub	r6,r6,r5
 40225e4:	10c4b03a 	or	r2,r2,r3
 40225e8:	1806d07a 	srli	r3,r3,1
 40225ec:	280ad07a 	srli	r5,r5,1
 40225f0:	183ffa1e 	bne	r3,zero,40225dc <__udivsi3+0x38>
 40225f4:	f800283a 	ret
 40225f8:	0005883a 	mov	r2,zero
 40225fc:	f800283a 	ret
 4022600:	00c00044 	movi	r3,1
 4022604:	003ff406 	br	40225d8 <__udivsi3+0x34>

04022608 <__umodsi3>:
 4022608:	2005883a 	mov	r2,r4
 402260c:	2900132e 	bgeu	r5,r4,402265c <__umodsi3+0x54>
 4022610:	28001216 	blt	r5,zero,402265c <__umodsi3+0x54>
 4022614:	01800804 	movi	r6,32
 4022618:	00c00044 	movi	r3,1
 402261c:	00000206 	br	4022628 <__umodsi3+0x20>
 4022620:	30000c26 	beq	r6,zero,4022654 <__umodsi3+0x4c>
 4022624:	28000516 	blt	r5,zero,402263c <__umodsi3+0x34>
 4022628:	294b883a 	add	r5,r5,r5
 402262c:	31bfffc4 	addi	r6,r6,-1
 4022630:	18c7883a 	add	r3,r3,r3
 4022634:	293ffa36 	bltu	r5,r4,4022620 <__umodsi3+0x18>
 4022638:	18000626 	beq	r3,zero,4022654 <__umodsi3+0x4c>
 402263c:	1806d07a 	srli	r3,r3,1
 4022640:	11400136 	bltu	r2,r5,4022648 <__umodsi3+0x40>
 4022644:	1145c83a 	sub	r2,r2,r5
 4022648:	280ad07a 	srli	r5,r5,1
 402264c:	183ffb1e 	bne	r3,zero,402263c <__umodsi3+0x34>
 4022650:	f800283a 	ret
 4022654:	2005883a 	mov	r2,r4
 4022658:	f800283a 	ret
 402265c:	00c00044 	movi	r3,1
 4022660:	003ff606 	br	402263c <__umodsi3+0x34>

04022664 <__addsf3>:
 4022664:	defffc04 	addi	sp,sp,-16
 4022668:	2806d5fa 	srli	r3,r5,23
 402266c:	dc000015 	stw	r16,0(sp)
 4022670:	2020d5fa 	srli	r16,r4,23
 4022674:	200cd7fa 	srli	r6,r4,31
 4022678:	00802034 	movhi	r2,128
 402267c:	2812d7fa 	srli	r9,r5,31
 4022680:	10bfffc4 	addi	r2,r2,-1
 4022684:	1114703a 	and	r10,r2,r4
 4022688:	1b003fcc 	andi	r12,r3,255
 402268c:	dc400115 	stw	r17,4(sp)
 4022690:	84003fcc 	andi	r16,r16,255
 4022694:	115a703a 	and	r13,r2,r5
 4022698:	dfc00315 	stw	ra,12(sp)
 402269c:	dc800215 	stw	r18,8(sp)
 40226a0:	500e90fa 	slli	r7,r10,3
 40226a4:	681090fa 	slli	r8,r13,3
 40226a8:	5007883a 	mov	r3,r10
 40226ac:	3023883a 	mov	r17,r6
 40226b0:	8317c83a 	sub	r11,r16,r12
 40226b4:	32403926 	beq	r6,r9,402279c <__addsf3+0x138>
 40226b8:	02c02e0e 	bge	zero,r11,4022774 <__addsf3+0x110>
 40226bc:	60004c26 	beq	r12,zero,40227f0 <__addsf3+0x18c>
 40226c0:	80803fe0 	cmpeqi	r2,r16,255
 40226c4:	1000801e 	bne	r2,zero,40228c8 <__addsf3+0x264>
 40226c8:	42010034 	orhi	r8,r8,1024
 40226cc:	58800710 	cmplti	r2,r11,28
 40226d0:	10009e1e 	bne	r2,zero,402294c <__addsf3+0x2e8>
 40226d4:	01000044 	movi	r4,1
 40226d8:	3909c83a 	sub	r4,r7,r4
 40226dc:	2081002c 	andhi	r2,r4,1024
 40226e0:	10006826 	beq	r2,zero,4022884 <__addsf3+0x220>
 40226e4:	04810034 	movhi	r18,1024
 40226e8:	94bfffc4 	addi	r18,r18,-1
 40226ec:	24a4703a 	and	r18,r4,r18
 40226f0:	9009883a 	mov	r4,r18
 40226f4:	402340c0 	call	402340c <__clzsi2>
 40226f8:	10bffec4 	addi	r2,r2,-5
 40226fc:	9088983a 	sll	r4,r18,r2
 4022700:	1400880e 	bge	r2,r16,4022924 <__addsf3+0x2c0>
 4022704:	00ff0034 	movhi	r3,64512
 4022708:	18ffffc4 	addi	r3,r3,-1
 402270c:	80a1c83a 	sub	r16,r16,r2
 4022710:	20c8703a 	and	r4,r4,r3
 4022714:	208001cc 	andi	r2,r4,7
 4022718:	10000426 	beq	r2,zero,402272c <__addsf3+0xc8>
 402271c:	208003cc 	andi	r2,r4,15
 4022720:	10800120 	cmpeqi	r2,r2,4
 4022724:	1000011e 	bne	r2,zero,402272c <__addsf3+0xc8>
 4022728:	21000104 	addi	r4,r4,4
 402272c:	2081002c 	andhi	r2,r4,1024
 4022730:	10005626 	beq	r2,zero,402288c <__addsf3+0x228>
 4022734:	84000044 	addi	r16,r16,1
 4022738:	80803fe0 	cmpeqi	r2,r16,255
 402273c:	1000461e 	bne	r2,zero,4022858 <__addsf3+0x1f4>
 4022740:	200491ba 	slli	r2,r4,6
 4022744:	1006d27a 	srli	r3,r2,9
 4022748:	84003fcc 	andi	r16,r16,255
 402274c:	800495fa 	slli	r2,r16,23
 4022750:	882297fa 	slli	r17,r17,31
 4022754:	10c4b03a 	or	r2,r2,r3
 4022758:	1444b03a 	or	r2,r2,r17
 402275c:	dfc00317 	ldw	ra,12(sp)
 4022760:	dc800217 	ldw	r18,8(sp)
 4022764:	dc400117 	ldw	r17,4(sp)
 4022768:	dc000017 	ldw	r16,0(sp)
 402276c:	dec00404 	addi	sp,sp,16
 4022770:	f800283a 	ret
 4022774:	58002526 	beq	r11,zero,402280c <__addsf3+0x1a8>
 4022778:	6417c83a 	sub	r11,r12,r16
 402277c:	8000821e 	bne	r16,zero,4022988 <__addsf3+0x324>
 4022780:	38006426 	beq	r7,zero,4022914 <__addsf3+0x2b0>
 4022784:	58bfffc4 	addi	r2,r11,-1
 4022788:	1000c226 	beq	r2,zero,4022a94 <__addsf3+0x430>
 402278c:	5ac03fe0 	cmpeqi	r11,r11,255
 4022790:	58004b1e 	bne	r11,zero,40228c0 <__addsf3+0x25c>
 4022794:	1017883a 	mov	r11,r2
 4022798:	00007e06 	br	4022994 <__addsf3+0x330>
 402279c:	02c0510e 	bge	zero,r11,40228e4 <__addsf3+0x280>
 40227a0:	60002626 	beq	r12,zero,402283c <__addsf3+0x1d8>
 40227a4:	80803fe0 	cmpeqi	r2,r16,255
 40227a8:	1000471e 	bne	r2,zero,40228c8 <__addsf3+0x264>
 40227ac:	42010034 	orhi	r8,r8,1024
 40227b0:	58800710 	cmplti	r2,r11,28
 40227b4:	10007e1e 	bne	r2,zero,40229b0 <__addsf3+0x34c>
 40227b8:	01000044 	movi	r4,1
 40227bc:	21c9883a 	add	r4,r4,r7
 40227c0:	2081002c 	andhi	r2,r4,1024
 40227c4:	10002f26 	beq	r2,zero,4022884 <__addsf3+0x220>
 40227c8:	84000044 	addi	r16,r16,1
 40227cc:	80803fe0 	cmpeqi	r2,r16,255
 40227d0:	1000211e 	bne	r2,zero,4022858 <__addsf3+0x1f4>
 40227d4:	2004d07a 	srli	r2,r4,1
 40227d8:	00df8034 	movhi	r3,32256
 40227dc:	18ffffc4 	addi	r3,r3,-1
 40227e0:	2100004c 	andi	r4,r4,1
 40227e4:	10c4703a 	and	r2,r2,r3
 40227e8:	1108b03a 	or	r4,r2,r4
 40227ec:	003fc906 	br	4022714 <__addsf3+0xb0>
 40227f0:	40004a26 	beq	r8,zero,402291c <__addsf3+0x2b8>
 40227f4:	58bfffc4 	addi	r2,r11,-1
 40227f8:	10009326 	beq	r2,zero,4022a48 <__addsf3+0x3e4>
 40227fc:	59003fe0 	cmpeqi	r4,r11,255
 4022800:	2000311e 	bne	r4,zero,40228c8 <__addsf3+0x264>
 4022804:	1017883a 	mov	r11,r2
 4022808:	003fb006 	br	40226cc <__addsf3+0x68>
 402280c:	81800044 	addi	r6,r16,1
 4022810:	31803f8c 	andi	r6,r6,254
 4022814:	3000541e 	bne	r6,zero,4022968 <__addsf3+0x304>
 4022818:	80007e1e 	bne	r16,zero,4022a14 <__addsf3+0x3b0>
 402281c:	3800a326 	beq	r7,zero,4022aac <__addsf3+0x448>
 4022820:	40009326 	beq	r8,zero,4022a70 <__addsf3+0x40c>
 4022824:	3a09c83a 	sub	r4,r7,r8
 4022828:	2081002c 	andhi	r2,r4,1024
 402282c:	1000a626 	beq	r2,zero,4022ac8 <__addsf3+0x464>
 4022830:	41c9c83a 	sub	r4,r8,r7
 4022834:	4823883a 	mov	r17,r9
 4022838:	003fb606 	br	4022714 <__addsf3+0xb0>
 402283c:	40003726 	beq	r8,zero,402291c <__addsf3+0x2b8>
 4022840:	58bfffc4 	addi	r2,r11,-1
 4022844:	10007b26 	beq	r2,zero,4022a34 <__addsf3+0x3d0>
 4022848:	5ac03fe0 	cmpeqi	r11,r11,255
 402284c:	58001e1e 	bne	r11,zero,40228c8 <__addsf3+0x264>
 4022850:	1017883a 	mov	r11,r2
 4022854:	003fd606 	br	40227b0 <__addsf3+0x14c>
 4022858:	043fffc4 	movi	r16,-1
 402285c:	0007883a 	mov	r3,zero
 4022860:	003fb906 	br	4022748 <__addsf3+0xe4>
 4022864:	80800044 	addi	r2,r16,1
 4022868:	11803f8c 	andi	r6,r2,254
 402286c:	30005726 	beq	r6,zero,40229cc <__addsf3+0x368>
 4022870:	10c03fe0 	cmpeqi	r3,r2,255
 4022874:	183ff81e 	bne	r3,zero,4022858 <__addsf3+0x1f4>
 4022878:	3a09883a 	add	r4,r7,r8
 402287c:	2008d07a 	srli	r4,r4,1
 4022880:	1021883a 	mov	r16,r2
 4022884:	208001cc 	andi	r2,r4,7
 4022888:	103fa41e 	bne	r2,zero,402271c <__addsf3+0xb8>
 402288c:	2014d0fa 	srli	r10,r4,3
 4022890:	80803fe0 	cmpeqi	r2,r16,255
 4022894:	10000c1e 	bne	r2,zero,40228c8 <__addsf3+0x264>
 4022898:	00802034 	movhi	r2,128
 402289c:	10bfffc4 	addi	r2,r2,-1
 40228a0:	5086703a 	and	r3,r10,r2
 40228a4:	003fa806 	br	4022748 <__addsf3+0xe4>
 40228a8:	38000626 	beq	r7,zero,40228c4 <__addsf3+0x260>
 40228ac:	40000626 	beq	r8,zero,40228c8 <__addsf3+0x264>
 40228b0:	2080102c 	andhi	r2,r4,64
 40228b4:	10000426 	beq	r2,zero,40228c8 <__addsf3+0x264>
 40228b8:	2940102c 	andhi	r5,r5,64
 40228bc:	2800021e 	bne	r5,zero,40228c8 <__addsf3+0x264>
 40228c0:	4823883a 	mov	r17,r9
 40228c4:	6815883a 	mov	r10,r13
 40228c8:	503fe326 	beq	r10,zero,4022858 <__addsf3+0x1f4>
 40228cc:	00802034 	movhi	r2,128
 40228d0:	50c01034 	orhi	r3,r10,64
 40228d4:	10bfffc4 	addi	r2,r2,-1
 40228d8:	1886703a 	and	r3,r3,r2
 40228dc:	043fffc4 	movi	r16,-1
 40228e0:	003f9906 	br	4022748 <__addsf3+0xe4>
 40228e4:	583fdf26 	beq	r11,zero,4022864 <__addsf3+0x200>
 40228e8:	6417c83a 	sub	r11,r12,r16
 40228ec:	80004226 	beq	r16,zero,40229f8 <__addsf3+0x394>
 40228f0:	60803fe0 	cmpeqi	r2,r12,255
 40228f4:	103ff31e 	bne	r2,zero,40228c4 <__addsf3+0x260>
 40228f8:	39c10034 	orhi	r7,r7,1024
 40228fc:	58800710 	cmplti	r2,r11,28
 4022900:	10005d1e 	bne	r2,zero,4022a78 <__addsf3+0x414>
 4022904:	01000044 	movi	r4,1
 4022908:	2209883a 	add	r4,r4,r8
 402290c:	6021883a 	mov	r16,r12
 4022910:	003fab06 	br	40227c0 <__addsf3+0x15c>
 4022914:	4823883a 	mov	r17,r9
 4022918:	6815883a 	mov	r10,r13
 402291c:	5821883a 	mov	r16,r11
 4022920:	003fdb06 	br	4022890 <__addsf3+0x22c>
 4022924:	1405c83a 	sub	r2,r2,r16
 4022928:	14800044 	addi	r18,r2,1
 402292c:	00800804 	movi	r2,32
 4022930:	1485c83a 	sub	r2,r2,r18
 4022934:	2084983a 	sll	r2,r4,r2
 4022938:	2488d83a 	srl	r4,r4,r18
 402293c:	0021883a 	mov	r16,zero
 4022940:	1004c03a 	cmpne	r2,r2,zero
 4022944:	1108b03a 	or	r4,r2,r4
 4022948:	003f7206 	br	4022714 <__addsf3+0xb0>
 402294c:	01000804 	movi	r4,32
 4022950:	22c9c83a 	sub	r4,r4,r11
 4022954:	4108983a 	sll	r4,r8,r4
 4022958:	42d0d83a 	srl	r8,r8,r11
 402295c:	2008c03a 	cmpne	r4,r4,zero
 4022960:	2208b03a 	or	r4,r4,r8
 4022964:	003f5c06 	br	40226d8 <__addsf3+0x74>
 4022968:	3a25c83a 	sub	r18,r7,r8
 402296c:	9081002c 	andhi	r2,r18,1024
 4022970:	10002d1e 	bne	r2,zero,4022a28 <__addsf3+0x3c4>
 4022974:	903f5e1e 	bne	r18,zero,40226f0 <__addsf3+0x8c>
 4022978:	0023883a 	mov	r17,zero
 402297c:	0021883a 	mov	r16,zero
 4022980:	0007883a 	mov	r3,zero
 4022984:	003f7006 	br	4022748 <__addsf3+0xe4>
 4022988:	60803fe0 	cmpeqi	r2,r12,255
 402298c:	103fcc1e 	bne	r2,zero,40228c0 <__addsf3+0x25c>
 4022990:	39c10034 	orhi	r7,r7,1024
 4022994:	58800710 	cmplti	r2,r11,28
 4022998:	10002e1e 	bne	r2,zero,4022a54 <__addsf3+0x3f0>
 402299c:	01000044 	movi	r4,1
 40229a0:	4109c83a 	sub	r4,r8,r4
 40229a4:	4823883a 	mov	r17,r9
 40229a8:	6021883a 	mov	r16,r12
 40229ac:	003f4b06 	br	40226dc <__addsf3+0x78>
 40229b0:	01000804 	movi	r4,32
 40229b4:	22c9c83a 	sub	r4,r4,r11
 40229b8:	4108983a 	sll	r4,r8,r4
 40229bc:	42d0d83a 	srl	r8,r8,r11
 40229c0:	2008c03a 	cmpne	r4,r4,zero
 40229c4:	2208b03a 	or	r4,r4,r8
 40229c8:	003f7c06 	br	40227bc <__addsf3+0x158>
 40229cc:	803fb61e 	bne	r16,zero,40228a8 <__addsf3+0x244>
 40229d0:	38003a26 	beq	r7,zero,4022abc <__addsf3+0x458>
 40229d4:	40002626 	beq	r8,zero,4022a70 <__addsf3+0x40c>
 40229d8:	3a09883a 	add	r4,r7,r8
 40229dc:	2081002c 	andhi	r2,r4,1024
 40229e0:	103fa826 	beq	r2,zero,4022884 <__addsf3+0x220>
 40229e4:	00bf0034 	movhi	r2,64512
 40229e8:	10bfffc4 	addi	r2,r2,-1
 40229ec:	2088703a 	and	r4,r4,r2
 40229f0:	04000044 	movi	r16,1
 40229f4:	003fa306 	br	4022884 <__addsf3+0x220>
 40229f8:	383fc726 	beq	r7,zero,4022918 <__addsf3+0x2b4>
 40229fc:	58bfffc4 	addi	r2,r11,-1
 4022a00:	10000c26 	beq	r2,zero,4022a34 <__addsf3+0x3d0>
 4022a04:	5ac03fe0 	cmpeqi	r11,r11,255
 4022a08:	583fae1e 	bne	r11,zero,40228c4 <__addsf3+0x260>
 4022a0c:	1017883a 	mov	r11,r2
 4022a10:	003fba06 	br	40228fc <__addsf3+0x298>
 4022a14:	383fa51e 	bne	r7,zero,40228ac <__addsf3+0x248>
 4022a18:	403fa91e 	bne	r8,zero,40228c0 <__addsf3+0x25c>
 4022a1c:	0023883a 	mov	r17,zero
 4022a20:	1007883a 	mov	r3,r2
 4022a24:	003fad06 	br	40228dc <__addsf3+0x278>
 4022a28:	41e5c83a 	sub	r18,r8,r7
 4022a2c:	4823883a 	mov	r17,r9
 4022a30:	003f2f06 	br	40226f0 <__addsf3+0x8c>
 4022a34:	3a09883a 	add	r4,r7,r8
 4022a38:	2081002c 	andhi	r2,r4,1024
 4022a3c:	10001926 	beq	r2,zero,4022aa4 <__addsf3+0x440>
 4022a40:	04000084 	movi	r16,2
 4022a44:	003f6306 	br	40227d4 <__addsf3+0x170>
 4022a48:	3a09c83a 	sub	r4,r7,r8
 4022a4c:	04000044 	movi	r16,1
 4022a50:	003f2206 	br	40226dc <__addsf3+0x78>
 4022a54:	00800804 	movi	r2,32
 4022a58:	12c5c83a 	sub	r2,r2,r11
 4022a5c:	3884983a 	sll	r2,r7,r2
 4022a60:	3aced83a 	srl	r7,r7,r11
 4022a64:	1008c03a 	cmpne	r4,r2,zero
 4022a68:	21c8b03a 	or	r4,r4,r7
 4022a6c:	003fcc06 	br	40229a0 <__addsf3+0x33c>
 4022a70:	0021883a 	mov	r16,zero
 4022a74:	003f3406 	br	4022748 <__addsf3+0xe4>
 4022a78:	01000804 	movi	r4,32
 4022a7c:	22c9c83a 	sub	r4,r4,r11
 4022a80:	3908983a 	sll	r4,r7,r4
 4022a84:	3aced83a 	srl	r7,r7,r11
 4022a88:	2008c03a 	cmpne	r4,r4,zero
 4022a8c:	21c8b03a 	or	r4,r4,r7
 4022a90:	003f9d06 	br	4022908 <__addsf3+0x2a4>
 4022a94:	41c9c83a 	sub	r4,r8,r7
 4022a98:	4823883a 	mov	r17,r9
 4022a9c:	04000044 	movi	r16,1
 4022aa0:	003f0e06 	br	40226dc <__addsf3+0x78>
 4022aa4:	04000044 	movi	r16,1
 4022aa8:	003f7606 	br	4022884 <__addsf3+0x220>
 4022aac:	403fb226 	beq	r8,zero,4022978 <__addsf3+0x314>
 4022ab0:	4823883a 	mov	r17,r9
 4022ab4:	6807883a 	mov	r3,r13
 4022ab8:	003f2306 	br	4022748 <__addsf3+0xe4>
 4022abc:	6807883a 	mov	r3,r13
 4022ac0:	0021883a 	mov	r16,zero
 4022ac4:	003f2006 	br	4022748 <__addsf3+0xe4>
 4022ac8:	203fab26 	beq	r4,zero,4022978 <__addsf3+0x314>
 4022acc:	003f6d06 	br	4022884 <__addsf3+0x220>

04022ad0 <__divsf3>:
 4022ad0:	defff604 	addi	sp,sp,-40
 4022ad4:	2006d5fa 	srli	r3,r4,23
 4022ad8:	dd400615 	stw	r21,24(sp)
 4022adc:	202ad7fa 	srli	r21,r4,31
 4022ae0:	00802034 	movhi	r2,128
 4022ae4:	dc800315 	stw	r18,12(sp)
 4022ae8:	dc000115 	stw	r16,4(sp)
 4022aec:	10bfffc4 	addi	r2,r2,-1
 4022af0:	dfc00915 	stw	ra,36(sp)
 4022af4:	ddc00815 	stw	r23,32(sp)
 4022af8:	dd800715 	stw	r22,28(sp)
 4022afc:	dd000515 	stw	r20,20(sp)
 4022b00:	dcc00415 	stw	r19,16(sp)
 4022b04:	dc400215 	stw	r17,8(sp)
 4022b08:	18c03fcc 	andi	r3,r3,255
 4022b0c:	1120703a 	and	r16,r2,r4
 4022b10:	a825883a 	mov	r18,r21
 4022b14:	18007b26 	beq	r3,zero,4022d04 <__divsf3+0x234>
 4022b18:	18803fe0 	cmpeqi	r2,r3,255
 4022b1c:	10007e1e 	bne	r2,zero,4022d18 <__divsf3+0x248>
 4022b20:	800490fa 	slli	r2,r16,3
 4022b24:	1d3fe044 	addi	r20,r3,-127
 4022b28:	0023883a 	mov	r17,zero
 4022b2c:	14010034 	orhi	r16,r2,1024
 4022b30:	002d883a 	mov	r22,zero
 4022b34:	2806d5fa 	srli	r3,r5,23
 4022b38:	01002034 	movhi	r4,128
 4022b3c:	213fffc4 	addi	r4,r4,-1
 4022b40:	18c03fcc 	andi	r3,r3,255
 4022b44:	282ed7fa 	srli	r23,r5,31
 4022b48:	2166703a 	and	r19,r4,r5
 4022b4c:	18005326 	beq	r3,zero,4022c9c <__divsf3+0x1cc>
 4022b50:	18803fe0 	cmpeqi	r2,r3,255
 4022b54:	10004d1e 	bne	r2,zero,4022c8c <__divsf3+0x1bc>
 4022b58:	980a90fa 	slli	r5,r19,3
 4022b5c:	18ffe044 	addi	r3,r3,-127
 4022b60:	a0e9c83a 	sub	r20,r20,r3
 4022b64:	2cc10034 	orhi	r19,r5,1024
 4022b68:	0007883a 	mov	r3,zero
 4022b6c:	1c62b03a 	or	r17,r3,r17
 4022b70:	882290ba 	slli	r17,r17,2
 4022b74:	008100b4 	movhi	r2,1026
 4022b78:	bd6af03a 	xor	r21,r23,r21
 4022b7c:	8885883a 	add	r2,r17,r2
 4022b80:	108ae317 	ldw	r2,11148(r2)
 4022b84:	a809883a 	mov	r4,r21
 4022b88:	1000683a 	jmp	r2
 4022b8c:	04022e50 	cmplti	r16,zero,2233
 4022b90:	04022d90 	cmplti	r16,zero,2230
 4022b94:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022b98:	04022bd0 	cmplti	r16,zero,2223
 4022b9c:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022ba0:	04022dfc 	xorhi	r16,zero,2231
 4022ba4:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022ba8:	04022bd0 	cmplti	r16,zero,2223
 4022bac:	04022d90 	cmplti	r16,zero,2230
 4022bb0:	04022d90 	cmplti	r16,zero,2230
 4022bb4:	04022dfc 	xorhi	r16,zero,2231
 4022bb8:	04022bd0 	cmplti	r16,zero,2223
 4022bbc:	04022bdc 	xori	r16,zero,2223
 4022bc0:	04022bdc 	xori	r16,zero,2223
 4022bc4:	04022bdc 	xori	r16,zero,2223
 4022bc8:	04022e14 	movui	r16,2232
 4022bcc:	0027883a 	mov	r19,zero
 4022bd0:	b825883a 	mov	r18,r23
 4022bd4:	9821883a 	mov	r16,r19
 4022bd8:	182d883a 	mov	r22,r3
 4022bdc:	b08000a0 	cmpeqi	r2,r22,2
 4022be0:	1000831e 	bne	r2,zero,4022df0 <__divsf3+0x320>
 4022be4:	b08000e0 	cmpeqi	r2,r22,3
 4022be8:	1000941e 	bne	r2,zero,4022e3c <__divsf3+0x36c>
 4022bec:	b5800060 	cmpeqi	r22,r22,1
 4022bf0:	b000141e 	bne	r22,zero,4022c44 <__divsf3+0x174>
 4022bf4:	a0801fc4 	addi	r2,r20,127
 4022bf8:	0080690e 	bge	zero,r2,4022da0 <__divsf3+0x2d0>
 4022bfc:	80c001cc 	andi	r3,r16,7
 4022c00:	18000426 	beq	r3,zero,4022c14 <__divsf3+0x144>
 4022c04:	80c003cc 	andi	r3,r16,15
 4022c08:	18c00120 	cmpeqi	r3,r3,4
 4022c0c:	1800011e 	bne	r3,zero,4022c14 <__divsf3+0x144>
 4022c10:	84000104 	addi	r16,r16,4
 4022c14:	80c2002c 	andhi	r3,r16,2048
 4022c18:	18000426 	beq	r3,zero,4022c2c <__divsf3+0x15c>
 4022c1c:	00be0034 	movhi	r2,63488
 4022c20:	10bfffc4 	addi	r2,r2,-1
 4022c24:	80a0703a 	and	r16,r16,r2
 4022c28:	a0802004 	addi	r2,r20,128
 4022c2c:	10c03fc8 	cmpgei	r3,r2,255
 4022c30:	18006f1e 	bne	r3,zero,4022df0 <__divsf3+0x320>
 4022c34:	802091ba 	slli	r16,r16,6
 4022c38:	8020d27a 	srli	r16,r16,9
 4022c3c:	00000306 	br	4022c4c <__divsf3+0x17c>
 4022c40:	a825883a 	mov	r18,r21
 4022c44:	0005883a 	mov	r2,zero
 4022c48:	0021883a 	mov	r16,zero
 4022c4c:	10803fcc 	andi	r2,r2,255
 4022c50:	100495fa 	slli	r2,r2,23
 4022c54:	902497fa 	slli	r18,r18,31
 4022c58:	1404b03a 	or	r2,r2,r16
 4022c5c:	1484b03a 	or	r2,r2,r18
 4022c60:	dfc00917 	ldw	ra,36(sp)
 4022c64:	ddc00817 	ldw	r23,32(sp)
 4022c68:	dd800717 	ldw	r22,28(sp)
 4022c6c:	dd400617 	ldw	r21,24(sp)
 4022c70:	dd000517 	ldw	r20,20(sp)
 4022c74:	dcc00417 	ldw	r19,16(sp)
 4022c78:	dc800317 	ldw	r18,12(sp)
 4022c7c:	dc400217 	ldw	r17,8(sp)
 4022c80:	dc000117 	ldw	r16,4(sp)
 4022c84:	dec00a04 	addi	sp,sp,40
 4022c88:	f800283a 	ret
 4022c8c:	a53fc044 	addi	r20,r20,-255
 4022c90:	98003d1e 	bne	r19,zero,4022d88 <__divsf3+0x2b8>
 4022c94:	00c00084 	movi	r3,2
 4022c98:	00000206 	br	4022ca4 <__divsf3+0x1d4>
 4022c9c:	9800321e 	bne	r19,zero,4022d68 <__divsf3+0x298>
 4022ca0:	00c00044 	movi	r3,1
 4022ca4:	1c62b03a 	or	r17,r3,r17
 4022ca8:	882290ba 	slli	r17,r17,2
 4022cac:	008100b4 	movhi	r2,1026
 4022cb0:	bd6af03a 	xor	r21,r23,r21
 4022cb4:	8885883a 	add	r2,r17,r2
 4022cb8:	108b3117 	ldw	r2,11460(r2)
 4022cbc:	a809883a 	mov	r4,r21
 4022cc0:	1000683a 	jmp	r2
 4022cc4:	04022d90 	cmplti	r16,zero,2230
 4022cc8:	04022d90 	cmplti	r16,zero,2230
 4022ccc:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022cd0:	04022bcc 	andi	r16,zero,2223
 4022cd4:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022cd8:	04022dfc 	xorhi	r16,zero,2231
 4022cdc:	04022c40 	call	4022c4 <_gp+0x3f7d94>
 4022ce0:	04022bcc 	andi	r16,zero,2223
 4022ce4:	04022d90 	cmplti	r16,zero,2230
 4022ce8:	04022d90 	cmplti	r16,zero,2230
 4022cec:	04022dfc 	xorhi	r16,zero,2231
 4022cf0:	04022bcc 	andi	r16,zero,2223
 4022cf4:	04022bdc 	xori	r16,zero,2223
 4022cf8:	04022bdc 	xori	r16,zero,2223
 4022cfc:	04022bdc 	xori	r16,zero,2223
 4022d00:	04022e10 	cmplti	r16,zero,2232
 4022d04:	80000d1e 	bne	r16,zero,4022d3c <__divsf3+0x26c>
 4022d08:	04400104 	movi	r17,4
 4022d0c:	0029883a 	mov	r20,zero
 4022d10:	05800044 	movi	r22,1
 4022d14:	003f8706 	br	4022b34 <__divsf3+0x64>
 4022d18:	8000041e 	bne	r16,zero,4022d2c <__divsf3+0x25c>
 4022d1c:	04400204 	movi	r17,8
 4022d20:	05003fc4 	movi	r20,255
 4022d24:	05800084 	movi	r22,2
 4022d28:	003f8206 	br	4022b34 <__divsf3+0x64>
 4022d2c:	04400304 	movi	r17,12
 4022d30:	05003fc4 	movi	r20,255
 4022d34:	058000c4 	movi	r22,3
 4022d38:	003f7e06 	br	4022b34 <__divsf3+0x64>
 4022d3c:	8009883a 	mov	r4,r16
 4022d40:	d9400015 	stw	r5,0(sp)
 4022d44:	402340c0 	call	402340c <__clzsi2>
 4022d48:	10fffec4 	addi	r3,r2,-5
 4022d4c:	80e0983a 	sll	r16,r16,r3
 4022d50:	00ffe284 	movi	r3,-118
 4022d54:	d9400017 	ldw	r5,0(sp)
 4022d58:	18a9c83a 	sub	r20,r3,r2
 4022d5c:	0023883a 	mov	r17,zero
 4022d60:	002d883a 	mov	r22,zero
 4022d64:	003f7306 	br	4022b34 <__divsf3+0x64>
 4022d68:	9809883a 	mov	r4,r19
 4022d6c:	402340c0 	call	402340c <__clzsi2>
 4022d70:	a087883a 	add	r3,r20,r2
 4022d74:	113ffec4 	addi	r4,r2,-5
 4022d78:	1d001d84 	addi	r20,r3,118
 4022d7c:	9926983a 	sll	r19,r19,r4
 4022d80:	0007883a 	mov	r3,zero
 4022d84:	003f7906 	br	4022b6c <__divsf3+0x9c>
 4022d88:	00c000c4 	movi	r3,3
 4022d8c:	003f7706 	br	4022b6c <__divsf3+0x9c>
 4022d90:	2025883a 	mov	r18,r4
 4022d94:	00bfffc4 	movi	r2,-1
 4022d98:	0021883a 	mov	r16,zero
 4022d9c:	003fab06 	br	4022c4c <__divsf3+0x17c>
 4022da0:	00c00044 	movi	r3,1
 4022da4:	1885c83a 	sub	r2,r3,r2
 4022da8:	10c00708 	cmpgei	r3,r2,28
 4022dac:	183fa51e 	bne	r3,zero,4022c44 <__divsf3+0x174>
 4022db0:	a0c02784 	addi	r3,r20,158
 4022db4:	80c6983a 	sll	r3,r16,r3
 4022db8:	8084d83a 	srl	r2,r16,r2
 4022dbc:	1820c03a 	cmpne	r16,r3,zero
 4022dc0:	1404b03a 	or	r2,r2,r16
 4022dc4:	10c001cc 	andi	r3,r2,7
 4022dc8:	18000426 	beq	r3,zero,4022ddc <__divsf3+0x30c>
 4022dcc:	10c003cc 	andi	r3,r2,15
 4022dd0:	18c00120 	cmpeqi	r3,r3,4
 4022dd4:	1800011e 	bne	r3,zero,4022ddc <__divsf3+0x30c>
 4022dd8:	10800104 	addi	r2,r2,4
 4022ddc:	10c1002c 	andhi	r3,r2,1024
 4022de0:	18003426 	beq	r3,zero,4022eb4 <__divsf3+0x3e4>
 4022de4:	00800044 	movi	r2,1
 4022de8:	0021883a 	mov	r16,zero
 4022dec:	003f9706 	br	4022c4c <__divsf3+0x17c>
 4022df0:	00bfffc4 	movi	r2,-1
 4022df4:	0021883a 	mov	r16,zero
 4022df8:	003f9406 	br	4022c4c <__divsf3+0x17c>
 4022dfc:	04002034 	movhi	r16,128
 4022e00:	0025883a 	mov	r18,zero
 4022e04:	843fffc4 	addi	r16,r16,-1
 4022e08:	00bfffc4 	movi	r2,-1
 4022e0c:	003f8f06 	br	4022c4c <__divsf3+0x17c>
 4022e10:	0027883a 	mov	r19,zero
 4022e14:	8080102c 	andhi	r2,r16,64
 4022e18:	10000826 	beq	r2,zero,4022e3c <__divsf3+0x36c>
 4022e1c:	9880102c 	andhi	r2,r19,64
 4022e20:	1000061e 	bne	r2,zero,4022e3c <__divsf3+0x36c>
 4022e24:	00802034 	movhi	r2,128
 4022e28:	9c001034 	orhi	r16,r19,64
 4022e2c:	10bfffc4 	addi	r2,r2,-1
 4022e30:	80a0703a 	and	r16,r16,r2
 4022e34:	b825883a 	mov	r18,r23
 4022e38:	003ff306 	br	4022e08 <__divsf3+0x338>
 4022e3c:	00802034 	movhi	r2,128
 4022e40:	84001034 	orhi	r16,r16,64
 4022e44:	10bfffc4 	addi	r2,r2,-1
 4022e48:	80a0703a 	and	r16,r16,r2
 4022e4c:	003fee06 	br	4022e08 <__divsf3+0x338>
 4022e50:	8004917a 	slli	r2,r16,5
 4022e54:	980a917a 	slli	r5,r19,5
 4022e58:	1140122e 	bgeu	r2,r5,4022ea4 <__divsf3+0x3d4>
 4022e5c:	a53fffc4 	addi	r20,r20,-1
 4022e60:	010006c4 	movi	r4,27
 4022e64:	0021883a 	mov	r16,zero
 4022e68:	1007883a 	mov	r3,r2
 4022e6c:	213fffc4 	addi	r4,r4,-1
 4022e70:	1085883a 	add	r2,r2,r2
 4022e74:	8421883a 	add	r16,r16,r16
 4022e78:	18000116 	blt	r3,zero,4022e80 <__divsf3+0x3b0>
 4022e7c:	11400236 	bltu	r2,r5,4022e88 <__divsf3+0x3b8>
 4022e80:	1145c83a 	sub	r2,r2,r5
 4022e84:	84000054 	ori	r16,r16,1
 4022e88:	203ff71e 	bne	r4,zero,4022e68 <__divsf3+0x398>
 4022e8c:	1004c03a 	cmpne	r2,r2,zero
 4022e90:	1420b03a 	or	r16,r2,r16
 4022e94:	a0801fc4 	addi	r2,r20,127
 4022e98:	a825883a 	mov	r18,r21
 4022e9c:	00bf5716 	blt	zero,r2,4022bfc <__divsf3+0x12c>
 4022ea0:	003fbf06 	br	4022da0 <__divsf3+0x2d0>
 4022ea4:	1145c83a 	sub	r2,r2,r5
 4022ea8:	01000684 	movi	r4,26
 4022eac:	04000044 	movi	r16,1
 4022eb0:	003fed06 	br	4022e68 <__divsf3+0x398>
 4022eb4:	102091ba 	slli	r16,r2,6
 4022eb8:	0005883a 	mov	r2,zero
 4022ebc:	8020d27a 	srli	r16,r16,9
 4022ec0:	003f6206 	br	4022c4c <__divsf3+0x17c>

04022ec4 <__mulsf3>:
 4022ec4:	defff704 	addi	sp,sp,-36
 4022ec8:	dc400215 	stw	r17,8(sp)
 4022ecc:	2022d5fa 	srli	r17,r4,23
 4022ed0:	dc000115 	stw	r16,4(sp)
 4022ed4:	04002034 	movhi	r16,128
 4022ed8:	dd000515 	stw	r20,20(sp)
 4022edc:	843fffc4 	addi	r16,r16,-1
 4022ee0:	dfc00815 	stw	ra,32(sp)
 4022ee4:	dd800715 	stw	r22,28(sp)
 4022ee8:	dd400615 	stw	r21,24(sp)
 4022eec:	dcc00415 	stw	r19,16(sp)
 4022ef0:	dc800315 	stw	r18,12(sp)
 4022ef4:	8c403fcc 	andi	r17,r17,255
 4022ef8:	2028d7fa 	srli	r20,r4,31
 4022efc:	8120703a 	and	r16,r16,r4
 4022f00:	88008026 	beq	r17,zero,4023104 <__mulsf3+0x240>
 4022f04:	88803fe0 	cmpeqi	r2,r17,255
 4022f08:	1000831e 	bne	r2,zero,4023118 <__mulsf3+0x254>
 4022f0c:	802090fa 	slli	r16,r16,3
 4022f10:	8c7fe044 	addi	r17,r17,-127
 4022f14:	002d883a 	mov	r22,zero
 4022f18:	84010034 	orhi	r16,r16,1024
 4022f1c:	0027883a 	mov	r19,zero
 4022f20:	2804d5fa 	srli	r2,r5,23
 4022f24:	01002034 	movhi	r4,128
 4022f28:	213fffc4 	addi	r4,r4,-1
 4022f2c:	10803fcc 	andi	r2,r2,255
 4022f30:	282ad7fa 	srli	r21,r5,31
 4022f34:	2164703a 	and	r18,r4,r5
 4022f38:	10006e26 	beq	r2,zero,40230f4 <__mulsf3+0x230>
 4022f3c:	11003fe0 	cmpeqi	r4,r2,255
 4022f40:	20007a1e 	bne	r4,zero,402312c <__mulsf3+0x268>
 4022f44:	900890fa 	slli	r4,r18,3
 4022f48:	10bfe044 	addi	r2,r2,-127
 4022f4c:	88a3883a 	add	r17,r17,r2
 4022f50:	24810034 	orhi	r18,r4,1024
 4022f54:	0009883a 	mov	r4,zero
 4022f58:	b1800428 	cmpgeui	r6,r22,16
 4022f5c:	a544f03a 	xor	r2,r20,r21
 4022f60:	89c00044 	addi	r7,r17,1
 4022f64:	3000321e 	bne	r6,zero,4023030 <__mulsf3+0x16c>
 4022f68:	b00690ba 	slli	r3,r22,2
 4022f6c:	018100b4 	movhi	r6,1026
 4022f70:	198d883a 	add	r6,r3,r6
 4022f74:	30cbdf17 	ldw	r3,12156(r6)
 4022f78:	1800683a 	jmp	r3
 4022f7c:	04023030 	cmpltui	r16,zero,2240
 4022f80:	04022fc0 	call	4022fc <_gp+0x3f7dcc>
 4022f84:	04022fc0 	call	4022fc <_gp+0x3f7dcc>
 4022f88:	04022fbc 	xorhi	r16,zero,2238
 4022f8c:	04022fc8 	cmpgei	r16,zero,2239
 4022f90:	04022fc8 	cmpgei	r16,zero,2239
 4022f94:	040231b8 	rdprs	r16,zero,2246
 4022f98:	04022fbc 	xorhi	r16,zero,2238
 4022f9c:	04022fc8 	cmpgei	r16,zero,2239
 4022fa0:	040231b8 	rdprs	r16,zero,2246
 4022fa4:	04022fc8 	cmpgei	r16,zero,2239
 4022fa8:	04022fbc 	xorhi	r16,zero,2238
 4022fac:	04023140 	call	402314 <_gp+0x3f7de4>
 4022fb0:	04023140 	call	402314 <_gp+0x3f7de4>
 4022fb4:	04023140 	call	402314 <_gp+0x3f7de4>
 4022fb8:	0402321c 	xori	r16,zero,2248
 4022fbc:	a805883a 	mov	r2,r21
 4022fc0:	9021883a 	mov	r16,r18
 4022fc4:	2027883a 	mov	r19,r4
 4022fc8:	98c000a0 	cmpeqi	r3,r19,2
 4022fcc:	1800151e 	bne	r3,zero,4023024 <__mulsf3+0x160>
 4022fd0:	98c000e0 	cmpeqi	r3,r19,3
 4022fd4:	1800a31e 	bne	r3,zero,4023264 <__mulsf3+0x3a0>
 4022fd8:	98c00060 	cmpeqi	r3,r19,1
 4022fdc:	18003226 	beq	r3,zero,40230a8 <__mulsf3+0x1e4>
 4022fe0:	0007883a 	mov	r3,zero
 4022fe4:	0009883a 	mov	r4,zero
 4022fe8:	1c003fcc 	andi	r16,r3,255
 4022fec:	802095fa 	slli	r16,r16,23
 4022ff0:	100497fa 	slli	r2,r2,31
 4022ff4:	8120b03a 	or	r16,r16,r4
 4022ff8:	8084b03a 	or	r2,r16,r2
 4022ffc:	dfc00817 	ldw	ra,32(sp)
 4023000:	dd800717 	ldw	r22,28(sp)
 4023004:	dd400617 	ldw	r21,24(sp)
 4023008:	dd000517 	ldw	r20,20(sp)
 402300c:	dcc00417 	ldw	r19,16(sp)
 4023010:	dc800317 	ldw	r18,12(sp)
 4023014:	dc400217 	ldw	r17,8(sp)
 4023018:	dc000117 	ldw	r16,4(sp)
 402301c:	dec00904 	addi	sp,sp,36
 4023020:	f800283a 	ret
 4023024:	00ffffc4 	movi	r3,-1
 4023028:	0009883a 	mov	r4,zero
 402302c:	003fee06 	br	4022fe8 <__mulsf3+0x124>
 4023030:	9012d43a 	srli	r9,r18,16
 4023034:	80ffffcc 	andi	r3,r16,65535
 4023038:	8010d43a 	srli	r8,r16,16
 402303c:	913fffcc 	andi	r4,r18,65535
 4023040:	190b383a 	mul	r5,r3,r4
 4023044:	4125383a 	mul	r18,r8,r4
 4023048:	48cd383a 	mul	r6,r9,r3
 402304c:	2806d43a 	srli	r3,r5,16
 4023050:	4251383a 	mul	r8,r8,r9
 4023054:	348d883a 	add	r6,r6,r18
 4023058:	1987883a 	add	r3,r3,r6
 402305c:	1c80022e 	bgeu	r3,r18,4023068 <__mulsf3+0x1a4>
 4023060:	01000074 	movhi	r4,1
 4023064:	4111883a 	add	r8,r8,r4
 4023068:	1808943a 	slli	r4,r3,16
 402306c:	1820d43a 	srli	r16,r3,16
 4023070:	297fffcc 	andi	r5,r5,65535
 4023074:	2149883a 	add	r4,r4,r5
 4023078:	200691ba 	slli	r3,r4,6
 402307c:	8221883a 	add	r16,r16,r8
 4023080:	802091ba 	slli	r16,r16,6
 4023084:	2008d6ba 	srli	r4,r4,26
 4023088:	1806c03a 	cmpne	r3,r3,zero
 402308c:	8142002c 	andhi	r5,r16,2048
 4023090:	1908b03a 	or	r4,r3,r4
 4023094:	8120b03a 	or	r16,r16,r4
 4023098:	28007026 	beq	r5,zero,402325c <__mulsf3+0x398>
 402309c:	8006d07a 	srli	r3,r16,1
 40230a0:	8400004c 	andi	r16,r16,1
 40230a4:	1c20b03a 	or	r16,r3,r16
 40230a8:	38c01fc4 	addi	r3,r7,127
 40230ac:	00c0470e 	bge	zero,r3,40231cc <__mulsf3+0x308>
 40230b0:	810001cc 	andi	r4,r16,7
 40230b4:	20000426 	beq	r4,zero,40230c8 <__mulsf3+0x204>
 40230b8:	810003cc 	andi	r4,r16,15
 40230bc:	21000120 	cmpeqi	r4,r4,4
 40230c0:	2000011e 	bne	r4,zero,40230c8 <__mulsf3+0x204>
 40230c4:	84000104 	addi	r16,r16,4
 40230c8:	8102002c 	andhi	r4,r16,2048
 40230cc:	20000426 	beq	r4,zero,40230e0 <__mulsf3+0x21c>
 40230d0:	00fe0034 	movhi	r3,63488
 40230d4:	18ffffc4 	addi	r3,r3,-1
 40230d8:	80e0703a 	and	r16,r16,r3
 40230dc:	38c02004 	addi	r3,r7,128
 40230e0:	19003fc8 	cmpgei	r4,r3,255
 40230e4:	203fcf1e 	bne	r4,zero,4023024 <__mulsf3+0x160>
 40230e8:	802091ba 	slli	r16,r16,6
 40230ec:	8008d27a 	srli	r4,r16,9
 40230f0:	003fbd06 	br	4022fe8 <__mulsf3+0x124>
 40230f4:	9000281e 	bne	r18,zero,4023198 <__mulsf3+0x2d4>
 40230f8:	b5800054 	ori	r22,r22,1
 40230fc:	01000044 	movi	r4,1
 4023100:	003f9506 	br	4022f58 <__mulsf3+0x94>
 4023104:	8000191e 	bne	r16,zero,402316c <__mulsf3+0x2a8>
 4023108:	05800104 	movi	r22,4
 402310c:	0023883a 	mov	r17,zero
 4023110:	04c00044 	movi	r19,1
 4023114:	003f8206 	br	4022f20 <__mulsf3+0x5c>
 4023118:	8000101e 	bne	r16,zero,402315c <__mulsf3+0x298>
 402311c:	05800204 	movi	r22,8
 4023120:	04403fc4 	movi	r17,255
 4023124:	04c00084 	movi	r19,2
 4023128:	003f7d06 	br	4022f20 <__mulsf3+0x5c>
 402312c:	8c403fc4 	addi	r17,r17,255
 4023130:	9000071e 	bne	r18,zero,4023150 <__mulsf3+0x28c>
 4023134:	b5800094 	ori	r22,r22,2
 4023138:	01000084 	movi	r4,2
 402313c:	003f8606 	br	4022f58 <__mulsf3+0x94>
 4023140:	98c000a0 	cmpeqi	r3,r19,2
 4023144:	a005883a 	mov	r2,r20
 4023148:	183fa126 	beq	r3,zero,4022fd0 <__mulsf3+0x10c>
 402314c:	003fb506 	br	4023024 <__mulsf3+0x160>
 4023150:	b58000d4 	ori	r22,r22,3
 4023154:	010000c4 	movi	r4,3
 4023158:	003f7f06 	br	4022f58 <__mulsf3+0x94>
 402315c:	05800304 	movi	r22,12
 4023160:	04403fc4 	movi	r17,255
 4023164:	04c000c4 	movi	r19,3
 4023168:	003f6d06 	br	4022f20 <__mulsf3+0x5c>
 402316c:	8009883a 	mov	r4,r16
 4023170:	d9400015 	stw	r5,0(sp)
 4023174:	402340c0 	call	402340c <__clzsi2>
 4023178:	10fffec4 	addi	r3,r2,-5
 402317c:	047fe284 	movi	r17,-118
 4023180:	80e0983a 	sll	r16,r16,r3
 4023184:	d9400017 	ldw	r5,0(sp)
 4023188:	88a3c83a 	sub	r17,r17,r2
 402318c:	002d883a 	mov	r22,zero
 4023190:	0027883a 	mov	r19,zero
 4023194:	003f6206 	br	4022f20 <__mulsf3+0x5c>
 4023198:	9009883a 	mov	r4,r18
 402319c:	402340c0 	call	402340c <__clzsi2>
 40231a0:	10fffec4 	addi	r3,r2,-5
 40231a4:	88a3c83a 	sub	r17,r17,r2
 40231a8:	90e4983a 	sll	r18,r18,r3
 40231ac:	8c7fe284 	addi	r17,r17,-118
 40231b0:	0009883a 	mov	r4,zero
 40231b4:	003f6806 	br	4022f58 <__mulsf3+0x94>
 40231b8:	01002034 	movhi	r4,128
 40231bc:	0005883a 	mov	r2,zero
 40231c0:	213fffc4 	addi	r4,r4,-1
 40231c4:	00ffffc4 	movi	r3,-1
 40231c8:	003f8706 	br	4022fe8 <__mulsf3+0x124>
 40231cc:	01000044 	movi	r4,1
 40231d0:	20c7c83a 	sub	r3,r4,r3
 40231d4:	19000708 	cmpgei	r4,r3,28
 40231d8:	203f811e 	bne	r4,zero,4022fe0 <__mulsf3+0x11c>
 40231dc:	39002784 	addi	r4,r7,158
 40231e0:	8108983a 	sll	r4,r16,r4
 40231e4:	80e0d83a 	srl	r16,r16,r3
 40231e8:	2008c03a 	cmpne	r4,r4,zero
 40231ec:	8120b03a 	or	r16,r16,r4
 40231f0:	80c001cc 	andi	r3,r16,7
 40231f4:	18000426 	beq	r3,zero,4023208 <__mulsf3+0x344>
 40231f8:	80c003cc 	andi	r3,r16,15
 40231fc:	18c00120 	cmpeqi	r3,r3,4
 4023200:	1800011e 	bne	r3,zero,4023208 <__mulsf3+0x344>
 4023204:	84000104 	addi	r16,r16,4
 4023208:	80c1002c 	andhi	r3,r16,1024
 402320c:	183fb626 	beq	r3,zero,40230e8 <__mulsf3+0x224>
 4023210:	00c00044 	movi	r3,1
 4023214:	0009883a 	mov	r4,zero
 4023218:	003f7306 	br	4022fe8 <__mulsf3+0x124>
 402321c:	8080102c 	andhi	r2,r16,64
 4023220:	10000826 	beq	r2,zero,4023244 <__mulsf3+0x380>
 4023224:	9080102c 	andhi	r2,r18,64
 4023228:	1000061e 	bne	r2,zero,4023244 <__mulsf3+0x380>
 402322c:	00802034 	movhi	r2,128
 4023230:	10bfffc4 	addi	r2,r2,-1
 4023234:	91001034 	orhi	r4,r18,64
 4023238:	2088703a 	and	r4,r4,r2
 402323c:	a805883a 	mov	r2,r21
 4023240:	003fe006 	br	40231c4 <__mulsf3+0x300>
 4023244:	00802034 	movhi	r2,128
 4023248:	10bfffc4 	addi	r2,r2,-1
 402324c:	81001034 	orhi	r4,r16,64
 4023250:	2088703a 	and	r4,r4,r2
 4023254:	a005883a 	mov	r2,r20
 4023258:	003fda06 	br	40231c4 <__mulsf3+0x300>
 402325c:	880f883a 	mov	r7,r17
 4023260:	003f9106 	br	40230a8 <__mulsf3+0x1e4>
 4023264:	00c02034 	movhi	r3,128
 4023268:	81001034 	orhi	r4,r16,64
 402326c:	18ffffc4 	addi	r3,r3,-1
 4023270:	20c8703a 	and	r4,r4,r3
 4023274:	003fd306 	br	40231c4 <__mulsf3+0x300>

04023278 <__fixsfsi>:
 4023278:	200ad5fa 	srli	r5,r4,23
 402327c:	00c02034 	movhi	r3,128
 4023280:	18ffffc4 	addi	r3,r3,-1
 4023284:	29403fcc 	andi	r5,r5,255
 4023288:	29801fd0 	cmplti	r6,r5,127
 402328c:	200ed7fa 	srli	r7,r4,31
 4023290:	1906703a 	and	r3,r3,r4
 4023294:	3000061e 	bne	r6,zero,40232b0 <__fixsfsi+0x38>
 4023298:	28802790 	cmplti	r2,r5,158
 402329c:	1000061e 	bne	r2,zero,40232b8 <__fixsfsi+0x40>
 40232a0:	00a00034 	movhi	r2,32768
 40232a4:	10bfffc4 	addi	r2,r2,-1
 40232a8:	3885883a 	add	r2,r7,r2
 40232ac:	f800283a 	ret
 40232b0:	0005883a 	mov	r2,zero
 40232b4:	f800283a 	ret
 40232b8:	28802590 	cmplti	r2,r5,150
 40232bc:	18c02034 	orhi	r3,r3,128
 40232c0:	1000051e 	bne	r2,zero,40232d8 <__fixsfsi+0x60>
 40232c4:	28bfda84 	addi	r2,r5,-150
 40232c8:	1884983a 	sll	r2,r3,r2
 40232cc:	383ff926 	beq	r7,zero,40232b4 <__fixsfsi+0x3c>
 40232d0:	0085c83a 	sub	r2,zero,r2
 40232d4:	f800283a 	ret
 40232d8:	00802584 	movi	r2,150
 40232dc:	1145c83a 	sub	r2,r2,r5
 40232e0:	1884d83a 	srl	r2,r3,r2
 40232e4:	003ff906 	br	40232cc <__fixsfsi+0x54>

040232e8 <__floatsisf>:
 40232e8:	defffd04 	addi	sp,sp,-12
 40232ec:	dfc00215 	stw	ra,8(sp)
 40232f0:	dc400115 	stw	r17,4(sp)
 40232f4:	dc000015 	stw	r16,0(sp)
 40232f8:	20001226 	beq	r4,zero,4023344 <__floatsisf+0x5c>
 40232fc:	2022d7fa 	srli	r17,r4,31
 4023300:	2021883a 	mov	r16,r4
 4023304:	20003816 	blt	r4,zero,40233e8 <__floatsisf+0x100>
 4023308:	8009883a 	mov	r4,r16
 402330c:	402340c0 	call	402340c <__clzsi2>
 4023310:	1009883a 	mov	r4,r2
 4023314:	00802784 	movi	r2,158
 4023318:	1105c83a 	sub	r2,r2,r4
 402331c:	10c025c8 	cmpgei	r3,r2,151
 4023320:	1800151e 	bne	r3,zero,4023378 <__floatsisf+0x90>
 4023324:	20c00248 	cmpgei	r3,r4,9
 4023328:	18003126 	beq	r3,zero,40233f0 <__floatsisf+0x108>
 402332c:	213ffe04 	addi	r4,r4,-8
 4023330:	8120983a 	sll	r16,r16,r4
 4023334:	00c02034 	movhi	r3,128
 4023338:	18ffffc4 	addi	r3,r3,-1
 402333c:	80e0703a 	and	r16,r16,r3
 4023340:	00000306 	br	4023350 <__floatsisf+0x68>
 4023344:	0023883a 	mov	r17,zero
 4023348:	0005883a 	mov	r2,zero
 402334c:	0021883a 	mov	r16,zero
 4023350:	10803fcc 	andi	r2,r2,255
 4023354:	100495fa 	slli	r2,r2,23
 4023358:	882297fa 	slli	r17,r17,31
 402335c:	1404b03a 	or	r2,r2,r16
 4023360:	1444b03a 	or	r2,r2,r17
 4023364:	dfc00217 	ldw	ra,8(sp)
 4023368:	dc400117 	ldw	r17,4(sp)
 402336c:	dc000017 	ldw	r16,0(sp)
 4023370:	dec00304 	addi	sp,sp,12
 4023374:	f800283a 	ret
 4023378:	10c02690 	cmplti	r3,r2,154
 402337c:	1800071e 	bne	r3,zero,402339c <__floatsisf+0xb4>
 4023380:	20c006c4 	addi	r3,r4,27
 4023384:	01400144 	movi	r5,5
 4023388:	80c6983a 	sll	r3,r16,r3
 402338c:	290bc83a 	sub	r5,r5,r4
 4023390:	814ad83a 	srl	r5,r16,r5
 4023394:	1806c03a 	cmpne	r3,r3,zero
 4023398:	28e0b03a 	or	r16,r5,r3
 402339c:	20c00188 	cmpgei	r3,r4,6
 40233a0:	1800171e 	bne	r3,zero,4023400 <__floatsisf+0x118>
 40233a4:	00ff0034 	movhi	r3,64512
 40233a8:	18ffffc4 	addi	r3,r3,-1
 40233ac:	818001cc 	andi	r6,r16,7
 40233b0:	80ca703a 	and	r5,r16,r3
 40233b4:	30000926 	beq	r6,zero,40233dc <__floatsisf+0xf4>
 40233b8:	818003cc 	andi	r6,r16,15
 40233bc:	31800120 	cmpeqi	r6,r6,4
 40233c0:	3000061e 	bne	r6,zero,40233dc <__floatsisf+0xf4>
 40233c4:	29400104 	addi	r5,r5,4
 40233c8:	2981002c 	andhi	r6,r5,1024
 40233cc:	30000326 	beq	r6,zero,40233dc <__floatsisf+0xf4>
 40233d0:	28ca703a 	and	r5,r5,r3
 40233d4:	00c027c4 	movi	r3,159
 40233d8:	1905c83a 	sub	r2,r3,r4
 40233dc:	282091ba 	slli	r16,r5,6
 40233e0:	8020d27a 	srli	r16,r16,9
 40233e4:	003fda06 	br	4023350 <__floatsisf+0x68>
 40233e8:	0121c83a 	sub	r16,zero,r4
 40233ec:	003fc606 	br	4023308 <__floatsisf+0x20>
 40233f0:	01002034 	movhi	r4,128
 40233f4:	213fffc4 	addi	r4,r4,-1
 40233f8:	8120703a 	and	r16,r16,r4
 40233fc:	003fd406 	br	4023350 <__floatsisf+0x68>
 4023400:	20fffec4 	addi	r3,r4,-5
 4023404:	80e0983a 	sll	r16,r16,r3
 4023408:	003fe606 	br	40233a4 <__floatsisf+0xbc>

0402340c <__clzsi2>:
 402340c:	00bfffd4 	movui	r2,65535
 4023410:	11000436 	bltu	r2,r4,4023424 <__clzsi2+0x18>
 4023414:	20804030 	cmpltui	r2,r4,256
 4023418:	10000e26 	beq	r2,zero,4023454 <__clzsi2+0x48>
 402341c:	01400804 	movi	r5,32
 4023420:	00000406 	br	4023434 <__clzsi2+0x28>
 4023424:	00804034 	movhi	r2,256
 4023428:	20800736 	bltu	r4,r2,4023448 <__clzsi2+0x3c>
 402342c:	2008d63a 	srli	r4,r4,24
 4023430:	01400204 	movi	r5,8
 4023434:	00c00034 	movhi	r3,0
 4023438:	20c7883a 	add	r3,r4,r3
 402343c:	1880b103 	ldbu	r2,708(r3)
 4023440:	2885c83a 	sub	r2,r5,r2
 4023444:	f800283a 	ret
 4023448:	2008d43a 	srli	r4,r4,16
 402344c:	01400404 	movi	r5,16
 4023450:	003ff806 	br	4023434 <__clzsi2+0x28>
 4023454:	2008d23a 	srli	r4,r4,8
 4023458:	01400604 	movi	r5,24
 402345c:	003ff506 	br	4023434 <__clzsi2+0x28>

04023460 <_fclose_r.part.0>:
 4023460:	defffc04 	addi	sp,sp,-16
 4023464:	dc800215 	stw	r18,8(sp)
 4023468:	dc400115 	stw	r17,4(sp)
 402346c:	dc000015 	stw	r16,0(sp)
 4023470:	dfc00315 	stw	ra,12(sp)
 4023474:	2821883a 	mov	r16,r5
 4023478:	2023883a 	mov	r17,r4
 402347c:	40236000 	call	4023600 <__sflush_r>
 4023480:	80c00b17 	ldw	r3,44(r16)
 4023484:	1025883a 	mov	r18,r2
 4023488:	18000426 	beq	r3,zero,402349c <_fclose_r.part.0+0x3c>
 402348c:	81400717 	ldw	r5,28(r16)
 4023490:	8809883a 	mov	r4,r17
 4023494:	183ee83a 	callr	r3
 4023498:	10001916 	blt	r2,zero,4023500 <_fclose_r.part.0+0xa0>
 402349c:	8080030b 	ldhu	r2,12(r16)
 40234a0:	1080200c 	andi	r2,r2,128
 40234a4:	10001a1e 	bne	r2,zero,4023510 <_fclose_r.part.0+0xb0>
 40234a8:	81400c17 	ldw	r5,48(r16)
 40234ac:	28000526 	beq	r5,zero,40234c4 <_fclose_r.part.0+0x64>
 40234b0:	80801004 	addi	r2,r16,64
 40234b4:	28800226 	beq	r5,r2,40234c0 <_fclose_r.part.0+0x60>
 40234b8:	8809883a 	mov	r4,r17
 40234bc:	4023fbc0 	call	4023fbc <_free_r>
 40234c0:	80000c15 	stw	zero,48(r16)
 40234c4:	81401117 	ldw	r5,68(r16)
 40234c8:	28000326 	beq	r5,zero,40234d8 <_fclose_r.part.0+0x78>
 40234cc:	8809883a 	mov	r4,r17
 40234d0:	4023fbc0 	call	4023fbc <_free_r>
 40234d4:	80001115 	stw	zero,68(r16)
 40234d8:	4023c700 	call	4023c70 <__sfp_lock_acquire>
 40234dc:	8000030d 	sth	zero,12(r16)
 40234e0:	4023c740 	call	4023c74 <__sfp_lock_release>
 40234e4:	9005883a 	mov	r2,r18
 40234e8:	dfc00317 	ldw	ra,12(sp)
 40234ec:	dc800217 	ldw	r18,8(sp)
 40234f0:	dc400117 	ldw	r17,4(sp)
 40234f4:	dc000017 	ldw	r16,0(sp)
 40234f8:	dec00404 	addi	sp,sp,16
 40234fc:	f800283a 	ret
 4023500:	8080030b 	ldhu	r2,12(r16)
 4023504:	04bfffc4 	movi	r18,-1
 4023508:	1080200c 	andi	r2,r2,128
 402350c:	103fe626 	beq	r2,zero,40234a8 <_fclose_r.part.0+0x48>
 4023510:	81400417 	ldw	r5,16(r16)
 4023514:	8809883a 	mov	r4,r17
 4023518:	4023fbc0 	call	4023fbc <_free_r>
 402351c:	003fe206 	br	40234a8 <_fclose_r.part.0+0x48>

04023520 <_fclose_r>:
 4023520:	28001926 	beq	r5,zero,4023588 <_fclose_r+0x68>
 4023524:	defffd04 	addi	sp,sp,-12
 4023528:	dc000115 	stw	r16,4(sp)
 402352c:	dfc00215 	stw	ra,8(sp)
 4023530:	2021883a 	mov	r16,r4
 4023534:	20000226 	beq	r4,zero,4023540 <_fclose_r+0x20>
 4023538:	20800e17 	ldw	r2,56(r4)
 402353c:	10000c26 	beq	r2,zero,4023570 <_fclose_r+0x50>
 4023540:	2880030f 	ldh	r2,12(r5)
 4023544:	1000051e 	bne	r2,zero,402355c <_fclose_r+0x3c>
 4023548:	0005883a 	mov	r2,zero
 402354c:	dfc00217 	ldw	ra,8(sp)
 4023550:	dc000117 	ldw	r16,4(sp)
 4023554:	dec00304 	addi	sp,sp,12
 4023558:	f800283a 	ret
 402355c:	8009883a 	mov	r4,r16
 4023560:	dfc00217 	ldw	ra,8(sp)
 4023564:	dc000117 	ldw	r16,4(sp)
 4023568:	dec00304 	addi	sp,sp,12
 402356c:	40234601 	jmpi	4023460 <_fclose_r.part.0>
 4023570:	d9400015 	stw	r5,0(sp)
 4023574:	4023c600 	call	4023c60 <__sinit>
 4023578:	d9400017 	ldw	r5,0(sp)
 402357c:	2880030f 	ldh	r2,12(r5)
 4023580:	103ff126 	beq	r2,zero,4023548 <_fclose_r+0x28>
 4023584:	003ff506 	br	402355c <_fclose_r+0x3c>
 4023588:	0005883a 	mov	r2,zero
 402358c:	f800283a 	ret

04023590 <fclose>:
 4023590:	20000826 	beq	r4,zero,40235b4 <fclose+0x24>
 4023594:	00800034 	movhi	r2,0
 4023598:	200b883a 	mov	r5,r4
 402359c:	11094e17 	ldw	r4,9528(r2)
 40235a0:	20000226 	beq	r4,zero,40235ac <fclose+0x1c>
 40235a4:	20800e17 	ldw	r2,56(r4)
 40235a8:	10000526 	beq	r2,zero,40235c0 <fclose+0x30>
 40235ac:	2880030f 	ldh	r2,12(r5)
 40235b0:	1000021e 	bne	r2,zero,40235bc <fclose+0x2c>
 40235b4:	0005883a 	mov	r2,zero
 40235b8:	f800283a 	ret
 40235bc:	40234601 	jmpi	4023460 <_fclose_r.part.0>
 40235c0:	defffd04 	addi	sp,sp,-12
 40235c4:	d9400115 	stw	r5,4(sp)
 40235c8:	d9000015 	stw	r4,0(sp)
 40235cc:	dfc00215 	stw	ra,8(sp)
 40235d0:	4023c600 	call	4023c60 <__sinit>
 40235d4:	d9400117 	ldw	r5,4(sp)
 40235d8:	d9000017 	ldw	r4,0(sp)
 40235dc:	2880030f 	ldh	r2,12(r5)
 40235e0:	10000326 	beq	r2,zero,40235f0 <fclose+0x60>
 40235e4:	dfc00217 	ldw	ra,8(sp)
 40235e8:	dec00304 	addi	sp,sp,12
 40235ec:	40234601 	jmpi	4023460 <_fclose_r.part.0>
 40235f0:	0005883a 	mov	r2,zero
 40235f4:	dfc00217 	ldw	ra,8(sp)
 40235f8:	dec00304 	addi	sp,sp,12
 40235fc:	f800283a 	ret

04023600 <__sflush_r>:
 4023600:	2880030b 	ldhu	r2,12(r5)
 4023604:	defffb04 	addi	sp,sp,-20
 4023608:	dcc00315 	stw	r19,12(sp)
 402360c:	dc000015 	stw	r16,0(sp)
 4023610:	dfc00415 	stw	ra,16(sp)
 4023614:	dc800215 	stw	r18,8(sp)
 4023618:	dc400115 	stw	r17,4(sp)
 402361c:	10c0020c 	andi	r3,r2,8
 4023620:	2821883a 	mov	r16,r5
 4023624:	2027883a 	mov	r19,r4
 4023628:	18003f1e 	bne	r3,zero,4023728 <__sflush_r+0x128>
 402362c:	28c00117 	ldw	r3,4(r5)
 4023630:	10820014 	ori	r2,r2,2048
 4023634:	2880030d 	sth	r2,12(r5)
 4023638:	00c0550e 	bge	zero,r3,4023790 <__sflush_r+0x190>
 402363c:	82000a17 	ldw	r8,40(r16)
 4023640:	40003126 	beq	r8,zero,4023708 <__sflush_r+0x108>
 4023644:	9c400017 	ldw	r17,0(r19)
 4023648:	1104000c 	andi	r4,r2,4096
 402364c:	98000015 	stw	zero,0(r19)
 4023650:	81400717 	ldw	r5,28(r16)
 4023654:	1007883a 	mov	r3,r2
 4023658:	2000521e 	bne	r4,zero,40237a4 <__sflush_r+0x1a4>
 402365c:	01c00044 	movi	r7,1
 4023660:	000d883a 	mov	r6,zero
 4023664:	9809883a 	mov	r4,r19
 4023668:	403ee83a 	callr	r8
 402366c:	10ffffd8 	cmpnei	r3,r2,-1
 4023670:	18005826 	beq	r3,zero,40237d4 <__sflush_r+0x1d4>
 4023674:	80c0030b 	ldhu	r3,12(r16)
 4023678:	82000a17 	ldw	r8,40(r16)
 402367c:	81400717 	ldw	r5,28(r16)
 4023680:	18c0010c 	andi	r3,r3,4
 4023684:	18000626 	beq	r3,zero,40236a0 <__sflush_r+0xa0>
 4023688:	81000117 	ldw	r4,4(r16)
 402368c:	80c00c17 	ldw	r3,48(r16)
 4023690:	1105c83a 	sub	r2,r2,r4
 4023694:	18000226 	beq	r3,zero,40236a0 <__sflush_r+0xa0>
 4023698:	80c00f17 	ldw	r3,60(r16)
 402369c:	10c5c83a 	sub	r2,r2,r3
 40236a0:	100d883a 	mov	r6,r2
 40236a4:	000f883a 	mov	r7,zero
 40236a8:	9809883a 	mov	r4,r19
 40236ac:	403ee83a 	callr	r8
 40236b0:	10ffffd8 	cmpnei	r3,r2,-1
 40236b4:	18003d1e 	bne	r3,zero,40237ac <__sflush_r+0x1ac>
 40236b8:	99000017 	ldw	r4,0(r19)
 40236bc:	80c0030b 	ldhu	r3,12(r16)
 40236c0:	20004e26 	beq	r4,zero,40237fc <__sflush_r+0x1fc>
 40236c4:	21400760 	cmpeqi	r5,r4,29
 40236c8:	2800021e 	bne	r5,zero,40236d4 <__sflush_r+0xd4>
 40236cc:	210005a0 	cmpeqi	r4,r4,22
 40236d0:	20002c26 	beq	r4,zero,4023784 <__sflush_r+0x184>
 40236d4:	80800417 	ldw	r2,16(r16)
 40236d8:	18fdffcc 	andi	r3,r3,63487
 40236dc:	80c0030d 	sth	r3,12(r16)
 40236e0:	80000115 	stw	zero,4(r16)
 40236e4:	80800015 	stw	r2,0(r16)
 40236e8:	81400c17 	ldw	r5,48(r16)
 40236ec:	9c400015 	stw	r17,0(r19)
 40236f0:	28000526 	beq	r5,zero,4023708 <__sflush_r+0x108>
 40236f4:	80801004 	addi	r2,r16,64
 40236f8:	28800226 	beq	r5,r2,4023704 <__sflush_r+0x104>
 40236fc:	9809883a 	mov	r4,r19
 4023700:	4023fbc0 	call	4023fbc <_free_r>
 4023704:	80000c15 	stw	zero,48(r16)
 4023708:	0005883a 	mov	r2,zero
 402370c:	dfc00417 	ldw	ra,16(sp)
 4023710:	dcc00317 	ldw	r19,12(sp)
 4023714:	dc800217 	ldw	r18,8(sp)
 4023718:	dc400117 	ldw	r17,4(sp)
 402371c:	dc000017 	ldw	r16,0(sp)
 4023720:	dec00504 	addi	sp,sp,20
 4023724:	f800283a 	ret
 4023728:	2c800417 	ldw	r18,16(r5)
 402372c:	903ff626 	beq	r18,zero,4023708 <__sflush_r+0x108>
 4023730:	2c400017 	ldw	r17,0(r5)
 4023734:	108000cc 	andi	r2,r2,3
 4023738:	2c800015 	stw	r18,0(r5)
 402373c:	8ca3c83a 	sub	r17,r17,r18
 4023740:	1000161e 	bne	r2,zero,402379c <__sflush_r+0x19c>
 4023744:	28800517 	ldw	r2,20(r5)
 4023748:	80800215 	stw	r2,8(r16)
 402374c:	04400316 	blt	zero,r17,402375c <__sflush_r+0x15c>
 4023750:	003fed06 	br	4023708 <__sflush_r+0x108>
 4023754:	90a5883a 	add	r18,r18,r2
 4023758:	047feb0e 	bge	zero,r17,4023708 <__sflush_r+0x108>
 402375c:	80800917 	ldw	r2,36(r16)
 4023760:	81400717 	ldw	r5,28(r16)
 4023764:	880f883a 	mov	r7,r17
 4023768:	900d883a 	mov	r6,r18
 402376c:	9809883a 	mov	r4,r19
 4023770:	103ee83a 	callr	r2
 4023774:	88a3c83a 	sub	r17,r17,r2
 4023778:	00bff616 	blt	zero,r2,4023754 <__sflush_r+0x154>
 402377c:	80c0030b 	ldhu	r3,12(r16)
 4023780:	00bfffc4 	movi	r2,-1
 4023784:	18c01014 	ori	r3,r3,64
 4023788:	80c0030d 	sth	r3,12(r16)
 402378c:	003fdf06 	br	402370c <__sflush_r+0x10c>
 4023790:	28c00f17 	ldw	r3,60(r5)
 4023794:	00ffa916 	blt	zero,r3,402363c <__sflush_r+0x3c>
 4023798:	003fdb06 	br	4023708 <__sflush_r+0x108>
 402379c:	0005883a 	mov	r2,zero
 40237a0:	003fe906 	br	4023748 <__sflush_r+0x148>
 40237a4:	80801417 	ldw	r2,80(r16)
 40237a8:	003fb506 	br	4023680 <__sflush_r+0x80>
 40237ac:	80c0030b 	ldhu	r3,12(r16)
 40237b0:	81000417 	ldw	r4,16(r16)
 40237b4:	80000115 	stw	zero,4(r16)
 40237b8:	197dffcc 	andi	r5,r3,63487
 40237bc:	8140030d 	sth	r5,12(r16)
 40237c0:	81000015 	stw	r4,0(r16)
 40237c4:	18c4000c 	andi	r3,r3,4096
 40237c8:	183fc726 	beq	r3,zero,40236e8 <__sflush_r+0xe8>
 40237cc:	80801415 	stw	r2,80(r16)
 40237d0:	003fc506 	br	40236e8 <__sflush_r+0xe8>
 40237d4:	98c00017 	ldw	r3,0(r19)
 40237d8:	183fa626 	beq	r3,zero,4023674 <__sflush_r+0x74>
 40237dc:	19000760 	cmpeqi	r4,r3,29
 40237e0:	20000e1e 	bne	r4,zero,402381c <__sflush_r+0x21c>
 40237e4:	18c00598 	cmpnei	r3,r3,22
 40237e8:	18000c26 	beq	r3,zero,402381c <__sflush_r+0x21c>
 40237ec:	80c0030b 	ldhu	r3,12(r16)
 40237f0:	18c01014 	ori	r3,r3,64
 40237f4:	80c0030d 	sth	r3,12(r16)
 40237f8:	003fc406 	br	402370c <__sflush_r+0x10c>
 40237fc:	81000417 	ldw	r4,16(r16)
 4023800:	197dffcc 	andi	r5,r3,63487
 4023804:	8140030d 	sth	r5,12(r16)
 4023808:	80000115 	stw	zero,4(r16)
 402380c:	81000015 	stw	r4,0(r16)
 4023810:	18c4000c 	andi	r3,r3,4096
 4023814:	183fb426 	beq	r3,zero,40236e8 <__sflush_r+0xe8>
 4023818:	003fec06 	br	40237cc <__sflush_r+0x1cc>
 402381c:	9c400015 	stw	r17,0(r19)
 4023820:	0005883a 	mov	r2,zero
 4023824:	003fb906 	br	402370c <__sflush_r+0x10c>

04023828 <_fflush_r>:
 4023828:	defffd04 	addi	sp,sp,-12
 402382c:	dc000115 	stw	r16,4(sp)
 4023830:	dfc00215 	stw	ra,8(sp)
 4023834:	2021883a 	mov	r16,r4
 4023838:	20000226 	beq	r4,zero,4023844 <_fflush_r+0x1c>
 402383c:	20800e17 	ldw	r2,56(r4)
 4023840:	10000726 	beq	r2,zero,4023860 <_fflush_r+0x38>
 4023844:	2880030f 	ldh	r2,12(r5)
 4023848:	10000a1e 	bne	r2,zero,4023874 <_fflush_r+0x4c>
 402384c:	0005883a 	mov	r2,zero
 4023850:	dfc00217 	ldw	ra,8(sp)
 4023854:	dc000117 	ldw	r16,4(sp)
 4023858:	dec00304 	addi	sp,sp,12
 402385c:	f800283a 	ret
 4023860:	d9400015 	stw	r5,0(sp)
 4023864:	4023c600 	call	4023c60 <__sinit>
 4023868:	d9400017 	ldw	r5,0(sp)
 402386c:	2880030f 	ldh	r2,12(r5)
 4023870:	103ff626 	beq	r2,zero,402384c <_fflush_r+0x24>
 4023874:	8009883a 	mov	r4,r16
 4023878:	dfc00217 	ldw	ra,8(sp)
 402387c:	dc000117 	ldw	r16,4(sp)
 4023880:	dec00304 	addi	sp,sp,12
 4023884:	40236001 	jmpi	4023600 <__sflush_r>

04023888 <fflush>:
 4023888:	20001726 	beq	r4,zero,40238e8 <fflush+0x60>
 402388c:	00800034 	movhi	r2,0
 4023890:	200b883a 	mov	r5,r4
 4023894:	11094e17 	ldw	r4,9528(r2)
 4023898:	20000226 	beq	r4,zero,40238a4 <fflush+0x1c>
 402389c:	20800e17 	ldw	r2,56(r4)
 40238a0:	10000526 	beq	r2,zero,40238b8 <fflush+0x30>
 40238a4:	2880030f 	ldh	r2,12(r5)
 40238a8:	1000021e 	bne	r2,zero,40238b4 <fflush+0x2c>
 40238ac:	0005883a 	mov	r2,zero
 40238b0:	f800283a 	ret
 40238b4:	40236001 	jmpi	4023600 <__sflush_r>
 40238b8:	defffd04 	addi	sp,sp,-12
 40238bc:	d9400115 	stw	r5,4(sp)
 40238c0:	d9000015 	stw	r4,0(sp)
 40238c4:	dfc00215 	stw	ra,8(sp)
 40238c8:	4023c600 	call	4023c60 <__sinit>
 40238cc:	d9400117 	ldw	r5,4(sp)
 40238d0:	d9000017 	ldw	r4,0(sp)
 40238d4:	2880030f 	ldh	r2,12(r5)
 40238d8:	10000826 	beq	r2,zero,40238fc <fflush+0x74>
 40238dc:	dfc00217 	ldw	ra,8(sp)
 40238e0:	dec00304 	addi	sp,sp,12
 40238e4:	40236001 	jmpi	4023600 <__sflush_r>
 40238e8:	00800034 	movhi	r2,0
 40238ec:	11094d17 	ldw	r4,9524(r2)
 40238f0:	014100b4 	movhi	r5,1026
 40238f4:	294e0a04 	addi	r5,r5,14376
 40238f8:	40248fc1 	jmpi	40248fc <_fwalk_reent>
 40238fc:	0005883a 	mov	r2,zero
 4023900:	dfc00217 	ldw	ra,8(sp)
 4023904:	dec00304 	addi	sp,sp,12
 4023908:	f800283a 	ret

0402390c <__fp_lock>:
 402390c:	0005883a 	mov	r2,zero
 4023910:	f800283a 	ret

04023914 <_cleanup_r>:
 4023914:	014100b4 	movhi	r5,1026
 4023918:	294d4804 	addi	r5,r5,13600
 402391c:	40248fc1 	jmpi	40248fc <_fwalk_reent>

04023920 <__fp_unlock>:
 4023920:	0005883a 	mov	r2,zero
 4023924:	f800283a 	ret

04023928 <__sinit.part.0>:
 4023928:	00c100b4 	movhi	r3,1026
 402392c:	20800117 	ldw	r2,4(r4)
 4023930:	18ce4504 	addi	r3,r3,14612
 4023934:	20c00f15 	stw	r3,60(r4)
 4023938:	2140bb04 	addi	r5,r4,748
 402393c:	00c000c4 	movi	r3,3
 4023940:	20c0b915 	stw	r3,740(r4)
 4023944:	2140ba15 	stw	r5,744(r4)
 4023948:	2000b815 	stw	zero,736(r4)
 402394c:	10001705 	stb	zero,92(r2)
 4023950:	10001745 	stb	zero,93(r2)
 4023954:	10001785 	stb	zero,94(r2)
 4023958:	100017c5 	stb	zero,95(r2)
 402395c:	10001805 	stb	zero,96(r2)
 4023960:	10001845 	stb	zero,97(r2)
 4023964:	10001885 	stb	zero,98(r2)
 4023968:	100018c5 	stb	zero,99(r2)
 402396c:	00c00104 	movi	r3,4
 4023970:	10c00315 	stw	r3,12(r2)
 4023974:	020100b4 	movhi	r8,1026
 4023978:	20c00217 	ldw	r3,8(r4)
 402397c:	01c100b4 	movhi	r7,1026
 4023980:	018100b4 	movhi	r6,1026
 4023984:	014100b4 	movhi	r5,1026
 4023988:	4217a704 	addi	r8,r8,24220
 402398c:	39d7be04 	addi	r7,r7,24312
 4023990:	3197de04 	addi	r6,r6,24440
 4023994:	2957f504 	addi	r5,r5,24532
 4023998:	02400074 	movhi	r9,1
 402399c:	10001915 	stw	zero,100(r2)
 40239a0:	10000015 	stw	zero,0(r2)
 40239a4:	10000115 	stw	zero,4(r2)
 40239a8:	10000215 	stw	zero,8(r2)
 40239ac:	10000415 	stw	zero,16(r2)
 40239b0:	10000515 	stw	zero,20(r2)
 40239b4:	10000615 	stw	zero,24(r2)
 40239b8:	10800715 	stw	r2,28(r2)
 40239bc:	12000815 	stw	r8,32(r2)
 40239c0:	11c00915 	stw	r7,36(r2)
 40239c4:	11800a15 	stw	r6,40(r2)
 40239c8:	11400b15 	stw	r5,44(r2)
 40239cc:	4a400284 	addi	r9,r9,10
 40239d0:	1a400315 	stw	r9,12(r3)
 40239d4:	18001915 	stw	zero,100(r3)
 40239d8:	18000015 	stw	zero,0(r3)
 40239dc:	18000115 	stw	zero,4(r3)
 40239e0:	18000215 	stw	zero,8(r3)
 40239e4:	18000415 	stw	zero,16(r3)
 40239e8:	18001705 	stb	zero,92(r3)
 40239ec:	18001745 	stb	zero,93(r3)
 40239f0:	18001785 	stb	zero,94(r3)
 40239f4:	180017c5 	stb	zero,95(r3)
 40239f8:	18001805 	stb	zero,96(r3)
 40239fc:	18001845 	stb	zero,97(r3)
 4023a00:	18001885 	stb	zero,98(r3)
 4023a04:	180018c5 	stb	zero,99(r3)
 4023a08:	20800317 	ldw	r2,12(r4)
 4023a0c:	024000b4 	movhi	r9,2
 4023a10:	18000515 	stw	zero,20(r3)
 4023a14:	18000615 	stw	zero,24(r3)
 4023a18:	18c00715 	stw	r3,28(r3)
 4023a1c:	1a000815 	stw	r8,32(r3)
 4023a20:	19c00915 	stw	r7,36(r3)
 4023a24:	19800a15 	stw	r6,40(r3)
 4023a28:	19400b15 	stw	r5,44(r3)
 4023a2c:	4a400484 	addi	r9,r9,18
 4023a30:	10001915 	stw	zero,100(r2)
 4023a34:	10000015 	stw	zero,0(r2)
 4023a38:	10000115 	stw	zero,4(r2)
 4023a3c:	10000215 	stw	zero,8(r2)
 4023a40:	12400315 	stw	r9,12(r2)
 4023a44:	10000415 	stw	zero,16(r2)
 4023a48:	10000515 	stw	zero,20(r2)
 4023a4c:	10000615 	stw	zero,24(r2)
 4023a50:	10001705 	stb	zero,92(r2)
 4023a54:	10001745 	stb	zero,93(r2)
 4023a58:	10001785 	stb	zero,94(r2)
 4023a5c:	100017c5 	stb	zero,95(r2)
 4023a60:	10001805 	stb	zero,96(r2)
 4023a64:	10001845 	stb	zero,97(r2)
 4023a68:	10001885 	stb	zero,98(r2)
 4023a6c:	100018c5 	stb	zero,99(r2)
 4023a70:	10800715 	stw	r2,28(r2)
 4023a74:	12000815 	stw	r8,32(r2)
 4023a78:	11c00915 	stw	r7,36(r2)
 4023a7c:	11800a15 	stw	r6,40(r2)
 4023a80:	11400b15 	stw	r5,44(r2)
 4023a84:	00800044 	movi	r2,1
 4023a88:	20800e15 	stw	r2,56(r4)
 4023a8c:	f800283a 	ret

04023a90 <__sfmoreglue>:
 4023a90:	defffc04 	addi	sp,sp,-16
 4023a94:	dc400115 	stw	r17,4(sp)
 4023a98:	2c7fffc4 	addi	r17,r5,-1
 4023a9c:	8c401a24 	muli	r17,r17,104
 4023aa0:	dc800215 	stw	r18,8(sp)
 4023aa4:	2825883a 	mov	r18,r5
 4023aa8:	89401d04 	addi	r5,r17,116
 4023aac:	dc000015 	stw	r16,0(sp)
 4023ab0:	dfc00315 	stw	ra,12(sp)
 4023ab4:	4024eb00 	call	4024eb0 <_malloc_r>
 4023ab8:	1021883a 	mov	r16,r2
 4023abc:	10000726 	beq	r2,zero,4023adc <__sfmoreglue+0x4c>
 4023ac0:	11000304 	addi	r4,r2,12
 4023ac4:	10000015 	stw	zero,0(r2)
 4023ac8:	14800115 	stw	r18,4(r2)
 4023acc:	11000215 	stw	r4,8(r2)
 4023ad0:	89801a04 	addi	r6,r17,104
 4023ad4:	000b883a 	mov	r5,zero
 4023ad8:	40257900 	call	4025790 <memset>
 4023adc:	8005883a 	mov	r2,r16
 4023ae0:	dfc00317 	ldw	ra,12(sp)
 4023ae4:	dc800217 	ldw	r18,8(sp)
 4023ae8:	dc400117 	ldw	r17,4(sp)
 4023aec:	dc000017 	ldw	r16,0(sp)
 4023af0:	dec00404 	addi	sp,sp,16
 4023af4:	f800283a 	ret

04023af8 <__sfp>:
 4023af8:	defffb04 	addi	sp,sp,-20
 4023afc:	00800034 	movhi	r2,0
 4023b00:	dc000015 	stw	r16,0(sp)
 4023b04:	14094d17 	ldw	r16,9524(r2)
 4023b08:	dc400115 	stw	r17,4(sp)
 4023b0c:	dfc00415 	stw	ra,16(sp)
 4023b10:	80800e17 	ldw	r2,56(r16)
 4023b14:	dcc00315 	stw	r19,12(sp)
 4023b18:	dc800215 	stw	r18,8(sp)
 4023b1c:	2023883a 	mov	r17,r4
 4023b20:	10003126 	beq	r2,zero,4023be8 <__sfp+0xf0>
 4023b24:	8100ba17 	ldw	r4,744(r16)
 4023b28:	8140b917 	ldw	r5,740(r16)
 4023b2c:	04c00104 	movi	r19,4
 4023b30:	8400b804 	addi	r16,r16,736
 4023b34:	297fffc4 	addi	r5,r5,-1
 4023b38:	2800050e 	bge	r5,zero,4023b50 <__sfp+0x58>
 4023b3c:	00002406 	br	4023bd0 <__sfp+0xd8>
 4023b40:	297fffc4 	addi	r5,r5,-1
 4023b44:	28bfffd8 	cmpnei	r2,r5,-1
 4023b48:	21001a04 	addi	r4,r4,104
 4023b4c:	10002026 	beq	r2,zero,4023bd0 <__sfp+0xd8>
 4023b50:	2080030f 	ldh	r2,12(r4)
 4023b54:	103ffa1e 	bne	r2,zero,4023b40 <__sfp+0x48>
 4023b58:	00bffff4 	movhi	r2,65535
 4023b5c:	10800044 	addi	r2,r2,1
 4023b60:	20001915 	stw	zero,100(r4)
 4023b64:	20000015 	stw	zero,0(r4)
 4023b68:	20000115 	stw	zero,4(r4)
 4023b6c:	20000215 	stw	zero,8(r4)
 4023b70:	20800315 	stw	r2,12(r4)
 4023b74:	20000415 	stw	zero,16(r4)
 4023b78:	20000515 	stw	zero,20(r4)
 4023b7c:	20000615 	stw	zero,24(r4)
 4023b80:	20001705 	stb	zero,92(r4)
 4023b84:	20001745 	stb	zero,93(r4)
 4023b88:	20001785 	stb	zero,94(r4)
 4023b8c:	200017c5 	stb	zero,95(r4)
 4023b90:	20001805 	stb	zero,96(r4)
 4023b94:	20001845 	stb	zero,97(r4)
 4023b98:	20001885 	stb	zero,98(r4)
 4023b9c:	200018c5 	stb	zero,99(r4)
 4023ba0:	20000c15 	stw	zero,48(r4)
 4023ba4:	20000d15 	stw	zero,52(r4)
 4023ba8:	20001115 	stw	zero,68(r4)
 4023bac:	20001215 	stw	zero,72(r4)
 4023bb0:	2005883a 	mov	r2,r4
 4023bb4:	dfc00417 	ldw	ra,16(sp)
 4023bb8:	dcc00317 	ldw	r19,12(sp)
 4023bbc:	dc800217 	ldw	r18,8(sp)
 4023bc0:	dc400117 	ldw	r17,4(sp)
 4023bc4:	dc000017 	ldw	r16,0(sp)
 4023bc8:	dec00504 	addi	sp,sp,20
 4023bcc:	f800283a 	ret
 4023bd0:	80800017 	ldw	r2,0(r16)
 4023bd4:	10000726 	beq	r2,zero,4023bf4 <__sfp+0xfc>
 4023bd8:	11000217 	ldw	r4,8(r2)
 4023bdc:	11400117 	ldw	r5,4(r2)
 4023be0:	1021883a 	mov	r16,r2
 4023be4:	003fd306 	br	4023b34 <__sfp+0x3c>
 4023be8:	8009883a 	mov	r4,r16
 4023bec:	40239280 	call	4023928 <__sinit.part.0>
 4023bf0:	003fcc06 	br	4023b24 <__sfp+0x2c>
 4023bf4:	01406b04 	movi	r5,428
 4023bf8:	8809883a 	mov	r4,r17
 4023bfc:	4024eb00 	call	4024eb0 <_malloc_r>
 4023c00:	1025883a 	mov	r18,r2
 4023c04:	10000c26 	beq	r2,zero,4023c38 <__sfp+0x140>
 4023c08:	11000304 	addi	r4,r2,12
 4023c0c:	11000215 	stw	r4,8(r2)
 4023c10:	000b883a 	mov	r5,zero
 4023c14:	10000015 	stw	zero,0(r2)
 4023c18:	14c00115 	stw	r19,4(r2)
 4023c1c:	01806804 	movi	r6,416
 4023c20:	40257900 	call	4025790 <memset>
 4023c24:	1009883a 	mov	r4,r2
 4023c28:	84800015 	stw	r18,0(r16)
 4023c2c:	014000c4 	movi	r5,3
 4023c30:	9021883a 	mov	r16,r18
 4023c34:	003fc606 	br	4023b50 <__sfp+0x58>
 4023c38:	80000015 	stw	zero,0(r16)
 4023c3c:	00800304 	movi	r2,12
 4023c40:	88800015 	stw	r2,0(r17)
 4023c44:	0009883a 	mov	r4,zero
 4023c48:	003fd906 	br	4023bb0 <__sfp+0xb8>

04023c4c <_cleanup>:
 4023c4c:	00800034 	movhi	r2,0
 4023c50:	11094d17 	ldw	r4,9524(r2)
 4023c54:	014100b4 	movhi	r5,1026
 4023c58:	294d4804 	addi	r5,r5,13600
 4023c5c:	40248fc1 	jmpi	40248fc <_fwalk_reent>

04023c60 <__sinit>:
 4023c60:	20800e17 	ldw	r2,56(r4)
 4023c64:	10000126 	beq	r2,zero,4023c6c <__sinit+0xc>
 4023c68:	f800283a 	ret
 4023c6c:	40239281 	jmpi	4023928 <__sinit.part.0>

04023c70 <__sfp_lock_acquire>:
 4023c70:	f800283a 	ret

04023c74 <__sfp_lock_release>:
 4023c74:	f800283a 	ret

04023c78 <__sinit_lock_acquire>:
 4023c78:	f800283a 	ret

04023c7c <__sinit_lock_release>:
 4023c7c:	f800283a 	ret

04023c80 <__fp_lock_all>:
 4023c80:	00800034 	movhi	r2,0
 4023c84:	11094e17 	ldw	r4,9528(r2)
 4023c88:	014100b4 	movhi	r5,1026
 4023c8c:	294e4304 	addi	r5,r5,14604
 4023c90:	40248641 	jmpi	4024864 <_fwalk>

04023c94 <__fp_unlock_all>:
 4023c94:	00800034 	movhi	r2,0
 4023c98:	11094e17 	ldw	r4,9528(r2)
 4023c9c:	014100b4 	movhi	r5,1026
 4023ca0:	294e4804 	addi	r5,r5,14624
 4023ca4:	40248641 	jmpi	4024864 <_fwalk>

04023ca8 <_fopen_r>:
 4023ca8:	defffa04 	addi	sp,sp,-24
 4023cac:	3007883a 	mov	r3,r6
 4023cb0:	dcc00415 	stw	r19,16(sp)
 4023cb4:	d80d883a 	mov	r6,sp
 4023cb8:	2827883a 	mov	r19,r5
 4023cbc:	180b883a 	mov	r5,r3
 4023cc0:	dc800315 	stw	r18,12(sp)
 4023cc4:	dfc00515 	stw	ra,20(sp)
 4023cc8:	dc400215 	stw	r17,8(sp)
 4023ccc:	dc000115 	stw	r16,4(sp)
 4023cd0:	2025883a 	mov	r18,r4
 4023cd4:	4029fc00 	call	4029fc0 <__sflags>
 4023cd8:	10002726 	beq	r2,zero,4023d78 <_fopen_r+0xd0>
 4023cdc:	9009883a 	mov	r4,r18
 4023ce0:	1023883a 	mov	r17,r2
 4023ce4:	4023af80 	call	4023af8 <__sfp>
 4023ce8:	1021883a 	mov	r16,r2
 4023cec:	10002226 	beq	r2,zero,4023d78 <_fopen_r+0xd0>
 4023cf0:	d9800017 	ldw	r6,0(sp)
 4023cf4:	01c06d84 	movi	r7,438
 4023cf8:	980b883a 	mov	r5,r19
 4023cfc:	9009883a 	mov	r4,r18
 4023d00:	40258800 	call	4025880 <_open_r>
 4023d04:	10001916 	blt	r2,zero,4023d6c <_fopen_r+0xc4>
 4023d08:	018100b4 	movhi	r6,1026
 4023d0c:	014100b4 	movhi	r5,1026
 4023d10:	010100b4 	movhi	r4,1026
 4023d14:	00c100b4 	movhi	r3,1026
 4023d18:	3197a704 	addi	r6,r6,24220
 4023d1c:	2957be04 	addi	r5,r5,24312
 4023d20:	2117de04 	addi	r4,r4,24440
 4023d24:	18d7f504 	addi	r3,r3,24532
 4023d28:	8440030d 	sth	r17,12(r16)
 4023d2c:	8080038d 	sth	r2,14(r16)
 4023d30:	84000715 	stw	r16,28(r16)
 4023d34:	81800815 	stw	r6,32(r16)
 4023d38:	81400915 	stw	r5,36(r16)
 4023d3c:	81000a15 	stw	r4,40(r16)
 4023d40:	80c00b15 	stw	r3,44(r16)
 4023d44:	8c40400c 	andi	r17,r17,256
 4023d48:	88000d1e 	bne	r17,zero,4023d80 <_fopen_r+0xd8>
 4023d4c:	8005883a 	mov	r2,r16
 4023d50:	dfc00517 	ldw	ra,20(sp)
 4023d54:	dcc00417 	ldw	r19,16(sp)
 4023d58:	dc800317 	ldw	r18,12(sp)
 4023d5c:	dc400217 	ldw	r17,8(sp)
 4023d60:	dc000117 	ldw	r16,4(sp)
 4023d64:	dec00604 	addi	sp,sp,24
 4023d68:	f800283a 	ret
 4023d6c:	4023c700 	call	4023c70 <__sfp_lock_acquire>
 4023d70:	8000030d 	sth	zero,12(r16)
 4023d74:	4023c740 	call	4023c74 <__sfp_lock_release>
 4023d78:	0021883a 	mov	r16,zero
 4023d7c:	003ff306 	br	4023d4c <_fopen_r+0xa4>
 4023d80:	01c00084 	movi	r7,2
 4023d84:	000d883a 	mov	r6,zero
 4023d88:	800b883a 	mov	r5,r16
 4023d8c:	9009883a 	mov	r4,r18
 4023d90:	40242b80 	call	40242b8 <_fseek_r>
 4023d94:	003fed06 	br	4023d4c <_fopen_r+0xa4>

04023d98 <fopen>:
 4023d98:	00c00034 	movhi	r3,0
 4023d9c:	2005883a 	mov	r2,r4
 4023da0:	19094e17 	ldw	r4,9528(r3)
 4023da4:	280d883a 	mov	r6,r5
 4023da8:	100b883a 	mov	r5,r2
 4023dac:	4023ca81 	jmpi	4023ca8 <_fopen_r>

04023db0 <_fprintf_r>:
 4023db0:	defffe04 	addi	sp,sp,-8
 4023db4:	2809883a 	mov	r4,r5
 4023db8:	300b883a 	mov	r5,r6
 4023dbc:	dfc00015 	stw	ra,0(sp)
 4023dc0:	d9c00115 	stw	r7,4(sp)
 4023dc4:	d9800104 	addi	r6,sp,4
 4023dc8:	40282200 	call	4028220 <__vfprintf_internal>
 4023dcc:	dfc00017 	ldw	ra,0(sp)
 4023dd0:	dec00204 	addi	sp,sp,8
 4023dd4:	f800283a 	ret

04023dd8 <fprintf>:
 4023dd8:	defffd04 	addi	sp,sp,-12
 4023ddc:	dfc00015 	stw	ra,0(sp)
 4023de0:	d9800115 	stw	r6,4(sp)
 4023de4:	d9c00215 	stw	r7,8(sp)
 4023de8:	d9800104 	addi	r6,sp,4
 4023dec:	40282200 	call	4028220 <__vfprintf_internal>
 4023df0:	dfc00017 	ldw	ra,0(sp)
 4023df4:	dec00304 	addi	sp,sp,12
 4023df8:	f800283a 	ret

04023dfc <_fputc_r>:
 4023dfc:	defffc04 	addi	sp,sp,-16
 4023e00:	dc000215 	stw	r16,8(sp)
 4023e04:	dfc00315 	stw	ra,12(sp)
 4023e08:	2021883a 	mov	r16,r4
 4023e0c:	20000226 	beq	r4,zero,4023e18 <_fputc_r+0x1c>
 4023e10:	20800e17 	ldw	r2,56(r4)
 4023e14:	10000526 	beq	r2,zero,4023e2c <_fputc_r+0x30>
 4023e18:	8009883a 	mov	r4,r16
 4023e1c:	dfc00317 	ldw	ra,12(sp)
 4023e20:	dc000217 	ldw	r16,8(sp)
 4023e24:	dec00404 	addi	sp,sp,16
 4023e28:	40258e41 	jmpi	40258e4 <_putc_r>
 4023e2c:	d9800115 	stw	r6,4(sp)
 4023e30:	d9400015 	stw	r5,0(sp)
 4023e34:	4023c600 	call	4023c60 <__sinit>
 4023e38:	d9800117 	ldw	r6,4(sp)
 4023e3c:	d9400017 	ldw	r5,0(sp)
 4023e40:	003ff506 	br	4023e18 <_fputc_r+0x1c>

04023e44 <fputc>:
 4023e44:	defffc04 	addi	sp,sp,-16
 4023e48:	00800034 	movhi	r2,0
 4023e4c:	dc400215 	stw	r17,8(sp)
 4023e50:	14494e17 	ldw	r17,9528(r2)
 4023e54:	dc000115 	stw	r16,4(sp)
 4023e58:	dfc00315 	stw	ra,12(sp)
 4023e5c:	2021883a 	mov	r16,r4
 4023e60:	280d883a 	mov	r6,r5
 4023e64:	88000226 	beq	r17,zero,4023e70 <fputc+0x2c>
 4023e68:	88800e17 	ldw	r2,56(r17)
 4023e6c:	10000726 	beq	r2,zero,4023e8c <fputc+0x48>
 4023e70:	800b883a 	mov	r5,r16
 4023e74:	8809883a 	mov	r4,r17
 4023e78:	dfc00317 	ldw	ra,12(sp)
 4023e7c:	dc400217 	ldw	r17,8(sp)
 4023e80:	dc000117 	ldw	r16,4(sp)
 4023e84:	dec00404 	addi	sp,sp,16
 4023e88:	40258e41 	jmpi	40258e4 <_putc_r>
 4023e8c:	8809883a 	mov	r4,r17
 4023e90:	d9400015 	stw	r5,0(sp)
 4023e94:	4023c600 	call	4023c60 <__sinit>
 4023e98:	d9800017 	ldw	r6,0(sp)
 4023e9c:	003ff406 	br	4023e70 <fputc+0x2c>

04023ea0 <_malloc_trim_r>:
 4023ea0:	defffb04 	addi	sp,sp,-20
 4023ea4:	dcc00315 	stw	r19,12(sp)
 4023ea8:	04c00034 	movhi	r19,0
 4023eac:	dc800215 	stw	r18,8(sp)
 4023eb0:	dc400115 	stw	r17,4(sp)
 4023eb4:	dc000015 	stw	r16,0(sp)
 4023eb8:	dfc00415 	stw	ra,16(sp)
 4023ebc:	2821883a 	mov	r16,r5
 4023ec0:	9cc36204 	addi	r19,r19,3464
 4023ec4:	2025883a 	mov	r18,r4
 4023ec8:	40318100 	call	4031810 <__malloc_lock>
 4023ecc:	98800217 	ldw	r2,8(r19)
 4023ed0:	14400117 	ldw	r17,4(r2)
 4023ed4:	00bfff04 	movi	r2,-4
 4023ed8:	88a2703a 	and	r17,r17,r2
 4023edc:	8c21c83a 	sub	r16,r17,r16
 4023ee0:	8403fbc4 	addi	r16,r16,4079
 4023ee4:	8020d33a 	srli	r16,r16,12
 4023ee8:	843fffc4 	addi	r16,r16,-1
 4023eec:	8020933a 	slli	r16,r16,12
 4023ef0:	80840008 	cmpgei	r2,r16,4096
 4023ef4:	10000626 	beq	r2,zero,4023f10 <_malloc_trim_r+0x70>
 4023ef8:	000b883a 	mov	r5,zero
 4023efc:	9009883a 	mov	r4,r18
 4023f00:	4025e440 	call	4025e44 <_sbrk_r>
 4023f04:	98c00217 	ldw	r3,8(r19)
 4023f08:	1c47883a 	add	r3,r3,r17
 4023f0c:	10c00a26 	beq	r2,r3,4023f38 <_malloc_trim_r+0x98>
 4023f10:	9009883a 	mov	r4,r18
 4023f14:	40318340 	call	4031834 <__malloc_unlock>
 4023f18:	0005883a 	mov	r2,zero
 4023f1c:	dfc00417 	ldw	ra,16(sp)
 4023f20:	dcc00317 	ldw	r19,12(sp)
 4023f24:	dc800217 	ldw	r18,8(sp)
 4023f28:	dc400117 	ldw	r17,4(sp)
 4023f2c:	dc000017 	ldw	r16,0(sp)
 4023f30:	dec00504 	addi	sp,sp,20
 4023f34:	f800283a 	ret
 4023f38:	040bc83a 	sub	r5,zero,r16
 4023f3c:	9009883a 	mov	r4,r18
 4023f40:	4025e440 	call	4025e44 <_sbrk_r>
 4023f44:	10bfffd8 	cmpnei	r2,r2,-1
 4023f48:	10000d26 	beq	r2,zero,4023f80 <_malloc_trim_r+0xe0>
 4023f4c:	00800034 	movhi	r2,0
 4023f50:	1089cc17 	ldw	r2,10032(r2)
 4023f54:	98c00217 	ldw	r3,8(r19)
 4023f58:	8c23c83a 	sub	r17,r17,r16
 4023f5c:	8c400054 	ori	r17,r17,1
 4023f60:	1421c83a 	sub	r16,r2,r16
 4023f64:	1c400115 	stw	r17,4(r3)
 4023f68:	00800034 	movhi	r2,0
 4023f6c:	9009883a 	mov	r4,r18
 4023f70:	1409cc15 	stw	r16,10032(r2)
 4023f74:	40318340 	call	4031834 <__malloc_unlock>
 4023f78:	00800044 	movi	r2,1
 4023f7c:	003fe706 	br	4023f1c <_malloc_trim_r+0x7c>
 4023f80:	000b883a 	mov	r5,zero
 4023f84:	9009883a 	mov	r4,r18
 4023f88:	4025e440 	call	4025e44 <_sbrk_r>
 4023f8c:	99000217 	ldw	r4,8(r19)
 4023f90:	1107c83a 	sub	r3,r2,r4
 4023f94:	19400410 	cmplti	r5,r3,16
 4023f98:	283fdd1e 	bne	r5,zero,4023f10 <_malloc_trim_r+0x70>
 4023f9c:	01400034 	movhi	r5,0
 4023fa0:	29494f17 	ldw	r5,9532(r5)
 4023fa4:	18c00054 	ori	r3,r3,1
 4023fa8:	20c00115 	stw	r3,4(r4)
 4023fac:	1145c83a 	sub	r2,r2,r5
 4023fb0:	01400034 	movhi	r5,0
 4023fb4:	2889cc15 	stw	r2,10032(r5)
 4023fb8:	003fd506 	br	4023f10 <_malloc_trim_r+0x70>

04023fbc <_free_r>:
 4023fbc:	28004f26 	beq	r5,zero,40240fc <_free_r+0x140>
 4023fc0:	defffd04 	addi	sp,sp,-12
 4023fc4:	dc400115 	stw	r17,4(sp)
 4023fc8:	dc000015 	stw	r16,0(sp)
 4023fcc:	2023883a 	mov	r17,r4
 4023fd0:	2821883a 	mov	r16,r5
 4023fd4:	dfc00215 	stw	ra,8(sp)
 4023fd8:	40318100 	call	4031810 <__malloc_lock>
 4023fdc:	81ffff17 	ldw	r7,-4(r16)
 4023fe0:	00bfff84 	movi	r2,-2
 4023fe4:	80fffe04 	addi	r3,r16,-8
 4023fe8:	3884703a 	and	r2,r7,r2
 4023fec:	01000034 	movhi	r4,0
 4023ff0:	188d883a 	add	r6,r3,r2
 4023ff4:	21036204 	addi	r4,r4,3464
 4023ff8:	31400117 	ldw	r5,4(r6)
 4023ffc:	22000217 	ldw	r8,8(r4)
 4024000:	027fff04 	movi	r9,-4
 4024004:	2a4a703a 	and	r5,r5,r9
 4024008:	41806426 	beq	r8,r6,402419c <_free_r+0x1e0>
 402400c:	31400115 	stw	r5,4(r6)
 4024010:	39c0004c 	andi	r7,r7,1
 4024014:	3151883a 	add	r8,r6,r5
 4024018:	3800281e 	bne	r7,zero,40240bc <_free_r+0x100>
 402401c:	82bffe17 	ldw	r10,-8(r16)
 4024020:	42000117 	ldw	r8,4(r8)
 4024024:	01c00034 	movhi	r7,0
 4024028:	1a87c83a 	sub	r3,r3,r10
 402402c:	1a400217 	ldw	r9,8(r3)
 4024030:	39c36404 	addi	r7,r7,3472
 4024034:	1285883a 	add	r2,r2,r10
 4024038:	4200004c 	andi	r8,r8,1
 402403c:	49c04c26 	beq	r9,r7,4024170 <_free_r+0x1b4>
 4024040:	1a800317 	ldw	r10,12(r3)
 4024044:	4a800315 	stw	r10,12(r9)
 4024048:	52400215 	stw	r9,8(r10)
 402404c:	40007126 	beq	r8,zero,4024214 <_free_r+0x258>
 4024050:	11400054 	ori	r5,r2,1
 4024054:	19400115 	stw	r5,4(r3)
 4024058:	30800015 	stw	r2,0(r6)
 402405c:	11408028 	cmpgeui	r5,r2,512
 4024060:	28002c1e 	bne	r5,zero,4024114 <_free_r+0x158>
 4024064:	100ad0fa 	srli	r5,r2,3
 4024068:	100cd17a 	srli	r6,r2,5
 402406c:	00800044 	movi	r2,1
 4024070:	29400044 	addi	r5,r5,1
 4024074:	280a90fa 	slli	r5,r5,3
 4024078:	21c00117 	ldw	r7,4(r4)
 402407c:	1184983a 	sll	r2,r2,r6
 4024080:	214b883a 	add	r5,r4,r5
 4024084:	29800017 	ldw	r6,0(r5)
 4024088:	11c4b03a 	or	r2,r2,r7
 402408c:	29fffe04 	addi	r7,r5,-8
 4024090:	19c00315 	stw	r7,12(r3)
 4024094:	19800215 	stw	r6,8(r3)
 4024098:	20800115 	stw	r2,4(r4)
 402409c:	28c00015 	stw	r3,0(r5)
 40240a0:	30c00315 	stw	r3,12(r6)
 40240a4:	8809883a 	mov	r4,r17
 40240a8:	dfc00217 	ldw	ra,8(sp)
 40240ac:	dc400117 	ldw	r17,4(sp)
 40240b0:	dc000017 	ldw	r16,0(sp)
 40240b4:	dec00304 	addi	sp,sp,12
 40240b8:	40318341 	jmpi	4031834 <__malloc_unlock>
 40240bc:	41c00117 	ldw	r7,4(r8)
 40240c0:	39c0004c 	andi	r7,r7,1
 40240c4:	38000e1e 	bne	r7,zero,4024100 <_free_r+0x144>
 40240c8:	01c00034 	movhi	r7,0
 40240cc:	1145883a 	add	r2,r2,r5
 40240d0:	39c36404 	addi	r7,r7,3472
 40240d4:	31400217 	ldw	r5,8(r6)
 40240d8:	12400054 	ori	r9,r2,1
 40240dc:	1891883a 	add	r8,r3,r2
 40240e0:	29c05226 	beq	r5,r7,402422c <_free_r+0x270>
 40240e4:	31800317 	ldw	r6,12(r6)
 40240e8:	29800315 	stw	r6,12(r5)
 40240ec:	31400215 	stw	r5,8(r6)
 40240f0:	1a400115 	stw	r9,4(r3)
 40240f4:	40800015 	stw	r2,0(r8)
 40240f8:	003fd806 	br	402405c <_free_r+0xa0>
 40240fc:	f800283a 	ret
 4024100:	11400054 	ori	r5,r2,1
 4024104:	817fff15 	stw	r5,-4(r16)
 4024108:	30800015 	stw	r2,0(r6)
 402410c:	11408028 	cmpgeui	r5,r2,512
 4024110:	283fd426 	beq	r5,zero,4024064 <_free_r+0xa8>
 4024114:	100ad27a 	srli	r5,r2,9
 4024118:	29800168 	cmpgeui	r6,r5,5
 402411c:	3000341e 	bne	r6,zero,40241f0 <_free_r+0x234>
 4024120:	100ad1ba 	srli	r5,r2,6
 4024124:	29800e44 	addi	r6,r5,57
 4024128:	300c90fa 	slli	r6,r6,3
 402412c:	29c00e04 	addi	r7,r5,56
 4024130:	218d883a 	add	r6,r4,r6
 4024134:	31400017 	ldw	r5,0(r6)
 4024138:	31bffe04 	addi	r6,r6,-8
 402413c:	31404226 	beq	r6,r5,4024248 <_free_r+0x28c>
 4024140:	01ffff04 	movi	r7,-4
 4024144:	29000117 	ldw	r4,4(r5)
 4024148:	21c8703a 	and	r4,r4,r7
 402414c:	1100022e 	bgeu	r2,r4,4024158 <_free_r+0x19c>
 4024150:	29400217 	ldw	r5,8(r5)
 4024154:	317ffb1e 	bne	r6,r5,4024144 <_free_r+0x188>
 4024158:	29800317 	ldw	r6,12(r5)
 402415c:	19800315 	stw	r6,12(r3)
 4024160:	19400215 	stw	r5,8(r3)
 4024164:	30c00215 	stw	r3,8(r6)
 4024168:	28c00315 	stw	r3,12(r5)
 402416c:	003fcd06 	br	40240a4 <_free_r+0xe8>
 4024170:	40004d1e 	bne	r8,zero,40242a8 <_free_r+0x2ec>
 4024174:	31000317 	ldw	r4,12(r6)
 4024178:	31800217 	ldw	r6,8(r6)
 402417c:	2885883a 	add	r2,r5,r2
 4024180:	11400054 	ori	r5,r2,1
 4024184:	31000315 	stw	r4,12(r6)
 4024188:	21800215 	stw	r6,8(r4)
 402418c:	19400115 	stw	r5,4(r3)
 4024190:	1887883a 	add	r3,r3,r2
 4024194:	18800015 	stw	r2,0(r3)
 4024198:	003fc206 	br	40240a4 <_free_r+0xe8>
 402419c:	39c0004c 	andi	r7,r7,1
 40241a0:	1145883a 	add	r2,r2,r5
 40241a4:	3800071e 	bne	r7,zero,40241c4 <_free_r+0x208>
 40241a8:	81fffe17 	ldw	r7,-8(r16)
 40241ac:	19c7c83a 	sub	r3,r3,r7
 40241b0:	19400317 	ldw	r5,12(r3)
 40241b4:	19800217 	ldw	r6,8(r3)
 40241b8:	11c5883a 	add	r2,r2,r7
 40241bc:	31400315 	stw	r5,12(r6)
 40241c0:	29800215 	stw	r6,8(r5)
 40241c4:	01400034 	movhi	r5,0
 40241c8:	11800054 	ori	r6,r2,1
 40241cc:	29495017 	ldw	r5,9536(r5)
 40241d0:	19800115 	stw	r6,4(r3)
 40241d4:	20c00215 	stw	r3,8(r4)
 40241d8:	117fb236 	bltu	r2,r5,40240a4 <_free_r+0xe8>
 40241dc:	00800034 	movhi	r2,0
 40241e0:	11496017 	ldw	r5,9600(r2)
 40241e4:	8809883a 	mov	r4,r17
 40241e8:	4023ea00 	call	4023ea0 <_malloc_trim_r>
 40241ec:	003fad06 	br	40240a4 <_free_r+0xe8>
 40241f0:	29800568 	cmpgeui	r6,r5,21
 40241f4:	30000926 	beq	r6,zero,402421c <_free_r+0x260>
 40241f8:	29801568 	cmpgeui	r6,r5,85
 40241fc:	3000191e 	bne	r6,zero,4024264 <_free_r+0x2a8>
 4024200:	100ad33a 	srli	r5,r2,12
 4024204:	29801bc4 	addi	r6,r5,111
 4024208:	300c90fa 	slli	r6,r6,3
 402420c:	29c01b84 	addi	r7,r5,110
 4024210:	003fc706 	br	4024130 <_free_r+0x174>
 4024214:	1145883a 	add	r2,r2,r5
 4024218:	003fae06 	br	40240d4 <_free_r+0x118>
 402421c:	29801704 	addi	r6,r5,92
 4024220:	300c90fa 	slli	r6,r6,3
 4024224:	29c016c4 	addi	r7,r5,91
 4024228:	003fc106 	br	4024130 <_free_r+0x174>
 402422c:	20c00515 	stw	r3,20(r4)
 4024230:	20c00415 	stw	r3,16(r4)
 4024234:	19c00315 	stw	r7,12(r3)
 4024238:	19c00215 	stw	r7,8(r3)
 402423c:	1a400115 	stw	r9,4(r3)
 4024240:	40800015 	stw	r2,0(r8)
 4024244:	003f9706 	br	40240a4 <_free_r+0xe8>
 4024248:	380fd0ba 	srai	r7,r7,2
 402424c:	00800044 	movi	r2,1
 4024250:	22000117 	ldw	r8,4(r4)
 4024254:	11ce983a 	sll	r7,r2,r7
 4024258:	3a0eb03a 	or	r7,r7,r8
 402425c:	21c00115 	stw	r7,4(r4)
 4024260:	003fbe06 	br	402415c <_free_r+0x1a0>
 4024264:	29805568 	cmpgeui	r6,r5,341
 4024268:	3000051e 	bne	r6,zero,4024280 <_free_r+0x2c4>
 402426c:	100ad3fa 	srli	r5,r2,15
 4024270:	29801e04 	addi	r6,r5,120
 4024274:	300c90fa 	slli	r6,r6,3
 4024278:	29c01dc4 	addi	r7,r5,119
 402427c:	003fac06 	br	4024130 <_free_r+0x174>
 4024280:	29415568 	cmpgeui	r5,r5,1365
 4024284:	2800051e 	bne	r5,zero,402429c <_free_r+0x2e0>
 4024288:	100ad4ba 	srli	r5,r2,18
 402428c:	29801f44 	addi	r6,r5,125
 4024290:	300c90fa 	slli	r6,r6,3
 4024294:	29c01f04 	addi	r7,r5,124
 4024298:	003fa506 	br	4024130 <_free_r+0x174>
 402429c:	0180fe04 	movi	r6,1016
 40242a0:	01c01f84 	movi	r7,126
 40242a4:	003fa206 	br	4024130 <_free_r+0x174>
 40242a8:	11000054 	ori	r4,r2,1
 40242ac:	19000115 	stw	r4,4(r3)
 40242b0:	30800015 	stw	r2,0(r6)
 40242b4:	003f7b06 	br	40240a4 <_free_r+0xe8>

040242b8 <_fseek_r>:
 40242b8:	40242d81 	jmpi	40242d8 <_fseeko_r>

040242bc <fseek>:
 40242bc:	00c00034 	movhi	r3,0
 40242c0:	2005883a 	mov	r2,r4
 40242c4:	19094e17 	ldw	r4,9528(r3)
 40242c8:	300f883a 	mov	r7,r6
 40242cc:	280d883a 	mov	r6,r5
 40242d0:	100b883a 	mov	r5,r2
 40242d4:	40242d81 	jmpi	40242d8 <_fseeko_r>

040242d8 <_fseeko_r>:
 40242d8:	deffe504 	addi	sp,sp,-108
 40242dc:	dd001615 	stw	r20,88(sp)
 40242e0:	dcc01515 	stw	r19,84(sp)
 40242e4:	dc401315 	stw	r17,76(sp)
 40242e8:	dc001215 	stw	r16,72(sp)
 40242ec:	dfc01a15 	stw	ra,104(sp)
 40242f0:	ddc01915 	stw	r23,100(sp)
 40242f4:	dd801815 	stw	r22,96(sp)
 40242f8:	dd401715 	stw	r21,92(sp)
 40242fc:	dc801415 	stw	r18,80(sp)
 4024300:	2023883a 	mov	r17,r4
 4024304:	2821883a 	mov	r16,r5
 4024308:	3027883a 	mov	r19,r6
 402430c:	3829883a 	mov	r20,r7
 4024310:	20000226 	beq	r4,zero,402431c <_fseeko_r+0x44>
 4024314:	20800e17 	ldw	r2,56(r4)
 4024318:	10001a26 	beq	r2,zero,4024384 <_fseeko_r+0xac>
 402431c:	8080030b 	ldhu	r2,12(r16)
 4024320:	1080420c 	andi	r2,r2,264
 4024324:	10804218 	cmpnei	r2,r2,264
 4024328:	10001b26 	beq	r2,zero,4024398 <_fseeko_r+0xc0>
 402432c:	85400a17 	ldw	r21,40(r16)
 4024330:	a800de26 	beq	r21,zero,40246ac <_fseeko_r+0x3d4>
 4024334:	a0800060 	cmpeqi	r2,r20,1
 4024338:	10001b1e 	bne	r2,zero,40243a8 <_fseeko_r+0xd0>
 402433c:	04bfff44 	movi	r18,-3
 4024340:	a4a4703a 	and	r18,r20,r18
 4024344:	90004f26 	beq	r18,zero,4024484 <_fseeko_r+0x1ac>
 4024348:	00800584 	movi	r2,22
 402434c:	88800015 	stw	r2,0(r17)
 4024350:	04bfffc4 	movi	r18,-1
 4024354:	9005883a 	mov	r2,r18
 4024358:	dfc01a17 	ldw	ra,104(sp)
 402435c:	ddc01917 	ldw	r23,100(sp)
 4024360:	dd801817 	ldw	r22,96(sp)
 4024364:	dd401717 	ldw	r21,92(sp)
 4024368:	dd001617 	ldw	r20,88(sp)
 402436c:	dcc01517 	ldw	r19,84(sp)
 4024370:	dc801417 	ldw	r18,80(sp)
 4024374:	dc401317 	ldw	r17,76(sp)
 4024378:	dc001217 	ldw	r16,72(sp)
 402437c:	dec01b04 	addi	sp,sp,108
 4024380:	f800283a 	ret
 4024384:	4023c600 	call	4023c60 <__sinit>
 4024388:	8080030b 	ldhu	r2,12(r16)
 402438c:	1080420c 	andi	r2,r2,264
 4024390:	10804218 	cmpnei	r2,r2,264
 4024394:	103fe51e 	bne	r2,zero,402432c <_fseeko_r+0x54>
 4024398:	800b883a 	mov	r5,r16
 402439c:	8809883a 	mov	r4,r17
 40243a0:	40238280 	call	4023828 <_fflush_r>
 40243a4:	003fe106 	br	402432c <_fseeko_r+0x54>
 40243a8:	800b883a 	mov	r5,r16
 40243ac:	8809883a 	mov	r4,r17
 40243b0:	40247380 	call	4024738 <_ftello_r>
 40243b4:	1025883a 	mov	r18,r2
 40243b8:	10bfffd8 	cmpnei	r2,r2,-1
 40243bc:	103fe426 	beq	r2,zero,4024350 <_fseeko_r+0x78>
 40243c0:	80800417 	ldw	r2,16(r16)
 40243c4:	9ca7883a 	add	r19,r19,r18
 40243c8:	05800044 	movi	r22,1
 40243cc:	0029883a 	mov	r20,zero
 40243d0:	10002f26 	beq	r2,zero,4024490 <_fseeko_r+0x1b8>
 40243d4:	8080030b 	ldhu	r2,12(r16)
 40243d8:	10c2068c 	andi	r3,r2,2074
 40243dc:	1800071e 	bne	r3,zero,40243fc <_fseeko_r+0x124>
 40243e0:	10c1000c 	andi	r3,r2,1024
 40243e4:	18003d1e 	bne	r3,zero,40244dc <_fseeko_r+0x204>
 40243e8:	00c100b4 	movhi	r3,1026
 40243ec:	18d7de04 	addi	r3,r3,24440
 40243f0:	a8c02b26 	beq	r21,r3,40244a0 <_fseeko_r+0x1c8>
 40243f4:	10820014 	ori	r2,r2,2048
 40243f8:	8080030d 	sth	r2,12(r16)
 40243fc:	800b883a 	mov	r5,r16
 4024400:	8809883a 	mov	r4,r17
 4024404:	40238280 	call	4023828 <_fflush_r>
 4024408:	1025883a 	mov	r18,r2
 402440c:	103fd01e 	bne	r2,zero,4024350 <_fseeko_r+0x78>
 4024410:	81400717 	ldw	r5,28(r16)
 4024414:	a00f883a 	mov	r7,r20
 4024418:	980d883a 	mov	r6,r19
 402441c:	8809883a 	mov	r4,r17
 4024420:	a83ee83a 	callr	r21
 4024424:	10bfffe0 	cmpeqi	r2,r2,-1
 4024428:	103fc91e 	bne	r2,zero,4024350 <_fseeko_r+0x78>
 402442c:	81400c17 	ldw	r5,48(r16)
 4024430:	28000526 	beq	r5,zero,4024448 <_fseeko_r+0x170>
 4024434:	80801004 	addi	r2,r16,64
 4024438:	28800226 	beq	r5,r2,4024444 <_fseeko_r+0x16c>
 402443c:	8809883a 	mov	r4,r17
 4024440:	4023fbc0 	call	4023fbc <_free_r>
 4024444:	80000c15 	stw	zero,48(r16)
 4024448:	8080030b 	ldhu	r2,12(r16)
 402444c:	80c00417 	ldw	r3,16(r16)
 4024450:	80000115 	stw	zero,4(r16)
 4024454:	10bdf7cc 	andi	r2,r2,63455
 4024458:	80c00015 	stw	r3,0(r16)
 402445c:	8080030d 	sth	r2,12(r16)
 4024460:	80001705 	stb	zero,92(r16)
 4024464:	80001745 	stb	zero,93(r16)
 4024468:	80001785 	stb	zero,94(r16)
 402446c:	800017c5 	stb	zero,95(r16)
 4024470:	80001805 	stb	zero,96(r16)
 4024474:	80001845 	stb	zero,97(r16)
 4024478:	80001885 	stb	zero,98(r16)
 402447c:	800018c5 	stb	zero,99(r16)
 4024480:	003fb406 	br	4024354 <_fseeko_r+0x7c>
 4024484:	80800417 	ldw	r2,16(r16)
 4024488:	002d883a 	mov	r22,zero
 402448c:	103fd11e 	bne	r2,zero,40243d4 <_fseeko_r+0xfc>
 4024490:	800b883a 	mov	r5,r16
 4024494:	8809883a 	mov	r4,r17
 4024498:	4024c480 	call	4024c48 <__smakebuf_r>
 402449c:	003fcd06 	br	40243d4 <_fseeko_r+0xfc>
 40244a0:	8140038f 	ldh	r5,14(r16)
 40244a4:	283fd316 	blt	r5,zero,40243f4 <_fseeko_r+0x11c>
 40244a8:	d80d883a 	mov	r6,sp
 40244ac:	8809883a 	mov	r4,r17
 40244b0:	40246d80 	call	40246d8 <_fstat_r>
 40244b4:	10006b1e 	bne	r2,zero,4024664 <_fseeko_r+0x38c>
 40244b8:	d8c00117 	ldw	r3,4(sp)
 40244bc:	01200014 	movui	r4,32768
 40244c0:	8080030b 	ldhu	r2,12(r16)
 40244c4:	18fc000c 	andi	r3,r3,61440
 40244c8:	193fca1e 	bne	r3,r4,40243f4 <_fseeko_r+0x11c>
 40244cc:	10810014 	ori	r2,r2,1024
 40244d0:	00c10004 	movi	r3,1024
 40244d4:	80c01315 	stw	r3,76(r16)
 40244d8:	8080030d 	sth	r2,12(r16)
 40244dc:	a000441e 	bne	r20,zero,40245f0 <_fseeko_r+0x318>
 40244e0:	982f883a 	mov	r23,r19
 40244e4:	b0004a1e 	bne	r22,zero,4024610 <_fseeko_r+0x338>
 40244e8:	8080030b 	ldhu	r2,12(r16)
 40244ec:	1084000c 	andi	r2,r2,4096
 40244f0:	10005426 	beq	r2,zero,4024644 <_fseeko_r+0x36c>
 40244f4:	80801417 	ldw	r2,80(r16)
 40244f8:	80c00117 	ldw	r3,4(r16)
 40244fc:	81400c17 	ldw	r5,48(r16)
 4024500:	1809883a 	mov	r4,r3
 4024504:	10e5c83a 	sub	r18,r2,r3
 4024508:	28004726 	beq	r5,zero,4024628 <_fseeko_r+0x350>
 402450c:	81000f17 	ldw	r4,60(r16)
 4024510:	9125c83a 	sub	r18,r18,r4
 4024514:	80800e17 	ldw	r2,56(r16)
 4024518:	81800417 	ldw	r6,16(r16)
 402451c:	90e5883a 	add	r18,r18,r3
 4024520:	1185c83a 	sub	r2,r2,r6
 4024524:	90a5c83a 	sub	r18,r18,r2
 4024528:	1105883a 	add	r2,r2,r4
 402452c:	bc800216 	blt	r23,r18,4024538 <_fseeko_r+0x260>
 4024530:	9087883a 	add	r3,r18,r2
 4024534:	b8c04d36 	bltu	r23,r3,402466c <_fseeko_r+0x394>
 4024538:	84801317 	ldw	r18,76(r16)
 402453c:	81400717 	ldw	r5,28(r16)
 4024540:	000f883a 	mov	r7,zero
 4024544:	04a5c83a 	sub	r18,zero,r18
 4024548:	95e4703a 	and	r18,r18,r23
 402454c:	900d883a 	mov	r6,r18
 4024550:	8809883a 	mov	r4,r17
 4024554:	a83ee83a 	callr	r21
 4024558:	10bfffe0 	cmpeqi	r2,r2,-1
 402455c:	103fa71e 	bne	r2,zero,40243fc <_fseeko_r+0x124>
 4024560:	80800417 	ldw	r2,16(r16)
 4024564:	81400c17 	ldw	r5,48(r16)
 4024568:	80000115 	stw	zero,4(r16)
 402456c:	80800015 	stw	r2,0(r16)
 4024570:	28000526 	beq	r5,zero,4024588 <_fseeko_r+0x2b0>
 4024574:	80801004 	addi	r2,r16,64
 4024578:	28800226 	beq	r5,r2,4024584 <_fseeko_r+0x2ac>
 402457c:	8809883a 	mov	r4,r17
 4024580:	4023fbc0 	call	4023fbc <_free_r>
 4024584:	80000c15 	stw	zero,48(r16)
 4024588:	8080030b 	ldhu	r2,12(r16)
 402458c:	bcadc83a 	sub	r22,r23,r18
 4024590:	10bff7cc 	andi	r2,r2,65503
 4024594:	8080030d 	sth	r2,12(r16)
 4024598:	bc800b26 	beq	r23,r18,40245c8 <_fseeko_r+0x2f0>
 402459c:	800b883a 	mov	r5,r16
 40245a0:	8809883a 	mov	r4,r17
 40245a4:	4025b880 	call	4025b88 <__srefill_r>
 40245a8:	103f941e 	bne	r2,zero,40243fc <_fseeko_r+0x124>
 40245ac:	80800117 	ldw	r2,4(r16)
 40245b0:	15bf9236 	bltu	r2,r22,40243fc <_fseeko_r+0x124>
 40245b4:	80c00017 	ldw	r3,0(r16)
 40245b8:	1585c83a 	sub	r2,r2,r22
 40245bc:	80800115 	stw	r2,4(r16)
 40245c0:	1dad883a 	add	r22,r3,r22
 40245c4:	85800015 	stw	r22,0(r16)
 40245c8:	80001705 	stb	zero,92(r16)
 40245cc:	80001745 	stb	zero,93(r16)
 40245d0:	80001785 	stb	zero,94(r16)
 40245d4:	800017c5 	stb	zero,95(r16)
 40245d8:	80001805 	stb	zero,96(r16)
 40245dc:	80001845 	stb	zero,97(r16)
 40245e0:	80001885 	stb	zero,98(r16)
 40245e4:	800018c5 	stb	zero,99(r16)
 40245e8:	0025883a 	mov	r18,zero
 40245ec:	003f5906 	br	4024354 <_fseeko_r+0x7c>
 40245f0:	8140038f 	ldh	r5,14(r16)
 40245f4:	d80d883a 	mov	r6,sp
 40245f8:	8809883a 	mov	r4,r17
 40245fc:	40246d80 	call	40246d8 <_fstat_r>
 4024600:	103f7e1e 	bne	r2,zero,40243fc <_fseeko_r+0x124>
 4024604:	ddc00417 	ldw	r23,16(sp)
 4024608:	9def883a 	add	r23,r19,r23
 402460c:	b03fb626 	beq	r22,zero,40244e8 <_fseeko_r+0x210>
 4024610:	81400c17 	ldw	r5,48(r16)
 4024614:	28000326 	beq	r5,zero,4024624 <_fseeko_r+0x34c>
 4024618:	80c00117 	ldw	r3,4(r16)
 402461c:	81000f17 	ldw	r4,60(r16)
 4024620:	003fbc06 	br	4024514 <_fseeko_r+0x23c>
 4024624:	81000117 	ldw	r4,4(r16)
 4024628:	80800017 	ldw	r2,0(r16)
 402462c:	81800417 	ldw	r6,16(r16)
 4024630:	000b883a 	mov	r5,zero
 4024634:	1185c83a 	sub	r2,r2,r6
 4024638:	90a5c83a 	sub	r18,r18,r2
 402463c:	2085883a 	add	r2,r4,r2
 4024640:	003fba06 	br	402452c <_fseeko_r+0x254>
 4024644:	81400717 	ldw	r5,28(r16)
 4024648:	01c00044 	movi	r7,1
 402464c:	000d883a 	mov	r6,zero
 4024650:	8809883a 	mov	r4,r17
 4024654:	a83ee83a 	callr	r21
 4024658:	10ffffe0 	cmpeqi	r3,r2,-1
 402465c:	183fa626 	beq	r3,zero,40244f8 <_fseeko_r+0x220>
 4024660:	003f6606 	br	40243fc <_fseeko_r+0x124>
 4024664:	8080030b 	ldhu	r2,12(r16)
 4024668:	003f6206 	br	40243f4 <_fseeko_r+0x11c>
 402466c:	bca5c83a 	sub	r18,r23,r18
 4024670:	348d883a 	add	r6,r6,r18
 4024674:	14a5c83a 	sub	r18,r2,r18
 4024678:	81800015 	stw	r6,0(r16)
 402467c:	84800115 	stw	r18,4(r16)
 4024680:	28000526 	beq	r5,zero,4024698 <_fseeko_r+0x3c0>
 4024684:	80801004 	addi	r2,r16,64
 4024688:	28800226 	beq	r5,r2,4024694 <_fseeko_r+0x3bc>
 402468c:	8809883a 	mov	r4,r17
 4024690:	4023fbc0 	call	4023fbc <_free_r>
 4024694:	80000c15 	stw	zero,48(r16)
 4024698:	80c0030b 	ldhu	r3,12(r16)
 402469c:	80001705 	stb	zero,92(r16)
 40246a0:	18fff7cc 	andi	r3,r3,65503
 40246a4:	80c0030d 	sth	r3,12(r16)
 40246a8:	003fc806 	br	40245cc <_fseeko_r+0x2f4>
 40246ac:	00800744 	movi	r2,29
 40246b0:	88800015 	stw	r2,0(r17)
 40246b4:	04bfffc4 	movi	r18,-1
 40246b8:	003f2606 	br	4024354 <_fseeko_r+0x7c>

040246bc <fseeko>:
 40246bc:	00c00034 	movhi	r3,0
 40246c0:	2005883a 	mov	r2,r4
 40246c4:	19094e17 	ldw	r4,9528(r3)
 40246c8:	300f883a 	mov	r7,r6
 40246cc:	280d883a 	mov	r6,r5
 40246d0:	100b883a 	mov	r5,r2
 40246d4:	40242d81 	jmpi	40242d8 <_fseeko_r>

040246d8 <_fstat_r>:
 40246d8:	2807883a 	mov	r3,r5
 40246dc:	defffe04 	addi	sp,sp,-8
 40246e0:	dc000015 	stw	r16,0(sp)
 40246e4:	00800034 	movhi	r2,0
 40246e8:	300b883a 	mov	r5,r6
 40246ec:	2021883a 	mov	r16,r4
 40246f0:	1809883a 	mov	r4,r3
 40246f4:	dfc00115 	stw	ra,4(sp)
 40246f8:	10095d15 	stw	zero,9588(r2)
 40246fc:	40311000 	call	4031100 <fstat>
 4024700:	10ffffd8 	cmpnei	r3,r2,-1
 4024704:	18000426 	beq	r3,zero,4024718 <_fstat_r+0x40>
 4024708:	dfc00117 	ldw	ra,4(sp)
 402470c:	dc000017 	ldw	r16,0(sp)
 4024710:	dec00204 	addi	sp,sp,8
 4024714:	f800283a 	ret
 4024718:	00c00034 	movhi	r3,0
 402471c:	18c95d17 	ldw	r3,9588(r3)
 4024720:	183ff926 	beq	r3,zero,4024708 <_fstat_r+0x30>
 4024724:	80c00015 	stw	r3,0(r16)
 4024728:	dfc00117 	ldw	ra,4(sp)
 402472c:	dc000017 	ldw	r16,0(sp)
 4024730:	dec00204 	addi	sp,sp,8
 4024734:	f800283a 	ret

04024738 <_ftello_r>:
 4024738:	defffd04 	addi	sp,sp,-12
 402473c:	dc400115 	stw	r17,4(sp)
 4024740:	dc000015 	stw	r16,0(sp)
 4024744:	dfc00215 	stw	ra,8(sp)
 4024748:	2023883a 	mov	r17,r4
 402474c:	2821883a 	mov	r16,r5
 4024750:	20000226 	beq	r4,zero,402475c <_ftello_r+0x24>
 4024754:	20800e17 	ldw	r2,56(r4)
 4024758:	10002826 	beq	r2,zero,40247fc <_ftello_r+0xc4>
 402475c:	82000a17 	ldw	r8,40(r16)
 4024760:	40003826 	beq	r8,zero,4024844 <_ftello_r+0x10c>
 4024764:	80c0030b 	ldhu	r3,12(r16)
 4024768:	1880030c 	andi	r2,r3,12
 402476c:	10800218 	cmpnei	r2,r2,8
 4024770:	10002426 	beq	r2,zero,4024804 <_ftello_r+0xcc>
 4024774:	1884000c 	andi	r2,r3,4096
 4024778:	1000151e 	bne	r2,zero,40247d0 <_ftello_r+0x98>
 402477c:	81400717 	ldw	r5,28(r16)
 4024780:	01c00044 	movi	r7,1
 4024784:	000d883a 	mov	r6,zero
 4024788:	8809883a 	mov	r4,r17
 402478c:	403ee83a 	callr	r8
 4024790:	10ffffe0 	cmpeqi	r3,r2,-1
 4024794:	1800291e 	bne	r3,zero,402483c <_ftello_r+0x104>
 4024798:	80c0030b 	ldhu	r3,12(r16)
 402479c:	1900010c 	andi	r4,r3,4
 40247a0:	20000e26 	beq	r4,zero,40247dc <_ftello_r+0xa4>
 40247a4:	81000117 	ldw	r4,4(r16)
 40247a8:	80c00c17 	ldw	r3,48(r16)
 40247ac:	1105c83a 	sub	r2,r2,r4
 40247b0:	18000226 	beq	r3,zero,40247bc <_ftello_r+0x84>
 40247b4:	80c00f17 	ldw	r3,60(r16)
 40247b8:	10c5c83a 	sub	r2,r2,r3
 40247bc:	dfc00217 	ldw	ra,8(sp)
 40247c0:	dc400117 	ldw	r17,4(sp)
 40247c4:	dc000017 	ldw	r16,0(sp)
 40247c8:	dec00304 	addi	sp,sp,12
 40247cc:	f800283a 	ret
 40247d0:	1900010c 	andi	r4,r3,4
 40247d4:	80801417 	ldw	r2,80(r16)
 40247d8:	203ff21e 	bne	r4,zero,40247a4 <_ftello_r+0x6c>
 40247dc:	18c0020c 	andi	r3,r3,8
 40247e0:	183ff626 	beq	r3,zero,40247bc <_ftello_r+0x84>
 40247e4:	80c00017 	ldw	r3,0(r16)
 40247e8:	183ff426 	beq	r3,zero,40247bc <_ftello_r+0x84>
 40247ec:	81000417 	ldw	r4,16(r16)
 40247f0:	1907c83a 	sub	r3,r3,r4
 40247f4:	10c5883a 	add	r2,r2,r3
 40247f8:	003ff006 	br	40247bc <_ftello_r+0x84>
 40247fc:	4023c600 	call	4023c60 <__sinit>
 4024800:	003fd606 	br	402475c <_ftello_r+0x24>
 4024804:	80800017 	ldw	r2,0(r16)
 4024808:	103fda26 	beq	r2,zero,4024774 <_ftello_r+0x3c>
 402480c:	81000417 	ldw	r4,16(r16)
 4024810:	1105c83a 	sub	r2,r2,r4
 4024814:	00bfd70e 	bge	zero,r2,4024774 <_ftello_r+0x3c>
 4024818:	1880400c 	andi	r2,r3,256
 402481c:	103fd526 	beq	r2,zero,4024774 <_ftello_r+0x3c>
 4024820:	81400717 	ldw	r5,28(r16)
 4024824:	01c00084 	movi	r7,2
 4024828:	000d883a 	mov	r6,zero
 402482c:	8809883a 	mov	r4,r17
 4024830:	403ee83a 	callr	r8
 4024834:	10ffffd8 	cmpnei	r3,r2,-1
 4024838:	183fd71e 	bne	r3,zero,4024798 <_ftello_r+0x60>
 402483c:	00bfffc4 	movi	r2,-1
 4024840:	003fde06 	br	40247bc <_ftello_r+0x84>
 4024844:	00800744 	movi	r2,29
 4024848:	88800015 	stw	r2,0(r17)
 402484c:	00bfffc4 	movi	r2,-1
 4024850:	003fda06 	br	40247bc <_ftello_r+0x84>

04024854 <ftello>:
 4024854:	00800034 	movhi	r2,0
 4024858:	200b883a 	mov	r5,r4
 402485c:	11094e17 	ldw	r4,9528(r2)
 4024860:	40247381 	jmpi	4024738 <_ftello_r>

04024864 <_fwalk>:
 4024864:	defffa04 	addi	sp,sp,-24
 4024868:	dd000415 	stw	r20,16(sp)
 402486c:	dcc00315 	stw	r19,12(sp)
 4024870:	dc800215 	stw	r18,8(sp)
 4024874:	dfc00515 	stw	ra,20(sp)
 4024878:	dc400115 	stw	r17,4(sp)
 402487c:	dc000015 	stw	r16,0(sp)
 4024880:	2827883a 	mov	r19,r5
 4024884:	2480b804 	addi	r18,r4,736
 4024888:	0029883a 	mov	r20,zero
 402488c:	94400117 	ldw	r17,4(r18)
 4024890:	94000217 	ldw	r16,8(r18)
 4024894:	8c7fffc4 	addi	r17,r17,-1
 4024898:	88000d16 	blt	r17,zero,40248d0 <_fwalk+0x6c>
 402489c:	8080030b 	ldhu	r2,12(r16)
 40248a0:	8c7fffc4 	addi	r17,r17,-1
 40248a4:	108000b0 	cmpltui	r2,r2,2
 40248a8:	1000061e 	bne	r2,zero,40248c4 <_fwalk+0x60>
 40248ac:	8080038f 	ldh	r2,14(r16)
 40248b0:	8009883a 	mov	r4,r16
 40248b4:	10bfffe0 	cmpeqi	r2,r2,-1
 40248b8:	1000021e 	bne	r2,zero,40248c4 <_fwalk+0x60>
 40248bc:	983ee83a 	callr	r19
 40248c0:	a0a8b03a 	or	r20,r20,r2
 40248c4:	88bfffd8 	cmpnei	r2,r17,-1
 40248c8:	84001a04 	addi	r16,r16,104
 40248cc:	103ff31e 	bne	r2,zero,402489c <_fwalk+0x38>
 40248d0:	94800017 	ldw	r18,0(r18)
 40248d4:	903fed1e 	bne	r18,zero,402488c <_fwalk+0x28>
 40248d8:	a005883a 	mov	r2,r20
 40248dc:	dfc00517 	ldw	ra,20(sp)
 40248e0:	dd000417 	ldw	r20,16(sp)
 40248e4:	dcc00317 	ldw	r19,12(sp)
 40248e8:	dc800217 	ldw	r18,8(sp)
 40248ec:	dc400117 	ldw	r17,4(sp)
 40248f0:	dc000017 	ldw	r16,0(sp)
 40248f4:	dec00604 	addi	sp,sp,24
 40248f8:	f800283a 	ret

040248fc <_fwalk_reent>:
 40248fc:	defff904 	addi	sp,sp,-28
 4024900:	dd400515 	stw	r21,20(sp)
 4024904:	dd000415 	stw	r20,16(sp)
 4024908:	dcc00315 	stw	r19,12(sp)
 402490c:	dc800215 	stw	r18,8(sp)
 4024910:	dfc00615 	stw	ra,24(sp)
 4024914:	dc400115 	stw	r17,4(sp)
 4024918:	dc000015 	stw	r16,0(sp)
 402491c:	202b883a 	mov	r21,r4
 4024920:	2827883a 	mov	r19,r5
 4024924:	2480b804 	addi	r18,r4,736
 4024928:	0029883a 	mov	r20,zero
 402492c:	94400117 	ldw	r17,4(r18)
 4024930:	94000217 	ldw	r16,8(r18)
 4024934:	8c7fffc4 	addi	r17,r17,-1
 4024938:	88000e16 	blt	r17,zero,4024974 <_fwalk_reent+0x78>
 402493c:	8080030b 	ldhu	r2,12(r16)
 4024940:	8c7fffc4 	addi	r17,r17,-1
 4024944:	108000b0 	cmpltui	r2,r2,2
 4024948:	1000071e 	bne	r2,zero,4024968 <_fwalk_reent+0x6c>
 402494c:	8080038f 	ldh	r2,14(r16)
 4024950:	800b883a 	mov	r5,r16
 4024954:	a809883a 	mov	r4,r21
 4024958:	10bfffe0 	cmpeqi	r2,r2,-1
 402495c:	1000021e 	bne	r2,zero,4024968 <_fwalk_reent+0x6c>
 4024960:	983ee83a 	callr	r19
 4024964:	a0a8b03a 	or	r20,r20,r2
 4024968:	88bfffd8 	cmpnei	r2,r17,-1
 402496c:	84001a04 	addi	r16,r16,104
 4024970:	103ff21e 	bne	r2,zero,402493c <_fwalk_reent+0x40>
 4024974:	94800017 	ldw	r18,0(r18)
 4024978:	903fec1e 	bne	r18,zero,402492c <_fwalk_reent+0x30>
 402497c:	a005883a 	mov	r2,r20
 4024980:	dfc00617 	ldw	ra,24(sp)
 4024984:	dd400517 	ldw	r21,20(sp)
 4024988:	dd000417 	ldw	r20,16(sp)
 402498c:	dcc00317 	ldw	r19,12(sp)
 4024990:	dc800217 	ldw	r18,8(sp)
 4024994:	dc400117 	ldw	r17,4(sp)
 4024998:	dc000017 	ldw	r16,0(sp)
 402499c:	dec00704 	addi	sp,sp,28
 40249a0:	f800283a 	ret

040249a4 <_fwrite_r>:
 40249a4:	defff604 	addi	sp,sp,-40
 40249a8:	dcc00815 	stw	r19,32(sp)
 40249ac:	39a7383a 	mul	r19,r7,r6
 40249b0:	00800044 	movi	r2,1
 40249b4:	dc800715 	stw	r18,28(sp)
 40249b8:	dc400615 	stw	r17,24(sp)
 40249bc:	dc000515 	stw	r16,20(sp)
 40249c0:	d9400015 	stw	r5,0(sp)
 40249c4:	dfc00915 	stw	ra,36(sp)
 40249c8:	dcc00115 	stw	r19,4(sp)
 40249cc:	dcc00415 	stw	r19,16(sp)
 40249d0:	dec00215 	stw	sp,8(sp)
 40249d4:	d8800315 	stw	r2,12(sp)
 40249d8:	d9400a17 	ldw	r5,40(sp)
 40249dc:	3025883a 	mov	r18,r6
 40249e0:	3821883a 	mov	r16,r7
 40249e4:	2023883a 	mov	r17,r4
 40249e8:	20000226 	beq	r4,zero,40249f4 <_fwrite_r+0x50>
 40249ec:	20800e17 	ldw	r2,56(r4)
 40249f0:	10001826 	beq	r2,zero,4024a54 <_fwrite_r+0xb0>
 40249f4:	2880030b 	ldhu	r2,12(r5)
 40249f8:	10c8000c 	andi	r3,r2,8192
 40249fc:	1800061e 	bne	r3,zero,4024a18 <_fwrite_r+0x74>
 4024a00:	28c01917 	ldw	r3,100(r5)
 4024a04:	0137ffc4 	movi	r4,-8193
 4024a08:	10880014 	ori	r2,r2,8192
 4024a0c:	1906703a 	and	r3,r3,r4
 4024a10:	2880030d 	sth	r2,12(r5)
 4024a14:	28c01915 	stw	r3,100(r5)
 4024a18:	d9800204 	addi	r6,sp,8
 4024a1c:	8809883a 	mov	r4,r17
 4024a20:	402a0780 	call	402a078 <__sfvwrite_r>
 4024a24:	10000e26 	beq	r2,zero,4024a60 <_fwrite_r+0xbc>
 4024a28:	d9000417 	ldw	r4,16(sp)
 4024a2c:	900b883a 	mov	r5,r18
 4024a30:	9909c83a 	sub	r4,r19,r4
 4024a34:	40225a40 	call	40225a4 <__udivsi3>
 4024a38:	dfc00917 	ldw	ra,36(sp)
 4024a3c:	dcc00817 	ldw	r19,32(sp)
 4024a40:	dc800717 	ldw	r18,28(sp)
 4024a44:	dc400617 	ldw	r17,24(sp)
 4024a48:	dc000517 	ldw	r16,20(sp)
 4024a4c:	dec00a04 	addi	sp,sp,40
 4024a50:	f800283a 	ret
 4024a54:	4023c600 	call	4023c60 <__sinit>
 4024a58:	d9400a17 	ldw	r5,40(sp)
 4024a5c:	003fe506 	br	40249f4 <_fwrite_r+0x50>
 4024a60:	8005883a 	mov	r2,r16
 4024a64:	003ff406 	br	4024a38 <_fwrite_r+0x94>

04024a68 <fwrite>:
 4024a68:	defff504 	addi	sp,sp,-44
 4024a6c:	00800034 	movhi	r2,0
 4024a70:	dcc00915 	stw	r19,36(sp)
 4024a74:	29a7383a 	mul	r19,r5,r6
 4024a78:	dc800815 	stw	r18,32(sp)
 4024a7c:	14894e17 	ldw	r18,9528(r2)
 4024a80:	d8800104 	addi	r2,sp,4
 4024a84:	d8800315 	stw	r2,12(sp)
 4024a88:	00800044 	movi	r2,1
 4024a8c:	dc400715 	stw	r17,28(sp)
 4024a90:	dc000615 	stw	r16,24(sp)
 4024a94:	dfc00a15 	stw	ra,40(sp)
 4024a98:	d9000115 	stw	r4,4(sp)
 4024a9c:	dcc00215 	stw	r19,8(sp)
 4024aa0:	dcc00515 	stw	r19,20(sp)
 4024aa4:	d8800415 	stw	r2,16(sp)
 4024aa8:	2823883a 	mov	r17,r5
 4024aac:	3021883a 	mov	r16,r6
 4024ab0:	380b883a 	mov	r5,r7
 4024ab4:	90000226 	beq	r18,zero,4024ac0 <fwrite+0x58>
 4024ab8:	90800e17 	ldw	r2,56(r18)
 4024abc:	10001826 	beq	r2,zero,4024b20 <fwrite+0xb8>
 4024ac0:	2880030b 	ldhu	r2,12(r5)
 4024ac4:	10c8000c 	andi	r3,r2,8192
 4024ac8:	1800061e 	bne	r3,zero,4024ae4 <fwrite+0x7c>
 4024acc:	28c01917 	ldw	r3,100(r5)
 4024ad0:	0137ffc4 	movi	r4,-8193
 4024ad4:	10880014 	ori	r2,r2,8192
 4024ad8:	1906703a 	and	r3,r3,r4
 4024adc:	2880030d 	sth	r2,12(r5)
 4024ae0:	28c01915 	stw	r3,100(r5)
 4024ae4:	d9800304 	addi	r6,sp,12
 4024ae8:	9009883a 	mov	r4,r18
 4024aec:	402a0780 	call	402a078 <__sfvwrite_r>
 4024af0:	10001026 	beq	r2,zero,4024b34 <fwrite+0xcc>
 4024af4:	d9000517 	ldw	r4,20(sp)
 4024af8:	880b883a 	mov	r5,r17
 4024afc:	9909c83a 	sub	r4,r19,r4
 4024b00:	40225a40 	call	40225a4 <__udivsi3>
 4024b04:	dfc00a17 	ldw	ra,40(sp)
 4024b08:	dcc00917 	ldw	r19,36(sp)
 4024b0c:	dc800817 	ldw	r18,32(sp)
 4024b10:	dc400717 	ldw	r17,28(sp)
 4024b14:	dc000617 	ldw	r16,24(sp)
 4024b18:	dec00b04 	addi	sp,sp,44
 4024b1c:	f800283a 	ret
 4024b20:	9009883a 	mov	r4,r18
 4024b24:	d9c00015 	stw	r7,0(sp)
 4024b28:	4023c600 	call	4023c60 <__sinit>
 4024b2c:	d9400017 	ldw	r5,0(sp)
 4024b30:	003fe306 	br	4024ac0 <fwrite+0x58>
 4024b34:	8005883a 	mov	r2,r16
 4024b38:	003ff206 	br	4024b04 <fwrite+0x9c>

04024b3c <_getc_r>:
 4024b3c:	defffd04 	addi	sp,sp,-12
 4024b40:	dc000115 	stw	r16,4(sp)
 4024b44:	dfc00215 	stw	ra,8(sp)
 4024b48:	2021883a 	mov	r16,r4
 4024b4c:	20000226 	beq	r4,zero,4024b58 <_getc_r+0x1c>
 4024b50:	20800e17 	ldw	r2,56(r4)
 4024b54:	10000c26 	beq	r2,zero,4024b88 <_getc_r+0x4c>
 4024b58:	28800117 	ldw	r2,4(r5)
 4024b5c:	10bfffc4 	addi	r2,r2,-1
 4024b60:	28800115 	stw	r2,4(r5)
 4024b64:	10000f16 	blt	r2,zero,4024ba4 <_getc_r+0x68>
 4024b68:	28800017 	ldw	r2,0(r5)
 4024b6c:	10c00044 	addi	r3,r2,1
 4024b70:	28c00015 	stw	r3,0(r5)
 4024b74:	10800003 	ldbu	r2,0(r2)
 4024b78:	dfc00217 	ldw	ra,8(sp)
 4024b7c:	dc000117 	ldw	r16,4(sp)
 4024b80:	dec00304 	addi	sp,sp,12
 4024b84:	f800283a 	ret
 4024b88:	d9400015 	stw	r5,0(sp)
 4024b8c:	4023c600 	call	4023c60 <__sinit>
 4024b90:	d9400017 	ldw	r5,0(sp)
 4024b94:	28800117 	ldw	r2,4(r5)
 4024b98:	10bfffc4 	addi	r2,r2,-1
 4024b9c:	28800115 	stw	r2,4(r5)
 4024ba0:	103ff10e 	bge	r2,zero,4024b68 <_getc_r+0x2c>
 4024ba4:	8009883a 	mov	r4,r16
 4024ba8:	dfc00217 	ldw	ra,8(sp)
 4024bac:	dc000117 	ldw	r16,4(sp)
 4024bb0:	dec00304 	addi	sp,sp,12
 4024bb4:	4025d541 	jmpi	4025d54 <__srget_r>

04024bb8 <getc>:
 4024bb8:	defffd04 	addi	sp,sp,-12
 4024bbc:	00800034 	movhi	r2,0
 4024bc0:	dc400115 	stw	r17,4(sp)
 4024bc4:	14494e17 	ldw	r17,9528(r2)
 4024bc8:	dc000015 	stw	r16,0(sp)
 4024bcc:	dfc00215 	stw	ra,8(sp)
 4024bd0:	2021883a 	mov	r16,r4
 4024bd4:	88000226 	beq	r17,zero,4024be0 <getc+0x28>
 4024bd8:	88800e17 	ldw	r2,56(r17)
 4024bdc:	10000d26 	beq	r2,zero,4024c14 <getc+0x5c>
 4024be0:	80800117 	ldw	r2,4(r16)
 4024be4:	10bfffc4 	addi	r2,r2,-1
 4024be8:	80800115 	stw	r2,4(r16)
 4024bec:	10000f16 	blt	r2,zero,4024c2c <getc+0x74>
 4024bf0:	80800017 	ldw	r2,0(r16)
 4024bf4:	10c00044 	addi	r3,r2,1
 4024bf8:	80c00015 	stw	r3,0(r16)
 4024bfc:	10800003 	ldbu	r2,0(r2)
 4024c00:	dfc00217 	ldw	ra,8(sp)
 4024c04:	dc400117 	ldw	r17,4(sp)
 4024c08:	dc000017 	ldw	r16,0(sp)
 4024c0c:	dec00304 	addi	sp,sp,12
 4024c10:	f800283a 	ret
 4024c14:	8809883a 	mov	r4,r17
 4024c18:	4023c600 	call	4023c60 <__sinit>
 4024c1c:	80800117 	ldw	r2,4(r16)
 4024c20:	10bfffc4 	addi	r2,r2,-1
 4024c24:	80800115 	stw	r2,4(r16)
 4024c28:	103ff10e 	bge	r2,zero,4024bf0 <getc+0x38>
 4024c2c:	800b883a 	mov	r5,r16
 4024c30:	8809883a 	mov	r4,r17
 4024c34:	dfc00217 	ldw	ra,8(sp)
 4024c38:	dc400117 	ldw	r17,4(sp)
 4024c3c:	dc000017 	ldw	r16,0(sp)
 4024c40:	dec00304 	addi	sp,sp,12
 4024c44:	4025d541 	jmpi	4025d54 <__srget_r>

04024c48 <__smakebuf_r>:
 4024c48:	2880030b 	ldhu	r2,12(r5)
 4024c4c:	deffe804 	addi	sp,sp,-96
 4024c50:	dc001215 	stw	r16,72(sp)
 4024c54:	dfc01715 	stw	ra,92(sp)
 4024c58:	dd001615 	stw	r20,88(sp)
 4024c5c:	dcc01515 	stw	r19,84(sp)
 4024c60:	dc801415 	stw	r18,80(sp)
 4024c64:	dc401315 	stw	r17,76(sp)
 4024c68:	10c0008c 	andi	r3,r2,2
 4024c6c:	2821883a 	mov	r16,r5
 4024c70:	18000d26 	beq	r3,zero,4024ca8 <__smakebuf_r+0x60>
 4024c74:	288010c4 	addi	r2,r5,67
 4024c78:	28800015 	stw	r2,0(r5)
 4024c7c:	28800415 	stw	r2,16(r5)
 4024c80:	00800044 	movi	r2,1
 4024c84:	28800515 	stw	r2,20(r5)
 4024c88:	dfc01717 	ldw	ra,92(sp)
 4024c8c:	dd001617 	ldw	r20,88(sp)
 4024c90:	dcc01517 	ldw	r19,84(sp)
 4024c94:	dc801417 	ldw	r18,80(sp)
 4024c98:	dc401317 	ldw	r17,76(sp)
 4024c9c:	dc001217 	ldw	r16,72(sp)
 4024ca0:	dec01804 	addi	sp,sp,96
 4024ca4:	f800283a 	ret
 4024ca8:	2940038f 	ldh	r5,14(r5)
 4024cac:	2023883a 	mov	r17,r4
 4024cb0:	28002816 	blt	r5,zero,4024d54 <__smakebuf_r+0x10c>
 4024cb4:	d80d883a 	mov	r6,sp
 4024cb8:	40246d80 	call	40246d8 <_fstat_r>
 4024cbc:	10002416 	blt	r2,zero,4024d50 <__smakebuf_r+0x108>
 4024cc0:	d8800117 	ldw	r2,4(sp)
 4024cc4:	10bc000c 	andi	r2,r2,61440
 4024cc8:	10880018 	cmpnei	r2,r2,8192
 4024ccc:	1000461e 	bne	r2,zero,4024de8 <__smakebuf_r+0x1a0>
 4024cd0:	8140038f 	ldh	r5,14(r16)
 4024cd4:	8809883a 	mov	r4,r17
 4024cd8:	402a5300 	call	402a530 <_isatty_r>
 4024cdc:	10003e26 	beq	r2,zero,4024dd8 <__smakebuf_r+0x190>
 4024ce0:	8080030b 	ldhu	r2,12(r16)
 4024ce4:	80c010c4 	addi	r3,r16,67
 4024ce8:	80c00015 	stw	r3,0(r16)
 4024cec:	10800054 	ori	r2,r2,1
 4024cf0:	8080030d 	sth	r2,12(r16)
 4024cf4:	00800044 	movi	r2,1
 4024cf8:	80c00415 	stw	r3,16(r16)
 4024cfc:	80800515 	stw	r2,20(r16)
 4024d00:	04c00044 	movi	r19,1
 4024d04:	05010004 	movi	r20,1024
 4024d08:	04820004 	movi	r18,2048
 4024d0c:	a00b883a 	mov	r5,r20
 4024d10:	8809883a 	mov	r4,r17
 4024d14:	4024eb00 	call	4024eb0 <_malloc_r>
 4024d18:	10001726 	beq	r2,zero,4024d78 <__smakebuf_r+0x130>
 4024d1c:	80c0030b 	ldhu	r3,12(r16)
 4024d20:	010100b4 	movhi	r4,1026
 4024d24:	210e4504 	addi	r4,r4,14612
 4024d28:	89000f15 	stw	r4,60(r17)
 4024d2c:	18c02014 	ori	r3,r3,128
 4024d30:	80c0030d 	sth	r3,12(r16)
 4024d34:	80800015 	stw	r2,0(r16)
 4024d38:	80800415 	stw	r2,16(r16)
 4024d3c:	85000515 	stw	r20,20(r16)
 4024d40:	98001d1e 	bne	r19,zero,4024db8 <__smakebuf_r+0x170>
 4024d44:	90c6b03a 	or	r3,r18,r3
 4024d48:	80c0030d 	sth	r3,12(r16)
 4024d4c:	003fce06 	br	4024c88 <__smakebuf_r+0x40>
 4024d50:	8080030b 	ldhu	r2,12(r16)
 4024d54:	1080200c 	andi	r2,r2,128
 4024d58:	0027883a 	mov	r19,zero
 4024d5c:	10001326 	beq	r2,zero,4024dac <__smakebuf_r+0x164>
 4024d60:	05001004 	movi	r20,64
 4024d64:	a00b883a 	mov	r5,r20
 4024d68:	8809883a 	mov	r4,r17
 4024d6c:	0025883a 	mov	r18,zero
 4024d70:	4024eb00 	call	4024eb0 <_malloc_r>
 4024d74:	103fe91e 	bne	r2,zero,4024d1c <__smakebuf_r+0xd4>
 4024d78:	8080030b 	ldhu	r2,12(r16)
 4024d7c:	10c0800c 	andi	r3,r2,512
 4024d80:	183fc11e 	bne	r3,zero,4024c88 <__smakebuf_r+0x40>
 4024d84:	00ffff04 	movi	r3,-4
 4024d88:	10c4703a 	and	r2,r2,r3
 4024d8c:	10800094 	ori	r2,r2,2
 4024d90:	80c010c4 	addi	r3,r16,67
 4024d94:	8080030d 	sth	r2,12(r16)
 4024d98:	00800044 	movi	r2,1
 4024d9c:	80c00015 	stw	r3,0(r16)
 4024da0:	80c00415 	stw	r3,16(r16)
 4024da4:	80800515 	stw	r2,20(r16)
 4024da8:	003fb706 	br	4024c88 <__smakebuf_r+0x40>
 4024dac:	05010004 	movi	r20,1024
 4024db0:	0025883a 	mov	r18,zero
 4024db4:	003fd506 	br	4024d0c <__smakebuf_r+0xc4>
 4024db8:	8140038f 	ldh	r5,14(r16)
 4024dbc:	8809883a 	mov	r4,r17
 4024dc0:	402a5300 	call	402a530 <_isatty_r>
 4024dc4:	80c0030b 	ldhu	r3,12(r16)
 4024dc8:	103fde26 	beq	r2,zero,4024d44 <__smakebuf_r+0xfc>
 4024dcc:	18ffff0c 	andi	r3,r3,65532
 4024dd0:	18c00054 	ori	r3,r3,1
 4024dd4:	003fdb06 	br	4024d44 <__smakebuf_r+0xfc>
 4024dd8:	04c00044 	movi	r19,1
 4024ddc:	05010004 	movi	r20,1024
 4024de0:	04820004 	movi	r18,2048
 4024de4:	003fc906 	br	4024d0c <__smakebuf_r+0xc4>
 4024de8:	0027883a 	mov	r19,zero
 4024dec:	05010004 	movi	r20,1024
 4024df0:	04820004 	movi	r18,2048
 4024df4:	003fc506 	br	4024d0c <__smakebuf_r+0xc4>

04024df8 <__swhatbuf_r>:
 4024df8:	deffea04 	addi	sp,sp,-88
 4024dfc:	dc001215 	stw	r16,72(sp)
 4024e00:	2821883a 	mov	r16,r5
 4024e04:	2940038f 	ldh	r5,14(r5)
 4024e08:	dc801415 	stw	r18,80(sp)
 4024e0c:	dc401315 	stw	r17,76(sp)
 4024e10:	dfc01515 	stw	ra,84(sp)
 4024e14:	3023883a 	mov	r17,r6
 4024e18:	3825883a 	mov	r18,r7
 4024e1c:	28001016 	blt	r5,zero,4024e60 <__swhatbuf_r+0x68>
 4024e20:	d80d883a 	mov	r6,sp
 4024e24:	40246d80 	call	40246d8 <_fstat_r>
 4024e28:	10000d16 	blt	r2,zero,4024e60 <__swhatbuf_r+0x68>
 4024e2c:	d8c00117 	ldw	r3,4(sp)
 4024e30:	00820004 	movi	r2,2048
 4024e34:	18fc000c 	andi	r3,r3,61440
 4024e38:	18c80020 	cmpeqi	r3,r3,8192
 4024e3c:	90c00015 	stw	r3,0(r18)
 4024e40:	00c10004 	movi	r3,1024
 4024e44:	88c00015 	stw	r3,0(r17)
 4024e48:	dfc01517 	ldw	ra,84(sp)
 4024e4c:	dc801417 	ldw	r18,80(sp)
 4024e50:	dc401317 	ldw	r17,76(sp)
 4024e54:	dc001217 	ldw	r16,72(sp)
 4024e58:	dec01604 	addi	sp,sp,88
 4024e5c:	f800283a 	ret
 4024e60:	8080030b 	ldhu	r2,12(r16)
 4024e64:	90000015 	stw	zero,0(r18)
 4024e68:	1080200c 	andi	r2,r2,128
 4024e6c:	10000426 	beq	r2,zero,4024e80 <__swhatbuf_r+0x88>
 4024e70:	00801004 	movi	r2,64
 4024e74:	88800015 	stw	r2,0(r17)
 4024e78:	0005883a 	mov	r2,zero
 4024e7c:	003ff206 	br	4024e48 <__swhatbuf_r+0x50>
 4024e80:	00810004 	movi	r2,1024
 4024e84:	88800015 	stw	r2,0(r17)
 4024e88:	0005883a 	mov	r2,zero
 4024e8c:	003fee06 	br	4024e48 <__swhatbuf_r+0x50>

04024e90 <malloc>:
 4024e90:	00800034 	movhi	r2,0
 4024e94:	200b883a 	mov	r5,r4
 4024e98:	11094e17 	ldw	r4,9528(r2)
 4024e9c:	4024eb01 	jmpi	4024eb0 <_malloc_r>

04024ea0 <free>:
 4024ea0:	00800034 	movhi	r2,0
 4024ea4:	200b883a 	mov	r5,r4
 4024ea8:	11094e17 	ldw	r4,9528(r2)
 4024eac:	4023fbc1 	jmpi	4023fbc <_free_r>

04024eb0 <_malloc_r>:
 4024eb0:	defff604 	addi	sp,sp,-40
 4024eb4:	dc400115 	stw	r17,4(sp)
 4024eb8:	2c4002c4 	addi	r17,r5,11
 4024ebc:	dc800215 	stw	r18,8(sp)
 4024ec0:	dfc00915 	stw	ra,36(sp)
 4024ec4:	df000815 	stw	fp,32(sp)
 4024ec8:	ddc00715 	stw	r23,28(sp)
 4024ecc:	dd800615 	stw	r22,24(sp)
 4024ed0:	dd400515 	stw	r21,20(sp)
 4024ed4:	dd000415 	stw	r20,16(sp)
 4024ed8:	dcc00315 	stw	r19,12(sp)
 4024edc:	dc000015 	stw	r16,0(sp)
 4024ee0:	888005e8 	cmpgeui	r2,r17,23
 4024ee4:	2025883a 	mov	r18,r4
 4024ee8:	10001b1e 	bne	r2,zero,4024f58 <_malloc_r+0xa8>
 4024eec:	29400468 	cmpgeui	r5,r5,17
 4024ef0:	2800821e 	bne	r5,zero,40250fc <_malloc_r+0x24c>
 4024ef4:	40318100 	call	4031810 <__malloc_lock>
 4024ef8:	04400404 	movi	r17,16
 4024efc:	00800604 	movi	r2,24
 4024f00:	01c00084 	movi	r7,2
 4024f04:	04c00034 	movhi	r19,0
 4024f08:	9cc36204 	addi	r19,r19,3464
 4024f0c:	9885883a 	add	r2,r19,r2
 4024f10:	14000117 	ldw	r16,4(r2)
 4024f14:	10fffe04 	addi	r3,r2,-8
 4024f18:	80c08b26 	beq	r16,r3,4025148 <_malloc_r+0x298>
 4024f1c:	80800117 	ldw	r2,4(r16)
 4024f20:	81000317 	ldw	r4,12(r16)
 4024f24:	00ffff04 	movi	r3,-4
 4024f28:	10c4703a 	and	r2,r2,r3
 4024f2c:	81400217 	ldw	r5,8(r16)
 4024f30:	8085883a 	add	r2,r16,r2
 4024f34:	10c00117 	ldw	r3,4(r2)
 4024f38:	29000315 	stw	r4,12(r5)
 4024f3c:	21400215 	stw	r5,8(r4)
 4024f40:	18c00054 	ori	r3,r3,1
 4024f44:	10c00115 	stw	r3,4(r2)
 4024f48:	9009883a 	mov	r4,r18
 4024f4c:	40318340 	call	4031834 <__malloc_unlock>
 4024f50:	80800204 	addi	r2,r16,8
 4024f54:	00006c06 	br	4025108 <_malloc_r+0x258>
 4024f58:	00bffe04 	movi	r2,-8
 4024f5c:	88a2703a 	and	r17,r17,r2
 4024f60:	88006616 	blt	r17,zero,40250fc <_malloc_r+0x24c>
 4024f64:	89406536 	bltu	r17,r5,40250fc <_malloc_r+0x24c>
 4024f68:	40318100 	call	4031810 <__malloc_lock>
 4024f6c:	88807e28 	cmpgeui	r2,r17,504
 4024f70:	10012226 	beq	r2,zero,40253fc <_malloc_r+0x54c>
 4024f74:	8804d27a 	srli	r2,r17,9
 4024f78:	10006f26 	beq	r2,zero,4025138 <_malloc_r+0x288>
 4024f7c:	10c00168 	cmpgeui	r3,r2,5
 4024f80:	1800fe1e 	bne	r3,zero,402537c <_malloc_r+0x4cc>
 4024f84:	8804d1ba 	srli	r2,r17,6
 4024f88:	11c00e44 	addi	r7,r2,57
 4024f8c:	380890fa 	slli	r4,r7,3
 4024f90:	12000e04 	addi	r8,r2,56
 4024f94:	04c00034 	movhi	r19,0
 4024f98:	9cc36204 	addi	r19,r19,3464
 4024f9c:	9909883a 	add	r4,r19,r4
 4024fa0:	24000117 	ldw	r16,4(r4)
 4024fa4:	213ffe04 	addi	r4,r4,-8
 4024fa8:	24000b26 	beq	r4,r16,4024fd8 <_malloc_r+0x128>
 4024fac:	01bfff04 	movi	r6,-4
 4024fb0:	00000306 	br	4024fc0 <_malloc_r+0x110>
 4024fb4:	1800d60e 	bge	r3,zero,4025310 <_malloc_r+0x460>
 4024fb8:	84000317 	ldw	r16,12(r16)
 4024fbc:	24000626 	beq	r4,r16,4024fd8 <_malloc_r+0x128>
 4024fc0:	80800117 	ldw	r2,4(r16)
 4024fc4:	1184703a 	and	r2,r2,r6
 4024fc8:	1447c83a 	sub	r3,r2,r17
 4024fcc:	19400408 	cmpgei	r5,r3,16
 4024fd0:	283ff826 	beq	r5,zero,4024fb4 <_malloc_r+0x104>
 4024fd4:	400f883a 	mov	r7,r8
 4024fd8:	9c000417 	ldw	r16,16(r19)
 4024fdc:	02400034 	movhi	r9,0
 4024fe0:	4a436404 	addi	r9,r9,3472
 4024fe4:	82405f26 	beq	r16,r9,4025164 <_malloc_r+0x2b4>
 4024fe8:	80c00117 	ldw	r3,4(r16)
 4024fec:	00bfff04 	movi	r2,-4
 4024ff0:	1884703a 	and	r2,r3,r2
 4024ff4:	1447c83a 	sub	r3,r2,r17
 4024ff8:	19000410 	cmplti	r4,r3,16
 4024ffc:	20010a26 	beq	r4,zero,4025428 <_malloc_r+0x578>
 4025000:	9a400515 	stw	r9,20(r19)
 4025004:	9a400415 	stw	r9,16(r19)
 4025008:	1800ff0e 	bge	r3,zero,4025408 <_malloc_r+0x558>
 402500c:	10c08028 	cmpgeui	r3,r2,512
 4025010:	1800c11e 	bne	r3,zero,4025318 <_malloc_r+0x468>
 4025014:	1006d0fa 	srli	r3,r2,3
 4025018:	1008d17a 	srli	r4,r2,5
 402501c:	00800044 	movi	r2,1
 4025020:	18c00044 	addi	r3,r3,1
 4025024:	180690fa 	slli	r3,r3,3
 4025028:	99400117 	ldw	r5,4(r19)
 402502c:	1104983a 	sll	r2,r2,r4
 4025030:	98c7883a 	add	r3,r19,r3
 4025034:	19000017 	ldw	r4,0(r3)
 4025038:	1144b03a 	or	r2,r2,r5
 402503c:	197ffe04 	addi	r5,r3,-8
 4025040:	81400315 	stw	r5,12(r16)
 4025044:	81000215 	stw	r4,8(r16)
 4025048:	98800115 	stw	r2,4(r19)
 402504c:	1c000015 	stw	r16,0(r3)
 4025050:	24000315 	stw	r16,12(r4)
 4025054:	3807d0ba 	srai	r3,r7,2
 4025058:	01000044 	movi	r4,1
 402505c:	20c8983a 	sll	r4,r4,r3
 4025060:	11004536 	bltu	r2,r4,4025178 <_malloc_r+0x2c8>
 4025064:	2086703a 	and	r3,r4,r2
 4025068:	18000a1e 	bne	r3,zero,4025094 <_malloc_r+0x1e4>
 402506c:	00ffff04 	movi	r3,-4
 4025070:	2109883a 	add	r4,r4,r4
 4025074:	38ce703a 	and	r7,r7,r3
 4025078:	2086703a 	and	r3,r4,r2
 402507c:	39c00104 	addi	r7,r7,4
 4025080:	1800041e 	bne	r3,zero,4025094 <_malloc_r+0x1e4>
 4025084:	2109883a 	add	r4,r4,r4
 4025088:	2086703a 	and	r3,r4,r2
 402508c:	39c00104 	addi	r7,r7,4
 4025090:	183ffc26 	beq	r3,zero,4025084 <_malloc_r+0x1d4>
 4025094:	02bfff04 	movi	r10,-4
 4025098:	381690fa 	slli	r11,r7,3
 402509c:	3819883a 	mov	r12,r7
 40250a0:	9ad7883a 	add	r11,r19,r11
 40250a4:	5811883a 	mov	r8,r11
 40250a8:	40800317 	ldw	r2,12(r8)
 40250ac:	4080bc26 	beq	r8,r2,40253a0 <_malloc_r+0x4f0>
 40250b0:	10c00117 	ldw	r3,4(r2)
 40250b4:	1021883a 	mov	r16,r2
 40250b8:	10800317 	ldw	r2,12(r2)
 40250bc:	1a86703a 	and	r3,r3,r10
 40250c0:	1c4bc83a 	sub	r5,r3,r17
 40250c4:	29800410 	cmplti	r6,r5,16
 40250c8:	3000ba26 	beq	r6,zero,40253b4 <_malloc_r+0x504>
 40250cc:	283ff716 	blt	r5,zero,40250ac <_malloc_r+0x1fc>
 40250d0:	80c7883a 	add	r3,r16,r3
 40250d4:	19400117 	ldw	r5,4(r3)
 40250d8:	81800217 	ldw	r6,8(r16)
 40250dc:	9009883a 	mov	r4,r18
 40250e0:	29400054 	ori	r5,r5,1
 40250e4:	19400115 	stw	r5,4(r3)
 40250e8:	30800315 	stw	r2,12(r6)
 40250ec:	11800215 	stw	r6,8(r2)
 40250f0:	40318340 	call	4031834 <__malloc_unlock>
 40250f4:	80800204 	addi	r2,r16,8
 40250f8:	00000306 	br	4025108 <_malloc_r+0x258>
 40250fc:	00800304 	movi	r2,12
 4025100:	90800015 	stw	r2,0(r18)
 4025104:	0005883a 	mov	r2,zero
 4025108:	dfc00917 	ldw	ra,36(sp)
 402510c:	df000817 	ldw	fp,32(sp)
 4025110:	ddc00717 	ldw	r23,28(sp)
 4025114:	dd800617 	ldw	r22,24(sp)
 4025118:	dd400517 	ldw	r21,20(sp)
 402511c:	dd000417 	ldw	r20,16(sp)
 4025120:	dcc00317 	ldw	r19,12(sp)
 4025124:	dc800217 	ldw	r18,8(sp)
 4025128:	dc400117 	ldw	r17,4(sp)
 402512c:	dc000017 	ldw	r16,0(sp)
 4025130:	dec00a04 	addi	sp,sp,40
 4025134:	f800283a 	ret
 4025138:	01008004 	movi	r4,512
 402513c:	01c01004 	movi	r7,64
 4025140:	02000fc4 	movi	r8,63
 4025144:	003f9306 	br	4024f94 <_malloc_r+0xe4>
 4025148:	14000317 	ldw	r16,12(r2)
 402514c:	39c00084 	addi	r7,r7,2
 4025150:	143f721e 	bne	r2,r16,4024f1c <_malloc_r+0x6c>
 4025154:	9c000417 	ldw	r16,16(r19)
 4025158:	02400034 	movhi	r9,0
 402515c:	4a436404 	addi	r9,r9,3472
 4025160:	827fa11e 	bne	r16,r9,4024fe8 <_malloc_r+0x138>
 4025164:	3807d0ba 	srai	r3,r7,2
 4025168:	01000044 	movi	r4,1
 402516c:	98800117 	ldw	r2,4(r19)
 4025170:	20c8983a 	sll	r4,r4,r3
 4025174:	113fbb2e 	bgeu	r2,r4,4025064 <_malloc_r+0x1b4>
 4025178:	9c000217 	ldw	r16,8(r19)
 402517c:	00bfff04 	movi	r2,-4
 4025180:	85400117 	ldw	r21,4(r16)
 4025184:	a8ac703a 	and	r22,r21,r2
 4025188:	b4400336 	bltu	r22,r17,4025198 <_malloc_r+0x2e8>
 402518c:	b445c83a 	sub	r2,r22,r17
 4025190:	10c00408 	cmpgei	r3,r2,16
 4025194:	1800541e 	bne	r3,zero,40252e8 <_malloc_r+0x438>
 4025198:	00800034 	movhi	r2,0
 402519c:	10894f17 	ldw	r2,9532(r2)
 40251a0:	00c00034 	movhi	r3,0
 40251a4:	1d496017 	ldw	r21,9600(r3)
 40251a8:	10bfffd8 	cmpnei	r2,r2,-1
 40251ac:	85b9883a 	add	fp,r16,r22
 40251b0:	8d6b883a 	add	r21,r17,r21
 40251b4:	1000d626 	beq	r2,zero,4025510 <_malloc_r+0x660>
 40251b8:	ad4403c4 	addi	r21,r21,4111
 40251bc:	00bc0004 	movi	r2,-4096
 40251c0:	a8aa703a 	and	r21,r21,r2
 40251c4:	a80b883a 	mov	r5,r21
 40251c8:	9009883a 	mov	r4,r18
 40251cc:	4025e440 	call	4025e44 <_sbrk_r>
 40251d0:	102f883a 	mov	r23,r2
 40251d4:	10bfffd8 	cmpnei	r2,r2,-1
 40251d8:	1000a826 	beq	r2,zero,402547c <_malloc_r+0x5cc>
 40251dc:	bf00a636 	bltu	r23,fp,4025478 <_malloc_r+0x5c8>
 40251e0:	00800034 	movhi	r2,0
 40251e4:	1509cc17 	ldw	r20,10032(r2)
 40251e8:	ad29883a 	add	r20,r21,r20
 40251ec:	1509cc15 	stw	r20,10032(r2)
 40251f0:	a007883a 	mov	r3,r20
 40251f4:	e5c0ec26 	beq	fp,r23,40255a8 <_malloc_r+0x6f8>
 40251f8:	00800034 	movhi	r2,0
 40251fc:	10894f17 	ldw	r2,9532(r2)
 4025200:	10bfffd8 	cmpnei	r2,r2,-1
 4025204:	1000ef26 	beq	r2,zero,40255c4 <_malloc_r+0x714>
 4025208:	bf39c83a 	sub	fp,r23,fp
 402520c:	e0c7883a 	add	r3,fp,r3
 4025210:	00800034 	movhi	r2,0
 4025214:	10c9cc15 	stw	r3,10032(r2)
 4025218:	bf0001cc 	andi	fp,r23,7
 402521c:	e000c526 	beq	fp,zero,4025534 <_malloc_r+0x684>
 4025220:	bf2fc83a 	sub	r23,r23,fp
 4025224:	bdc00204 	addi	r23,r23,8
 4025228:	05040204 	movi	r20,4104
 402522c:	a729c83a 	sub	r20,r20,fp
 4025230:	bd6b883a 	add	r21,r23,r21
 4025234:	a569c83a 	sub	r20,r20,r21
 4025238:	a503ffcc 	andi	r20,r20,4095
 402523c:	a00b883a 	mov	r5,r20
 4025240:	9009883a 	mov	r4,r18
 4025244:	4025e440 	call	4025e44 <_sbrk_r>
 4025248:	10ffffe0 	cmpeqi	r3,r2,-1
 402524c:	1800f31e 	bne	r3,zero,402561c <_malloc_r+0x76c>
 4025250:	15c5c83a 	sub	r2,r2,r23
 4025254:	152b883a 	add	r21,r2,r20
 4025258:	00800034 	movhi	r2,0
 402525c:	1149cc17 	ldw	r5,10032(r2)
 4025260:	9dc00215 	stw	r23,8(r19)
 4025264:	ad400054 	ori	r21,r21,1
 4025268:	a169883a 	add	r20,r20,r5
 402526c:	1509cc15 	stw	r20,10032(r2)
 4025270:	bd400115 	stw	r21,4(r23)
 4025274:	84c0d626 	beq	r16,r19,40255d0 <_malloc_r+0x720>
 4025278:	b0800428 	cmpgeui	r2,r22,16
 402527c:	1000d626 	beq	r2,zero,40255d8 <_malloc_r+0x728>
 4025280:	80c00117 	ldw	r3,4(r16)
 4025284:	013ffe04 	movi	r4,-8
 4025288:	b0bffd04 	addi	r2,r22,-12
 402528c:	1104703a 	and	r2,r2,r4
 4025290:	18c0004c 	andi	r3,r3,1
 4025294:	1886b03a 	or	r3,r3,r2
 4025298:	80c00115 	stw	r3,4(r16)
 402529c:	01000144 	movi	r4,5
 40252a0:	8087883a 	add	r3,r16,r2
 40252a4:	19000115 	stw	r4,4(r3)
 40252a8:	19000215 	stw	r4,8(r3)
 40252ac:	10800428 	cmpgeui	r2,r2,16
 40252b0:	1000df1e 	bne	r2,zero,4025630 <_malloc_r+0x780>
 40252b4:	bd400117 	ldw	r21,4(r23)
 40252b8:	b821883a 	mov	r16,r23
 40252bc:	00800034 	movhi	r2,0
 40252c0:	10895f17 	ldw	r2,9596(r2)
 40252c4:	1500022e 	bgeu	r2,r20,40252d0 <_malloc_r+0x420>
 40252c8:	00800034 	movhi	r2,0
 40252cc:	15095f15 	stw	r20,9596(r2)
 40252d0:	00800034 	movhi	r2,0
 40252d4:	10895e17 	ldw	r2,9592(r2)
 40252d8:	15006a2e 	bgeu	r2,r20,4025484 <_malloc_r+0x5d4>
 40252dc:	00800034 	movhi	r2,0
 40252e0:	15095e15 	stw	r20,9592(r2)
 40252e4:	00006706 	br	4025484 <_malloc_r+0x5d4>
 40252e8:	88c00054 	ori	r3,r17,1
 40252ec:	80c00115 	stw	r3,4(r16)
 40252f0:	8463883a 	add	r17,r16,r17
 40252f4:	10800054 	ori	r2,r2,1
 40252f8:	9c400215 	stw	r17,8(r19)
 40252fc:	88800115 	stw	r2,4(r17)
 4025300:	9009883a 	mov	r4,r18
 4025304:	40318340 	call	4031834 <__malloc_unlock>
 4025308:	80800204 	addi	r2,r16,8
 402530c:	003f7e06 	br	4025108 <_malloc_r+0x258>
 4025310:	81000317 	ldw	r4,12(r16)
 4025314:	003f0506 	br	4024f2c <_malloc_r+0x7c>
 4025318:	1006d27a 	srli	r3,r2,9
 402531c:	19000168 	cmpgeui	r4,r3,5
 4025320:	20005026 	beq	r4,zero,4025464 <_malloc_r+0x5b4>
 4025324:	19000568 	cmpgeui	r4,r3,21
 4025328:	20008c1e 	bne	r4,zero,402555c <_malloc_r+0x6ac>
 402532c:	19401704 	addi	r5,r3,92
 4025330:	280a90fa 	slli	r5,r5,3
 4025334:	190016c4 	addi	r4,r3,91
 4025338:	994b883a 	add	r5,r19,r5
 402533c:	28c00017 	ldw	r3,0(r5)
 4025340:	297ffe04 	addi	r5,r5,-8
 4025344:	28c07426 	beq	r5,r3,4025518 <_malloc_r+0x668>
 4025348:	01bfff04 	movi	r6,-4
 402534c:	19000117 	ldw	r4,4(r3)
 4025350:	2188703a 	and	r4,r4,r6
 4025354:	1100022e 	bgeu	r2,r4,4025360 <_malloc_r+0x4b0>
 4025358:	18c00217 	ldw	r3,8(r3)
 402535c:	28fffb1e 	bne	r5,r3,402534c <_malloc_r+0x49c>
 4025360:	19400317 	ldw	r5,12(r3)
 4025364:	98800117 	ldw	r2,4(r19)
 4025368:	81400315 	stw	r5,12(r16)
 402536c:	80c00215 	stw	r3,8(r16)
 4025370:	2c000215 	stw	r16,8(r5)
 4025374:	1c000315 	stw	r16,12(r3)
 4025378:	003f3606 	br	4025054 <_malloc_r+0x1a4>
 402537c:	10c00568 	cmpgeui	r3,r2,21
 4025380:	18004a26 	beq	r3,zero,40254ac <_malloc_r+0x5fc>
 4025384:	10c01568 	cmpgeui	r3,r2,85
 4025388:	18007b1e 	bne	r3,zero,4025578 <_malloc_r+0x6c8>
 402538c:	8804d33a 	srli	r2,r17,12
 4025390:	11c01bc4 	addi	r7,r2,111
 4025394:	380890fa 	slli	r4,r7,3
 4025398:	12001b84 	addi	r8,r2,110
 402539c:	003efd06 	br	4024f94 <_malloc_r+0xe4>
 40253a0:	63000044 	addi	r12,r12,1
 40253a4:	608000cc 	andi	r2,r12,3
 40253a8:	42000204 	addi	r8,r8,8
 40253ac:	103f3e1e 	bne	r2,zero,40250a8 <_malloc_r+0x1f8>
 40253b0:	00004506 	br	40254c8 <_malloc_r+0x618>
 40253b4:	81000217 	ldw	r4,8(r16)
 40253b8:	89800054 	ori	r6,r17,1
 40253bc:	81800115 	stw	r6,4(r16)
 40253c0:	20800315 	stw	r2,12(r4)
 40253c4:	11000215 	stw	r4,8(r2)
 40253c8:	8463883a 	add	r17,r16,r17
 40253cc:	9c400515 	stw	r17,20(r19)
 40253d0:	9c400415 	stw	r17,16(r19)
 40253d4:	28800054 	ori	r2,r5,1
 40253d8:	88800115 	stw	r2,4(r17)
 40253dc:	8a400315 	stw	r9,12(r17)
 40253e0:	8a400215 	stw	r9,8(r17)
 40253e4:	80c7883a 	add	r3,r16,r3
 40253e8:	19400015 	stw	r5,0(r3)
 40253ec:	9009883a 	mov	r4,r18
 40253f0:	40318340 	call	4031834 <__malloc_unlock>
 40253f4:	80800204 	addi	r2,r16,8
 40253f8:	003f4306 	br	4025108 <_malloc_r+0x258>
 40253fc:	880ed0fa 	srli	r7,r17,3
 4025400:	88800204 	addi	r2,r17,8
 4025404:	003ebf06 	br	4024f04 <_malloc_r+0x54>
 4025408:	8085883a 	add	r2,r16,r2
 402540c:	10c00117 	ldw	r3,4(r2)
 4025410:	9009883a 	mov	r4,r18
 4025414:	18c00054 	ori	r3,r3,1
 4025418:	10c00115 	stw	r3,4(r2)
 402541c:	40318340 	call	4031834 <__malloc_unlock>
 4025420:	80800204 	addi	r2,r16,8
 4025424:	003f3806 	br	4025108 <_malloc_r+0x258>
 4025428:	89000054 	ori	r4,r17,1
 402542c:	81000115 	stw	r4,4(r16)
 4025430:	8463883a 	add	r17,r16,r17
 4025434:	9c400515 	stw	r17,20(r19)
 4025438:	9c400415 	stw	r17,16(r19)
 402543c:	19000054 	ori	r4,r3,1
 4025440:	89000115 	stw	r4,4(r17)
 4025444:	8085883a 	add	r2,r16,r2
 4025448:	8a400315 	stw	r9,12(r17)
 402544c:	8a400215 	stw	r9,8(r17)
 4025450:	10c00015 	stw	r3,0(r2)
 4025454:	9009883a 	mov	r4,r18
 4025458:	40318340 	call	4031834 <__malloc_unlock>
 402545c:	80800204 	addi	r2,r16,8
 4025460:	003f2906 	br	4025108 <_malloc_r+0x258>
 4025464:	1006d1ba 	srli	r3,r2,6
 4025468:	19400e44 	addi	r5,r3,57
 402546c:	280a90fa 	slli	r5,r5,3
 4025470:	19000e04 	addi	r4,r3,56
 4025474:	003fb006 	br	4025338 <_malloc_r+0x488>
 4025478:	84c04626 	beq	r16,r19,4025594 <_malloc_r+0x6e4>
 402547c:	9c000217 	ldw	r16,8(r19)
 4025480:	85400117 	ldw	r21,4(r16)
 4025484:	00bfff04 	movi	r2,-4
 4025488:	a8aa703a 	and	r21,r21,r2
 402548c:	ac45c83a 	sub	r2,r21,r17
 4025490:	ac400236 	bltu	r21,r17,402549c <_malloc_r+0x5ec>
 4025494:	10c00408 	cmpgei	r3,r2,16
 4025498:	183f931e 	bne	r3,zero,40252e8 <_malloc_r+0x438>
 402549c:	9009883a 	mov	r4,r18
 40254a0:	40318340 	call	4031834 <__malloc_unlock>
 40254a4:	0005883a 	mov	r2,zero
 40254a8:	003f1706 	br	4025108 <_malloc_r+0x258>
 40254ac:	11c01704 	addi	r7,r2,92
 40254b0:	380890fa 	slli	r4,r7,3
 40254b4:	120016c4 	addi	r8,r2,91
 40254b8:	003eb606 	br	4024f94 <_malloc_r+0xe4>
 40254bc:	58800217 	ldw	r2,8(r11)
 40254c0:	39ffffc4 	addi	r7,r7,-1
 40254c4:	12c0701e 	bne	r2,r11,4025688 <_malloc_r+0x7d8>
 40254c8:	388000cc 	andi	r2,r7,3
 40254cc:	5afffe04 	addi	r11,r11,-8
 40254d0:	103ffa1e 	bne	r2,zero,40254bc <_malloc_r+0x60c>
 40254d4:	98c00117 	ldw	r3,4(r19)
 40254d8:	0104303a 	nor	r2,zero,r4
 40254dc:	10c4703a 	and	r2,r2,r3
 40254e0:	98800115 	stw	r2,4(r19)
 40254e4:	2109883a 	add	r4,r4,r4
 40254e8:	113f2336 	bltu	r2,r4,4025178 <_malloc_r+0x2c8>
 40254ec:	203f2226 	beq	r4,zero,4025178 <_malloc_r+0x2c8>
 40254f0:	2086703a 	and	r3,r4,r2
 40254f4:	1800041e 	bne	r3,zero,4025508 <_malloc_r+0x658>
 40254f8:	2109883a 	add	r4,r4,r4
 40254fc:	2086703a 	and	r3,r4,r2
 4025500:	63000104 	addi	r12,r12,4
 4025504:	183ffc26 	beq	r3,zero,40254f8 <_malloc_r+0x648>
 4025508:	600f883a 	mov	r7,r12
 402550c:	003ee206 	br	4025098 <_malloc_r+0x1e8>
 4025510:	ad400404 	addi	r21,r21,16
 4025514:	003f2b06 	br	40251c4 <_malloc_r+0x314>
 4025518:	2009d0ba 	srai	r4,r4,2
 402551c:	00800044 	movi	r2,1
 4025520:	99800117 	ldw	r6,4(r19)
 4025524:	1104983a 	sll	r2,r2,r4
 4025528:	1184b03a 	or	r2,r2,r6
 402552c:	98800115 	stw	r2,4(r19)
 4025530:	003f8d06 	br	4025368 <_malloc_r+0x4b8>
 4025534:	bd69883a 	add	r20,r23,r21
 4025538:	0529c83a 	sub	r20,zero,r20
 402553c:	a503ffcc 	andi	r20,r20,4095
 4025540:	a00b883a 	mov	r5,r20
 4025544:	9009883a 	mov	r4,r18
 4025548:	4025e440 	call	4025e44 <_sbrk_r>
 402554c:	10ffffe0 	cmpeqi	r3,r2,-1
 4025550:	183f3f26 	beq	r3,zero,4025250 <_malloc_r+0x3a0>
 4025554:	0029883a 	mov	r20,zero
 4025558:	003f3f06 	br	4025258 <_malloc_r+0x3a8>
 402555c:	19001568 	cmpgeui	r4,r3,85
 4025560:	2000201e 	bne	r4,zero,40255e4 <_malloc_r+0x734>
 4025564:	1006d33a 	srli	r3,r2,12
 4025568:	19401bc4 	addi	r5,r3,111
 402556c:	280a90fa 	slli	r5,r5,3
 4025570:	19001b84 	addi	r4,r3,110
 4025574:	003f7006 	br	4025338 <_malloc_r+0x488>
 4025578:	10c05568 	cmpgeui	r3,r2,341
 402557c:	1800201e 	bne	r3,zero,4025600 <_malloc_r+0x750>
 4025580:	8804d3fa 	srli	r2,r17,15
 4025584:	11c01e04 	addi	r7,r2,120
 4025588:	380890fa 	slli	r4,r7,3
 402558c:	12001dc4 	addi	r8,r2,119
 4025590:	003e8006 	br	4024f94 <_malloc_r+0xe4>
 4025594:	00800034 	movhi	r2,0
 4025598:	10c9cc17 	ldw	r3,10032(r2)
 402559c:	a8c7883a 	add	r3,r21,r3
 40255a0:	10c9cc15 	stw	r3,10032(r2)
 40255a4:	003f1406 	br	40251f8 <_malloc_r+0x348>
 40255a8:	e083ffcc 	andi	r2,fp,4095
 40255ac:	103f121e 	bne	r2,zero,40251f8 <_malloc_r+0x348>
 40255b0:	9c000217 	ldw	r16,8(r19)
 40255b4:	b56b883a 	add	r21,r22,r21
 40255b8:	ad400054 	ori	r21,r21,1
 40255bc:	85400115 	stw	r21,4(r16)
 40255c0:	003f3e06 	br	40252bc <_malloc_r+0x40c>
 40255c4:	00800034 	movhi	r2,0
 40255c8:	15c94f15 	stw	r23,9532(r2)
 40255cc:	003f1206 	br	4025218 <_malloc_r+0x368>
 40255d0:	b821883a 	mov	r16,r23
 40255d4:	003f3906 	br	40252bc <_malloc_r+0x40c>
 40255d8:	00800044 	movi	r2,1
 40255dc:	b8800115 	stw	r2,4(r23)
 40255e0:	003fae06 	br	402549c <_malloc_r+0x5ec>
 40255e4:	19005568 	cmpgeui	r4,r3,341
 40255e8:	2000191e 	bne	r4,zero,4025650 <_malloc_r+0x7a0>
 40255ec:	1006d3fa 	srli	r3,r2,15
 40255f0:	19401e04 	addi	r5,r3,120
 40255f4:	280a90fa 	slli	r5,r5,3
 40255f8:	19001dc4 	addi	r4,r3,119
 40255fc:	003f4e06 	br	4025338 <_malloc_r+0x488>
 4025600:	10815568 	cmpgeui	r2,r2,1365
 4025604:	1000191e 	bne	r2,zero,402566c <_malloc_r+0x7bc>
 4025608:	8804d4ba 	srli	r2,r17,18
 402560c:	11c01f44 	addi	r7,r2,125
 4025610:	380890fa 	slli	r4,r7,3
 4025614:	12001f04 	addi	r8,r2,124
 4025618:	003e5e06 	br	4024f94 <_malloc_r+0xe4>
 402561c:	e73ffe04 	addi	fp,fp,-8
 4025620:	af2b883a 	add	r21,r21,fp
 4025624:	adebc83a 	sub	r21,r21,r23
 4025628:	0029883a 	mov	r20,zero
 402562c:	003f0a06 	br	4025258 <_malloc_r+0x3a8>
 4025630:	81400204 	addi	r5,r16,8
 4025634:	9009883a 	mov	r4,r18
 4025638:	4023fbc0 	call	4023fbc <_free_r>
 402563c:	9c000217 	ldw	r16,8(r19)
 4025640:	00800034 	movhi	r2,0
 4025644:	1509cc17 	ldw	r20,10032(r2)
 4025648:	85400117 	ldw	r21,4(r16)
 402564c:	003f1b06 	br	40252bc <_malloc_r+0x40c>
 4025650:	18c15568 	cmpgeui	r3,r3,1365
 4025654:	1800091e 	bne	r3,zero,402567c <_malloc_r+0x7cc>
 4025658:	1006d4ba 	srli	r3,r2,18
 402565c:	19401f44 	addi	r5,r3,125
 4025660:	280a90fa 	slli	r5,r5,3
 4025664:	19001f04 	addi	r4,r3,124
 4025668:	003f3306 	br	4025338 <_malloc_r+0x488>
 402566c:	0100fe04 	movi	r4,1016
 4025670:	01c01fc4 	movi	r7,127
 4025674:	02001f84 	movi	r8,126
 4025678:	003e4606 	br	4024f94 <_malloc_r+0xe4>
 402567c:	0140fe04 	movi	r5,1016
 4025680:	01001f84 	movi	r4,126
 4025684:	003f2c06 	br	4025338 <_malloc_r+0x488>
 4025688:	98800117 	ldw	r2,4(r19)
 402568c:	003f9506 	br	40254e4 <_malloc_r+0x634>

04025690 <memcpy>:
 4025690:	30c00430 	cmpltui	r3,r6,16
 4025694:	2005883a 	mov	r2,r4
 4025698:	18002d1e 	bne	r3,zero,4025750 <memcpy+0xc0>
 402569c:	2906b03a 	or	r3,r5,r4
 40256a0:	18c000cc 	andi	r3,r3,3
 40256a4:	1800351e 	bne	r3,zero,402577c <memcpy+0xec>
 40256a8:	32fffc04 	addi	r11,r6,-16
 40256ac:	5816d13a 	srli	r11,r11,4
 40256b0:	280f883a 	mov	r7,r5
 40256b4:	2007883a 	mov	r3,r4
 40256b8:	5ac00044 	addi	r11,r11,1
 40256bc:	5816913a 	slli	r11,r11,4
 40256c0:	22d5883a 	add	r10,r4,r11
 40256c4:	39000117 	ldw	r4,4(r7)
 40256c8:	3a400017 	ldw	r9,0(r7)
 40256cc:	3a000217 	ldw	r8,8(r7)
 40256d0:	19000115 	stw	r4,4(r3)
 40256d4:	39000317 	ldw	r4,12(r7)
 40256d8:	1a400015 	stw	r9,0(r3)
 40256dc:	1a000215 	stw	r8,8(r3)
 40256e0:	19000315 	stw	r4,12(r3)
 40256e4:	18c00404 	addi	r3,r3,16
 40256e8:	39c00404 	addi	r7,r7,16
 40256ec:	50fff51e 	bne	r10,r3,40256c4 <memcpy+0x34>
 40256f0:	3100030c 	andi	r4,r6,12
 40256f4:	2acb883a 	add	r5,r5,r11
 40256f8:	320003cc 	andi	r8,r6,15
 40256fc:	20002226 	beq	r4,zero,4025788 <memcpy+0xf8>
 4025700:	280f883a 	mov	r7,r5
 4025704:	1813883a 	mov	r9,r3
 4025708:	39c00104 	addi	r7,r7,4
 402570c:	3abfff17 	ldw	r10,-4(r7)
 4025710:	41c9c83a 	sub	r4,r8,r7
 4025714:	2909883a 	add	r4,r5,r4
 4025718:	4a800015 	stw	r10,0(r9)
 402571c:	21000128 	cmpgeui	r4,r4,4
 4025720:	4a400104 	addi	r9,r9,4
 4025724:	203ff81e 	bne	r4,zero,4025708 <memcpy+0x78>
 4025728:	413fff04 	addi	r4,r8,-4
 402572c:	2008d0ba 	srli	r4,r4,2
 4025730:	318000cc 	andi	r6,r6,3
 4025734:	31ffffc4 	addi	r7,r6,-1
 4025738:	21000044 	addi	r4,r4,1
 402573c:	200890ba 	slli	r4,r4,2
 4025740:	1907883a 	add	r3,r3,r4
 4025744:	290b883a 	add	r5,r5,r4
 4025748:	3000041e 	bne	r6,zero,402575c <memcpy+0xcc>
 402574c:	f800283a 	ret
 4025750:	2007883a 	mov	r3,r4
 4025754:	31ffffc4 	addi	r7,r6,-1
 4025758:	303ffc26 	beq	r6,zero,402574c <memcpy+0xbc>
 402575c:	39c00044 	addi	r7,r7,1
 4025760:	19cf883a 	add	r7,r3,r7
 4025764:	29800003 	ldbu	r6,0(r5)
 4025768:	18c00044 	addi	r3,r3,1
 402576c:	29400044 	addi	r5,r5,1
 4025770:	19bfffc5 	stb	r6,-1(r3)
 4025774:	38fffb1e 	bne	r7,r3,4025764 <memcpy+0xd4>
 4025778:	f800283a 	ret
 402577c:	31ffffc4 	addi	r7,r6,-1
 4025780:	2007883a 	mov	r3,r4
 4025784:	003ff506 	br	402575c <memcpy+0xcc>
 4025788:	400d883a 	mov	r6,r8
 402578c:	003ff106 	br	4025754 <memcpy+0xc4>

04025790 <memset>:
 4025790:	20c000cc 	andi	r3,r4,3
 4025794:	2005883a 	mov	r2,r4
 4025798:	18003626 	beq	r3,zero,4025874 <memset+0xe4>
 402579c:	31ffffc4 	addi	r7,r6,-1
 40257a0:	30003326 	beq	r6,zero,4025870 <memset+0xe0>
 40257a4:	2811883a 	mov	r8,r5
 40257a8:	2007883a 	mov	r3,r4
 40257ac:	00000306 	br	40257bc <memset+0x2c>
 40257b0:	39ffffc4 	addi	r7,r7,-1
 40257b4:	39bfffe0 	cmpeqi	r6,r7,-1
 40257b8:	30002d1e 	bne	r6,zero,4025870 <memset+0xe0>
 40257bc:	18c00044 	addi	r3,r3,1
 40257c0:	198000cc 	andi	r6,r3,3
 40257c4:	1a3fffc5 	stb	r8,-1(r3)
 40257c8:	303ff91e 	bne	r6,zero,40257b0 <memset+0x20>
 40257cc:	39000130 	cmpltui	r4,r7,4
 40257d0:	2000221e 	bne	r4,zero,402585c <memset+0xcc>
 40257d4:	29003fcc 	andi	r4,r5,255
 40257d8:	200c923a 	slli	r6,r4,8
 40257dc:	3a000430 	cmpltui	r8,r7,16
 40257e0:	3108b03a 	or	r4,r6,r4
 40257e4:	200c943a 	slli	r6,r4,16
 40257e8:	310cb03a 	or	r6,r6,r4
 40257ec:	40000e1e 	bne	r8,zero,4025828 <memset+0x98>
 40257f0:	393ffc04 	addi	r4,r7,-16
 40257f4:	2008d13a 	srli	r4,r4,4
 40257f8:	21000044 	addi	r4,r4,1
 40257fc:	2008913a 	slli	r4,r4,4
 4025800:	1909883a 	add	r4,r3,r4
 4025804:	19800015 	stw	r6,0(r3)
 4025808:	19800115 	stw	r6,4(r3)
 402580c:	19800215 	stw	r6,8(r3)
 4025810:	19800315 	stw	r6,12(r3)
 4025814:	18c00404 	addi	r3,r3,16
 4025818:	20fffa1e 	bne	r4,r3,4025804 <memset+0x74>
 402581c:	3900030c 	andi	r4,r7,12
 4025820:	39c003cc 	andi	r7,r7,15
 4025824:	20000d26 	beq	r4,zero,402585c <memset+0xcc>
 4025828:	1811883a 	mov	r8,r3
 402582c:	42000104 	addi	r8,r8,4
 4025830:	3a09c83a 	sub	r4,r7,r8
 4025834:	1909883a 	add	r4,r3,r4
 4025838:	21000128 	cmpgeui	r4,r4,4
 402583c:	41bfff15 	stw	r6,-4(r8)
 4025840:	203ffa1e 	bne	r4,zero,402582c <memset+0x9c>
 4025844:	393fff04 	addi	r4,r7,-4
 4025848:	2008d0ba 	srli	r4,r4,2
 402584c:	39c000cc 	andi	r7,r7,3
 4025850:	21000044 	addi	r4,r4,1
 4025854:	200890ba 	slli	r4,r4,2
 4025858:	1907883a 	add	r3,r3,r4
 402585c:	38000426 	beq	r7,zero,4025870 <memset+0xe0>
 4025860:	19cf883a 	add	r7,r3,r7
 4025864:	18c00044 	addi	r3,r3,1
 4025868:	197fffc5 	stb	r5,-1(r3)
 402586c:	38fffd1e 	bne	r7,r3,4025864 <memset+0xd4>
 4025870:	f800283a 	ret
 4025874:	2007883a 	mov	r3,r4
 4025878:	300f883a 	mov	r7,r6
 402587c:	003fd306 	br	40257cc <memset+0x3c>

04025880 <_open_r>:
 4025880:	2807883a 	mov	r3,r5
 4025884:	defffe04 	addi	sp,sp,-8
 4025888:	dc000015 	stw	r16,0(sp)
 402588c:	300b883a 	mov	r5,r6
 4025890:	00800034 	movhi	r2,0
 4025894:	380d883a 	mov	r6,r7
 4025898:	2021883a 	mov	r16,r4
 402589c:	1809883a 	mov	r4,r3
 40258a0:	dfc00115 	stw	ra,4(sp)
 40258a4:	10095d15 	stw	zero,9588(r2)
 40258a8:	403194c0 	call	403194c <open>
 40258ac:	10ffffd8 	cmpnei	r3,r2,-1
 40258b0:	18000426 	beq	r3,zero,40258c4 <_open_r+0x44>
 40258b4:	dfc00117 	ldw	ra,4(sp)
 40258b8:	dc000017 	ldw	r16,0(sp)
 40258bc:	dec00204 	addi	sp,sp,8
 40258c0:	f800283a 	ret
 40258c4:	00c00034 	movhi	r3,0
 40258c8:	18c95d17 	ldw	r3,9588(r3)
 40258cc:	183ff926 	beq	r3,zero,40258b4 <_open_r+0x34>
 40258d0:	80c00015 	stw	r3,0(r16)
 40258d4:	dfc00117 	ldw	ra,4(sp)
 40258d8:	dc000017 	ldw	r16,0(sp)
 40258dc:	dec00204 	addi	sp,sp,8
 40258e0:	f800283a 	ret

040258e4 <_putc_r>:
 40258e4:	defffc04 	addi	sp,sp,-16
 40258e8:	dc400215 	stw	r17,8(sp)
 40258ec:	dfc00315 	stw	ra,12(sp)
 40258f0:	2023883a 	mov	r17,r4
 40258f4:	20000226 	beq	r4,zero,4025900 <_putc_r+0x1c>
 40258f8:	20800e17 	ldw	r2,56(r4)
 40258fc:	10000e26 	beq	r2,zero,4025938 <_putc_r+0x54>
 4025900:	30800217 	ldw	r2,8(r6)
 4025904:	10bfffc4 	addi	r2,r2,-1
 4025908:	30800215 	stw	r2,8(r6)
 402590c:	10001316 	blt	r2,zero,402595c <_putc_r+0x78>
 4025910:	30800017 	ldw	r2,0(r6)
 4025914:	11400005 	stb	r5,0(r2)
 4025918:	30800017 	ldw	r2,0(r6)
 402591c:	10c00044 	addi	r3,r2,1
 4025920:	30c00015 	stw	r3,0(r6)
 4025924:	10800003 	ldbu	r2,0(r2)
 4025928:	dfc00317 	ldw	ra,12(sp)
 402592c:	dc400217 	ldw	r17,8(sp)
 4025930:	dec00404 	addi	sp,sp,16
 4025934:	f800283a 	ret
 4025938:	d9800115 	stw	r6,4(sp)
 402593c:	d9400015 	stw	r5,0(sp)
 4025940:	4023c600 	call	4023c60 <__sinit>
 4025944:	d9800117 	ldw	r6,4(sp)
 4025948:	d9400017 	ldw	r5,0(sp)
 402594c:	30800217 	ldw	r2,8(r6)
 4025950:	10bfffc4 	addi	r2,r2,-1
 4025954:	30800215 	stw	r2,8(r6)
 4025958:	103fed0e 	bge	r2,zero,4025910 <_putc_r+0x2c>
 402595c:	30c00617 	ldw	r3,24(r6)
 4025960:	10c00e16 	blt	r2,r3,402599c <_putc_r+0xb8>
 4025964:	30800017 	ldw	r2,0(r6)
 4025968:	11400005 	stb	r5,0(r2)
 402596c:	30c00017 	ldw	r3,0(r6)
 4025970:	18800003 	ldbu	r2,0(r3)
 4025974:	108002a0 	cmpeqi	r2,r2,10
 4025978:	1000071e 	bne	r2,zero,4025998 <_putc_r+0xb4>
 402597c:	18800044 	addi	r2,r3,1
 4025980:	30800015 	stw	r2,0(r6)
 4025984:	18800003 	ldbu	r2,0(r3)
 4025988:	dfc00317 	ldw	ra,12(sp)
 402598c:	dc400217 	ldw	r17,8(sp)
 4025990:	dec00404 	addi	sp,sp,16
 4025994:	f800283a 	ret
 4025998:	01400284 	movi	r5,10
 402599c:	8809883a 	mov	r4,r17
 40259a0:	dfc00317 	ldw	ra,12(sp)
 40259a4:	dc400217 	ldw	r17,8(sp)
 40259a8:	dec00404 	addi	sp,sp,16
 40259ac:	40282fc1 	jmpi	40282fc <__swbuf_r>

040259b0 <putc>:
 40259b0:	defffc04 	addi	sp,sp,-16
 40259b4:	00800034 	movhi	r2,0
 40259b8:	dc800215 	stw	r18,8(sp)
 40259bc:	14894e17 	ldw	r18,9528(r2)
 40259c0:	dc400115 	stw	r17,4(sp)
 40259c4:	dfc00315 	stw	ra,12(sp)
 40259c8:	2023883a 	mov	r17,r4
 40259cc:	90000226 	beq	r18,zero,40259d8 <putc+0x28>
 40259d0:	90800e17 	ldw	r2,56(r18)
 40259d4:	10000f26 	beq	r2,zero,4025a14 <putc+0x64>
 40259d8:	28800217 	ldw	r2,8(r5)
 40259dc:	10bfffc4 	addi	r2,r2,-1
 40259e0:	28800215 	stw	r2,8(r5)
 40259e4:	10001316 	blt	r2,zero,4025a34 <putc+0x84>
 40259e8:	28800017 	ldw	r2,0(r5)
 40259ec:	14400005 	stb	r17,0(r2)
 40259f0:	28800017 	ldw	r2,0(r5)
 40259f4:	10c00044 	addi	r3,r2,1
 40259f8:	28c00015 	stw	r3,0(r5)
 40259fc:	10800003 	ldbu	r2,0(r2)
 4025a00:	dfc00317 	ldw	ra,12(sp)
 4025a04:	dc800217 	ldw	r18,8(sp)
 4025a08:	dc400117 	ldw	r17,4(sp)
 4025a0c:	dec00404 	addi	sp,sp,16
 4025a10:	f800283a 	ret
 4025a14:	9009883a 	mov	r4,r18
 4025a18:	d9400015 	stw	r5,0(sp)
 4025a1c:	4023c600 	call	4023c60 <__sinit>
 4025a20:	d9400017 	ldw	r5,0(sp)
 4025a24:	28800217 	ldw	r2,8(r5)
 4025a28:	10bfffc4 	addi	r2,r2,-1
 4025a2c:	28800215 	stw	r2,8(r5)
 4025a30:	103fed0e 	bge	r2,zero,40259e8 <putc+0x38>
 4025a34:	28c00617 	ldw	r3,24(r5)
 4025a38:	10c00a16 	blt	r2,r3,4025a64 <putc+0xb4>
 4025a3c:	28800017 	ldw	r2,0(r5)
 4025a40:	14400005 	stb	r17,0(r2)
 4025a44:	28c00017 	ldw	r3,0(r5)
 4025a48:	18800003 	ldbu	r2,0(r3)
 4025a4c:	108002a0 	cmpeqi	r2,r2,10
 4025a50:	10000c1e 	bne	r2,zero,4025a84 <putc+0xd4>
 4025a54:	18800044 	addi	r2,r3,1
 4025a58:	28800015 	stw	r2,0(r5)
 4025a5c:	18800003 	ldbu	r2,0(r3)
 4025a60:	003fe706 	br	4025a00 <putc+0x50>
 4025a64:	280d883a 	mov	r6,r5
 4025a68:	880b883a 	mov	r5,r17
 4025a6c:	9009883a 	mov	r4,r18
 4025a70:	dfc00317 	ldw	ra,12(sp)
 4025a74:	dc800217 	ldw	r18,8(sp)
 4025a78:	dc400117 	ldw	r17,4(sp)
 4025a7c:	dec00404 	addi	sp,sp,16
 4025a80:	40282fc1 	jmpi	40282fc <__swbuf_r>
 4025a84:	280d883a 	mov	r6,r5
 4025a88:	01400284 	movi	r5,10
 4025a8c:	003ff706 	br	4025a6c <putc+0xbc>

04025a90 <_puts_r>:
 4025a90:	defff504 	addi	sp,sp,-44
 4025a94:	dc000815 	stw	r16,32(sp)
 4025a98:	2021883a 	mov	r16,r4
 4025a9c:	2809883a 	mov	r4,r5
 4025aa0:	dc400915 	stw	r17,36(sp)
 4025aa4:	dfc00a15 	stw	ra,40(sp)
 4025aa8:	2823883a 	mov	r17,r5
 4025aac:	40260940 	call	4026094 <strlen>
 4025ab0:	11000044 	addi	r4,r2,1
 4025ab4:	d8800515 	stw	r2,20(sp)
 4025ab8:	00800044 	movi	r2,1
 4025abc:	00c00034 	movhi	r3,0
 4025ac0:	d8800715 	stw	r2,28(sp)
 4025ac4:	d8800404 	addi	r2,sp,16
 4025ac8:	18c0f104 	addi	r3,r3,964
 4025acc:	d8800115 	stw	r2,4(sp)
 4025ad0:	00800084 	movi	r2,2
 4025ad4:	dc400415 	stw	r17,16(sp)
 4025ad8:	d8c00615 	stw	r3,24(sp)
 4025adc:	d9000315 	stw	r4,12(sp)
 4025ae0:	d8800215 	stw	r2,8(sp)
 4025ae4:	81400217 	ldw	r5,8(r16)
 4025ae8:	80000226 	beq	r16,zero,4025af4 <_puts_r+0x64>
 4025aec:	80800e17 	ldw	r2,56(r16)
 4025af0:	10001326 	beq	r2,zero,4025b40 <_puts_r+0xb0>
 4025af4:	2880030b 	ldhu	r2,12(r5)
 4025af8:	10c8000c 	andi	r3,r2,8192
 4025afc:	1800061e 	bne	r3,zero,4025b18 <_puts_r+0x88>
 4025b00:	28c01917 	ldw	r3,100(r5)
 4025b04:	0137ffc4 	movi	r4,-8193
 4025b08:	10880014 	ori	r2,r2,8192
 4025b0c:	1906703a 	and	r3,r3,r4
 4025b10:	2880030d 	sth	r2,12(r5)
 4025b14:	28c01915 	stw	r3,100(r5)
 4025b18:	d9800104 	addi	r6,sp,4
 4025b1c:	8009883a 	mov	r4,r16
 4025b20:	402a0780 	call	402a078 <__sfvwrite_r>
 4025b24:	10000b1e 	bne	r2,zero,4025b54 <_puts_r+0xc4>
 4025b28:	00800284 	movi	r2,10
 4025b2c:	dfc00a17 	ldw	ra,40(sp)
 4025b30:	dc400917 	ldw	r17,36(sp)
 4025b34:	dc000817 	ldw	r16,32(sp)
 4025b38:	dec00b04 	addi	sp,sp,44
 4025b3c:	f800283a 	ret
 4025b40:	8009883a 	mov	r4,r16
 4025b44:	d9400015 	stw	r5,0(sp)
 4025b48:	4023c600 	call	4023c60 <__sinit>
 4025b4c:	d9400017 	ldw	r5,0(sp)
 4025b50:	003fe806 	br	4025af4 <_puts_r+0x64>
 4025b54:	00bfffc4 	movi	r2,-1
 4025b58:	003ff406 	br	4025b2c <_puts_r+0x9c>

04025b5c <puts>:
 4025b5c:	00800034 	movhi	r2,0
 4025b60:	200b883a 	mov	r5,r4
 4025b64:	11094e17 	ldw	r4,9528(r2)
 4025b68:	4025a901 	jmpi	4025a90 <_puts_r>

04025b6c <lflush>:
 4025b6c:	2080030b 	ldhu	r2,12(r4)
 4025b70:	1080024c 	andi	r2,r2,9
 4025b74:	10800258 	cmpnei	r2,r2,9
 4025b78:	10000226 	beq	r2,zero,4025b84 <lflush+0x18>
 4025b7c:	0005883a 	mov	r2,zero
 4025b80:	f800283a 	ret
 4025b84:	40238881 	jmpi	4023888 <fflush>

04025b88 <__srefill_r>:
 4025b88:	defffc04 	addi	sp,sp,-16
 4025b8c:	dc400115 	stw	r17,4(sp)
 4025b90:	dc000015 	stw	r16,0(sp)
 4025b94:	dfc00315 	stw	ra,12(sp)
 4025b98:	dc800215 	stw	r18,8(sp)
 4025b9c:	2023883a 	mov	r17,r4
 4025ba0:	2821883a 	mov	r16,r5
 4025ba4:	20000226 	beq	r4,zero,4025bb0 <__srefill_r+0x28>
 4025ba8:	20800e17 	ldw	r2,56(r4)
 4025bac:	10003a26 	beq	r2,zero,4025c98 <__srefill_r+0x110>
 4025bb0:	80c0030b 	ldhu	r3,12(r16)
 4025bb4:	1908000c 	andi	r4,r3,8192
 4025bb8:	1805883a 	mov	r2,r3
 4025bbc:	2000071e 	bne	r4,zero,4025bdc <__srefill_r+0x54>
 4025bc0:	81001917 	ldw	r4,100(r16)
 4025bc4:	18880014 	ori	r2,r3,8192
 4025bc8:	00f7ffc4 	movi	r3,-8193
 4025bcc:	20c8703a 	and	r4,r4,r3
 4025bd0:	8080030d 	sth	r2,12(r16)
 4025bd4:	1007883a 	mov	r3,r2
 4025bd8:	81001915 	stw	r4,100(r16)
 4025bdc:	80000115 	stw	zero,4(r16)
 4025be0:	1100080c 	andi	r4,r2,32
 4025be4:	20004d1e 	bne	r4,zero,4025d1c <__srefill_r+0x194>
 4025be8:	1100010c 	andi	r4,r2,4
 4025bec:	20001c1e 	bne	r4,zero,4025c60 <__srefill_r+0xd8>
 4025bf0:	1100040c 	andi	r4,r2,16
 4025bf4:	20005126 	beq	r4,zero,4025d3c <__srefill_r+0x1b4>
 4025bf8:	1080020c 	andi	r2,r2,8
 4025bfc:	1000371e 	bne	r2,zero,4025cdc <__srefill_r+0x154>
 4025c00:	18c00114 	ori	r3,r3,4
 4025c04:	80c0030d 	sth	r3,12(r16)
 4025c08:	80800417 	ldw	r2,16(r16)
 4025c0c:	10003c26 	beq	r2,zero,4025d00 <__srefill_r+0x178>
 4025c10:	8480030b 	ldhu	r18,12(r16)
 4025c14:	908000cc 	andi	r2,r18,3
 4025c18:	1000211e 	bne	r2,zero,4025ca0 <__srefill_r+0x118>
 4025c1c:	81800417 	ldw	r6,16(r16)
 4025c20:	80800817 	ldw	r2,32(r16)
 4025c24:	81c00517 	ldw	r7,20(r16)
 4025c28:	81400717 	ldw	r5,28(r16)
 4025c2c:	81800015 	stw	r6,0(r16)
 4025c30:	8809883a 	mov	r4,r17
 4025c34:	103ee83a 	callr	r2
 4025c38:	1007883a 	mov	r3,r2
 4025c3c:	80800115 	stw	r2,4(r16)
 4025c40:	0005883a 	mov	r2,zero
 4025c44:	00c0370e 	bge	zero,r3,4025d24 <__srefill_r+0x19c>
 4025c48:	dfc00317 	ldw	ra,12(sp)
 4025c4c:	dc800217 	ldw	r18,8(sp)
 4025c50:	dc400117 	ldw	r17,4(sp)
 4025c54:	dc000017 	ldw	r16,0(sp)
 4025c58:	dec00404 	addi	sp,sp,16
 4025c5c:	f800283a 	ret
 4025c60:	81400c17 	ldw	r5,48(r16)
 4025c64:	283fe826 	beq	r5,zero,4025c08 <__srefill_r+0x80>
 4025c68:	80801004 	addi	r2,r16,64
 4025c6c:	28800226 	beq	r5,r2,4025c78 <__srefill_r+0xf0>
 4025c70:	8809883a 	mov	r4,r17
 4025c74:	4023fbc0 	call	4023fbc <_free_r>
 4025c78:	80800f17 	ldw	r2,60(r16)
 4025c7c:	80000c15 	stw	zero,48(r16)
 4025c80:	80800115 	stw	r2,4(r16)
 4025c84:	103fe026 	beq	r2,zero,4025c08 <__srefill_r+0x80>
 4025c88:	80c00e17 	ldw	r3,56(r16)
 4025c8c:	0005883a 	mov	r2,zero
 4025c90:	80c00015 	stw	r3,0(r16)
 4025c94:	003fec06 	br	4025c48 <__srefill_r+0xc0>
 4025c98:	4023c600 	call	4023c60 <__sinit>
 4025c9c:	003fc406 	br	4025bb0 <__srefill_r+0x28>
 4025ca0:	00800034 	movhi	r2,0
 4025ca4:	11094d17 	ldw	r4,9524(r2)
 4025ca8:	014100b4 	movhi	r5,1026
 4025cac:	00800044 	movi	r2,1
 4025cb0:	8080030d 	sth	r2,12(r16)
 4025cb4:	2956db04 	addi	r5,r5,23404
 4025cb8:	40248640 	call	4024864 <_fwalk>
 4025cbc:	9080024c 	andi	r2,r18,9
 4025cc0:	8480030d 	sth	r18,12(r16)
 4025cc4:	10800258 	cmpnei	r2,r2,9
 4025cc8:	103fd41e 	bne	r2,zero,4025c1c <__srefill_r+0x94>
 4025ccc:	800b883a 	mov	r5,r16
 4025cd0:	8809883a 	mov	r4,r17
 4025cd4:	40236000 	call	4023600 <__sflush_r>
 4025cd8:	003fd006 	br	4025c1c <__srefill_r+0x94>
 4025cdc:	800b883a 	mov	r5,r16
 4025ce0:	8809883a 	mov	r4,r17
 4025ce4:	40238280 	call	4023828 <_fflush_r>
 4025ce8:	10000c1e 	bne	r2,zero,4025d1c <__srefill_r+0x194>
 4025cec:	80c0030b 	ldhu	r3,12(r16)
 4025cf0:	80000215 	stw	zero,8(r16)
 4025cf4:	80000615 	stw	zero,24(r16)
 4025cf8:	18fffdcc 	andi	r3,r3,65527
 4025cfc:	003fc006 	br	4025c00 <__srefill_r+0x78>
 4025d00:	800b883a 	mov	r5,r16
 4025d04:	8809883a 	mov	r4,r17
 4025d08:	4024c480 	call	4024c48 <__smakebuf_r>
 4025d0c:	003fc006 	br	4025c10 <__srefill_r+0x88>
 4025d10:	10801014 	ori	r2,r2,64
 4025d14:	80000115 	stw	zero,4(r16)
 4025d18:	8080030d 	sth	r2,12(r16)
 4025d1c:	00bfffc4 	movi	r2,-1
 4025d20:	003fc906 	br	4025c48 <__srefill_r+0xc0>
 4025d24:	8080030b 	ldhu	r2,12(r16)
 4025d28:	183ff91e 	bne	r3,zero,4025d10 <__srefill_r+0x188>
 4025d2c:	10800814 	ori	r2,r2,32
 4025d30:	8080030d 	sth	r2,12(r16)
 4025d34:	00bfffc4 	movi	r2,-1
 4025d38:	003fc306 	br	4025c48 <__srefill_r+0xc0>
 4025d3c:	00800244 	movi	r2,9
 4025d40:	88800015 	stw	r2,0(r17)
 4025d44:	18c01014 	ori	r3,r3,64
 4025d48:	80c0030d 	sth	r3,12(r16)
 4025d4c:	00bfffc4 	movi	r2,-1
 4025d50:	003fbd06 	br	4025c48 <__srefill_r+0xc0>

04025d54 <__srget_r>:
 4025d54:	defffd04 	addi	sp,sp,-12
 4025d58:	dc400115 	stw	r17,4(sp)
 4025d5c:	dc000015 	stw	r16,0(sp)
 4025d60:	dfc00215 	stw	ra,8(sp)
 4025d64:	2023883a 	mov	r17,r4
 4025d68:	2821883a 	mov	r16,r5
 4025d6c:	20000226 	beq	r4,zero,4025d78 <__srget_r+0x24>
 4025d70:	20800e17 	ldw	r2,56(r4)
 4025d74:	10001026 	beq	r2,zero,4025db8 <__srget_r+0x64>
 4025d78:	800b883a 	mov	r5,r16
 4025d7c:	8809883a 	mov	r4,r17
 4025d80:	4025b880 	call	4025b88 <__srefill_r>
 4025d84:	10000e1e 	bne	r2,zero,4025dc0 <__srget_r+0x6c>
 4025d88:	80c00017 	ldw	r3,0(r16)
 4025d8c:	80800117 	ldw	r2,4(r16)
 4025d90:	19000044 	addi	r4,r3,1
 4025d94:	10bfffc4 	addi	r2,r2,-1
 4025d98:	80800115 	stw	r2,4(r16)
 4025d9c:	81000015 	stw	r4,0(r16)
 4025da0:	18800003 	ldbu	r2,0(r3)
 4025da4:	dfc00217 	ldw	ra,8(sp)
 4025da8:	dc400117 	ldw	r17,4(sp)
 4025dac:	dc000017 	ldw	r16,0(sp)
 4025db0:	dec00304 	addi	sp,sp,12
 4025db4:	f800283a 	ret
 4025db8:	4023c600 	call	4023c60 <__sinit>
 4025dbc:	003fee06 	br	4025d78 <__srget_r+0x24>
 4025dc0:	00bfffc4 	movi	r2,-1
 4025dc4:	003ff706 	br	4025da4 <__srget_r+0x50>

04025dc8 <__srget>:
 4025dc8:	defffd04 	addi	sp,sp,-12
 4025dcc:	00800034 	movhi	r2,0
 4025dd0:	dc400115 	stw	r17,4(sp)
 4025dd4:	14494e17 	ldw	r17,9528(r2)
 4025dd8:	dc000015 	stw	r16,0(sp)
 4025ddc:	dfc00215 	stw	ra,8(sp)
 4025de0:	2021883a 	mov	r16,r4
 4025de4:	88000226 	beq	r17,zero,4025df0 <__srget+0x28>
 4025de8:	88800e17 	ldw	r2,56(r17)
 4025dec:	10001026 	beq	r2,zero,4025e30 <__srget+0x68>
 4025df0:	800b883a 	mov	r5,r16
 4025df4:	8809883a 	mov	r4,r17
 4025df8:	4025b880 	call	4025b88 <__srefill_r>
 4025dfc:	10000f1e 	bne	r2,zero,4025e3c <__srget+0x74>
 4025e00:	80c00017 	ldw	r3,0(r16)
 4025e04:	80800117 	ldw	r2,4(r16)
 4025e08:	19000044 	addi	r4,r3,1
 4025e0c:	10bfffc4 	addi	r2,r2,-1
 4025e10:	80800115 	stw	r2,4(r16)
 4025e14:	81000015 	stw	r4,0(r16)
 4025e18:	18800003 	ldbu	r2,0(r3)
 4025e1c:	dfc00217 	ldw	ra,8(sp)
 4025e20:	dc400117 	ldw	r17,4(sp)
 4025e24:	dc000017 	ldw	r16,0(sp)
 4025e28:	dec00304 	addi	sp,sp,12
 4025e2c:	f800283a 	ret
 4025e30:	8809883a 	mov	r4,r17
 4025e34:	4023c600 	call	4023c60 <__sinit>
 4025e38:	003fed06 	br	4025df0 <__srget+0x28>
 4025e3c:	00bfffc4 	movi	r2,-1
 4025e40:	003ff606 	br	4025e1c <__srget+0x54>

04025e44 <_sbrk_r>:
 4025e44:	defffe04 	addi	sp,sp,-8
 4025e48:	dc000015 	stw	r16,0(sp)
 4025e4c:	00800034 	movhi	r2,0
 4025e50:	2021883a 	mov	r16,r4
 4025e54:	2809883a 	mov	r4,r5
 4025e58:	dfc00115 	stw	ra,4(sp)
 4025e5c:	10095d15 	stw	zero,9588(r2)
 4025e60:	4031c300 	call	4031c30 <sbrk>
 4025e64:	10ffffd8 	cmpnei	r3,r2,-1
 4025e68:	18000426 	beq	r3,zero,4025e7c <_sbrk_r+0x38>
 4025e6c:	dfc00117 	ldw	ra,4(sp)
 4025e70:	dc000017 	ldw	r16,0(sp)
 4025e74:	dec00204 	addi	sp,sp,8
 4025e78:	f800283a 	ret
 4025e7c:	00c00034 	movhi	r3,0
 4025e80:	18c95d17 	ldw	r3,9588(r3)
 4025e84:	183ff926 	beq	r3,zero,4025e6c <_sbrk_r+0x28>
 4025e88:	80c00015 	stw	r3,0(r16)
 4025e8c:	dfc00117 	ldw	ra,4(sp)
 4025e90:	dc000017 	ldw	r16,0(sp)
 4025e94:	dec00204 	addi	sp,sp,8
 4025e98:	f800283a 	ret

04025e9c <__sread>:
 4025e9c:	defffe04 	addi	sp,sp,-8
 4025ea0:	dc000015 	stw	r16,0(sp)
 4025ea4:	2821883a 	mov	r16,r5
 4025ea8:	2940038f 	ldh	r5,14(r5)
 4025eac:	dfc00115 	stw	ra,4(sp)
 4025eb0:	402b9680 	call	402b968 <_read_r>
 4025eb4:	10000716 	blt	r2,zero,4025ed4 <__sread+0x38>
 4025eb8:	80c01417 	ldw	r3,80(r16)
 4025ebc:	1887883a 	add	r3,r3,r2
 4025ec0:	80c01415 	stw	r3,80(r16)
 4025ec4:	dfc00117 	ldw	ra,4(sp)
 4025ec8:	dc000017 	ldw	r16,0(sp)
 4025ecc:	dec00204 	addi	sp,sp,8
 4025ed0:	f800283a 	ret
 4025ed4:	80c0030b 	ldhu	r3,12(r16)
 4025ed8:	18fbffcc 	andi	r3,r3,61439
 4025edc:	80c0030d 	sth	r3,12(r16)
 4025ee0:	dfc00117 	ldw	ra,4(sp)
 4025ee4:	dc000017 	ldw	r16,0(sp)
 4025ee8:	dec00204 	addi	sp,sp,8
 4025eec:	f800283a 	ret

04025ef0 <__seofread>:
 4025ef0:	0005883a 	mov	r2,zero
 4025ef4:	f800283a 	ret

04025ef8 <__swrite>:
 4025ef8:	2880030b 	ldhu	r2,12(r5)
 4025efc:	defffb04 	addi	sp,sp,-20
 4025f00:	dcc00315 	stw	r19,12(sp)
 4025f04:	dc800215 	stw	r18,8(sp)
 4025f08:	dc400115 	stw	r17,4(sp)
 4025f0c:	dc000015 	stw	r16,0(sp)
 4025f10:	dfc00415 	stw	ra,16(sp)
 4025f14:	10c0400c 	andi	r3,r2,256
 4025f18:	2821883a 	mov	r16,r5
 4025f1c:	2023883a 	mov	r17,r4
 4025f20:	2940038f 	ldh	r5,14(r5)
 4025f24:	3025883a 	mov	r18,r6
 4025f28:	3827883a 	mov	r19,r7
 4025f2c:	18000c1e 	bne	r3,zero,4025f60 <__swrite+0x68>
 4025f30:	10bbffcc 	andi	r2,r2,61439
 4025f34:	980f883a 	mov	r7,r19
 4025f38:	900d883a 	mov	r6,r18
 4025f3c:	8809883a 	mov	r4,r17
 4025f40:	8080030d 	sth	r2,12(r16)
 4025f44:	dfc00417 	ldw	ra,16(sp)
 4025f48:	dcc00317 	ldw	r19,12(sp)
 4025f4c:	dc800217 	ldw	r18,8(sp)
 4025f50:	dc400117 	ldw	r17,4(sp)
 4025f54:	dc000017 	ldw	r16,0(sp)
 4025f58:	dec00504 	addi	sp,sp,20
 4025f5c:	402845c1 	jmpi	402845c <_write_r>
 4025f60:	01c00084 	movi	r7,2
 4025f64:	000d883a 	mov	r6,zero
 4025f68:	402a5a80 	call	402a5a8 <_lseek_r>
 4025f6c:	8080030b 	ldhu	r2,12(r16)
 4025f70:	8140038f 	ldh	r5,14(r16)
 4025f74:	003fee06 	br	4025f30 <__swrite+0x38>

04025f78 <__sseek>:
 4025f78:	defffe04 	addi	sp,sp,-8
 4025f7c:	dc000015 	stw	r16,0(sp)
 4025f80:	2821883a 	mov	r16,r5
 4025f84:	2940038f 	ldh	r5,14(r5)
 4025f88:	dfc00115 	stw	ra,4(sp)
 4025f8c:	402a5a80 	call	402a5a8 <_lseek_r>
 4025f90:	10ffffd8 	cmpnei	r3,r2,-1
 4025f94:	18000826 	beq	r3,zero,4025fb8 <__sseek+0x40>
 4025f98:	80c0030b 	ldhu	r3,12(r16)
 4025f9c:	80801415 	stw	r2,80(r16)
 4025fa0:	18c40014 	ori	r3,r3,4096
 4025fa4:	80c0030d 	sth	r3,12(r16)
 4025fa8:	dfc00117 	ldw	ra,4(sp)
 4025fac:	dc000017 	ldw	r16,0(sp)
 4025fb0:	dec00204 	addi	sp,sp,8
 4025fb4:	f800283a 	ret
 4025fb8:	80c0030b 	ldhu	r3,12(r16)
 4025fbc:	18fbffcc 	andi	r3,r3,61439
 4025fc0:	80c0030d 	sth	r3,12(r16)
 4025fc4:	dfc00117 	ldw	ra,4(sp)
 4025fc8:	dc000017 	ldw	r16,0(sp)
 4025fcc:	dec00204 	addi	sp,sp,8
 4025fd0:	f800283a 	ret

04025fd4 <__sclose>:
 4025fd4:	2940038f 	ldh	r5,14(r5)
 4025fd8:	40286241 	jmpi	4028624 <_close_r>

04025fdc <strcmp>:
 4025fdc:	2144b03a 	or	r2,r4,r5
 4025fe0:	108000cc 	andi	r2,r2,3
 4025fe4:	1000141e 	bne	r2,zero,4026038 <strcmp+0x5c>
 4025fe8:	20800017 	ldw	r2,0(r4)
 4025fec:	28c00017 	ldw	r3,0(r5)
 4025ff0:	10c0111e 	bne	r2,r3,4026038 <strcmp+0x5c>
 4025ff4:	01ffbff4 	movhi	r7,65279
 4025ff8:	01a02074 	movhi	r6,32897
 4025ffc:	39ffbfc4 	addi	r7,r7,-257
 4026000:	31a02004 	addi	r6,r6,-32640
 4026004:	00000306 	br	4026014 <strcmp+0x38>
 4026008:	20800017 	ldw	r2,0(r4)
 402600c:	28c00017 	ldw	r3,0(r5)
 4026010:	10c0091e 	bne	r2,r3,4026038 <strcmp+0x5c>
 4026014:	11c7883a 	add	r3,r2,r7
 4026018:	0084303a 	nor	r2,zero,r2
 402601c:	1884703a 	and	r2,r3,r2
 4026020:	1184703a 	and	r2,r2,r6
 4026024:	21000104 	addi	r4,r4,4
 4026028:	29400104 	addi	r5,r5,4
 402602c:	103ff626 	beq	r2,zero,4026008 <strcmp+0x2c>
 4026030:	0005883a 	mov	r2,zero
 4026034:	f800283a 	ret
 4026038:	20c00003 	ldbu	r3,0(r4)
 402603c:	18803fcc 	andi	r2,r3,255
 4026040:	1080201c 	xori	r2,r2,128
 4026044:	10bfe004 	addi	r2,r2,-128
 4026048:	1000071e 	bne	r2,zero,4026068 <strcmp+0x8c>
 402604c:	00000a06 	br	4026078 <strcmp+0x9c>
 4026050:	20c00003 	ldbu	r3,0(r4)
 4026054:	29400044 	addi	r5,r5,1
 4026058:	18803fcc 	andi	r2,r3,255
 402605c:	1080201c 	xori	r2,r2,128
 4026060:	10bfe004 	addi	r2,r2,-128
 4026064:	10000726 	beq	r2,zero,4026084 <strcmp+0xa8>
 4026068:	29800007 	ldb	r6,0(r5)
 402606c:	21000044 	addi	r4,r4,1
 4026070:	30bff726 	beq	r6,r2,4026050 <strcmp+0x74>
 4026074:	18803fcc 	andi	r2,r3,255
 4026078:	28c00003 	ldbu	r3,0(r5)
 402607c:	10c5c83a 	sub	r2,r2,r3
 4026080:	f800283a 	ret
 4026084:	28c00003 	ldbu	r3,0(r5)
 4026088:	0005883a 	mov	r2,zero
 402608c:	10c5c83a 	sub	r2,r2,r3
 4026090:	f800283a 	ret

04026094 <strlen>:
 4026094:	208000cc 	andi	r2,r4,3
 4026098:	10000926 	beq	r2,zero,40260c0 <strlen+0x2c>
 402609c:	2005883a 	mov	r2,r4
 40260a0:	00000306 	br	40260b0 <strlen+0x1c>
 40260a4:	10800044 	addi	r2,r2,1
 40260a8:	10c000cc 	andi	r3,r2,3
 40260ac:	18000526 	beq	r3,zero,40260c4 <strlen+0x30>
 40260b0:	10c00007 	ldb	r3,0(r2)
 40260b4:	183ffb1e 	bne	r3,zero,40260a4 <strlen+0x10>
 40260b8:	1105c83a 	sub	r2,r2,r4
 40260bc:	f800283a 	ret
 40260c0:	2005883a 	mov	r2,r4
 40260c4:	11400017 	ldw	r5,0(r2)
 40260c8:	01ffbff4 	movhi	r7,65279
 40260cc:	39ffbfc4 	addi	r7,r7,-257
 40260d0:	29c7883a 	add	r3,r5,r7
 40260d4:	01a02074 	movhi	r6,32897
 40260d8:	014a303a 	nor	r5,zero,r5
 40260dc:	1946703a 	and	r3,r3,r5
 40260e0:	31a02004 	addi	r6,r6,-32640
 40260e4:	1986703a 	and	r3,r3,r6
 40260e8:	1800071e 	bne	r3,zero,4026108 <strlen+0x74>
 40260ec:	11400117 	ldw	r5,4(r2)
 40260f0:	10800104 	addi	r2,r2,4
 40260f4:	29c7883a 	add	r3,r5,r7
 40260f8:	014a303a 	nor	r5,zero,r5
 40260fc:	1946703a 	and	r3,r3,r5
 4026100:	1986703a 	and	r3,r3,r6
 4026104:	183ff926 	beq	r3,zero,40260ec <strlen+0x58>
 4026108:	10c00007 	ldb	r3,0(r2)
 402610c:	183fea26 	beq	r3,zero,40260b8 <strlen+0x24>
 4026110:	10c00047 	ldb	r3,1(r2)
 4026114:	10800044 	addi	r2,r2,1
 4026118:	183fe726 	beq	r3,zero,40260b8 <strlen+0x24>
 402611c:	10c00047 	ldb	r3,1(r2)
 4026120:	10800044 	addi	r2,r2,1
 4026124:	183ffa1e 	bne	r3,zero,4026110 <strlen+0x7c>
 4026128:	003fe306 	br	40260b8 <strlen+0x24>

0402612c <___vfprintf_internal_r>:
 402612c:	deffbf04 	addi	sp,sp,-260
 4026130:	dfc04015 	stw	ra,256(sp)
 4026134:	dd803d15 	stw	r22,244(sp)
 4026138:	dcc03a15 	stw	r19,232(sp)
 402613c:	dc803915 	stw	r18,228(sp)
 4026140:	2027883a 	mov	r19,r4
 4026144:	2825883a 	mov	r18,r5
 4026148:	302d883a 	mov	r22,r6
 402614c:	d9c00615 	stw	r7,24(sp)
 4026150:	df003f15 	stw	fp,252(sp)
 4026154:	ddc03e15 	stw	r23,248(sp)
 4026158:	dd403c15 	stw	r21,240(sp)
 402615c:	dd003b15 	stw	r20,236(sp)
 4026160:	dc403815 	stw	r17,224(sp)
 4026164:	dc003715 	stw	r16,220(sp)
 4026168:	402a5900 	call	402a590 <_localeconv_r>
 402616c:	10800017 	ldw	r2,0(r2)
 4026170:	1009883a 	mov	r4,r2
 4026174:	d8800d15 	stw	r2,52(sp)
 4026178:	40260940 	call	4026094 <strlen>
 402617c:	d8800b15 	stw	r2,44(sp)
 4026180:	98000226 	beq	r19,zero,402618c <___vfprintf_internal_r+0x60>
 4026184:	98800e17 	ldw	r2,56(r19)
 4026188:	1001de26 	beq	r2,zero,4026904 <___vfprintf_internal_r+0x7d8>
 402618c:	9080030b 	ldhu	r2,12(r18)
 4026190:	10c8000c 	andi	r3,r2,8192
 4026194:	1800061e 	bne	r3,zero,40261b0 <___vfprintf_internal_r+0x84>
 4026198:	90c01917 	ldw	r3,100(r18)
 402619c:	0137ffc4 	movi	r4,-8193
 40261a0:	10880014 	ori	r2,r2,8192
 40261a4:	1906703a 	and	r3,r3,r4
 40261a8:	9080030d 	sth	r2,12(r18)
 40261ac:	90c01915 	stw	r3,100(r18)
 40261b0:	10c0020c 	andi	r3,r2,8
 40261b4:	1800fa26 	beq	r3,zero,40265a0 <___vfprintf_internal_r+0x474>
 40261b8:	90c00417 	ldw	r3,16(r18)
 40261bc:	1800f826 	beq	r3,zero,40265a0 <___vfprintf_internal_r+0x474>
 40261c0:	1080068c 	andi	r2,r2,26
 40261c4:	10800298 	cmpnei	r2,r2,10
 40261c8:	1000fd26 	beq	r2,zero,40265c0 <___vfprintf_internal_r+0x494>
 40261cc:	d8802704 	addi	r2,sp,156
 40261d0:	b02f883a 	mov	r23,r22
 40261d4:	d8801a15 	stw	r2,104(sp)
 40261d8:	d8001c15 	stw	zero,112(sp)
 40261dc:	d8001b15 	stw	zero,108(sp)
 40261e0:	d8000815 	stw	zero,32(sp)
 40261e4:	d8000915 	stw	zero,36(sp)
 40261e8:	d8000a15 	stw	zero,40(sp)
 40261ec:	d8000c15 	stw	zero,48(sp)
 40261f0:	d8001015 	stw	zero,64(sp)
 40261f4:	d8000515 	stw	zero,20(sp)
 40261f8:	102d883a 	mov	r22,r2
 40261fc:	b8800007 	ldb	r2,0(r23)
 4026200:	1000d526 	beq	r2,zero,4026558 <___vfprintf_internal_r+0x42c>
 4026204:	b821883a 	mov	r16,r23
 4026208:	00000306 	br	4026218 <___vfprintf_internal_r+0xec>
 402620c:	80800047 	ldb	r2,1(r16)
 4026210:	84000044 	addi	r16,r16,1
 4026214:	10012026 	beq	r2,zero,4026698 <___vfprintf_internal_r+0x56c>
 4026218:	10800958 	cmpnei	r2,r2,37
 402621c:	103ffb1e 	bne	r2,zero,402620c <___vfprintf_internal_r+0xe0>
 4026220:	85e3c83a 	sub	r17,r16,r23
 4026224:	85c11e1e 	bne	r16,r23,40266a0 <___vfprintf_internal_r+0x574>
 4026228:	80800003 	ldbu	r2,0(r16)
 402622c:	10803fcc 	andi	r2,r2,255
 4026230:	1080201c 	xori	r2,r2,128
 4026234:	10bfe004 	addi	r2,r2,-128
 4026238:	1000c726 	beq	r2,zero,4026558 <___vfprintf_internal_r+0x42c>
 402623c:	82c00047 	ldb	r11,1(r16)
 4026240:	85c00044 	addi	r23,r16,1
 4026244:	d8001345 	stb	zero,77(sp)
 4026248:	0009883a 	mov	r4,zero
 402624c:	000b883a 	mov	r5,zero
 4026250:	023fffc4 	movi	r8,-1
 4026254:	0021883a 	mov	r16,zero
 4026258:	0019883a 	mov	r12,zero
 402625c:	bdc00044 	addi	r23,r23,1
 4026260:	5839883a 	mov	fp,r11
 4026264:	e0bff804 	addi	r2,fp,-32
 4026268:	10c01668 	cmpgeui	r3,r2,89
 402626c:	18006a1e 	bne	r3,zero,4026418 <___vfprintf_internal_r+0x2ec>
 4026270:	100490ba 	slli	r2,r2,2
 4026274:	00c100b4 	movhi	r3,1026
 4026278:	10c7883a 	add	r3,r2,r3
 402627c:	1898a117 	ldw	r2,25220(r3)
 4026280:	1000683a 	jmp	r2
 4026284:	04026bc4 	movi	r16,2479
 4026288:	04026418 	cmpnei	r16,zero,2448
 402628c:	04026418 	cmpnei	r16,zero,2448
 4026290:	04026bb8 	rdprs	r16,zero,2478
 4026294:	04026418 	cmpnei	r16,zero,2448
 4026298:	04026418 	cmpnei	r16,zero,2448
 402629c:	04026418 	cmpnei	r16,zero,2448
 40262a0:	04026418 	cmpnei	r16,zero,2448
 40262a4:	04026418 	cmpnei	r16,zero,2448
 40262a8:	04026418 	cmpnei	r16,zero,2448
 40262ac:	04026b90 	cmplti	r16,zero,2478
 40262b0:	04026b80 	call	4026b8 <_gp+0x3f8188>
 40262b4:	04026418 	cmpnei	r16,zero,2448
 40262b8:	04026b68 	cmpgeui	r16,zero,2477
 40262bc:	04026b24 	muli	r16,zero,2476
 40262c0:	04026418 	cmpnei	r16,zero,2448
 40262c4:	04026b18 	cmpnei	r16,zero,2476
 40262c8:	040263e8 	cmpgeui	r16,zero,2447
 40262cc:	040263e8 	cmpgeui	r16,zero,2447
 40262d0:	040263e8 	cmpgeui	r16,zero,2447
 40262d4:	040263e8 	cmpgeui	r16,zero,2447
 40262d8:	040263e8 	cmpgeui	r16,zero,2447
 40262dc:	040263e8 	cmpgeui	r16,zero,2447
 40262e0:	040263e8 	cmpgeui	r16,zero,2447
 40262e4:	040263e8 	cmpgeui	r16,zero,2447
 40262e8:	040263e8 	cmpgeui	r16,zero,2447
 40262ec:	04026418 	cmpnei	r16,zero,2448
 40262f0:	04026418 	cmpnei	r16,zero,2448
 40262f4:	04026418 	cmpnei	r16,zero,2448
 40262f8:	04026418 	cmpnei	r16,zero,2448
 40262fc:	04026418 	cmpnei	r16,zero,2448
 4026300:	04026418 	cmpnei	r16,zero,2448
 4026304:	04026418 	cmpnei	r16,zero,2448
 4026308:	04026418 	cmpnei	r16,zero,2448
 402630c:	04026418 	cmpnei	r16,zero,2448
 4026310:	04026418 	cmpnei	r16,zero,2448
 4026314:	04026a30 	cmpltui	r16,zero,2472
 4026318:	040266fc 	xorhi	r16,zero,2459
 402631c:	04026418 	cmpnei	r16,zero,2448
 4026320:	040266fc 	xorhi	r16,zero,2459
 4026324:	04026418 	cmpnei	r16,zero,2448
 4026328:	04026418 	cmpnei	r16,zero,2448
 402632c:	04026418 	cmpnei	r16,zero,2448
 4026330:	04026418 	cmpnei	r16,zero,2448
 4026334:	04026a24 	muli	r16,zero,2472
 4026338:	04026418 	cmpnei	r16,zero,2448
 402633c:	04026418 	cmpnei	r16,zero,2448
 4026340:	04026630 	cmpltui	r16,zero,2456
 4026344:	04026418 	cmpnei	r16,zero,2448
 4026348:	04026418 	cmpnei	r16,zero,2448
 402634c:	04026418 	cmpnei	r16,zero,2448
 4026350:	04026418 	cmpnei	r16,zero,2448
 4026354:	04026418 	cmpnei	r16,zero,2448
 4026358:	04026608 	cmpgei	r16,zero,2456
 402635c:	04026418 	cmpnei	r16,zero,2448
 4026360:	04026418 	cmpnei	r16,zero,2448
 4026364:	040269dc 	xori	r16,zero,2471
 4026368:	04026418 	cmpnei	r16,zero,2448
 402636c:	04026418 	cmpnei	r16,zero,2448
 4026370:	04026418 	cmpnei	r16,zero,2448
 4026374:	04026418 	cmpnei	r16,zero,2448
 4026378:	04026418 	cmpnei	r16,zero,2448
 402637c:	04026418 	cmpnei	r16,zero,2448
 4026380:	04026418 	cmpnei	r16,zero,2448
 4026384:	04026418 	cmpnei	r16,zero,2448
 4026388:	04026418 	cmpnei	r16,zero,2448
 402638c:	04026418 	cmpnei	r16,zero,2448
 4026390:	040269b4 	movhi	r16,2470
 4026394:	04026910 	cmplti	r16,zero,2468
 4026398:	040266fc 	xorhi	r16,zero,2459
 402639c:	040266fc 	xorhi	r16,zero,2459
 40263a0:	040266fc 	xorhi	r16,zero,2459
 40263a4:	040269a8 	cmpgeui	r16,zero,2470
 40263a8:	04026910 	cmplti	r16,zero,2468
 40263ac:	04026418 	cmpnei	r16,zero,2448
 40263b0:	04026418 	cmpnei	r16,zero,2448
 40263b4:	04026d18 	cmpnei	r16,zero,2484
 40263b8:	04026418 	cmpnei	r16,zero,2448
 40263bc:	04026cdc 	xori	r16,zero,2483
 40263c0:	04026634 	movhi	r16,2456
 40263c4:	04026c9c 	xori	r16,zero,2482
 40263c8:	04026c90 	cmplti	r16,zero,2482
 40263cc:	04026418 	cmpnei	r16,zero,2448
 40263d0:	04026c38 	rdprs	r16,zero,2480
 40263d4:	04026418 	cmpnei	r16,zero,2448
 40263d8:	0402660c 	andi	r16,zero,2456
 40263dc:	04026418 	cmpnei	r16,zero,2448
 40263e0:	04026418 	cmpnei	r16,zero,2448
 40263e4:	04026bf0 	cmpltui	r16,zero,2479
 40263e8:	0021883a 	mov	r16,zero
 40263ec:	e0bff404 	addi	r2,fp,-48
 40263f0:	bf000007 	ldb	fp,0(r23)
 40263f4:	840002a4 	muli	r16,r16,10
 40263f8:	bdc00044 	addi	r23,r23,1
 40263fc:	1421883a 	add	r16,r2,r16
 4026400:	e0bff404 	addi	r2,fp,-48
 4026404:	10c002b0 	cmpltui	r3,r2,10
 4026408:	183ff91e 	bne	r3,zero,40263f0 <___vfprintf_internal_r+0x2c4>
 402640c:	e0bff804 	addi	r2,fp,-32
 4026410:	10c01668 	cmpgeui	r3,r2,89
 4026414:	183f9626 	beq	r3,zero,4026270 <___vfprintf_internal_r+0x144>
 4026418:	21003fcc 	andi	r4,r4,255
 402641c:	2006851e 	bne	r4,zero,4027e34 <___vfprintf_internal_r+0x1d08>
 4026420:	e0004d26 	beq	fp,zero,4026558 <___vfprintf_internal_r+0x42c>
 4026424:	df001d05 	stb	fp,116(sp)
 4026428:	d8001345 	stb	zero,77(sp)
 402642c:	05000044 	movi	r20,1
 4026430:	05400044 	movi	r21,1
 4026434:	dc401d04 	addi	r17,sp,116
 4026438:	db000415 	stw	r12,16(sp)
 402643c:	0011883a 	mov	r8,zero
 4026440:	d8000715 	stw	zero,28(sp)
 4026444:	d8800417 	ldw	r2,16(sp)
 4026448:	1380008c 	andi	r14,r2,2
 402644c:	70000126 	beq	r14,zero,4026454 <___vfprintf_internal_r+0x328>
 4026450:	a5000084 	addi	r20,r20,2
 4026454:	d8800417 	ldw	r2,16(sp)
 4026458:	d8c01c17 	ldw	r3,112(sp)
 402645c:	1340210c 	andi	r13,r2,132
 4026460:	6800021e 	bne	r13,zero,402646c <___vfprintf_internal_r+0x340>
 4026464:	850fc83a 	sub	r7,r16,r20
 4026468:	01c34316 	blt	zero,r7,4027178 <___vfprintf_internal_r+0x104c>
 402646c:	d8801347 	ldb	r2,77(sp)
 4026470:	10000c26 	beq	r2,zero,40264a4 <___vfprintf_internal_r+0x378>
 4026474:	d8801b17 	ldw	r2,108(sp)
 4026478:	d9001344 	addi	r4,sp,77
 402647c:	18c00044 	addi	r3,r3,1
 4026480:	10800044 	addi	r2,r2,1
 4026484:	b1000015 	stw	r4,0(r22)
 4026488:	01000044 	movi	r4,1
 402648c:	d8801b15 	stw	r2,108(sp)
 4026490:	b1000115 	stw	r4,4(r22)
 4026494:	d8c01c15 	stw	r3,112(sp)
 4026498:	10800208 	cmpgei	r2,r2,8
 402649c:	1003771e 	bne	r2,zero,402727c <___vfprintf_internal_r+0x1150>
 40264a0:	b5800204 	addi	r22,r22,8
 40264a4:	70000c26 	beq	r14,zero,40264d8 <___vfprintf_internal_r+0x3ac>
 40264a8:	d8801b17 	ldw	r2,108(sp)
 40264ac:	d9001384 	addi	r4,sp,78
 40264b0:	18c00084 	addi	r3,r3,2
 40264b4:	10800044 	addi	r2,r2,1
 40264b8:	b1000015 	stw	r4,0(r22)
 40264bc:	01000084 	movi	r4,2
 40264c0:	d8801b15 	stw	r2,108(sp)
 40264c4:	b1000115 	stw	r4,4(r22)
 40264c8:	d8c01c15 	stw	r3,112(sp)
 40264cc:	10800208 	cmpgei	r2,r2,8
 40264d0:	1003781e 	bne	r2,zero,40272b4 <___vfprintf_internal_r+0x1188>
 40264d4:	b5800204 	addi	r22,r22,8
 40264d8:	6b402018 	cmpnei	r13,r13,128
 40264dc:	68025926 	beq	r13,zero,4026e44 <___vfprintf_internal_r+0xd18>
 40264e0:	4551c83a 	sub	r8,r8,r21
 40264e4:	02029116 	blt	zero,r8,4026f2c <___vfprintf_internal_r+0xe00>
 40264e8:	d8800417 	ldw	r2,16(sp)
 40264ec:	1080400c 	andi	r2,r2,256
 40264f0:	10020e1e 	bne	r2,zero,4026d2c <___vfprintf_internal_r+0xc00>
 40264f4:	d8801b17 	ldw	r2,108(sp)
 40264f8:	1d47883a 	add	r3,r3,r21
 40264fc:	b4400015 	stw	r17,0(r22)
 4026500:	10800044 	addi	r2,r2,1
 4026504:	b5400115 	stw	r21,4(r22)
 4026508:	d8801b15 	stw	r2,108(sp)
 402650c:	d8c01c15 	stw	r3,112(sp)
 4026510:	10800208 	cmpgei	r2,r2,8
 4026514:	10030e1e 	bne	r2,zero,4027150 <___vfprintf_internal_r+0x1024>
 4026518:	b5800204 	addi	r22,r22,8
 402651c:	d8800417 	ldw	r2,16(sp)
 4026520:	1440010c 	andi	r17,r2,4
 4026524:	88000226 	beq	r17,zero,4026530 <___vfprintf_internal_r+0x404>
 4026528:	8523c83a 	sub	r17,r16,r20
 402652c:	0440c616 	blt	zero,r17,4026848 <___vfprintf_internal_r+0x71c>
 4026530:	8500010e 	bge	r16,r20,4026538 <___vfprintf_internal_r+0x40c>
 4026534:	a021883a 	mov	r16,r20
 4026538:	d8800517 	ldw	r2,20(sp)
 402653c:	1405883a 	add	r2,r2,r16
 4026540:	d8800515 	stw	r2,20(sp)
 4026544:	1802c01e 	bne	r3,zero,4027048 <___vfprintf_internal_r+0xf1c>
 4026548:	b8800007 	ldb	r2,0(r23)
 402654c:	d8001b15 	stw	zero,108(sp)
 4026550:	dd802704 	addi	r22,sp,156
 4026554:	103f2b1e 	bne	r2,zero,4026204 <___vfprintf_internal_r+0xd8>
 4026558:	d8801c17 	ldw	r2,112(sp)
 402655c:	1006371e 	bne	r2,zero,4027e3c <___vfprintf_internal_r+0x1d10>
 4026560:	9080030b 	ldhu	r2,12(r18)
 4026564:	1080100c 	andi	r2,r2,64
 4026568:	1006cd1e 	bne	r2,zero,40280a0 <___vfprintf_internal_r+0x1f74>
 402656c:	d8800517 	ldw	r2,20(sp)
 4026570:	dfc04017 	ldw	ra,256(sp)
 4026574:	df003f17 	ldw	fp,252(sp)
 4026578:	ddc03e17 	ldw	r23,248(sp)
 402657c:	dd803d17 	ldw	r22,244(sp)
 4026580:	dd403c17 	ldw	r21,240(sp)
 4026584:	dd003b17 	ldw	r20,236(sp)
 4026588:	dcc03a17 	ldw	r19,232(sp)
 402658c:	dc803917 	ldw	r18,228(sp)
 4026590:	dc403817 	ldw	r17,224(sp)
 4026594:	dc003717 	ldw	r16,220(sp)
 4026598:	dec04104 	addi	sp,sp,260
 402659c:	f800283a 	ret
 40265a0:	900b883a 	mov	r5,r18
 40265a4:	9809883a 	mov	r4,r19
 40265a8:	40284c00 	call	40284c0 <__swsetup_r>
 40265ac:	1006bc1e 	bne	r2,zero,40280a0 <___vfprintf_internal_r+0x1f74>
 40265b0:	9080030b 	ldhu	r2,12(r18)
 40265b4:	1080068c 	andi	r2,r2,26
 40265b8:	10800298 	cmpnei	r2,r2,10
 40265bc:	103f031e 	bne	r2,zero,40261cc <___vfprintf_internal_r+0xa0>
 40265c0:	9080038f 	ldh	r2,14(r18)
 40265c4:	103f0116 	blt	r2,zero,40261cc <___vfprintf_internal_r+0xa0>
 40265c8:	d9c00617 	ldw	r7,24(sp)
 40265cc:	b00d883a 	mov	r6,r22
 40265d0:	900b883a 	mov	r5,r18
 40265d4:	9809883a 	mov	r4,r19
 40265d8:	dfc04017 	ldw	ra,256(sp)
 40265dc:	df003f17 	ldw	fp,252(sp)
 40265e0:	ddc03e17 	ldw	r23,248(sp)
 40265e4:	dd803d17 	ldw	r22,244(sp)
 40265e8:	dd403c17 	ldw	r21,240(sp)
 40265ec:	dd003b17 	ldw	r20,236(sp)
 40265f0:	dcc03a17 	ldw	r19,232(sp)
 40265f4:	dc803917 	ldw	r18,228(sp)
 40265f8:	dc403817 	ldw	r17,224(sp)
 40265fc:	dc003717 	ldw	r16,220(sp)
 4026600:	dec04104 	addi	sp,sp,260
 4026604:	402823c1 	jmpi	402823c <__sbprintf>
 4026608:	63000414 	ori	r12,r12,16
 402660c:	6080080c 	andi	r2,r12,32
 4026610:	10008126 	beq	r2,zero,4026818 <___vfprintf_internal_r+0x6ec>
 4026614:	d8c00617 	ldw	r3,24(sp)
 4026618:	00800044 	movi	r2,1
 402661c:	1d000017 	ldw	r20,0(r3)
 4026620:	1d400117 	ldw	r21,4(r3)
 4026624:	18c00204 	addi	r3,r3,8
 4026628:	d8c00615 	stw	r3,24(sp)
 402662c:	00000906 	br	4026654 <___vfprintf_internal_r+0x528>
 4026630:	63000414 	ori	r12,r12,16
 4026634:	6080080c 	andi	r2,r12,32
 4026638:	10006b26 	beq	r2,zero,40267e8 <___vfprintf_internal_r+0x6bc>
 402663c:	d8c00617 	ldw	r3,24(sp)
 4026640:	0005883a 	mov	r2,zero
 4026644:	1d000017 	ldw	r20,0(r3)
 4026648:	1d400117 	ldw	r21,4(r3)
 402664c:	18c00204 	addi	r3,r3,8
 4026650:	d8c00615 	stw	r3,24(sp)
 4026654:	d8001345 	stb	zero,77(sp)
 4026658:	40ffffe0 	cmpeqi	r3,r8,-1
 402665c:	001b883a 	mov	r13,zero
 4026660:	18010e1e 	bne	r3,zero,4026a9c <___vfprintf_internal_r+0x970>
 4026664:	047fdfc4 	movi	r17,-129
 4026668:	6448703a 	and	r4,r12,r17
 402666c:	a546b03a 	or	r3,r20,r21
 4026670:	d9000415 	stw	r4,16(sp)
 4026674:	1802be1e 	bne	r3,zero,4027170 <___vfprintf_internal_r+0x1044>
 4026678:	40025d1e 	bne	r8,zero,4026ff0 <___vfprintf_internal_r+0xec4>
 402667c:	1003731e 	bne	r2,zero,402744c <___vfprintf_internal_r+0x1320>
 4026680:	6540004c 	andi	r21,r12,1
 4026684:	a803ae26 	beq	r21,zero,4027540 <___vfprintf_internal_r+0x1414>
 4026688:	00800c04 	movi	r2,48
 402668c:	d88026c5 	stb	r2,155(sp)
 4026690:	dc4026c4 	addi	r17,sp,155
 4026694:	0000ba06 	br	4026980 <___vfprintf_internal_r+0x854>
 4026698:	85e3c83a 	sub	r17,r16,r23
 402669c:	85ffae26 	beq	r16,r23,4026558 <___vfprintf_internal_r+0x42c>
 40266a0:	d8c01c17 	ldw	r3,112(sp)
 40266a4:	d8801b17 	ldw	r2,108(sp)
 40266a8:	b5c00015 	stw	r23,0(r22)
 40266ac:	1c47883a 	add	r3,r3,r17
 40266b0:	10800044 	addi	r2,r2,1
 40266b4:	d8801b15 	stw	r2,108(sp)
 40266b8:	b4400115 	stw	r17,4(r22)
 40266bc:	d8c01c15 	stw	r3,112(sp)
 40266c0:	10800208 	cmpgei	r2,r2,8
 40266c4:	1000061e 	bne	r2,zero,40266e0 <___vfprintf_internal_r+0x5b4>
 40266c8:	b5800204 	addi	r22,r22,8
 40266cc:	d8c00517 	ldw	r3,20(sp)
 40266d0:	80800003 	ldbu	r2,0(r16)
 40266d4:	1c47883a 	add	r3,r3,r17
 40266d8:	d8c00515 	stw	r3,20(sp)
 40266dc:	003ed306 	br	402622c <___vfprintf_internal_r+0x100>
 40266e0:	d9801a04 	addi	r6,sp,104
 40266e4:	900b883a 	mov	r5,r18
 40266e8:	9809883a 	mov	r4,r19
 40266ec:	402c0240 	call	402c024 <__sprint_r>
 40266f0:	103f9b1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40266f4:	dd802704 	addi	r22,sp,156
 40266f8:	003ff406 	br	40266cc <___vfprintf_internal_r+0x5a0>
 40266fc:	21003fcc 	andi	r4,r4,255
 4026700:	2006651e 	bne	r4,zero,4028098 <___vfprintf_internal_r+0x1f6c>
 4026704:	d8c00617 	ldw	r3,24(sp)
 4026708:	6080020c 	andi	r2,r12,8
 402670c:	19000204 	addi	r4,r3,8
 4026710:	d9000e15 	stw	r4,56(sp)
 4026714:	1003a51e 	bne	r2,zero,40275ac <___vfprintf_internal_r+0x1480>
 4026718:	d8800617 	ldw	r2,24(sp)
 402671c:	10c00017 	ldw	r3,0(r2)
 4026720:	10800117 	ldw	r2,4(r2)
 4026724:	d8c00915 	stw	r3,36(sp)
 4026728:	d8800a15 	stw	r2,40(sp)
 402672c:	dd400a17 	ldw	r21,40(sp)
 4026730:	dd000917 	ldw	r20,36(sp)
 4026734:	00a00034 	movhi	r2,32768
 4026738:	10bfffc4 	addi	r2,r2,-1
 402673c:	a8a2703a 	and	r17,r21,r2
 4026740:	01dffc34 	movhi	r7,32752
 4026744:	01bfffc4 	movi	r6,-1
 4026748:	39ffffc4 	addi	r7,r7,-1
 402674c:	a009883a 	mov	r4,r20
 4026750:	880b883a 	mov	r5,r17
 4026754:	da000615 	stw	r8,24(sp)
 4026758:	db000415 	stw	r12,16(sp)
 402675c:	4030d380 	call	4030d38 <__unorddf2>
 4026760:	db000417 	ldw	r12,16(sp)
 4026764:	da000617 	ldw	r8,24(sp)
 4026768:	1004621e 	bne	r2,zero,40278f4 <___vfprintf_internal_r+0x17c8>
 402676c:	01dffc34 	movhi	r7,32752
 4026770:	01bfffc4 	movi	r6,-1
 4026774:	39ffffc4 	addi	r7,r7,-1
 4026778:	a009883a 	mov	r4,r20
 402677c:	880b883a 	mov	r5,r17
 4026780:	402fd280 	call	402fd28 <__ledf2>
 4026784:	db000417 	ldw	r12,16(sp)
 4026788:	da000617 	ldw	r8,24(sp)
 402678c:	0084590e 	bge	zero,r2,40278f4 <___vfprintf_internal_r+0x17c8>
 4026790:	000d883a 	mov	r6,zero
 4026794:	000f883a 	mov	r7,zero
 4026798:	a009883a 	mov	r4,r20
 402679c:	a80b883a 	mov	r5,r21
 40267a0:	402fd280 	call	402fd28 <__ledf2>
 40267a4:	db000417 	ldw	r12,16(sp)
 40267a8:	10058f16 	blt	r2,zero,4027de8 <___vfprintf_internal_r+0x1cbc>
 40267ac:	db401343 	ldbu	r13,77(sp)
 40267b0:	e0801210 	cmplti	r2,fp,72
 40267b4:	1005371e 	bne	r2,zero,4027c94 <___vfprintf_internal_r+0x1b68>
 40267b8:	04400034 	movhi	r17,0
 40267bc:	8c40f304 	addi	r17,r17,972
 40267c0:	00bfdfc4 	movi	r2,-129
 40267c4:	6084703a 	and	r2,r12,r2
 40267c8:	d8800415 	stw	r2,16(sp)
 40267cc:	d8800e17 	ldw	r2,56(sp)
 40267d0:	050000c4 	movi	r20,3
 40267d4:	054000c4 	movi	r21,3
 40267d8:	d8800615 	stw	r2,24(sp)
 40267dc:	0011883a 	mov	r8,zero
 40267e0:	d8000715 	stw	zero,28(sp)
 40267e4:	00006a06 	br	4026990 <___vfprintf_internal_r+0x864>
 40267e8:	d9000617 	ldw	r4,24(sp)
 40267ec:	6080040c 	andi	r2,r12,16
 40267f0:	20c00104 	addi	r3,r4,4
 40267f4:	1003681e 	bne	r2,zero,4027598 <___vfprintf_internal_r+0x146c>
 40267f8:	6080100c 	andi	r2,r12,64
 40267fc:	10051f26 	beq	r2,zero,4027c7c <___vfprintf_internal_r+0x1b50>
 4026800:	d8800617 	ldw	r2,24(sp)
 4026804:	002b883a 	mov	r21,zero
 4026808:	d8c00615 	stw	r3,24(sp)
 402680c:	1500000b 	ldhu	r20,0(r2)
 4026810:	0005883a 	mov	r2,zero
 4026814:	003f8f06 	br	4026654 <___vfprintf_internal_r+0x528>
 4026818:	d9000617 	ldw	r4,24(sp)
 402681c:	6080040c 	andi	r2,r12,16
 4026820:	20c00104 	addi	r3,r4,4
 4026824:	10034e1e 	bne	r2,zero,4027560 <___vfprintf_internal_r+0x1434>
 4026828:	6080100c 	andi	r2,r12,64
 402682c:	10055726 	beq	r2,zero,4027d8c <___vfprintf_internal_r+0x1c60>
 4026830:	d8800617 	ldw	r2,24(sp)
 4026834:	002b883a 	mov	r21,zero
 4026838:	d8c00615 	stw	r3,24(sp)
 402683c:	1500000b 	ldhu	r20,0(r2)
 4026840:	00800044 	movi	r2,1
 4026844:	003f8306 	br	4026654 <___vfprintf_internal_r+0x528>
 4026848:	03000034 	movhi	r12,0
 402684c:	89000450 	cmplti	r4,r17,17
 4026850:	d8801b17 	ldw	r2,108(sp)
 4026854:	63010704 	addi	r12,r12,1052
 4026858:	20001b1e 	bne	r4,zero,40268c8 <___vfprintf_internal_r+0x79c>
 402685c:	05400404 	movi	r21,16
 4026860:	6039883a 	mov	fp,r12
 4026864:	00000406 	br	4026878 <___vfprintf_internal_r+0x74c>
 4026868:	8c7ffc04 	addi	r17,r17,-16
 402686c:	89000448 	cmpgei	r4,r17,17
 4026870:	b5800204 	addi	r22,r22,8
 4026874:	20001326 	beq	r4,zero,40268c4 <___vfprintf_internal_r+0x798>
 4026878:	10800044 	addi	r2,r2,1
 402687c:	18c00404 	addi	r3,r3,16
 4026880:	b7000015 	stw	fp,0(r22)
 4026884:	b5400115 	stw	r21,4(r22)
 4026888:	d8c01c15 	stw	r3,112(sp)
 402688c:	d8801b15 	stw	r2,108(sp)
 4026890:	11000208 	cmpgei	r4,r2,8
 4026894:	203ff426 	beq	r4,zero,4026868 <___vfprintf_internal_r+0x73c>
 4026898:	d9801a04 	addi	r6,sp,104
 402689c:	900b883a 	mov	r5,r18
 40268a0:	9809883a 	mov	r4,r19
 40268a4:	402c0240 	call	402c024 <__sprint_r>
 40268a8:	103f2d1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40268ac:	8c7ffc04 	addi	r17,r17,-16
 40268b0:	89000448 	cmpgei	r4,r17,17
 40268b4:	d8c01c17 	ldw	r3,112(sp)
 40268b8:	d8801b17 	ldw	r2,108(sp)
 40268bc:	dd802704 	addi	r22,sp,156
 40268c0:	203fed1e 	bne	r4,zero,4026878 <___vfprintf_internal_r+0x74c>
 40268c4:	e019883a 	mov	r12,fp
 40268c8:	10800044 	addi	r2,r2,1
 40268cc:	1c47883a 	add	r3,r3,r17
 40268d0:	d8801b15 	stw	r2,108(sp)
 40268d4:	b3000015 	stw	r12,0(r22)
 40268d8:	b4400115 	stw	r17,4(r22)
 40268dc:	d8c01c15 	stw	r3,112(sp)
 40268e0:	10800210 	cmplti	r2,r2,8
 40268e4:	103f121e 	bne	r2,zero,4026530 <___vfprintf_internal_r+0x404>
 40268e8:	d9801a04 	addi	r6,sp,104
 40268ec:	900b883a 	mov	r5,r18
 40268f0:	9809883a 	mov	r4,r19
 40268f4:	402c0240 	call	402c024 <__sprint_r>
 40268f8:	103f191e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40268fc:	d8c01c17 	ldw	r3,112(sp)
 4026900:	003f0b06 	br	4026530 <___vfprintf_internal_r+0x404>
 4026904:	9809883a 	mov	r4,r19
 4026908:	4023c600 	call	4023c60 <__sinit>
 402690c:	003e1f06 	br	402618c <___vfprintf_internal_r+0x60>
 4026910:	21003fcc 	andi	r4,r4,255
 4026914:	2005dc1e 	bne	r4,zero,4028088 <___vfprintf_internal_r+0x1f5c>
 4026918:	6080080c 	andi	r2,r12,32
 402691c:	10004926 	beq	r2,zero,4026a44 <___vfprintf_internal_r+0x918>
 4026920:	d8c00617 	ldw	r3,24(sp)
 4026924:	18800117 	ldw	r2,4(r3)
 4026928:	1d000017 	ldw	r20,0(r3)
 402692c:	18c00204 	addi	r3,r3,8
 4026930:	d8c00615 	stw	r3,24(sp)
 4026934:	102b883a 	mov	r21,r2
 4026938:	10004e16 	blt	r2,zero,4026a74 <___vfprintf_internal_r+0x948>
 402693c:	40bfffd8 	cmpnei	r2,r8,-1
 4026940:	db401343 	ldbu	r13,77(sp)
 4026944:	10000626 	beq	r2,zero,4026960 <___vfprintf_internal_r+0x834>
 4026948:	047fdfc4 	movi	r17,-129
 402694c:	6446703a 	and	r3,r12,r17
 4026950:	a544b03a 	or	r2,r20,r21
 4026954:	d8c00415 	stw	r3,16(sp)
 4026958:	1002bb26 	beq	r2,zero,4027448 <___vfprintf_internal_r+0x131c>
 402695c:	db000417 	ldw	r12,16(sp)
 4026960:	a8036e1e 	bne	r21,zero,402771c <___vfprintf_internal_r+0x15f0>
 4026964:	a08002a8 	cmpgeui	r2,r20,10
 4026968:	10036c1e 	bne	r2,zero,402771c <___vfprintf_internal_r+0x15f0>
 402696c:	a5000c04 	addi	r20,r20,48
 4026970:	dd0026c5 	stb	r20,155(sp)
 4026974:	db000415 	stw	r12,16(sp)
 4026978:	05400044 	movi	r21,1
 402697c:	dc4026c4 	addi	r17,sp,155
 4026980:	4029883a 	mov	r20,r8
 4026984:	4540010e 	bge	r8,r21,402698c <___vfprintf_internal_r+0x860>
 4026988:	a829883a 	mov	r20,r21
 402698c:	d8000715 	stw	zero,28(sp)
 4026990:	6b403fcc 	andi	r13,r13,255
 4026994:	6b40201c 	xori	r13,r13,128
 4026998:	6b7fe004 	addi	r13,r13,-128
 402699c:	683ea926 	beq	r13,zero,4026444 <___vfprintf_internal_r+0x318>
 40269a0:	a5000044 	addi	r20,r20,1
 40269a4:	003ea706 	br	4026444 <___vfprintf_internal_r+0x318>
 40269a8:	bac00007 	ldb	r11,0(r23)
 40269ac:	63001014 	ori	r12,r12,64
 40269b0:	003e2a06 	br	402625c <___vfprintf_internal_r+0x130>
 40269b4:	d8c00617 	ldw	r3,24(sp)
 40269b8:	d8001345 	stb	zero,77(sp)
 40269bc:	05000044 	movi	r20,1
 40269c0:	18800017 	ldw	r2,0(r3)
 40269c4:	18c00104 	addi	r3,r3,4
 40269c8:	d8c00615 	stw	r3,24(sp)
 40269cc:	d8801d05 	stb	r2,116(sp)
 40269d0:	05400044 	movi	r21,1
 40269d4:	dc401d04 	addi	r17,sp,116
 40269d8:	003e9706 	br	4026438 <___vfprintf_internal_r+0x30c>
 40269dc:	21003fcc 	andi	r4,r4,255
 40269e0:	2005a51e 	bne	r4,zero,4028078 <___vfprintf_internal_r+0x1f4c>
 40269e4:	00800034 	movhi	r2,0
 40269e8:	1080fb04 	addi	r2,r2,1004
 40269ec:	d8800c15 	stw	r2,48(sp)
 40269f0:	6080080c 	andi	r2,r12,32
 40269f4:	10008526 	beq	r2,zero,4026c0c <___vfprintf_internal_r+0xae0>
 40269f8:	d8800617 	ldw	r2,24(sp)
 40269fc:	15000017 	ldw	r20,0(r2)
 4026a00:	15400117 	ldw	r21,4(r2)
 4026a04:	10800204 	addi	r2,r2,8
 4026a08:	d8800615 	stw	r2,24(sp)
 4026a0c:	6080004c 	andi	r2,r12,1
 4026a10:	10000226 	beq	r2,zero,4026a1c <___vfprintf_internal_r+0x8f0>
 4026a14:	a544b03a 	or	r2,r20,r21
 4026a18:	1002cb1e 	bne	r2,zero,4027548 <___vfprintf_internal_r+0x141c>
 4026a1c:	00800084 	movi	r2,2
 4026a20:	003f0c06 	br	4026654 <___vfprintf_internal_r+0x528>
 4026a24:	bac00007 	ldb	r11,0(r23)
 4026a28:	63000214 	ori	r12,r12,8
 4026a2c:	003e0b06 	br	402625c <___vfprintf_internal_r+0x130>
 4026a30:	21003fcc 	andi	r4,r4,255
 4026a34:	2005961e 	bne	r4,zero,4028090 <___vfprintf_internal_r+0x1f64>
 4026a38:	63000414 	ori	r12,r12,16
 4026a3c:	6080080c 	andi	r2,r12,32
 4026a40:	103fb71e 	bne	r2,zero,4026920 <___vfprintf_internal_r+0x7f4>
 4026a44:	d9000617 	ldw	r4,24(sp)
 4026a48:	6080040c 	andi	r2,r12,16
 4026a4c:	20c00104 	addi	r3,r4,4
 4026a50:	1002db1e 	bne	r2,zero,40275c0 <___vfprintf_internal_r+0x1494>
 4026a54:	6080100c 	andi	r2,r12,64
 4026a58:	10048226 	beq	r2,zero,4027c64 <___vfprintf_internal_r+0x1b38>
 4026a5c:	d8800617 	ldw	r2,24(sp)
 4026a60:	d8c00615 	stw	r3,24(sp)
 4026a64:	1500000f 	ldh	r20,0(r2)
 4026a68:	a02bd7fa 	srai	r21,r20,31
 4026a6c:	a805883a 	mov	r2,r21
 4026a70:	103fb20e 	bge	r2,zero,402693c <___vfprintf_internal_r+0x810>
 4026a74:	a004c03a 	cmpne	r2,r20,zero
 4026a78:	056bc83a 	sub	r21,zero,r21
 4026a7c:	a8abc83a 	sub	r21,r21,r2
 4026a80:	00800b44 	movi	r2,45
 4026a84:	d8801345 	stb	r2,77(sp)
 4026a88:	40ffffe0 	cmpeqi	r3,r8,-1
 4026a8c:	0529c83a 	sub	r20,zero,r20
 4026a90:	03400b44 	movi	r13,45
 4026a94:	00800044 	movi	r2,1
 4026a98:	183ef226 	beq	r3,zero,4026664 <___vfprintf_internal_r+0x538>
 4026a9c:	10c00060 	cmpeqi	r3,r2,1
 4026aa0:	183faf1e 	bne	r3,zero,4026960 <___vfprintf_internal_r+0x834>
 4026aa4:	108000a0 	cmpeqi	r2,r2,2
 4026aa8:	1001561e 	bne	r2,zero,4027004 <___vfprintf_internal_r+0xed8>
 4026aac:	dc402704 	addi	r17,sp,156
 4026ab0:	a006d0fa 	srli	r3,r20,3
 4026ab4:	a808977a 	slli	r4,r21,29
 4026ab8:	a82ad0fa 	srli	r21,r21,3
 4026abc:	a50001cc 	andi	r20,r20,7
 4026ac0:	a0800c04 	addi	r2,r20,48
 4026ac4:	20e8b03a 	or	r20,r4,r3
 4026ac8:	88bfffc5 	stb	r2,-1(r17)
 4026acc:	a546b03a 	or	r3,r20,r21
 4026ad0:	880b883a 	mov	r5,r17
 4026ad4:	8c7fffc4 	addi	r17,r17,-1
 4026ad8:	183ff51e 	bne	r3,zero,4026ab0 <___vfprintf_internal_r+0x984>
 4026adc:	60c0004c 	andi	r3,r12,1
 4026ae0:	18015526 	beq	r3,zero,4027038 <___vfprintf_internal_r+0xf0c>
 4026ae4:	10803fcc 	andi	r2,r2,255
 4026ae8:	1080201c 	xori	r2,r2,128
 4026aec:	10bfe004 	addi	r2,r2,-128
 4026af0:	10800c18 	cmpnei	r2,r2,48
 4026af4:	10015026 	beq	r2,zero,4027038 <___vfprintf_internal_r+0xf0c>
 4026af8:	00800c04 	movi	r2,48
 4026afc:	297fff84 	addi	r5,r5,-2
 4026b00:	88bfffc5 	stb	r2,-1(r17)
 4026b04:	d8802704 	addi	r2,sp,156
 4026b08:	116bc83a 	sub	r21,r2,r5
 4026b0c:	db000415 	stw	r12,16(sp)
 4026b10:	2823883a 	mov	r17,r5
 4026b14:	003f9a06 	br	4026980 <___vfprintf_internal_r+0x854>
 4026b18:	bac00007 	ldb	r11,0(r23)
 4026b1c:	63002014 	ori	r12,r12,128
 4026b20:	003dce06 	br	402625c <___vfprintf_internal_r+0x130>
 4026b24:	bf000007 	ldb	fp,0(r23)
 4026b28:	b8c00044 	addi	r3,r23,1
 4026b2c:	e0800aa0 	cmpeqi	r2,fp,42
 4026b30:	1005af1e 	bne	r2,zero,40281f0 <___vfprintf_internal_r+0x20c4>
 4026b34:	e0bff404 	addi	r2,fp,-48
 4026b38:	118002b0 	cmpltui	r6,r2,10
 4026b3c:	182f883a 	mov	r23,r3
 4026b40:	0011883a 	mov	r8,zero
 4026b44:	303dc726 	beq	r6,zero,4026264 <___vfprintf_internal_r+0x138>
 4026b48:	bf000007 	ldb	fp,0(r23)
 4026b4c:	420002a4 	muli	r8,r8,10
 4026b50:	bdc00044 	addi	r23,r23,1
 4026b54:	4091883a 	add	r8,r8,r2
 4026b58:	e0bff404 	addi	r2,fp,-48
 4026b5c:	10c002b0 	cmpltui	r3,r2,10
 4026b60:	183ff91e 	bne	r3,zero,4026b48 <___vfprintf_internal_r+0xa1c>
 4026b64:	003dbf06 	br	4026264 <___vfprintf_internal_r+0x138>
 4026b68:	bf000003 	ldbu	fp,0(r23)
 4026b6c:	e2c03fcc 	andi	r11,fp,255
 4026b70:	5ac0201c 	xori	r11,r11,128
 4026b74:	63000114 	ori	r12,r12,4
 4026b78:	5affe004 	addi	r11,r11,-128
 4026b7c:	003db706 	br	402625c <___vfprintf_internal_r+0x130>
 4026b80:	bac00007 	ldb	r11,0(r23)
 4026b84:	01000044 	movi	r4,1
 4026b88:	01400ac4 	movi	r5,43
 4026b8c:	003db306 	br	402625c <___vfprintf_internal_r+0x130>
 4026b90:	d8800617 	ldw	r2,24(sp)
 4026b94:	bf000003 	ldbu	fp,0(r23)
 4026b98:	14000017 	ldw	r16,0(r2)
 4026b9c:	10800104 	addi	r2,r2,4
 4026ba0:	80028c16 	blt	r16,zero,40275d4 <___vfprintf_internal_r+0x14a8>
 4026ba4:	d8800615 	stw	r2,24(sp)
 4026ba8:	e2c03fcc 	andi	r11,fp,255
 4026bac:	5ac0201c 	xori	r11,r11,128
 4026bb0:	5affe004 	addi	r11,r11,-128
 4026bb4:	003da906 	br	402625c <___vfprintf_internal_r+0x130>
 4026bb8:	bac00007 	ldb	r11,0(r23)
 4026bbc:	63000054 	ori	r12,r12,1
 4026bc0:	003da606 	br	402625c <___vfprintf_internal_r+0x130>
 4026bc4:	28803fcc 	andi	r2,r5,255
 4026bc8:	1080201c 	xori	r2,r2,128
 4026bcc:	10bfe004 	addi	r2,r2,-128
 4026bd0:	bf000003 	ldbu	fp,0(r23)
 4026bd4:	103ff41e 	bne	r2,zero,4026ba8 <___vfprintf_internal_r+0xa7c>
 4026bd8:	e2c03fcc 	andi	r11,fp,255
 4026bdc:	5ac0201c 	xori	r11,r11,128
 4026be0:	01000044 	movi	r4,1
 4026be4:	01400804 	movi	r5,32
 4026be8:	5affe004 	addi	r11,r11,-128
 4026bec:	003d9b06 	br	402625c <___vfprintf_internal_r+0x130>
 4026bf0:	21003fcc 	andi	r4,r4,255
 4026bf4:	20051e1e 	bne	r4,zero,4028070 <___vfprintf_internal_r+0x1f44>
 4026bf8:	00800034 	movhi	r2,0
 4026bfc:	1080f604 	addi	r2,r2,984
 4026c00:	d8800c15 	stw	r2,48(sp)
 4026c04:	6080080c 	andi	r2,r12,32
 4026c08:	103f7b1e 	bne	r2,zero,40269f8 <___vfprintf_internal_r+0x8cc>
 4026c0c:	d9000617 	ldw	r4,24(sp)
 4026c10:	6080040c 	andi	r2,r12,16
 4026c14:	20c00104 	addi	r3,r4,4
 4026c18:	10025b1e 	bne	r2,zero,4027588 <___vfprintf_internal_r+0x145c>
 4026c1c:	6080100c 	andi	r2,r12,64
 4026c20:	10046026 	beq	r2,zero,4027da4 <___vfprintf_internal_r+0x1c78>
 4026c24:	d8800617 	ldw	r2,24(sp)
 4026c28:	002b883a 	mov	r21,zero
 4026c2c:	d8c00615 	stw	r3,24(sp)
 4026c30:	1500000b 	ldhu	r20,0(r2)
 4026c34:	003f7506 	br	4026a0c <___vfprintf_internal_r+0x8e0>
 4026c38:	d8800617 	ldw	r2,24(sp)
 4026c3c:	d8001345 	stb	zero,77(sp)
 4026c40:	14400017 	ldw	r17,0(r2)
 4026c44:	10c00104 	addi	r3,r2,4
 4026c48:	88028e26 	beq	r17,zero,4027684 <___vfprintf_internal_r+0x1558>
 4026c4c:	40bfffe0 	cmpeqi	r2,r8,-1
 4026c50:	1003c01e 	bne	r2,zero,4027b54 <___vfprintf_internal_r+0x1a28>
 4026c54:	400d883a 	mov	r6,r8
 4026c58:	000b883a 	mov	r5,zero
 4026c5c:	8809883a 	mov	r4,r17
 4026c60:	d8c00715 	stw	r3,28(sp)
 4026c64:	db000615 	stw	r12,24(sp)
 4026c68:	da000415 	stw	r8,16(sp)
 4026c6c:	402a60c0 	call	402a60c <memchr>
 4026c70:	da000417 	ldw	r8,16(sp)
 4026c74:	db000617 	ldw	r12,24(sp)
 4026c78:	d8c00717 	ldw	r3,28(sp)
 4026c7c:	1004ec26 	beq	r2,zero,4028030 <___vfprintf_internal_r+0x1f04>
 4026c80:	146bc83a 	sub	r21,r2,r17
 4026c84:	a829883a 	mov	r20,r21
 4026c88:	d8c00615 	stw	r3,24(sp)
 4026c8c:	003dea06 	br	4026438 <___vfprintf_internal_r+0x30c>
 4026c90:	bac00007 	ldb	r11,0(r23)
 4026c94:	63000814 	ori	r12,r12,32
 4026c98:	003d7006 	br	402625c <___vfprintf_internal_r+0x130>
 4026c9c:	d8c00617 	ldw	r3,24(sp)
 4026ca0:	00800c04 	movi	r2,48
 4026ca4:	d8801385 	stb	r2,78(sp)
 4026ca8:	00801e04 	movi	r2,120
 4026cac:	01000034 	movhi	r4,0
 4026cb0:	d88013c5 	stb	r2,79(sp)
 4026cb4:	18800104 	addi	r2,r3,4
 4026cb8:	d8800615 	stw	r2,24(sp)
 4026cbc:	2080f604 	addi	r2,r4,984
 4026cc0:	d8800c15 	stw	r2,48(sp)
 4026cc4:	1d000017 	ldw	r20,0(r3)
 4026cc8:	002b883a 	mov	r21,zero
 4026ccc:	63000094 	ori	r12,r12,2
 4026cd0:	00800084 	movi	r2,2
 4026cd4:	07001e04 	movi	fp,120
 4026cd8:	003e5e06 	br	4026654 <___vfprintf_internal_r+0x528>
 4026cdc:	21003fcc 	andi	r4,r4,255
 4026ce0:	2004e71e 	bne	r4,zero,4028080 <___vfprintf_internal_r+0x1f54>
 4026ce4:	d9000617 	ldw	r4,24(sp)
 4026ce8:	6080080c 	andi	r2,r12,32
 4026cec:	20c00017 	ldw	r3,0(r4)
 4026cf0:	21000104 	addi	r4,r4,4
 4026cf4:	d9000615 	stw	r4,24(sp)
 4026cf8:	10021e1e 	bne	r2,zero,4027574 <___vfprintf_internal_r+0x1448>
 4026cfc:	6080040c 	andi	r2,r12,16
 4026d00:	1002ae1e 	bne	r2,zero,40277bc <___vfprintf_internal_r+0x1690>
 4026d04:	6300100c 	andi	r12,r12,64
 4026d08:	6002ac26 	beq	r12,zero,40277bc <___vfprintf_internal_r+0x1690>
 4026d0c:	d8800517 	ldw	r2,20(sp)
 4026d10:	1880000d 	sth	r2,0(r3)
 4026d14:	003d3906 	br	40261fc <___vfprintf_internal_r+0xd0>
 4026d18:	bac00007 	ldb	r11,0(r23)
 4026d1c:	58801b18 	cmpnei	r2,r11,108
 4026d20:	10024926 	beq	r2,zero,4027648 <___vfprintf_internal_r+0x151c>
 4026d24:	63000414 	ori	r12,r12,16
 4026d28:	003d4c06 	br	402625c <___vfprintf_internal_r+0x130>
 4026d2c:	e2c01990 	cmplti	r11,fp,102
 4026d30:	5800cb1e 	bne	r11,zero,4027060 <___vfprintf_internal_r+0xf34>
 4026d34:	d9000917 	ldw	r4,36(sp)
 4026d38:	d9400a17 	ldw	r5,40(sp)
 4026d3c:	000d883a 	mov	r6,zero
 4026d40:	000f883a 	mov	r7,zero
 4026d44:	d8c00e15 	stw	r3,56(sp)
 4026d48:	402fbc00 	call	402fbc0 <__eqdf2>
 4026d4c:	d8c00e17 	ldw	r3,56(sp)
 4026d50:	1001641e 	bne	r2,zero,40272e4 <___vfprintf_internal_r+0x11b8>
 4026d54:	d8801b17 	ldw	r2,108(sp)
 4026d58:	01000034 	movhi	r4,0
 4026d5c:	21010204 	addi	r4,r4,1032
 4026d60:	10800044 	addi	r2,r2,1
 4026d64:	18c00044 	addi	r3,r3,1
 4026d68:	b1000015 	stw	r4,0(r22)
 4026d6c:	01000044 	movi	r4,1
 4026d70:	d8801b15 	stw	r2,108(sp)
 4026d74:	b1000115 	stw	r4,4(r22)
 4026d78:	d8c01c15 	stw	r3,112(sp)
 4026d7c:	10800208 	cmpgei	r2,r2,8
 4026d80:	1003621e 	bne	r2,zero,4027b0c <___vfprintf_internal_r+0x19e0>
 4026d84:	b5800204 	addi	r22,r22,8
 4026d88:	d8801417 	ldw	r2,80(sp)
 4026d8c:	d9000817 	ldw	r4,32(sp)
 4026d90:	1101e70e 	bge	r2,r4,4027530 <___vfprintf_internal_r+0x1404>
 4026d94:	d8800d17 	ldw	r2,52(sp)
 4026d98:	d9000b17 	ldw	r4,44(sp)
 4026d9c:	b0800015 	stw	r2,0(r22)
 4026da0:	d8801b17 	ldw	r2,108(sp)
 4026da4:	1907883a 	add	r3,r3,r4
 4026da8:	b1000115 	stw	r4,4(r22)
 4026dac:	10800044 	addi	r2,r2,1
 4026db0:	d8801b15 	stw	r2,108(sp)
 4026db4:	d8c01c15 	stw	r3,112(sp)
 4026db8:	10800208 	cmpgei	r2,r2,8
 4026dbc:	1002291e 	bne	r2,zero,4027664 <___vfprintf_internal_r+0x1538>
 4026dc0:	b5800204 	addi	r22,r22,8
 4026dc4:	d8800817 	ldw	r2,32(sp)
 4026dc8:	157fffc4 	addi	r21,r2,-1
 4026dcc:	057dd30e 	bge	zero,r21,402651c <___vfprintf_internal_r+0x3f0>
 4026dd0:	01c00034 	movhi	r7,0
 4026dd4:	a9000450 	cmplti	r4,r21,17
 4026dd8:	d8801b17 	ldw	r2,108(sp)
 4026ddc:	39c10304 	addi	r7,r7,1036
 4026de0:	2003461e 	bne	r4,zero,4027afc <___vfprintf_internal_r+0x19d0>
 4026de4:	07000404 	movi	fp,16
 4026de8:	3823883a 	mov	r17,r7
 4026dec:	00000406 	br	4026e00 <___vfprintf_internal_r+0xcd4>
 4026df0:	b5800204 	addi	r22,r22,8
 4026df4:	ad7ffc04 	addi	r21,r21,-16
 4026df8:	a9000448 	cmpgei	r4,r21,17
 4026dfc:	20033e26 	beq	r4,zero,4027af8 <___vfprintf_internal_r+0x19cc>
 4026e00:	10800044 	addi	r2,r2,1
 4026e04:	18c00404 	addi	r3,r3,16
 4026e08:	b4400015 	stw	r17,0(r22)
 4026e0c:	b7000115 	stw	fp,4(r22)
 4026e10:	d8c01c15 	stw	r3,112(sp)
 4026e14:	d8801b15 	stw	r2,108(sp)
 4026e18:	11000208 	cmpgei	r4,r2,8
 4026e1c:	203ff426 	beq	r4,zero,4026df0 <___vfprintf_internal_r+0xcc4>
 4026e20:	d9801a04 	addi	r6,sp,104
 4026e24:	900b883a 	mov	r5,r18
 4026e28:	9809883a 	mov	r4,r19
 4026e2c:	402c0240 	call	402c024 <__sprint_r>
 4026e30:	103dcb1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4026e34:	d8c01c17 	ldw	r3,112(sp)
 4026e38:	d8801b17 	ldw	r2,108(sp)
 4026e3c:	dd802704 	addi	r22,sp,156
 4026e40:	003fec06 	br	4026df4 <___vfprintf_internal_r+0xcc8>
 4026e44:	8519c83a 	sub	r12,r16,r20
 4026e48:	033da50e 	bge	zero,r12,40264e0 <___vfprintf_internal_r+0x3b4>
 4026e4c:	01c00034 	movhi	r7,0
 4026e50:	61000450 	cmplti	r4,r12,17
 4026e54:	d8801b17 	ldw	r2,108(sp)
 4026e58:	39c10304 	addi	r7,r7,1036
 4026e5c:	2000281e 	bne	r4,zero,4026f00 <___vfprintf_internal_r+0xdd4>
 4026e60:	dc400e15 	stw	r17,56(sp)
 4026e64:	dc000f15 	stw	r16,60(sp)
 4026e68:	b009883a 	mov	r4,r22
 4026e6c:	03400404 	movi	r13,16
 4026e70:	a02d883a 	mov	r22,r20
 4026e74:	6021883a 	mov	r16,r12
 4026e78:	4029883a 	mov	r20,r8
 4026e7c:	3823883a 	mov	r17,r7
 4026e80:	00000406 	br	4026e94 <___vfprintf_internal_r+0xd68>
 4026e84:	843ffc04 	addi	r16,r16,-16
 4026e88:	81400448 	cmpgei	r5,r16,17
 4026e8c:	21000204 	addi	r4,r4,8
 4026e90:	28001426 	beq	r5,zero,4026ee4 <___vfprintf_internal_r+0xdb8>
 4026e94:	10800044 	addi	r2,r2,1
 4026e98:	18c00404 	addi	r3,r3,16
 4026e9c:	24400015 	stw	r17,0(r4)
 4026ea0:	23400115 	stw	r13,4(r4)
 4026ea4:	d8c01c15 	stw	r3,112(sp)
 4026ea8:	d8801b15 	stw	r2,108(sp)
 4026eac:	11400208 	cmpgei	r5,r2,8
 4026eb0:	283ff426 	beq	r5,zero,4026e84 <___vfprintf_internal_r+0xd58>
 4026eb4:	d9801a04 	addi	r6,sp,104
 4026eb8:	900b883a 	mov	r5,r18
 4026ebc:	9809883a 	mov	r4,r19
 4026ec0:	402c0240 	call	402c024 <__sprint_r>
 4026ec4:	103da61e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4026ec8:	843ffc04 	addi	r16,r16,-16
 4026ecc:	81400448 	cmpgei	r5,r16,17
 4026ed0:	d8c01c17 	ldw	r3,112(sp)
 4026ed4:	d8801b17 	ldw	r2,108(sp)
 4026ed8:	d9002704 	addi	r4,sp,156
 4026edc:	03400404 	movi	r13,16
 4026ee0:	283fec1e 	bne	r5,zero,4026e94 <___vfprintf_internal_r+0xd68>
 4026ee4:	8019883a 	mov	r12,r16
 4026ee8:	880f883a 	mov	r7,r17
 4026eec:	dc000f17 	ldw	r16,60(sp)
 4026ef0:	dc400e17 	ldw	r17,56(sp)
 4026ef4:	a011883a 	mov	r8,r20
 4026ef8:	b029883a 	mov	r20,r22
 4026efc:	202d883a 	mov	r22,r4
 4026f00:	10800044 	addi	r2,r2,1
 4026f04:	1b07883a 	add	r3,r3,r12
 4026f08:	d8801b15 	stw	r2,108(sp)
 4026f0c:	b1c00015 	stw	r7,0(r22)
 4026f10:	b3000115 	stw	r12,4(r22)
 4026f14:	d8c01c15 	stw	r3,112(sp)
 4026f18:	10800208 	cmpgei	r2,r2,8
 4026f1c:	1003031e 	bne	r2,zero,4027b2c <___vfprintf_internal_r+0x1a00>
 4026f20:	4551c83a 	sub	r8,r8,r21
 4026f24:	b5800204 	addi	r22,r22,8
 4026f28:	023d6f0e 	bge	zero,r8,40264e8 <___vfprintf_internal_r+0x3bc>
 4026f2c:	01c00034 	movhi	r7,0
 4026f30:	41000450 	cmplti	r4,r8,17
 4026f34:	d8801b17 	ldw	r2,108(sp)
 4026f38:	39c10304 	addi	r7,r7,1036
 4026f3c:	2000221e 	bne	r4,zero,4026fc8 <___vfprintf_internal_r+0xe9c>
 4026f40:	dc400e15 	stw	r17,56(sp)
 4026f44:	dc000f15 	stw	r16,60(sp)
 4026f48:	03000404 	movi	r12,16
 4026f4c:	4021883a 	mov	r16,r8
 4026f50:	3823883a 	mov	r17,r7
 4026f54:	00000406 	br	4026f68 <___vfprintf_internal_r+0xe3c>
 4026f58:	843ffc04 	addi	r16,r16,-16
 4026f5c:	81000448 	cmpgei	r4,r16,17
 4026f60:	b5800204 	addi	r22,r22,8
 4026f64:	20001426 	beq	r4,zero,4026fb8 <___vfprintf_internal_r+0xe8c>
 4026f68:	10800044 	addi	r2,r2,1
 4026f6c:	18c00404 	addi	r3,r3,16
 4026f70:	b4400015 	stw	r17,0(r22)
 4026f74:	b3000115 	stw	r12,4(r22)
 4026f78:	d8c01c15 	stw	r3,112(sp)
 4026f7c:	d8801b15 	stw	r2,108(sp)
 4026f80:	11000208 	cmpgei	r4,r2,8
 4026f84:	203ff426 	beq	r4,zero,4026f58 <___vfprintf_internal_r+0xe2c>
 4026f88:	d9801a04 	addi	r6,sp,104
 4026f8c:	900b883a 	mov	r5,r18
 4026f90:	9809883a 	mov	r4,r19
 4026f94:	402c0240 	call	402c024 <__sprint_r>
 4026f98:	103d711e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4026f9c:	843ffc04 	addi	r16,r16,-16
 4026fa0:	81000448 	cmpgei	r4,r16,17
 4026fa4:	d8c01c17 	ldw	r3,112(sp)
 4026fa8:	d8801b17 	ldw	r2,108(sp)
 4026fac:	dd802704 	addi	r22,sp,156
 4026fb0:	03000404 	movi	r12,16
 4026fb4:	203fec1e 	bne	r4,zero,4026f68 <___vfprintf_internal_r+0xe3c>
 4026fb8:	8011883a 	mov	r8,r16
 4026fbc:	880f883a 	mov	r7,r17
 4026fc0:	dc000f17 	ldw	r16,60(sp)
 4026fc4:	dc400e17 	ldw	r17,56(sp)
 4026fc8:	10800044 	addi	r2,r2,1
 4026fcc:	1a07883a 	add	r3,r3,r8
 4026fd0:	d8801b15 	stw	r2,108(sp)
 4026fd4:	b1c00015 	stw	r7,0(r22)
 4026fd8:	b2000115 	stw	r8,4(r22)
 4026fdc:	d8c01c15 	stw	r3,112(sp)
 4026fe0:	10800208 	cmpgei	r2,r2,8
 4026fe4:	10014a1e 	bne	r2,zero,4027510 <___vfprintf_internal_r+0x13e4>
 4026fe8:	b5800204 	addi	r22,r22,8
 4026fec:	003d3e06 	br	40264e8 <___vfprintf_internal_r+0x3bc>
 4026ff0:	10c00060 	cmpeqi	r3,r2,1
 4026ff4:	1803bc1e 	bne	r3,zero,4027ee8 <___vfprintf_internal_r+0x1dbc>
 4026ff8:	108000a0 	cmpeqi	r2,r2,2
 4026ffc:	db000417 	ldw	r12,16(sp)
 4027000:	103eaa26 	beq	r2,zero,4026aac <___vfprintf_internal_r+0x980>
 4027004:	d9000c17 	ldw	r4,48(sp)
 4027008:	dc402704 	addi	r17,sp,156
 402700c:	a08003cc 	andi	r2,r20,15
 4027010:	a806973a 	slli	r3,r21,28
 4027014:	a028d13a 	srli	r20,r20,4
 4027018:	2085883a 	add	r2,r4,r2
 402701c:	10800003 	ldbu	r2,0(r2)
 4027020:	a82ad13a 	srli	r21,r21,4
 4027024:	1d28b03a 	or	r20,r3,r20
 4027028:	88bfffc5 	stb	r2,-1(r17)
 402702c:	a544b03a 	or	r2,r20,r21
 4027030:	8c7fffc4 	addi	r17,r17,-1
 4027034:	103ff51e 	bne	r2,zero,402700c <___vfprintf_internal_r+0xee0>
 4027038:	d8802704 	addi	r2,sp,156
 402703c:	146bc83a 	sub	r21,r2,r17
 4027040:	db000415 	stw	r12,16(sp)
 4027044:	003e4e06 	br	4026980 <___vfprintf_internal_r+0x854>
 4027048:	d9801a04 	addi	r6,sp,104
 402704c:	900b883a 	mov	r5,r18
 4027050:	9809883a 	mov	r4,r19
 4027054:	402c0240 	call	402c024 <__sprint_r>
 4027058:	103d3b26 	beq	r2,zero,4026548 <___vfprintf_internal_r+0x41c>
 402705c:	003d4006 	br	4026560 <___vfprintf_internal_r+0x434>
 4027060:	d8800817 	ldw	r2,32(sp)
 4027064:	da001b17 	ldw	r8,108(sp)
 4027068:	18c00044 	addi	r3,r3,1
 402706c:	10800088 	cmpgei	r2,r2,2
 4027070:	45400044 	addi	r21,r8,1
 4027074:	b7000204 	addi	fp,r22,8
 4027078:	1000f826 	beq	r2,zero,402745c <___vfprintf_internal_r+0x1330>
 402707c:	00800044 	movi	r2,1
 4027080:	b0800115 	stw	r2,4(r22)
 4027084:	b4400015 	stw	r17,0(r22)
 4027088:	d8c01c15 	stw	r3,112(sp)
 402708c:	dd401b15 	stw	r21,108(sp)
 4027090:	a8800210 	cmplti	r2,r21,8
 4027094:	1001cc26 	beq	r2,zero,40277c8 <___vfprintf_internal_r+0x169c>
 4027098:	d8800b17 	ldw	r2,44(sp)
 402709c:	d9000d17 	ldw	r4,52(sp)
 40270a0:	ad400044 	addi	r21,r21,1
 40270a4:	1887883a 	add	r3,r3,r2
 40270a8:	e0800115 	stw	r2,4(fp)
 40270ac:	e1000015 	stw	r4,0(fp)
 40270b0:	d8c01c15 	stw	r3,112(sp)
 40270b4:	dd401b15 	stw	r21,108(sp)
 40270b8:	a8800208 	cmpgei	r2,r21,8
 40270bc:	1001cb1e 	bne	r2,zero,40277ec <___vfprintf_internal_r+0x16c0>
 40270c0:	e7000204 	addi	fp,fp,8
 40270c4:	d9000917 	ldw	r4,36(sp)
 40270c8:	d9400a17 	ldw	r5,40(sp)
 40270cc:	aa000044 	addi	r8,r21,1
 40270d0:	000d883a 	mov	r6,zero
 40270d4:	000f883a 	mov	r7,zero
 40270d8:	d8c00e15 	stw	r3,56(sp)
 40270dc:	da000715 	stw	r8,28(sp)
 40270e0:	402fbc00 	call	402fbc0 <__eqdf2>
 40270e4:	d8c00817 	ldw	r3,32(sp)
 40270e8:	da000717 	ldw	r8,28(sp)
 40270ec:	e5800204 	addi	r22,fp,8
 40270f0:	1affffc4 	addi	r11,r3,-1
 40270f4:	d8c00e17 	ldw	r3,56(sp)
 40270f8:	1000e526 	beq	r2,zero,4027490 <___vfprintf_internal_r+0x1364>
 40270fc:	8a400044 	addi	r9,r17,1
 4027100:	1ac7883a 	add	r3,r3,r11
 4027104:	da001b15 	stw	r8,108(sp)
 4027108:	e2400015 	stw	r9,0(fp)
 402710c:	e2c00115 	stw	r11,4(fp)
 4027110:	d8c01c15 	stw	r3,112(sp)
 4027114:	42000208 	cmpgei	r8,r8,8
 4027118:	40013e1e 	bne	r8,zero,4027614 <___vfprintf_internal_r+0x14e8>
 402711c:	e0800404 	addi	r2,fp,16
 4027120:	aa000084 	addi	r8,r21,2
 4027124:	b039883a 	mov	fp,r22
 4027128:	102d883a 	mov	r22,r2
 402712c:	d9001017 	ldw	r4,64(sp)
 4027130:	d8801644 	addi	r2,sp,89
 4027134:	da001b15 	stw	r8,108(sp)
 4027138:	20c7883a 	add	r3,r4,r3
 402713c:	e0800015 	stw	r2,0(fp)
 4027140:	e1000115 	stw	r4,4(fp)
 4027144:	d8c01c15 	stw	r3,112(sp)
 4027148:	42000210 	cmplti	r8,r8,8
 402714c:	403cf31e 	bne	r8,zero,402651c <___vfprintf_internal_r+0x3f0>
 4027150:	d9801a04 	addi	r6,sp,104
 4027154:	900b883a 	mov	r5,r18
 4027158:	9809883a 	mov	r4,r19
 402715c:	402c0240 	call	402c024 <__sprint_r>
 4027160:	103cff1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027164:	d8c01c17 	ldw	r3,112(sp)
 4027168:	dd802704 	addi	r22,sp,156
 402716c:	003ceb06 	br	402651c <___vfprintf_internal_r+0x3f0>
 4027170:	db000417 	ldw	r12,16(sp)
 4027174:	003e4906 	br	4026a9c <___vfprintf_internal_r+0x970>
 4027178:	03000034 	movhi	r12,0
 402717c:	39000450 	cmplti	r4,r7,17
 4027180:	d8801b17 	ldw	r2,108(sp)
 4027184:	63010704 	addi	r12,r12,1052
 4027188:	2000321e 	bne	r4,zero,4027254 <___vfprintf_internal_r+0x1128>
 402718c:	dc401115 	stw	r17,68(sp)
 4027190:	b009883a 	mov	r4,r22
 4027194:	9023883a 	mov	r17,r18
 4027198:	a82d883a 	mov	r22,r21
 402719c:	ddc01215 	stw	r23,72(sp)
 40271a0:	03c00404 	movi	r15,16
 40271a4:	a02f883a 	mov	r23,r20
 40271a8:	db800e15 	stw	r14,56(sp)
 40271ac:	8029883a 	mov	r20,r16
 40271b0:	db400f15 	stw	r13,60(sp)
 40271b4:	402b883a 	mov	r21,r8
 40271b8:	3821883a 	mov	r16,r7
 40271bc:	6025883a 	mov	r18,r12
 40271c0:	00000406 	br	40271d4 <___vfprintf_internal_r+0x10a8>
 40271c4:	843ffc04 	addi	r16,r16,-16
 40271c8:	81800448 	cmpgei	r6,r16,17
 40271cc:	21000204 	addi	r4,r4,8
 40271d0:	30001426 	beq	r6,zero,4027224 <___vfprintf_internal_r+0x10f8>
 40271d4:	10800044 	addi	r2,r2,1
 40271d8:	18c00404 	addi	r3,r3,16
 40271dc:	24800015 	stw	r18,0(r4)
 40271e0:	23c00115 	stw	r15,4(r4)
 40271e4:	d8c01c15 	stw	r3,112(sp)
 40271e8:	d8801b15 	stw	r2,108(sp)
 40271ec:	11800208 	cmpgei	r6,r2,8
 40271f0:	303ff426 	beq	r6,zero,40271c4 <___vfprintf_internal_r+0x1098>
 40271f4:	d9801a04 	addi	r6,sp,104
 40271f8:	880b883a 	mov	r5,r17
 40271fc:	9809883a 	mov	r4,r19
 4027200:	402c0240 	call	402c024 <__sprint_r>
 4027204:	1001b91e 	bne	r2,zero,40278ec <___vfprintf_internal_r+0x17c0>
 4027208:	843ffc04 	addi	r16,r16,-16
 402720c:	81800448 	cmpgei	r6,r16,17
 4027210:	d8c01c17 	ldw	r3,112(sp)
 4027214:	d8801b17 	ldw	r2,108(sp)
 4027218:	d9002704 	addi	r4,sp,156
 402721c:	03c00404 	movi	r15,16
 4027220:	303fec1e 	bne	r6,zero,40271d4 <___vfprintf_internal_r+0x10a8>
 4027224:	800f883a 	mov	r7,r16
 4027228:	9019883a 	mov	r12,r18
 402722c:	a021883a 	mov	r16,r20
 4027230:	8825883a 	mov	r18,r17
 4027234:	b829883a 	mov	r20,r23
 4027238:	db800e17 	ldw	r14,56(sp)
 402723c:	db400f17 	ldw	r13,60(sp)
 4027240:	ddc01217 	ldw	r23,72(sp)
 4027244:	dc401117 	ldw	r17,68(sp)
 4027248:	a811883a 	mov	r8,r21
 402724c:	b02b883a 	mov	r21,r22
 4027250:	202d883a 	mov	r22,r4
 4027254:	10800044 	addi	r2,r2,1
 4027258:	19c7883a 	add	r3,r3,r7
 402725c:	d8801b15 	stw	r2,108(sp)
 4027260:	b3000015 	stw	r12,0(r22)
 4027264:	b1c00115 	stw	r7,4(r22)
 4027268:	d8c01c15 	stw	r3,112(sp)
 402726c:	10800208 	cmpgei	r2,r2,8
 4027270:	1001671e 	bne	r2,zero,4027810 <___vfprintf_internal_r+0x16e4>
 4027274:	b5800204 	addi	r22,r22,8
 4027278:	003c7c06 	br	402646c <___vfprintf_internal_r+0x340>
 402727c:	d9801a04 	addi	r6,sp,104
 4027280:	900b883a 	mov	r5,r18
 4027284:	9809883a 	mov	r4,r19
 4027288:	da001115 	stw	r8,68(sp)
 402728c:	db400f15 	stw	r13,60(sp)
 4027290:	db800e15 	stw	r14,56(sp)
 4027294:	402c0240 	call	402c024 <__sprint_r>
 4027298:	103cb11e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 402729c:	d8c01c17 	ldw	r3,112(sp)
 40272a0:	da001117 	ldw	r8,68(sp)
 40272a4:	db400f17 	ldw	r13,60(sp)
 40272a8:	db800e17 	ldw	r14,56(sp)
 40272ac:	dd802704 	addi	r22,sp,156
 40272b0:	003c7c06 	br	40264a4 <___vfprintf_internal_r+0x378>
 40272b4:	d9801a04 	addi	r6,sp,104
 40272b8:	900b883a 	mov	r5,r18
 40272bc:	9809883a 	mov	r4,r19
 40272c0:	da000f15 	stw	r8,60(sp)
 40272c4:	db400e15 	stw	r13,56(sp)
 40272c8:	402c0240 	call	402c024 <__sprint_r>
 40272cc:	103ca41e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40272d0:	d8c01c17 	ldw	r3,112(sp)
 40272d4:	da000f17 	ldw	r8,60(sp)
 40272d8:	db400e17 	ldw	r13,56(sp)
 40272dc:	dd802704 	addi	r22,sp,156
 40272e0:	003c7d06 	br	40264d8 <___vfprintf_internal_r+0x3ac>
 40272e4:	d9401417 	ldw	r5,80(sp)
 40272e8:	0141570e 	bge	zero,r5,4027848 <___vfprintf_internal_r+0x171c>
 40272ec:	d8800717 	ldw	r2,28(sp)
 40272f0:	d9000817 	ldw	r4,32(sp)
 40272f4:	102b883a 	mov	r21,r2
 40272f8:	2080b916 	blt	r4,r2,40275e0 <___vfprintf_internal_r+0x14b4>
 40272fc:	05400a0e 	bge	zero,r21,4027328 <___vfprintf_internal_r+0x11fc>
 4027300:	d8801b17 	ldw	r2,108(sp)
 4027304:	1d47883a 	add	r3,r3,r21
 4027308:	b4400015 	stw	r17,0(r22)
 402730c:	10800044 	addi	r2,r2,1
 4027310:	d8801b15 	stw	r2,108(sp)
 4027314:	b5400115 	stw	r21,4(r22)
 4027318:	d8c01c15 	stw	r3,112(sp)
 402731c:	10800208 	cmpgei	r2,r2,8
 4027320:	10032d1e 	bne	r2,zero,4027fd8 <___vfprintf_internal_r+0x1eac>
 4027324:	b5800204 	addi	r22,r22,8
 4027328:	a800c516 	blt	r21,zero,4027640 <___vfprintf_internal_r+0x1514>
 402732c:	d8800717 	ldw	r2,28(sp)
 4027330:	156bc83a 	sub	r21,r2,r21
 4027334:	0540db16 	blt	zero,r21,40276a4 <___vfprintf_internal_r+0x1578>
 4027338:	dd401417 	ldw	r21,80(sp)
 402733c:	d8800817 	ldw	r2,32(sp)
 4027340:	a880aa0e 	bge	r21,r2,40275ec <___vfprintf_internal_r+0x14c0>
 4027344:	d8800d17 	ldw	r2,52(sp)
 4027348:	d9000b17 	ldw	r4,44(sp)
 402734c:	b0800015 	stw	r2,0(r22)
 4027350:	d8801b17 	ldw	r2,108(sp)
 4027354:	1907883a 	add	r3,r3,r4
 4027358:	b1000115 	stw	r4,4(r22)
 402735c:	10800044 	addi	r2,r2,1
 4027360:	d8801b15 	stw	r2,108(sp)
 4027364:	d8c01c15 	stw	r3,112(sp)
 4027368:	10800208 	cmpgei	r2,r2,8
 402736c:	1003111e 	bne	r2,zero,4027fb4 <___vfprintf_internal_r+0x1e88>
 4027370:	b5800204 	addi	r22,r22,8
 4027374:	d9000817 	ldw	r4,32(sp)
 4027378:	d9400717 	ldw	r5,28(sp)
 402737c:	2545c83a 	sub	r2,r4,r21
 4027380:	2149c83a 	sub	r4,r4,r5
 4027384:	102b883a 	mov	r21,r2
 4027388:	2080010e 	bge	r4,r2,4027390 <___vfprintf_internal_r+0x1264>
 402738c:	202b883a 	mov	r21,r4
 4027390:	05400c0e 	bge	zero,r21,40273c4 <___vfprintf_internal_r+0x1298>
 4027394:	d9000717 	ldw	r4,28(sp)
 4027398:	1d47883a 	add	r3,r3,r21
 402739c:	b5400115 	stw	r21,4(r22)
 40273a0:	8913883a 	add	r9,r17,r4
 40273a4:	d9001b17 	ldw	r4,108(sp)
 40273a8:	b2400015 	stw	r9,0(r22)
 40273ac:	d8c01c15 	stw	r3,112(sp)
 40273b0:	21000044 	addi	r4,r4,1
 40273b4:	d9001b15 	stw	r4,108(sp)
 40273b8:	21000208 	cmpgei	r4,r4,8
 40273bc:	2003111e 	bne	r4,zero,4028004 <___vfprintf_internal_r+0x1ed8>
 40273c0:	b5800204 	addi	r22,r22,8
 40273c4:	a800010e 	bge	r21,zero,40273cc <___vfprintf_internal_r+0x12a0>
 40273c8:	002b883a 	mov	r21,zero
 40273cc:	156bc83a 	sub	r21,r2,r21
 40273d0:	057c520e 	bge	zero,r21,402651c <___vfprintf_internal_r+0x3f0>
 40273d4:	01c00034 	movhi	r7,0
 40273d8:	a9000450 	cmplti	r4,r21,17
 40273dc:	d8801b17 	ldw	r2,108(sp)
 40273e0:	39c10304 	addi	r7,r7,1036
 40273e4:	2001c51e 	bne	r4,zero,4027afc <___vfprintf_internal_r+0x19d0>
 40273e8:	07000404 	movi	fp,16
 40273ec:	3823883a 	mov	r17,r7
 40273f0:	00000406 	br	4027404 <___vfprintf_internal_r+0x12d8>
 40273f4:	b5800204 	addi	r22,r22,8
 40273f8:	ad7ffc04 	addi	r21,r21,-16
 40273fc:	a9000448 	cmpgei	r4,r21,17
 4027400:	2001bd26 	beq	r4,zero,4027af8 <___vfprintf_internal_r+0x19cc>
 4027404:	10800044 	addi	r2,r2,1
 4027408:	18c00404 	addi	r3,r3,16
 402740c:	b4400015 	stw	r17,0(r22)
 4027410:	b7000115 	stw	fp,4(r22)
 4027414:	d8c01c15 	stw	r3,112(sp)
 4027418:	d8801b15 	stw	r2,108(sp)
 402741c:	11000208 	cmpgei	r4,r2,8
 4027420:	203ff426 	beq	r4,zero,40273f4 <___vfprintf_internal_r+0x12c8>
 4027424:	d9801a04 	addi	r6,sp,104
 4027428:	900b883a 	mov	r5,r18
 402742c:	9809883a 	mov	r4,r19
 4027430:	402c0240 	call	402c024 <__sprint_r>
 4027434:	103c4a1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027438:	d8c01c17 	ldw	r3,112(sp)
 402743c:	d8801b17 	ldw	r2,108(sp)
 4027440:	dd802704 	addi	r22,sp,156
 4027444:	003fec06 	br	40273f8 <___vfprintf_internal_r+0x12cc>
 4027448:	4002a71e 	bne	r8,zero,4027ee8 <___vfprintf_internal_r+0x1dbc>
 402744c:	0011883a 	mov	r8,zero
 4027450:	002b883a 	mov	r21,zero
 4027454:	dc402704 	addi	r17,sp,156
 4027458:	003d4906 	br	4026980 <___vfprintf_internal_r+0x854>
 402745c:	d8800417 	ldw	r2,16(sp)
 4027460:	1080004c 	andi	r2,r2,1
 4027464:	103f051e 	bne	r2,zero,402707c <___vfprintf_internal_r+0xf50>
 4027468:	00800044 	movi	r2,1
 402746c:	dd401b15 	stw	r21,108(sp)
 4027470:	b4400015 	stw	r17,0(r22)
 4027474:	b0800115 	stw	r2,4(r22)
 4027478:	d8c01c15 	stw	r3,112(sp)
 402747c:	ad400208 	cmpgei	r21,r21,8
 4027480:	a800641e 	bne	r21,zero,4027614 <___vfprintf_internal_r+0x14e8>
 4027484:	42000084 	addi	r8,r8,2
 4027488:	b5800404 	addi	r22,r22,16
 402748c:	003f2706 	br	402712c <___vfprintf_internal_r+0x1000>
 4027490:	02ff260e 	bge	zero,r11,402712c <___vfprintf_internal_r+0x1000>
 4027494:	58800450 	cmplti	r2,r11,17
 4027498:	01c00034 	movhi	r7,0
 402749c:	10034c1e 	bne	r2,zero,40281d0 <___vfprintf_internal_r+0x20a4>
 40274a0:	39c10304 	addi	r7,r7,1036
 40274a4:	dc000715 	stw	r16,28(sp)
 40274a8:	05800404 	movi	r22,16
 40274ac:	5823883a 	mov	r17,r11
 40274b0:	3821883a 	mov	r16,r7
 40274b4:	402b883a 	mov	r21,r8
 40274b8:	00000506 	br	40274d0 <___vfprintf_internal_r+0x13a4>
 40274bc:	e7000204 	addi	fp,fp,8
 40274c0:	8c7ffc04 	addi	r17,r17,-16
 40274c4:	88800448 	cmpgei	r2,r17,17
 40274c8:	1001d626 	beq	r2,zero,4027c24 <___vfprintf_internal_r+0x1af8>
 40274cc:	ad400044 	addi	r21,r21,1
 40274d0:	18c00404 	addi	r3,r3,16
 40274d4:	e4000015 	stw	r16,0(fp)
 40274d8:	e5800115 	stw	r22,4(fp)
 40274dc:	d8c01c15 	stw	r3,112(sp)
 40274e0:	dd401b15 	stw	r21,108(sp)
 40274e4:	a8800208 	cmpgei	r2,r21,8
 40274e8:	103ff426 	beq	r2,zero,40274bc <___vfprintf_internal_r+0x1390>
 40274ec:	d9801a04 	addi	r6,sp,104
 40274f0:	900b883a 	mov	r5,r18
 40274f4:	9809883a 	mov	r4,r19
 40274f8:	402c0240 	call	402c024 <__sprint_r>
 40274fc:	103c181e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027500:	dd401b17 	ldw	r21,108(sp)
 4027504:	d8c01c17 	ldw	r3,112(sp)
 4027508:	df002704 	addi	fp,sp,156
 402750c:	003fec06 	br	40274c0 <___vfprintf_internal_r+0x1394>
 4027510:	d9801a04 	addi	r6,sp,104
 4027514:	900b883a 	mov	r5,r18
 4027518:	9809883a 	mov	r4,r19
 402751c:	402c0240 	call	402c024 <__sprint_r>
 4027520:	103c0f1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027524:	d8c01c17 	ldw	r3,112(sp)
 4027528:	dd802704 	addi	r22,sp,156
 402752c:	003bee06 	br	40264e8 <___vfprintf_internal_r+0x3bc>
 4027530:	d8800417 	ldw	r2,16(sp)
 4027534:	1080004c 	andi	r2,r2,1
 4027538:	103bf826 	beq	r2,zero,402651c <___vfprintf_internal_r+0x3f0>
 402753c:	003e1506 	br	4026d94 <___vfprintf_internal_r+0xc68>
 4027540:	dc402704 	addi	r17,sp,156
 4027544:	003d0e06 	br	4026980 <___vfprintf_internal_r+0x854>
 4027548:	00800c04 	movi	r2,48
 402754c:	d8801385 	stb	r2,78(sp)
 4027550:	df0013c5 	stb	fp,79(sp)
 4027554:	63000094 	ori	r12,r12,2
 4027558:	00800084 	movi	r2,2
 402755c:	003c3d06 	br	4026654 <___vfprintf_internal_r+0x528>
 4027560:	25000017 	ldw	r20,0(r4)
 4027564:	002b883a 	mov	r21,zero
 4027568:	d8c00615 	stw	r3,24(sp)
 402756c:	00800044 	movi	r2,1
 4027570:	003c3806 	br	4026654 <___vfprintf_internal_r+0x528>
 4027574:	d9000517 	ldw	r4,20(sp)
 4027578:	2005d7fa 	srai	r2,r4,31
 402757c:	19000015 	stw	r4,0(r3)
 4027580:	18800115 	stw	r2,4(r3)
 4027584:	003b1d06 	br	40261fc <___vfprintf_internal_r+0xd0>
 4027588:	25000017 	ldw	r20,0(r4)
 402758c:	002b883a 	mov	r21,zero
 4027590:	d8c00615 	stw	r3,24(sp)
 4027594:	003d1d06 	br	4026a0c <___vfprintf_internal_r+0x8e0>
 4027598:	25000017 	ldw	r20,0(r4)
 402759c:	002b883a 	mov	r21,zero
 40275a0:	d8c00615 	stw	r3,24(sp)
 40275a4:	0005883a 	mov	r2,zero
 40275a8:	003c2a06 	br	4026654 <___vfprintf_internal_r+0x528>
 40275ac:	18800017 	ldw	r2,0(r3)
 40275b0:	d8800915 	stw	r2,36(sp)
 40275b4:	18800117 	ldw	r2,4(r3)
 40275b8:	d8800a15 	stw	r2,40(sp)
 40275bc:	003c5b06 	br	402672c <___vfprintf_internal_r+0x600>
 40275c0:	25000017 	ldw	r20,0(r4)
 40275c4:	d8c00615 	stw	r3,24(sp)
 40275c8:	a02bd7fa 	srai	r21,r20,31
 40275cc:	a805883a 	mov	r2,r21
 40275d0:	003cd906 	br	4026938 <___vfprintf_internal_r+0x80c>
 40275d4:	0421c83a 	sub	r16,zero,r16
 40275d8:	d8800615 	stw	r2,24(sp)
 40275dc:	003d6306 	br	4026b6c <___vfprintf_internal_r+0xa40>
 40275e0:	202b883a 	mov	r21,r4
 40275e4:	057f4616 	blt	zero,r21,4027300 <___vfprintf_internal_r+0x11d4>
 40275e8:	003f4f06 	br	4027328 <___vfprintf_internal_r+0x11fc>
 40275ec:	d8800417 	ldw	r2,16(sp)
 40275f0:	1080004c 	andi	r2,r2,1
 40275f4:	103f531e 	bne	r2,zero,4027344 <___vfprintf_internal_r+0x1218>
 40275f8:	d9000817 	ldw	r4,32(sp)
 40275fc:	d9400717 	ldw	r5,28(sp)
 4027600:	2545c83a 	sub	r2,r4,r21
 4027604:	216bc83a 	sub	r21,r4,r5
 4027608:	157f6e0e 	bge	r2,r21,40273c4 <___vfprintf_internal_r+0x1298>
 402760c:	102b883a 	mov	r21,r2
 4027610:	003f6c06 	br	40273c4 <___vfprintf_internal_r+0x1298>
 4027614:	d9801a04 	addi	r6,sp,104
 4027618:	900b883a 	mov	r5,r18
 402761c:	9809883a 	mov	r4,r19
 4027620:	402c0240 	call	402c024 <__sprint_r>
 4027624:	103bce1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027628:	da001b17 	ldw	r8,108(sp)
 402762c:	d8c01c17 	ldw	r3,112(sp)
 4027630:	dd802904 	addi	r22,sp,164
 4027634:	42000044 	addi	r8,r8,1
 4027638:	df002704 	addi	fp,sp,156
 402763c:	003ebb06 	br	402712c <___vfprintf_internal_r+0x1000>
 4027640:	002b883a 	mov	r21,zero
 4027644:	003f3906 	br	402732c <___vfprintf_internal_r+0x1200>
 4027648:	bf000043 	ldbu	fp,1(r23)
 402764c:	63000814 	ori	r12,r12,32
 4027650:	bdc00044 	addi	r23,r23,1
 4027654:	e2c03fcc 	andi	r11,fp,255
 4027658:	5ac0201c 	xori	r11,r11,128
 402765c:	5affe004 	addi	r11,r11,-128
 4027660:	003afe06 	br	402625c <___vfprintf_internal_r+0x130>
 4027664:	d9801a04 	addi	r6,sp,104
 4027668:	900b883a 	mov	r5,r18
 402766c:	9809883a 	mov	r4,r19
 4027670:	402c0240 	call	402c024 <__sprint_r>
 4027674:	103bba1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027678:	d8c01c17 	ldw	r3,112(sp)
 402767c:	dd802704 	addi	r22,sp,156
 4027680:	003dd006 	br	4026dc4 <___vfprintf_internal_r+0xc98>
 4027684:	408001f0 	cmpltui	r2,r8,7
 4027688:	402b883a 	mov	r21,r8
 402768c:	1001e726 	beq	r2,zero,4027e2c <___vfprintf_internal_r+0x1d00>
 4027690:	04400034 	movhi	r17,0
 4027694:	a829883a 	mov	r20,r21
 4027698:	d8c00615 	stw	r3,24(sp)
 402769c:	8c410004 	addi	r17,r17,1024
 40276a0:	003b6506 	br	4026438 <___vfprintf_internal_r+0x30c>
 40276a4:	01c00034 	movhi	r7,0
 40276a8:	a9000450 	cmplti	r4,r21,17
 40276ac:	d8801b17 	ldw	r2,108(sp)
 40276b0:	39c10304 	addi	r7,r7,1036
 40276b4:	2001c21e 	bne	r4,zero,4027dc0 <___vfprintf_internal_r+0x1c94>
 40276b8:	dc000e15 	stw	r16,56(sp)
 40276bc:	07000404 	movi	fp,16
 40276c0:	3821883a 	mov	r16,r7
 40276c4:	00000406 	br	40276d8 <___vfprintf_internal_r+0x15ac>
 40276c8:	b5800204 	addi	r22,r22,8
 40276cc:	ad7ffc04 	addi	r21,r21,-16
 40276d0:	a9000448 	cmpgei	r4,r21,17
 40276d4:	2001b826 	beq	r4,zero,4027db8 <___vfprintf_internal_r+0x1c8c>
 40276d8:	10800044 	addi	r2,r2,1
 40276dc:	18c00404 	addi	r3,r3,16
 40276e0:	b4000015 	stw	r16,0(r22)
 40276e4:	b7000115 	stw	fp,4(r22)
 40276e8:	d8c01c15 	stw	r3,112(sp)
 40276ec:	d8801b15 	stw	r2,108(sp)
 40276f0:	11000208 	cmpgei	r4,r2,8
 40276f4:	203ff426 	beq	r4,zero,40276c8 <___vfprintf_internal_r+0x159c>
 40276f8:	d9801a04 	addi	r6,sp,104
 40276fc:	900b883a 	mov	r5,r18
 4027700:	9809883a 	mov	r4,r19
 4027704:	402c0240 	call	402c024 <__sprint_r>
 4027708:	103b951e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 402770c:	d8c01c17 	ldw	r3,112(sp)
 4027710:	d8801b17 	ldw	r2,108(sp)
 4027714:	dd802704 	addi	r22,sp,156
 4027718:	003fec06 	br	40276cc <___vfprintf_internal_r+0x15a0>
 402771c:	dc402704 	addi	r17,sp,156
 4027720:	a805883a 	mov	r2,r21
 4027724:	dc000715 	stw	r16,28(sp)
 4027728:	902b883a 	mov	r21,r18
 402772c:	8821883a 	mov	r16,r17
 4027730:	db000415 	stw	r12,16(sp)
 4027734:	a023883a 	mov	r17,r20
 4027738:	da000e15 	stw	r8,56(sp)
 402773c:	9829883a 	mov	r20,r19
 4027740:	1025883a 	mov	r18,r2
 4027744:	6827883a 	mov	r19,r13
 4027748:	8809883a 	mov	r4,r17
 402774c:	900b883a 	mov	r5,r18
 4027750:	01800284 	movi	r6,10
 4027754:	000f883a 	mov	r7,zero
 4027758:	402e5400 	call	402e540 <__umoddi3>
 402775c:	10800c04 	addi	r2,r2,48
 4027760:	8809883a 	mov	r4,r17
 4027764:	900b883a 	mov	r5,r18
 4027768:	01800284 	movi	r6,10
 402776c:	000f883a 	mov	r7,zero
 4027770:	80bfffc5 	stb	r2,-1(r16)
 4027774:	402dfb00 	call	402dfb0 <__udivdi3>
 4027778:	900d883a 	mov	r6,r18
 402777c:	880f883a 	mov	r7,r17
 4027780:	843fffc4 	addi	r16,r16,-1
 4027784:	1023883a 	mov	r17,r2
 4027788:	1825883a 	mov	r18,r3
 402778c:	303fee1e 	bne	r6,zero,4027748 <___vfprintf_internal_r+0x161c>
 4027790:	39c002a8 	cmpgeui	r7,r7,10
 4027794:	383fec1e 	bne	r7,zero,4027748 <___vfprintf_internal_r+0x161c>
 4027798:	8023883a 	mov	r17,r16
 402779c:	d8802704 	addi	r2,sp,156
 40277a0:	981b883a 	mov	r13,r19
 40277a4:	a825883a 	mov	r18,r21
 40277a8:	dc000717 	ldw	r16,28(sp)
 40277ac:	da000e17 	ldw	r8,56(sp)
 40277b0:	a027883a 	mov	r19,r20
 40277b4:	146bc83a 	sub	r21,r2,r17
 40277b8:	003c7106 	br	4026980 <___vfprintf_internal_r+0x854>
 40277bc:	d8800517 	ldw	r2,20(sp)
 40277c0:	18800015 	stw	r2,0(r3)
 40277c4:	003a8d06 	br	40261fc <___vfprintf_internal_r+0xd0>
 40277c8:	d9801a04 	addi	r6,sp,104
 40277cc:	900b883a 	mov	r5,r18
 40277d0:	9809883a 	mov	r4,r19
 40277d4:	402c0240 	call	402c024 <__sprint_r>
 40277d8:	103b611e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40277dc:	d8c01c17 	ldw	r3,112(sp)
 40277e0:	dd401b17 	ldw	r21,108(sp)
 40277e4:	df002704 	addi	fp,sp,156
 40277e8:	003e2b06 	br	4027098 <___vfprintf_internal_r+0xf6c>
 40277ec:	d9801a04 	addi	r6,sp,104
 40277f0:	900b883a 	mov	r5,r18
 40277f4:	9809883a 	mov	r4,r19
 40277f8:	402c0240 	call	402c024 <__sprint_r>
 40277fc:	103b581e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027800:	d8c01c17 	ldw	r3,112(sp)
 4027804:	dd401b17 	ldw	r21,108(sp)
 4027808:	df002704 	addi	fp,sp,156
 402780c:	003e2d06 	br	40270c4 <___vfprintf_internal_r+0xf98>
 4027810:	d9801a04 	addi	r6,sp,104
 4027814:	900b883a 	mov	r5,r18
 4027818:	9809883a 	mov	r4,r19
 402781c:	da001115 	stw	r8,68(sp)
 4027820:	db400f15 	stw	r13,60(sp)
 4027824:	db800e15 	stw	r14,56(sp)
 4027828:	402c0240 	call	402c024 <__sprint_r>
 402782c:	103b4c1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027830:	d8c01c17 	ldw	r3,112(sp)
 4027834:	da001117 	ldw	r8,68(sp)
 4027838:	db400f17 	ldw	r13,60(sp)
 402783c:	db800e17 	ldw	r14,56(sp)
 4027840:	dd802704 	addi	r22,sp,156
 4027844:	003b0906 	br	402646c <___vfprintf_internal_r+0x340>
 4027848:	d8801b17 	ldw	r2,108(sp)
 402784c:	01000034 	movhi	r4,0
 4027850:	21010204 	addi	r4,r4,1032
 4027854:	10800044 	addi	r2,r2,1
 4027858:	18c00044 	addi	r3,r3,1
 402785c:	b1000015 	stw	r4,0(r22)
 4027860:	01000044 	movi	r4,1
 4027864:	d8801b15 	stw	r2,108(sp)
 4027868:	b1000115 	stw	r4,4(r22)
 402786c:	d8c01c15 	stw	r3,112(sp)
 4027870:	10800208 	cmpgei	r2,r2,8
 4027874:	1001641e 	bne	r2,zero,4027e08 <___vfprintf_internal_r+0x1cdc>
 4027878:	b5800204 	addi	r22,r22,8
 402787c:	2800bd1e 	bne	r5,zero,4027b74 <___vfprintf_internal_r+0x1a48>
 4027880:	d8800417 	ldw	r2,16(sp)
 4027884:	d9000817 	ldw	r4,32(sp)
 4027888:	1080004c 	andi	r2,r2,1
 402788c:	1104b03a 	or	r2,r2,r4
 4027890:	103b2226 	beq	r2,zero,402651c <___vfprintf_internal_r+0x3f0>
 4027894:	d8800d17 	ldw	r2,52(sp)
 4027898:	d9000b17 	ldw	r4,44(sp)
 402789c:	b0800015 	stw	r2,0(r22)
 40278a0:	d8801b17 	ldw	r2,108(sp)
 40278a4:	20c7883a 	add	r3,r4,r3
 40278a8:	b1000115 	stw	r4,4(r22)
 40278ac:	10800044 	addi	r2,r2,1
 40278b0:	d8c01c15 	stw	r3,112(sp)
 40278b4:	d8801b15 	stw	r2,108(sp)
 40278b8:	11000208 	cmpgei	r4,r2,8
 40278bc:	2001771e 	bne	r4,zero,4027e9c <___vfprintf_internal_r+0x1d70>
 40278c0:	b5800204 	addi	r22,r22,8
 40278c4:	d9000817 	ldw	r4,32(sp)
 40278c8:	10800044 	addi	r2,r2,1
 40278cc:	d8801b15 	stw	r2,108(sp)
 40278d0:	20c7883a 	add	r3,r4,r3
 40278d4:	b4400015 	stw	r17,0(r22)
 40278d8:	b1000115 	stw	r4,4(r22)
 40278dc:	d8c01c15 	stw	r3,112(sp)
 40278e0:	10800208 	cmpgei	r2,r2,8
 40278e4:	103b0c26 	beq	r2,zero,4026518 <___vfprintf_internal_r+0x3ec>
 40278e8:	003e1906 	br	4027150 <___vfprintf_internal_r+0x1024>
 40278ec:	8825883a 	mov	r18,r17
 40278f0:	003b1b06 	br	4026560 <___vfprintf_internal_r+0x434>
 40278f4:	d9000917 	ldw	r4,36(sp)
 40278f8:	d9400a17 	ldw	r5,40(sp)
 40278fc:	da000615 	stw	r8,24(sp)
 4027900:	200d883a 	mov	r6,r4
 4027904:	280f883a 	mov	r7,r5
 4027908:	db000415 	stw	r12,16(sp)
 402790c:	4030d380 	call	4030d38 <__unorddf2>
 4027910:	db000417 	ldw	r12,16(sp)
 4027914:	da000617 	ldw	r8,24(sp)
 4027918:	1002061e 	bne	r2,zero,4028134 <___vfprintf_internal_r+0x2008>
 402791c:	057ff7c4 	movi	r21,-33
 4027920:	40bfffe0 	cmpeqi	r2,r8,-1
 4027924:	e56a703a 	and	r21,fp,r21
 4027928:	1001b41e 	bne	r2,zero,4027ffc <___vfprintf_internal_r+0x1ed0>
 402792c:	a88011d8 	cmpnei	r2,r21,71
 4027930:	10015726 	beq	r2,zero,4027e90 <___vfprintf_internal_r+0x1d64>
 4027934:	60804014 	ori	r2,r12,256
 4027938:	d8800415 	stw	r2,16(sp)
 402793c:	d8800a17 	ldw	r2,40(sp)
 4027940:	10012d16 	blt	r2,zero,4027df8 <___vfprintf_internal_r+0x1ccc>
 4027944:	dd000a17 	ldw	r20,40(sp)
 4027948:	d8000605 	stb	zero,24(sp)
 402794c:	e08019a0 	cmpeqi	r2,fp,102
 4027950:	d8800f15 	stw	r2,60(sp)
 4027954:	1000d21e 	bne	r2,zero,4027ca0 <___vfprintf_internal_r+0x1b74>
 4027958:	e08011a0 	cmpeqi	r2,fp,70
 402795c:	1000d01e 	bne	r2,zero,4027ca0 <___vfprintf_internal_r+0x1b74>
 4027960:	a8801158 	cmpnei	r2,r21,69
 4027964:	10016226 	beq	r2,zero,4027ef0 <___vfprintf_internal_r+0x1dc4>
 4027968:	d8801804 	addi	r2,sp,96
 402796c:	d8800315 	stw	r2,12(sp)
 4027970:	d9400917 	ldw	r5,36(sp)
 4027974:	d8801504 	addi	r2,sp,84
 4027978:	d8800215 	stw	r2,8(sp)
 402797c:	d8801404 	addi	r2,sp,80
 4027980:	da000015 	stw	r8,0(sp)
 4027984:	9809883a 	mov	r4,r19
 4027988:	d8800115 	stw	r2,4(sp)
 402798c:	01c00084 	movi	r7,2
 4027990:	a00d883a 	mov	r6,r20
 4027994:	db000815 	stw	r12,32(sp)
 4027998:	da000715 	stw	r8,28(sp)
 402799c:	40288780 	call	4028878 <_dtoa_r>
 40279a0:	da000717 	ldw	r8,28(sp)
 40279a4:	e10019d8 	cmpnei	r4,fp,103
 40279a8:	db000817 	ldw	r12,32(sp)
 40279ac:	1023883a 	mov	r17,r2
 40279b0:	4007883a 	mov	r3,r8
 40279b4:	2001621e 	bne	r4,zero,4027f40 <___vfprintf_internal_r+0x1e14>
 40279b8:	6080004c 	andi	r2,r12,1
 40279bc:	1001621e 	bne	r2,zero,4027f48 <___vfprintf_internal_r+0x1e1c>
 40279c0:	d8801417 	ldw	r2,80(sp)
 40279c4:	ad4011e0 	cmpeqi	r21,r21,71
 40279c8:	d8800715 	stw	r2,28(sp)
 40279cc:	d8801817 	ldw	r2,96(sp)
 40279d0:	1445c83a 	sub	r2,r2,r17
 40279d4:	d8800815 	stw	r2,32(sp)
 40279d8:	a8000526 	beq	r21,zero,40279f0 <___vfprintf_internal_r+0x18c4>
 40279dc:	d8c00717 	ldw	r3,28(sp)
 40279e0:	18bfff50 	cmplti	r2,r3,-3
 40279e4:	1000011e 	bne	r2,zero,40279ec <___vfprintf_internal_r+0x18c0>
 40279e8:	40c1670e 	bge	r8,r3,4027f88 <___vfprintf_internal_r+0x1e5c>
 40279ec:	e73fff84 	addi	fp,fp,-2
 40279f0:	d8800717 	ldw	r2,28(sp)
 40279f4:	df001645 	stb	fp,89(sp)
 40279f8:	157fffc4 	addi	r21,r2,-1
 40279fc:	dd401415 	stw	r21,80(sp)
 4027a00:	a801d416 	blt	r21,zero,4028154 <___vfprintf_internal_r+0x2028>
 4027a04:	00800ac4 	movi	r2,43
 4027a08:	d8801685 	stb	r2,90(sp)
 4027a0c:	a8800290 	cmplti	r2,r21,10
 4027a10:	1001c11e 	bne	r2,zero,4028118 <___vfprintf_internal_r+0x1fec>
 4027a14:	d98019c4 	addi	r6,sp,103
 4027a18:	9029883a 	mov	r20,r18
 4027a1c:	dc400715 	stw	r17,28(sp)
 4027a20:	8025883a 	mov	r18,r16
 4027a24:	db000f15 	stw	r12,60(sp)
 4027a28:	3021883a 	mov	r16,r6
 4027a2c:	a809883a 	mov	r4,r21
 4027a30:	01400284 	movi	r5,10
 4027a34:	40225300 	call	4022530 <__modsi3>
 4027a38:	10800c04 	addi	r2,r2,48
 4027a3c:	a809883a 	mov	r4,r21
 4027a40:	80bfffc5 	stb	r2,-1(r16)
 4027a44:	01400284 	movi	r5,10
 4027a48:	40224b00 	call	40224b0 <__divsi3>
 4027a4c:	a9001908 	cmpgei	r4,r21,100
 4027a50:	8023883a 	mov	r17,r16
 4027a54:	102b883a 	mov	r21,r2
 4027a58:	843fffc4 	addi	r16,r16,-1
 4027a5c:	203ff31e 	bne	r4,zero,4027a2c <___vfprintf_internal_r+0x1900>
 4027a60:	800d883a 	mov	r6,r16
 4027a64:	11000c04 	addi	r4,r2,48
 4027a68:	9021883a 	mov	r16,r18
 4027a6c:	a025883a 	mov	r18,r20
 4027a70:	8829883a 	mov	r20,r17
 4027a74:	a0bfff84 	addi	r2,r20,-2
 4027a78:	313fffc5 	stb	r4,-1(r6)
 4027a7c:	d8c019c4 	addi	r3,sp,103
 4027a80:	db000f17 	ldw	r12,60(sp)
 4027a84:	dc400717 	ldw	r17,28(sp)
 4027a88:	10c1d62e 	bgeu	r2,r3,40281e4 <___vfprintf_internal_r+0x20b8>
 4027a8c:	d8c016c4 	addi	r3,sp,91
 4027a90:	00000106 	br	4027a98 <___vfprintf_internal_r+0x196c>
 4027a94:	11000003 	ldbu	r4,0(r2)
 4027a98:	19000005 	stb	r4,0(r3)
 4027a9c:	10800044 	addi	r2,r2,1
 4027aa0:	d90019c4 	addi	r4,sp,103
 4027aa4:	18c00044 	addi	r3,r3,1
 4027aa8:	113ffa1e 	bne	r2,r4,4027a94 <___vfprintf_internal_r+0x1968>
 4027aac:	d8801a44 	addi	r2,sp,105
 4027ab0:	d8c016c4 	addi	r3,sp,91
 4027ab4:	1505c83a 	sub	r2,r2,r20
 4027ab8:	1885883a 	add	r2,r3,r2
 4027abc:	d8c01644 	addi	r3,sp,89
 4027ac0:	10c5c83a 	sub	r2,r2,r3
 4027ac4:	d8801015 	stw	r2,64(sp)
 4027ac8:	d8c00817 	ldw	r3,32(sp)
 4027acc:	d9001017 	ldw	r4,64(sp)
 4027ad0:	18800088 	cmpgei	r2,r3,2
 4027ad4:	192b883a 	add	r21,r3,r4
 4027ad8:	1001aa26 	beq	r2,zero,4028184 <___vfprintf_internal_r+0x2058>
 4027adc:	d8800b17 	ldw	r2,44(sp)
 4027ae0:	a8ab883a 	add	r21,r21,r2
 4027ae4:	a829883a 	mov	r20,r21
 4027ae8:	a800010e 	bge	r21,zero,4027af0 <___vfprintf_internal_r+0x19c4>
 4027aec:	0029883a 	mov	r20,zero
 4027af0:	d8000715 	stw	zero,28(sp)
 4027af4:	00009d06 	br	4027d6c <___vfprintf_internal_r+0x1c40>
 4027af8:	880f883a 	mov	r7,r17
 4027afc:	10800044 	addi	r2,r2,1
 4027b00:	1d47883a 	add	r3,r3,r21
 4027b04:	b1c00015 	stw	r7,0(r22)
 4027b08:	003a7e06 	br	4026504 <___vfprintf_internal_r+0x3d8>
 4027b0c:	d9801a04 	addi	r6,sp,104
 4027b10:	900b883a 	mov	r5,r18
 4027b14:	9809883a 	mov	r4,r19
 4027b18:	402c0240 	call	402c024 <__sprint_r>
 4027b1c:	103a901e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027b20:	d8c01c17 	ldw	r3,112(sp)
 4027b24:	dd802704 	addi	r22,sp,156
 4027b28:	003c9706 	br	4026d88 <___vfprintf_internal_r+0xc5c>
 4027b2c:	d9801a04 	addi	r6,sp,104
 4027b30:	900b883a 	mov	r5,r18
 4027b34:	9809883a 	mov	r4,r19
 4027b38:	da000e15 	stw	r8,56(sp)
 4027b3c:	402c0240 	call	402c024 <__sprint_r>
 4027b40:	103a871e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027b44:	d8c01c17 	ldw	r3,112(sp)
 4027b48:	da000e17 	ldw	r8,56(sp)
 4027b4c:	dd802704 	addi	r22,sp,156
 4027b50:	003a6306 	br	40264e0 <___vfprintf_internal_r+0x3b4>
 4027b54:	8809883a 	mov	r4,r17
 4027b58:	db000415 	stw	r12,16(sp)
 4027b5c:	d8c00615 	stw	r3,24(sp)
 4027b60:	40260940 	call	4026094 <strlen>
 4027b64:	db000417 	ldw	r12,16(sp)
 4027b68:	102b883a 	mov	r21,r2
 4027b6c:	1029883a 	mov	r20,r2
 4027b70:	003a3106 	br	4026438 <___vfprintf_internal_r+0x30c>
 4027b74:	d8800d17 	ldw	r2,52(sp)
 4027b78:	d9000b17 	ldw	r4,44(sp)
 4027b7c:	b0800015 	stw	r2,0(r22)
 4027b80:	d8801b17 	ldw	r2,108(sp)
 4027b84:	20c7883a 	add	r3,r4,r3
 4027b88:	b1000115 	stw	r4,4(r22)
 4027b8c:	10800044 	addi	r2,r2,1
 4027b90:	d8c01c15 	stw	r3,112(sp)
 4027b94:	d8801b15 	stw	r2,108(sp)
 4027b98:	11000208 	cmpgei	r4,r2,8
 4027b9c:	2000bf1e 	bne	r4,zero,4027e9c <___vfprintf_internal_r+0x1d70>
 4027ba0:	b5800204 	addi	r22,r22,8
 4027ba4:	283f470e 	bge	r5,zero,40278c4 <___vfprintf_internal_r+0x1798>
 4027ba8:	01c00034 	movhi	r7,0
 4027bac:	293ffc08 	cmpgei	r4,r5,-16
 4027bb0:	39c10304 	addi	r7,r7,1036
 4027bb4:	0179c83a 	sub	fp,zero,r5
 4027bb8:	20013f1e 	bne	r4,zero,40280b8 <___vfprintf_internal_r+0x1f8c>
 4027bbc:	dc000715 	stw	r16,28(sp)
 4027bc0:	05400404 	movi	r21,16
 4027bc4:	9021883a 	mov	r16,r18
 4027bc8:	3825883a 	mov	r18,r7
 4027bcc:	00000406 	br	4027be0 <___vfprintf_internal_r+0x1ab4>
 4027bd0:	b5800204 	addi	r22,r22,8
 4027bd4:	e73ffc04 	addi	fp,fp,-16
 4027bd8:	e1800448 	cmpgei	r6,fp,17
 4027bdc:	30013326 	beq	r6,zero,40280ac <___vfprintf_internal_r+0x1f80>
 4027be0:	10800044 	addi	r2,r2,1
 4027be4:	18c00404 	addi	r3,r3,16
 4027be8:	b4800015 	stw	r18,0(r22)
 4027bec:	b5400115 	stw	r21,4(r22)
 4027bf0:	d8c01c15 	stw	r3,112(sp)
 4027bf4:	d8801b15 	stw	r2,108(sp)
 4027bf8:	11800208 	cmpgei	r6,r2,8
 4027bfc:	303ff426 	beq	r6,zero,4027bd0 <___vfprintf_internal_r+0x1aa4>
 4027c00:	d9801a04 	addi	r6,sp,104
 4027c04:	800b883a 	mov	r5,r16
 4027c08:	9809883a 	mov	r4,r19
 4027c0c:	402c0240 	call	402c024 <__sprint_r>
 4027c10:	1001721e 	bne	r2,zero,40281dc <___vfprintf_internal_r+0x20b0>
 4027c14:	d8c01c17 	ldw	r3,112(sp)
 4027c18:	d8801b17 	ldw	r2,108(sp)
 4027c1c:	dd802704 	addi	r22,sp,156
 4027c20:	003fec06 	br	4027bd4 <___vfprintf_internal_r+0x1aa8>
 4027c24:	800f883a 	mov	r7,r16
 4027c28:	dc000717 	ldw	r16,28(sp)
 4027c2c:	8817883a 	mov	r11,r17
 4027c30:	aa000044 	addi	r8,r21,1
 4027c34:	e0800204 	addi	r2,fp,8
 4027c38:	1ac7883a 	add	r3,r3,r11
 4027c3c:	e1c00015 	stw	r7,0(fp)
 4027c40:	e2c00115 	stw	r11,4(fp)
 4027c44:	d8c01c15 	stw	r3,112(sp)
 4027c48:	da001b15 	stw	r8,108(sp)
 4027c4c:	41000208 	cmpgei	r4,r8,8
 4027c50:	203e701e 	bne	r4,zero,4027614 <___vfprintf_internal_r+0x14e8>
 4027c54:	42000044 	addi	r8,r8,1
 4027c58:	15800204 	addi	r22,r2,8
 4027c5c:	1039883a 	mov	fp,r2
 4027c60:	003d3206 	br	402712c <___vfprintf_internal_r+0x1000>
 4027c64:	d8800617 	ldw	r2,24(sp)
 4027c68:	d8c00615 	stw	r3,24(sp)
 4027c6c:	15000017 	ldw	r20,0(r2)
 4027c70:	a02bd7fa 	srai	r21,r20,31
 4027c74:	a805883a 	mov	r2,r21
 4027c78:	003b2f06 	br	4026938 <___vfprintf_internal_r+0x80c>
 4027c7c:	d8800617 	ldw	r2,24(sp)
 4027c80:	002b883a 	mov	r21,zero
 4027c84:	d8c00615 	stw	r3,24(sp)
 4027c88:	15000017 	ldw	r20,0(r2)
 4027c8c:	0005883a 	mov	r2,zero
 4027c90:	003a7006 	br	4026654 <___vfprintf_internal_r+0x528>
 4027c94:	04400034 	movhi	r17,0
 4027c98:	8c40f204 	addi	r17,r17,968
 4027c9c:	003ac806 	br	40267c0 <___vfprintf_internal_r+0x694>
 4027ca0:	d8801804 	addi	r2,sp,96
 4027ca4:	d8800315 	stw	r2,12(sp)
 4027ca8:	d9400917 	ldw	r5,36(sp)
 4027cac:	d8801504 	addi	r2,sp,84
 4027cb0:	d8800215 	stw	r2,8(sp)
 4027cb4:	d8801404 	addi	r2,sp,80
 4027cb8:	da000015 	stw	r8,0(sp)
 4027cbc:	d8800115 	stw	r2,4(sp)
 4027cc0:	01c000c4 	movi	r7,3
 4027cc4:	a00d883a 	mov	r6,r20
 4027cc8:	9809883a 	mov	r4,r19
 4027ccc:	db000815 	stw	r12,32(sp)
 4027cd0:	da000715 	stw	r8,28(sp)
 4027cd4:	40288780 	call	4028878 <_dtoa_r>
 4027cd8:	da000717 	ldw	r8,28(sp)
 4027cdc:	1023883a 	mov	r17,r2
 4027ce0:	db000817 	ldw	r12,32(sp)
 4027ce4:	1207883a 	add	r3,r2,r8
 4027ce8:	88800007 	ldb	r2,0(r17)
 4027cec:	10800c20 	cmpeqi	r2,r2,48
 4027cf0:	1000571e 	bne	r2,zero,4027e50 <___vfprintf_internal_r+0x1d24>
 4027cf4:	d8801417 	ldw	r2,80(sp)
 4027cf8:	1893883a 	add	r9,r3,r2
 4027cfc:	d9000917 	ldw	r4,36(sp)
 4027d00:	000d883a 	mov	r6,zero
 4027d04:	000f883a 	mov	r7,zero
 4027d08:	a00b883a 	mov	r5,r20
 4027d0c:	da401115 	stw	r9,68(sp)
 4027d10:	da000815 	stw	r8,32(sp)
 4027d14:	db000715 	stw	r12,28(sp)
 4027d18:	402fbc00 	call	402fbc0 <__eqdf2>
 4027d1c:	db000717 	ldw	r12,28(sp)
 4027d20:	da000817 	ldw	r8,32(sp)
 4027d24:	da401117 	ldw	r9,68(sp)
 4027d28:	1000891e 	bne	r2,zero,4027f50 <___vfprintf_internal_r+0x1e24>
 4027d2c:	4805883a 	mov	r2,r9
 4027d30:	d8c01417 	ldw	r3,80(sp)
 4027d34:	1445c83a 	sub	r2,r2,r17
 4027d38:	ad4011d8 	cmpnei	r21,r21,71
 4027d3c:	d8c00715 	stw	r3,28(sp)
 4027d40:	d8800815 	stw	r2,32(sp)
 4027d44:	a83f2526 	beq	r21,zero,40279dc <___vfprintf_internal_r+0x18b0>
 4027d48:	d8800f17 	ldw	r2,60(sp)
 4027d4c:	103f2826 	beq	r2,zero,40279f0 <___vfprintf_internal_r+0x18c4>
 4027d50:	d8c00717 	ldw	r3,28(sp)
 4027d54:	6080004c 	andi	r2,r12,1
 4027d58:	1204b03a 	or	r2,r2,r8
 4027d5c:	00c1140e 	bge	zero,r3,40281b0 <___vfprintf_internal_r+0x2084>
 4027d60:	1001011e 	bne	r2,zero,4028168 <___vfprintf_internal_r+0x203c>
 4027d64:	dd400717 	ldw	r21,28(sp)
 4027d68:	a829883a 	mov	r20,r21
 4027d6c:	d8800607 	ldb	r2,24(sp)
 4027d70:	10008026 	beq	r2,zero,4027f74 <___vfprintf_internal_r+0x1e48>
 4027d74:	00800b44 	movi	r2,45
 4027d78:	d8801345 	stb	r2,77(sp)
 4027d7c:	d8800e17 	ldw	r2,56(sp)
 4027d80:	0011883a 	mov	r8,zero
 4027d84:	d8800615 	stw	r2,24(sp)
 4027d88:	003b0506 	br	40269a0 <___vfprintf_internal_r+0x874>
 4027d8c:	d8800617 	ldw	r2,24(sp)
 4027d90:	002b883a 	mov	r21,zero
 4027d94:	d8c00615 	stw	r3,24(sp)
 4027d98:	15000017 	ldw	r20,0(r2)
 4027d9c:	00800044 	movi	r2,1
 4027da0:	003a2c06 	br	4026654 <___vfprintf_internal_r+0x528>
 4027da4:	d8800617 	ldw	r2,24(sp)
 4027da8:	002b883a 	mov	r21,zero
 4027dac:	d8c00615 	stw	r3,24(sp)
 4027db0:	15000017 	ldw	r20,0(r2)
 4027db4:	003b1506 	br	4026a0c <___vfprintf_internal_r+0x8e0>
 4027db8:	800f883a 	mov	r7,r16
 4027dbc:	dc000e17 	ldw	r16,56(sp)
 4027dc0:	10800044 	addi	r2,r2,1
 4027dc4:	1d47883a 	add	r3,r3,r21
 4027dc8:	d8801b15 	stw	r2,108(sp)
 4027dcc:	b1c00015 	stw	r7,0(r22)
 4027dd0:	b5400115 	stw	r21,4(r22)
 4027dd4:	d8c01c15 	stw	r3,112(sp)
 4027dd8:	10800208 	cmpgei	r2,r2,8
 4027ddc:	10003a1e 	bne	r2,zero,4027ec8 <___vfprintf_internal_r+0x1d9c>
 4027de0:	b5800204 	addi	r22,r22,8
 4027de4:	003d5406 	br	4027338 <___vfprintf_internal_r+0x120c>
 4027de8:	00800b44 	movi	r2,45
 4027dec:	d8801345 	stb	r2,77(sp)
 4027df0:	03400b44 	movi	r13,45
 4027df4:	003a6e06 	br	40267b0 <___vfprintf_internal_r+0x684>
 4027df8:	1520003c 	xorhi	r20,r2,32768
 4027dfc:	00800b44 	movi	r2,45
 4027e00:	d8800605 	stb	r2,24(sp)
 4027e04:	003ed106 	br	402794c <___vfprintf_internal_r+0x1820>
 4027e08:	d9801a04 	addi	r6,sp,104
 4027e0c:	900b883a 	mov	r5,r18
 4027e10:	9809883a 	mov	r4,r19
 4027e14:	402c0240 	call	402c024 <__sprint_r>
 4027e18:	1039d11e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027e1c:	d9401417 	ldw	r5,80(sp)
 4027e20:	d8c01c17 	ldw	r3,112(sp)
 4027e24:	dd802704 	addi	r22,sp,156
 4027e28:	003e9406 	br	402787c <___vfprintf_internal_r+0x1750>
 4027e2c:	05400184 	movi	r21,6
 4027e30:	003e1706 	br	4027690 <___vfprintf_internal_r+0x1564>
 4027e34:	d9401345 	stb	r5,77(sp)
 4027e38:	00397906 	br	4026420 <___vfprintf_internal_r+0x2f4>
 4027e3c:	d9801a04 	addi	r6,sp,104
 4027e40:	900b883a 	mov	r5,r18
 4027e44:	9809883a 	mov	r4,r19
 4027e48:	402c0240 	call	402c024 <__sprint_r>
 4027e4c:	0039c406 	br	4026560 <___vfprintf_internal_r+0x434>
 4027e50:	d9000917 	ldw	r4,36(sp)
 4027e54:	000d883a 	mov	r6,zero
 4027e58:	000f883a 	mov	r7,zero
 4027e5c:	a00b883a 	mov	r5,r20
 4027e60:	d8c01115 	stw	r3,68(sp)
 4027e64:	da000815 	stw	r8,32(sp)
 4027e68:	db000715 	stw	r12,28(sp)
 4027e6c:	402fbc00 	call	402fbc0 <__eqdf2>
 4027e70:	db000717 	ldw	r12,28(sp)
 4027e74:	da000817 	ldw	r8,32(sp)
 4027e78:	d8c01117 	ldw	r3,68(sp)
 4027e7c:	103f9d26 	beq	r2,zero,4027cf4 <___vfprintf_internal_r+0x1bc8>
 4027e80:	00800044 	movi	r2,1
 4027e84:	1205c83a 	sub	r2,r2,r8
 4027e88:	d8801415 	stw	r2,80(sp)
 4027e8c:	003f9a06 	br	4027cf8 <___vfprintf_internal_r+0x1bcc>
 4027e90:	403ea81e 	bne	r8,zero,4027934 <___vfprintf_internal_r+0x1808>
 4027e94:	02000044 	movi	r8,1
 4027e98:	003ea606 	br	4027934 <___vfprintf_internal_r+0x1808>
 4027e9c:	d9801a04 	addi	r6,sp,104
 4027ea0:	900b883a 	mov	r5,r18
 4027ea4:	9809883a 	mov	r4,r19
 4027ea8:	402c0240 	call	402c024 <__sprint_r>
 4027eac:	1039ac1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027eb0:	d9401417 	ldw	r5,80(sp)
 4027eb4:	d8c01c17 	ldw	r3,112(sp)
 4027eb8:	d8801b17 	ldw	r2,108(sp)
 4027ebc:	dd802704 	addi	r22,sp,156
 4027ec0:	283e800e 	bge	r5,zero,40278c4 <___vfprintf_internal_r+0x1798>
 4027ec4:	003f3806 	br	4027ba8 <___vfprintf_internal_r+0x1a7c>
 4027ec8:	d9801a04 	addi	r6,sp,104
 4027ecc:	900b883a 	mov	r5,r18
 4027ed0:	9809883a 	mov	r4,r19
 4027ed4:	402c0240 	call	402c024 <__sprint_r>
 4027ed8:	1039a11e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027edc:	d8c01c17 	ldw	r3,112(sp)
 4027ee0:	dd802704 	addi	r22,sp,156
 4027ee4:	003d1406 	br	4027338 <___vfprintf_internal_r+0x120c>
 4027ee8:	db000417 	ldw	r12,16(sp)
 4027eec:	003a9f06 	br	402696c <___vfprintf_internal_r+0x840>
 4027ef0:	d8801804 	addi	r2,sp,96
 4027ef4:	d8800315 	stw	r2,12(sp)
 4027ef8:	d9400917 	ldw	r5,36(sp)
 4027efc:	d8801504 	addi	r2,sp,84
 4027f00:	40c00044 	addi	r3,r8,1
 4027f04:	d8800215 	stw	r2,8(sp)
 4027f08:	d8801404 	addi	r2,sp,80
 4027f0c:	d8c00015 	stw	r3,0(sp)
 4027f10:	d8800115 	stw	r2,4(sp)
 4027f14:	01c00084 	movi	r7,2
 4027f18:	a00d883a 	mov	r6,r20
 4027f1c:	9809883a 	mov	r4,r19
 4027f20:	db001115 	stw	r12,68(sp)
 4027f24:	da000815 	stw	r8,32(sp)
 4027f28:	d8c00715 	stw	r3,28(sp)
 4027f2c:	40288780 	call	4028878 <_dtoa_r>
 4027f30:	d8c00717 	ldw	r3,28(sp)
 4027f34:	da000817 	ldw	r8,32(sp)
 4027f38:	db001117 	ldw	r12,68(sp)
 4027f3c:	1023883a 	mov	r17,r2
 4027f40:	e08011d8 	cmpnei	r2,fp,71
 4027f44:	103e9c26 	beq	r2,zero,40279b8 <___vfprintf_internal_r+0x188c>
 4027f48:	88d3883a 	add	r9,r17,r3
 4027f4c:	003f6b06 	br	4027cfc <___vfprintf_internal_r+0x1bd0>
 4027f50:	d8801817 	ldw	r2,96(sp)
 4027f54:	127f762e 	bgeu	r2,r9,4027d30 <___vfprintf_internal_r+0x1c04>
 4027f58:	01000c04 	movi	r4,48
 4027f5c:	10c00044 	addi	r3,r2,1
 4027f60:	d8c01815 	stw	r3,96(sp)
 4027f64:	11000005 	stb	r4,0(r2)
 4027f68:	d8801817 	ldw	r2,96(sp)
 4027f6c:	127ffb36 	bltu	r2,r9,4027f5c <___vfprintf_internal_r+0x1e30>
 4027f70:	003f6f06 	br	4027d30 <___vfprintf_internal_r+0x1c04>
 4027f74:	d8800e17 	ldw	r2,56(sp)
 4027f78:	db401343 	ldbu	r13,77(sp)
 4027f7c:	0011883a 	mov	r8,zero
 4027f80:	d8800615 	stw	r2,24(sp)
 4027f84:	003a8206 	br	4026990 <___vfprintf_internal_r+0x864>
 4027f88:	d8800717 	ldw	r2,28(sp)
 4027f8c:	d8c00817 	ldw	r3,32(sp)
 4027f90:	10c02b16 	blt	r2,r3,4028040 <___vfprintf_internal_r+0x1f14>
 4027f94:	6300004c 	andi	r12,r12,1
 4027f98:	6000581e 	bne	r12,zero,40280fc <___vfprintf_internal_r+0x1fd0>
 4027f9c:	1029883a 	mov	r20,r2
 4027fa0:	1000010e 	bge	r2,zero,4027fa8 <___vfprintf_internal_r+0x1e7c>
 4027fa4:	0029883a 	mov	r20,zero
 4027fa8:	dd400717 	ldw	r21,28(sp)
 4027fac:	070019c4 	movi	fp,103
 4027fb0:	003f6e06 	br	4027d6c <___vfprintf_internal_r+0x1c40>
 4027fb4:	d9801a04 	addi	r6,sp,104
 4027fb8:	900b883a 	mov	r5,r18
 4027fbc:	9809883a 	mov	r4,r19
 4027fc0:	402c0240 	call	402c024 <__sprint_r>
 4027fc4:	1039661e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027fc8:	dd401417 	ldw	r21,80(sp)
 4027fcc:	d8c01c17 	ldw	r3,112(sp)
 4027fd0:	dd802704 	addi	r22,sp,156
 4027fd4:	003ce706 	br	4027374 <___vfprintf_internal_r+0x1248>
 4027fd8:	d9801a04 	addi	r6,sp,104
 4027fdc:	900b883a 	mov	r5,r18
 4027fe0:	9809883a 	mov	r4,r19
 4027fe4:	402c0240 	call	402c024 <__sprint_r>
 4027fe8:	10395d1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4027fec:	d8c01c17 	ldw	r3,112(sp)
 4027ff0:	dd802704 	addi	r22,sp,156
 4027ff4:	a83ccd0e 	bge	r21,zero,402732c <___vfprintf_internal_r+0x1200>
 4027ff8:	003d9106 	br	4027640 <___vfprintf_internal_r+0x1514>
 4027ffc:	02000184 	movi	r8,6
 4028000:	003e4c06 	br	4027934 <___vfprintf_internal_r+0x1808>
 4028004:	d9801a04 	addi	r6,sp,104
 4028008:	900b883a 	mov	r5,r18
 402800c:	9809883a 	mov	r4,r19
 4028010:	402c0240 	call	402c024 <__sprint_r>
 4028014:	1039521e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 4028018:	d8801417 	ldw	r2,80(sp)
 402801c:	d9000817 	ldw	r4,32(sp)
 4028020:	d8c01c17 	ldw	r3,112(sp)
 4028024:	dd802704 	addi	r22,sp,156
 4028028:	2085c83a 	sub	r2,r4,r2
 402802c:	003ce506 	br	40273c4 <___vfprintf_internal_r+0x1298>
 4028030:	4029883a 	mov	r20,r8
 4028034:	d8c00615 	stw	r3,24(sp)
 4028038:	402b883a 	mov	r21,r8
 402803c:	0038fe06 	br	4026438 <___vfprintf_internal_r+0x30c>
 4028040:	d8800817 	ldw	r2,32(sp)
 4028044:	d8c00b17 	ldw	r3,44(sp)
 4028048:	10eb883a 	add	r21,r2,r3
 402804c:	d8800717 	ldw	r2,28(sp)
 4028050:	00800316 	blt	zero,r2,4028060 <___vfprintf_internal_r+0x1f34>
 4028054:	d8800717 	ldw	r2,28(sp)
 4028058:	a8abc83a 	sub	r21,r21,r2
 402805c:	ad400044 	addi	r21,r21,1
 4028060:	a829883a 	mov	r20,r21
 4028064:	a8002a16 	blt	r21,zero,4028110 <___vfprintf_internal_r+0x1fe4>
 4028068:	070019c4 	movi	fp,103
 402806c:	003f3f06 	br	4027d6c <___vfprintf_internal_r+0x1c40>
 4028070:	d9401345 	stb	r5,77(sp)
 4028074:	003ae006 	br	4026bf8 <___vfprintf_internal_r+0xacc>
 4028078:	d9401345 	stb	r5,77(sp)
 402807c:	003a5906 	br	40269e4 <___vfprintf_internal_r+0x8b8>
 4028080:	d9401345 	stb	r5,77(sp)
 4028084:	003b1706 	br	4026ce4 <___vfprintf_internal_r+0xbb8>
 4028088:	d9401345 	stb	r5,77(sp)
 402808c:	003a2206 	br	4026918 <___vfprintf_internal_r+0x7ec>
 4028090:	d9401345 	stb	r5,77(sp)
 4028094:	003a6806 	br	4026a38 <___vfprintf_internal_r+0x90c>
 4028098:	d9401345 	stb	r5,77(sp)
 402809c:	00399906 	br	4026704 <___vfprintf_internal_r+0x5d8>
 40280a0:	00bfffc4 	movi	r2,-1
 40280a4:	d8800515 	stw	r2,20(sp)
 40280a8:	00393006 	br	402656c <___vfprintf_internal_r+0x440>
 40280ac:	900f883a 	mov	r7,r18
 40280b0:	8025883a 	mov	r18,r16
 40280b4:	dc000717 	ldw	r16,28(sp)
 40280b8:	10800044 	addi	r2,r2,1
 40280bc:	1f07883a 	add	r3,r3,fp
 40280c0:	b1c00015 	stw	r7,0(r22)
 40280c4:	b7000115 	stw	fp,4(r22)
 40280c8:	d8c01c15 	stw	r3,112(sp)
 40280cc:	d8801b15 	stw	r2,108(sp)
 40280d0:	11000208 	cmpgei	r4,r2,8
 40280d4:	203dfa26 	beq	r4,zero,40278c0 <___vfprintf_internal_r+0x1794>
 40280d8:	d9801a04 	addi	r6,sp,104
 40280dc:	900b883a 	mov	r5,r18
 40280e0:	9809883a 	mov	r4,r19
 40280e4:	402c0240 	call	402c024 <__sprint_r>
 40280e8:	10391d1e 	bne	r2,zero,4026560 <___vfprintf_internal_r+0x434>
 40280ec:	d8c01c17 	ldw	r3,112(sp)
 40280f0:	d8801b17 	ldw	r2,108(sp)
 40280f4:	dd802704 	addi	r22,sp,156
 40280f8:	003df206 	br	40278c4 <___vfprintf_internal_r+0x1798>
 40280fc:	d8800717 	ldw	r2,28(sp)
 4028100:	d8c00b17 	ldw	r3,44(sp)
 4028104:	10eb883a 	add	r21,r2,r3
 4028108:	a829883a 	mov	r20,r21
 402810c:	a83fd60e 	bge	r21,zero,4028068 <___vfprintf_internal_r+0x1f3c>
 4028110:	0029883a 	mov	r20,zero
 4028114:	003fd406 	br	4028068 <___vfprintf_internal_r+0x1f3c>
 4028118:	00800c04 	movi	r2,48
 402811c:	ad400c04 	addi	r21,r21,48
 4028120:	d88016c5 	stb	r2,91(sp)
 4028124:	00800104 	movi	r2,4
 4028128:	dd401705 	stb	r21,92(sp)
 402812c:	d8801015 	stw	r2,64(sp)
 4028130:	003e6506 	br	4027ac8 <___vfprintf_internal_r+0x199c>
 4028134:	d8800a17 	ldw	r2,40(sp)
 4028138:	10001916 	blt	r2,zero,40281a0 <___vfprintf_internal_r+0x2074>
 402813c:	db401343 	ldbu	r13,77(sp)
 4028140:	e0801210 	cmplti	r2,fp,72
 4028144:	1000131e 	bne	r2,zero,4028194 <___vfprintf_internal_r+0x2068>
 4028148:	04400034 	movhi	r17,0
 402814c:	8c40f504 	addi	r17,r17,980
 4028150:	00399b06 	br	40267c0 <___vfprintf_internal_r+0x694>
 4028154:	05400044 	movi	r21,1
 4028158:	a8abc83a 	sub	r21,r21,r2
 402815c:	00800b44 	movi	r2,45
 4028160:	d8801685 	stb	r2,90(sp)
 4028164:	003e2906 	br	4027a0c <___vfprintf_internal_r+0x18e0>
 4028168:	d8800b17 	ldw	r2,44(sp)
 402816c:	18ab883a 	add	r21,r3,r2
 4028170:	aa2b883a 	add	r21,r21,r8
 4028174:	a829883a 	mov	r20,r21
 4028178:	a83efc0e 	bge	r21,zero,4027d6c <___vfprintf_internal_r+0x1c40>
 402817c:	0029883a 	mov	r20,zero
 4028180:	003efa06 	br	4027d6c <___vfprintf_internal_r+0x1c40>
 4028184:	6080004c 	andi	r2,r12,1
 4028188:	d8800715 	stw	r2,28(sp)
 402818c:	103e531e 	bne	r2,zero,4027adc <___vfprintf_internal_r+0x19b0>
 4028190:	003ff806 	br	4028174 <___vfprintf_internal_r+0x2048>
 4028194:	04400034 	movhi	r17,0
 4028198:	8c40f404 	addi	r17,r17,976
 402819c:	00398806 	br	40267c0 <___vfprintf_internal_r+0x694>
 40281a0:	00800b44 	movi	r2,45
 40281a4:	d8801345 	stb	r2,77(sp)
 40281a8:	03400b44 	movi	r13,45
 40281ac:	003fe406 	br	4028140 <___vfprintf_internal_r+0x2014>
 40281b0:	1000031e 	bne	r2,zero,40281c0 <___vfprintf_internal_r+0x2094>
 40281b4:	05000044 	movi	r20,1
 40281b8:	05400044 	movi	r21,1
 40281bc:	003eeb06 	br	4027d6c <___vfprintf_internal_r+0x1c40>
 40281c0:	d8800b17 	ldw	r2,44(sp)
 40281c4:	15400044 	addi	r21,r2,1
 40281c8:	aa2b883a 	add	r21,r21,r8
 40281cc:	003fe906 	br	4028174 <___vfprintf_internal_r+0x2048>
 40281d0:	b005883a 	mov	r2,r22
 40281d4:	39c10304 	addi	r7,r7,1036
 40281d8:	003e9706 	br	4027c38 <___vfprintf_internal_r+0x1b0c>
 40281dc:	8025883a 	mov	r18,r16
 40281e0:	0038df06 	br	4026560 <___vfprintf_internal_r+0x434>
 40281e4:	00800084 	movi	r2,2
 40281e8:	d8801015 	stw	r2,64(sp)
 40281ec:	003e3606 	br	4027ac8 <___vfprintf_internal_r+0x199c>
 40281f0:	d8800617 	ldw	r2,24(sp)
 40281f4:	12000017 	ldw	r8,0(r2)
 40281f8:	10800104 	addi	r2,r2,4
 40281fc:	4000010e 	bge	r8,zero,4028204 <___vfprintf_internal_r+0x20d8>
 4028200:	023fffc4 	movi	r8,-1
 4028204:	bf000043 	ldbu	fp,1(r23)
 4028208:	d8800615 	stw	r2,24(sp)
 402820c:	182f883a 	mov	r23,r3
 4028210:	e2c03fcc 	andi	r11,fp,255
 4028214:	5ac0201c 	xori	r11,r11,128
 4028218:	5affe004 	addi	r11,r11,-128
 402821c:	00380f06 	br	402625c <___vfprintf_internal_r+0x130>

04028220 <__vfprintf_internal>:
 4028220:	00c00034 	movhi	r3,0
 4028224:	2005883a 	mov	r2,r4
 4028228:	19094e17 	ldw	r4,9528(r3)
 402822c:	300f883a 	mov	r7,r6
 4028230:	280d883a 	mov	r6,r5
 4028234:	100b883a 	mov	r5,r2
 4028238:	402612c1 	jmpi	402612c <___vfprintf_internal_r>

0402823c <__sbprintf>:
 402823c:	2880030b 	ldhu	r2,12(r5)
 4028240:	2b001917 	ldw	r12,100(r5)
 4028244:	2ac0038b 	ldhu	r11,14(r5)
 4028248:	2a800717 	ldw	r10,28(r5)
 402824c:	2a400917 	ldw	r9,36(r5)
 4028250:	defee204 	addi	sp,sp,-1144
 4028254:	da001a04 	addi	r8,sp,104
 4028258:	00c10004 	movi	r3,1024
 402825c:	dc011a15 	stw	r16,1128(sp)
 4028260:	10bfff4c 	andi	r2,r2,65533
 4028264:	2821883a 	mov	r16,r5
 4028268:	d80b883a 	mov	r5,sp
 402826c:	dc811c15 	stw	r18,1136(sp)
 4028270:	dc411b15 	stw	r17,1132(sp)
 4028274:	dfc11d15 	stw	ra,1140(sp)
 4028278:	2025883a 	mov	r18,r4
 402827c:	d880030d 	sth	r2,12(sp)
 4028280:	db001915 	stw	r12,100(sp)
 4028284:	dac0038d 	sth	r11,14(sp)
 4028288:	da800715 	stw	r10,28(sp)
 402828c:	da400915 	stw	r9,36(sp)
 4028290:	da000015 	stw	r8,0(sp)
 4028294:	da000415 	stw	r8,16(sp)
 4028298:	d8c00215 	stw	r3,8(sp)
 402829c:	d8c00515 	stw	r3,20(sp)
 40282a0:	d8000615 	stw	zero,24(sp)
 40282a4:	402612c0 	call	402612c <___vfprintf_internal_r>
 40282a8:	1023883a 	mov	r17,r2
 40282ac:	10000d0e 	bge	r2,zero,40282e4 <__sbprintf+0xa8>
 40282b0:	d880030b 	ldhu	r2,12(sp)
 40282b4:	1080100c 	andi	r2,r2,64
 40282b8:	10000326 	beq	r2,zero,40282c8 <__sbprintf+0x8c>
 40282bc:	8080030b 	ldhu	r2,12(r16)
 40282c0:	10801014 	ori	r2,r2,64
 40282c4:	8080030d 	sth	r2,12(r16)
 40282c8:	8805883a 	mov	r2,r17
 40282cc:	dfc11d17 	ldw	ra,1140(sp)
 40282d0:	dc811c17 	ldw	r18,1136(sp)
 40282d4:	dc411b17 	ldw	r17,1132(sp)
 40282d8:	dc011a17 	ldw	r16,1128(sp)
 40282dc:	dec11e04 	addi	sp,sp,1144
 40282e0:	f800283a 	ret
 40282e4:	d80b883a 	mov	r5,sp
 40282e8:	9009883a 	mov	r4,r18
 40282ec:	40238280 	call	4023828 <_fflush_r>
 40282f0:	103fef26 	beq	r2,zero,40282b0 <__sbprintf+0x74>
 40282f4:	047fffc4 	movi	r17,-1
 40282f8:	003fed06 	br	40282b0 <__sbprintf+0x74>

040282fc <__swbuf_r>:
 40282fc:	defffb04 	addi	sp,sp,-20
 4028300:	dcc00315 	stw	r19,12(sp)
 4028304:	dc400115 	stw	r17,4(sp)
 4028308:	dc000015 	stw	r16,0(sp)
 402830c:	dfc00415 	stw	ra,16(sp)
 4028310:	dc800215 	stw	r18,8(sp)
 4028314:	2027883a 	mov	r19,r4
 4028318:	2823883a 	mov	r17,r5
 402831c:	3021883a 	mov	r16,r6
 4028320:	20000226 	beq	r4,zero,402832c <__swbuf_r+0x30>
 4028324:	20800e17 	ldw	r2,56(r4)
 4028328:	10003e26 	beq	r2,zero,4028424 <__swbuf_r+0x128>
 402832c:	80800617 	ldw	r2,24(r16)
 4028330:	80c0030b 	ldhu	r3,12(r16)
 4028334:	80800215 	stw	r2,8(r16)
 4028338:	1880020c 	andi	r2,r3,8
 402833c:	10001f26 	beq	r2,zero,40283bc <__swbuf_r+0xc0>
 4028340:	80800417 	ldw	r2,16(r16)
 4028344:	10001d26 	beq	r2,zero,40283bc <__swbuf_r+0xc0>
 4028348:	1948000c 	andi	r5,r3,8192
 402834c:	8c803fcc 	andi	r18,r17,255
 4028350:	28002326 	beq	r5,zero,40283e0 <__swbuf_r+0xe4>
 4028354:	80c00017 	ldw	r3,0(r16)
 4028358:	81000517 	ldw	r4,20(r16)
 402835c:	1885c83a 	sub	r2,r3,r2
 4028360:	1100290e 	bge	r2,r4,4028408 <__swbuf_r+0x10c>
 4028364:	10800044 	addi	r2,r2,1
 4028368:	81400217 	ldw	r5,8(r16)
 402836c:	19000044 	addi	r4,r3,1
 4028370:	81000015 	stw	r4,0(r16)
 4028374:	297fffc4 	addi	r5,r5,-1
 4028378:	81400215 	stw	r5,8(r16)
 402837c:	1c400005 	stb	r17,0(r3)
 4028380:	80c00517 	ldw	r3,20(r16)
 4028384:	18802926 	beq	r3,r2,402842c <__swbuf_r+0x130>
 4028388:	8080030b 	ldhu	r2,12(r16)
 402838c:	1080004c 	andi	r2,r2,1
 4028390:	10000226 	beq	r2,zero,402839c <__swbuf_r+0xa0>
 4028394:	90800298 	cmpnei	r2,r18,10
 4028398:	10002426 	beq	r2,zero,402842c <__swbuf_r+0x130>
 402839c:	9005883a 	mov	r2,r18
 40283a0:	dfc00417 	ldw	ra,16(sp)
 40283a4:	dcc00317 	ldw	r19,12(sp)
 40283a8:	dc800217 	ldw	r18,8(sp)
 40283ac:	dc400117 	ldw	r17,4(sp)
 40283b0:	dc000017 	ldw	r16,0(sp)
 40283b4:	dec00504 	addi	sp,sp,20
 40283b8:	f800283a 	ret
 40283bc:	800b883a 	mov	r5,r16
 40283c0:	9809883a 	mov	r4,r19
 40283c4:	40284c00 	call	40284c0 <__swsetup_r>
 40283c8:	10001c1e 	bne	r2,zero,402843c <__swbuf_r+0x140>
 40283cc:	80c0030b 	ldhu	r3,12(r16)
 40283d0:	80800417 	ldw	r2,16(r16)
 40283d4:	8c803fcc 	andi	r18,r17,255
 40283d8:	1948000c 	andi	r5,r3,8192
 40283dc:	283fdd1e 	bne	r5,zero,4028354 <__swbuf_r+0x58>
 40283e0:	81001917 	ldw	r4,100(r16)
 40283e4:	18c80014 	ori	r3,r3,8192
 40283e8:	0177ffc4 	movi	r5,-8193
 40283ec:	2148703a 	and	r4,r4,r5
 40283f0:	80c0030d 	sth	r3,12(r16)
 40283f4:	80c00017 	ldw	r3,0(r16)
 40283f8:	81001915 	stw	r4,100(r16)
 40283fc:	81000517 	ldw	r4,20(r16)
 4028400:	1885c83a 	sub	r2,r3,r2
 4028404:	113fd716 	blt	r2,r4,4028364 <__swbuf_r+0x68>
 4028408:	800b883a 	mov	r5,r16
 402840c:	9809883a 	mov	r4,r19
 4028410:	40238280 	call	4023828 <_fflush_r>
 4028414:	1000091e 	bne	r2,zero,402843c <__swbuf_r+0x140>
 4028418:	80c00017 	ldw	r3,0(r16)
 402841c:	00800044 	movi	r2,1
 4028420:	003fd106 	br	4028368 <__swbuf_r+0x6c>
 4028424:	4023c600 	call	4023c60 <__sinit>
 4028428:	003fc006 	br	402832c <__swbuf_r+0x30>
 402842c:	800b883a 	mov	r5,r16
 4028430:	9809883a 	mov	r4,r19
 4028434:	40238280 	call	4023828 <_fflush_r>
 4028438:	103fd826 	beq	r2,zero,402839c <__swbuf_r+0xa0>
 402843c:	04bfffc4 	movi	r18,-1
 4028440:	003fd606 	br	402839c <__swbuf_r+0xa0>

04028444 <__swbuf>:
 4028444:	00c00034 	movhi	r3,0
 4028448:	2005883a 	mov	r2,r4
 402844c:	19094e17 	ldw	r4,9528(r3)
 4028450:	280d883a 	mov	r6,r5
 4028454:	100b883a 	mov	r5,r2
 4028458:	40282fc1 	jmpi	40282fc <__swbuf_r>

0402845c <_write_r>:
 402845c:	2807883a 	mov	r3,r5
 4028460:	defffe04 	addi	sp,sp,-8
 4028464:	dc000015 	stw	r16,0(sp)
 4028468:	300b883a 	mov	r5,r6
 402846c:	00800034 	movhi	r2,0
 4028470:	380d883a 	mov	r6,r7
 4028474:	2021883a 	mov	r16,r4
 4028478:	1809883a 	mov	r4,r3
 402847c:	dfc00115 	stw	ra,4(sp)
 4028480:	10095d15 	stw	zero,9588(r2)
 4028484:	4031d240 	call	4031d24 <write>
 4028488:	10ffffd8 	cmpnei	r3,r2,-1
 402848c:	18000426 	beq	r3,zero,40284a0 <_write_r+0x44>
 4028490:	dfc00117 	ldw	ra,4(sp)
 4028494:	dc000017 	ldw	r16,0(sp)
 4028498:	dec00204 	addi	sp,sp,8
 402849c:	f800283a 	ret
 40284a0:	00c00034 	movhi	r3,0
 40284a4:	18c95d17 	ldw	r3,9588(r3)
 40284a8:	183ff926 	beq	r3,zero,4028490 <_write_r+0x34>
 40284ac:	80c00015 	stw	r3,0(r16)
 40284b0:	dfc00117 	ldw	ra,4(sp)
 40284b4:	dc000017 	ldw	r16,0(sp)
 40284b8:	dec00204 	addi	sp,sp,8
 40284bc:	f800283a 	ret

040284c0 <__swsetup_r>:
 40284c0:	00800034 	movhi	r2,0
 40284c4:	10894e17 	ldw	r2,9528(r2)
 40284c8:	defffd04 	addi	sp,sp,-12
 40284cc:	dc400115 	stw	r17,4(sp)
 40284d0:	dc000015 	stw	r16,0(sp)
 40284d4:	dfc00215 	stw	ra,8(sp)
 40284d8:	2023883a 	mov	r17,r4
 40284dc:	2821883a 	mov	r16,r5
 40284e0:	10000226 	beq	r2,zero,40284ec <__swsetup_r+0x2c>
 40284e4:	10c00e17 	ldw	r3,56(r2)
 40284e8:	18001f26 	beq	r3,zero,4028568 <__swsetup_r+0xa8>
 40284ec:	8180030b 	ldhu	r6,12(r16)
 40284f0:	30c0020c 	andi	r3,r6,8
 40284f4:	3005883a 	mov	r2,r6
 40284f8:	18002126 	beq	r3,zero,4028580 <__swsetup_r+0xc0>
 40284fc:	80c00417 	ldw	r3,16(r16)
 4028500:	18002826 	beq	r3,zero,40285a4 <__swsetup_r+0xe4>
 4028504:	1100004c 	andi	r4,r2,1
 4028508:	20000b1e 	bne	r4,zero,4028538 <__swsetup_r+0x78>
 402850c:	1100008c 	andi	r4,r2,2
 4028510:	20002e1e 	bne	r4,zero,40285cc <__swsetup_r+0x10c>
 4028514:	81000517 	ldw	r4,20(r16)
 4028518:	81000215 	stw	r4,8(r16)
 402851c:	18000b26 	beq	r3,zero,402854c <__swsetup_r+0x8c>
 4028520:	0005883a 	mov	r2,zero
 4028524:	dfc00217 	ldw	ra,8(sp)
 4028528:	dc400117 	ldw	r17,4(sp)
 402852c:	dc000017 	ldw	r16,0(sp)
 4028530:	dec00304 	addi	sp,sp,12
 4028534:	f800283a 	ret
 4028538:	81000517 	ldw	r4,20(r16)
 402853c:	80000215 	stw	zero,8(r16)
 4028540:	0109c83a 	sub	r4,zero,r4
 4028544:	81000615 	stw	r4,24(r16)
 4028548:	183ff51e 	bne	r3,zero,4028520 <__swsetup_r+0x60>
 402854c:	10c0200c 	andi	r3,r2,128
 4028550:	0005883a 	mov	r2,zero
 4028554:	183ff326 	beq	r3,zero,4028524 <__swsetup_r+0x64>
 4028558:	31801014 	ori	r6,r6,64
 402855c:	8180030d 	sth	r6,12(r16)
 4028560:	00bfffc4 	movi	r2,-1
 4028564:	003fef06 	br	4028524 <__swsetup_r+0x64>
 4028568:	1009883a 	mov	r4,r2
 402856c:	4023c600 	call	4023c60 <__sinit>
 4028570:	8180030b 	ldhu	r6,12(r16)
 4028574:	30c0020c 	andi	r3,r6,8
 4028578:	3005883a 	mov	r2,r6
 402857c:	183fdf1e 	bne	r3,zero,40284fc <__swsetup_r+0x3c>
 4028580:	3080040c 	andi	r2,r6,16
 4028584:	10002126 	beq	r2,zero,402860c <__swsetup_r+0x14c>
 4028588:	3080010c 	andi	r2,r6,4
 402858c:	1000111e 	bne	r2,zero,40285d4 <__swsetup_r+0x114>
 4028590:	80c00417 	ldw	r3,16(r16)
 4028594:	30800214 	ori	r2,r6,8
 4028598:	8080030d 	sth	r2,12(r16)
 402859c:	100d883a 	mov	r6,r2
 40285a0:	183fd81e 	bne	r3,zero,4028504 <__swsetup_r+0x44>
 40285a4:	1100a00c 	andi	r4,r2,640
 40285a8:	21008020 	cmpeqi	r4,r4,512
 40285ac:	203fd51e 	bne	r4,zero,4028504 <__swsetup_r+0x44>
 40285b0:	800b883a 	mov	r5,r16
 40285b4:	8809883a 	mov	r4,r17
 40285b8:	4024c480 	call	4024c48 <__smakebuf_r>
 40285bc:	8180030b 	ldhu	r6,12(r16)
 40285c0:	80c00417 	ldw	r3,16(r16)
 40285c4:	3005883a 	mov	r2,r6
 40285c8:	003fce06 	br	4028504 <__swsetup_r+0x44>
 40285cc:	0009883a 	mov	r4,zero
 40285d0:	003fd106 	br	4028518 <__swsetup_r+0x58>
 40285d4:	81400c17 	ldw	r5,48(r16)
 40285d8:	28000626 	beq	r5,zero,40285f4 <__swsetup_r+0x134>
 40285dc:	80801004 	addi	r2,r16,64
 40285e0:	28800326 	beq	r5,r2,40285f0 <__swsetup_r+0x130>
 40285e4:	8809883a 	mov	r4,r17
 40285e8:	4023fbc0 	call	4023fbc <_free_r>
 40285ec:	8180030b 	ldhu	r6,12(r16)
 40285f0:	80000c15 	stw	zero,48(r16)
 40285f4:	80c00417 	ldw	r3,16(r16)
 40285f8:	00bff6c4 	movi	r2,-37
 40285fc:	118c703a 	and	r6,r2,r6
 4028600:	80000115 	stw	zero,4(r16)
 4028604:	80c00015 	stw	r3,0(r16)
 4028608:	003fe206 	br	4028594 <__swsetup_r+0xd4>
 402860c:	00800244 	movi	r2,9
 4028610:	88800015 	stw	r2,0(r17)
 4028614:	31801014 	ori	r6,r6,64
 4028618:	8180030d 	sth	r6,12(r16)
 402861c:	00bfffc4 	movi	r2,-1
 4028620:	003fc006 	br	4028524 <__swsetup_r+0x64>

04028624 <_close_r>:
 4028624:	defffe04 	addi	sp,sp,-8
 4028628:	dc000015 	stw	r16,0(sp)
 402862c:	00800034 	movhi	r2,0
 4028630:	2021883a 	mov	r16,r4
 4028634:	2809883a 	mov	r4,r5
 4028638:	dfc00115 	stw	ra,4(sp)
 402863c:	10095d15 	stw	zero,9588(r2)
 4028640:	4030f900 	call	4030f90 <close>
 4028644:	10ffffd8 	cmpnei	r3,r2,-1
 4028648:	18000426 	beq	r3,zero,402865c <_close_r+0x38>
 402864c:	dfc00117 	ldw	ra,4(sp)
 4028650:	dc000017 	ldw	r16,0(sp)
 4028654:	dec00204 	addi	sp,sp,8
 4028658:	f800283a 	ret
 402865c:	00c00034 	movhi	r3,0
 4028660:	18c95d17 	ldw	r3,9588(r3)
 4028664:	183ff926 	beq	r3,zero,402864c <_close_r+0x28>
 4028668:	80c00015 	stw	r3,0(r16)
 402866c:	dfc00117 	ldw	ra,4(sp)
 4028670:	dc000017 	ldw	r16,0(sp)
 4028674:	dec00204 	addi	sp,sp,8
 4028678:	f800283a 	ret

0402867c <quorem>:
 402867c:	defff504 	addi	sp,sp,-44
 4028680:	dc800315 	stw	r18,12(sp)
 4028684:	20800417 	ldw	r2,16(r4)
 4028688:	2c800417 	ldw	r18,16(r5)
 402868c:	dfc00a15 	stw	ra,40(sp)
 4028690:	df000915 	stw	fp,36(sp)
 4028694:	ddc00815 	stw	r23,32(sp)
 4028698:	dd800715 	stw	r22,28(sp)
 402869c:	dd400615 	stw	r21,24(sp)
 40286a0:	dd000515 	stw	r20,20(sp)
 40286a4:	dcc00415 	stw	r19,16(sp)
 40286a8:	dc400215 	stw	r17,8(sp)
 40286ac:	dc000115 	stw	r16,4(sp)
 40286b0:	14806f16 	blt	r2,r18,4028870 <quorem+0x1f4>
 40286b4:	94bfffc4 	addi	r18,r18,-1
 40286b8:	902c90ba 	slli	r22,r18,2
 40286bc:	2c000504 	addi	r16,r5,20
 40286c0:	25000504 	addi	r20,r4,20
 40286c4:	85a7883a 	add	r19,r16,r22
 40286c8:	9f000017 	ldw	fp,0(r19)
 40286cc:	a5ad883a 	add	r22,r20,r22
 40286d0:	202b883a 	mov	r21,r4
 40286d4:	b1000017 	ldw	r4,0(r22)
 40286d8:	e7000044 	addi	fp,fp,1
 40286dc:	282f883a 	mov	r23,r5
 40286e0:	e00b883a 	mov	r5,fp
 40286e4:	d9000015 	stw	r4,0(sp)
 40286e8:	40225a40 	call	40225a4 <__udivsi3>
 40286ec:	d9000017 	ldw	r4,0(sp)
 40286f0:	1023883a 	mov	r17,r2
 40286f4:	27002a36 	bltu	r4,fp,40287a0 <quorem+0x124>
 40286f8:	800b883a 	mov	r5,r16
 40286fc:	a009883a 	mov	r4,r20
 4028700:	0013883a 	mov	r9,zero
 4028704:	0007883a 	mov	r3,zero
 4028708:	2a000017 	ldw	r8,0(r5)
 402870c:	21800017 	ldw	r6,0(r4)
 4028710:	21000104 	addi	r4,r4,4
 4028714:	40bfffcc 	andi	r2,r8,65535
 4028718:	1445383a 	mul	r2,r2,r17
 402871c:	400ed43a 	srli	r7,r8,16
 4028720:	32bfffcc 	andi	r10,r6,65535
 4028724:	1245883a 	add	r2,r2,r9
 4028728:	1012d43a 	srli	r9,r2,16
 402872c:	123fffcc 	andi	r8,r2,65535
 4028730:	3c4f383a 	mul	r7,r7,r17
 4028734:	1a07c83a 	sub	r3,r3,r8
 4028738:	1a91883a 	add	r8,r3,r10
 402873c:	3006d43a 	srli	r3,r6,16
 4028740:	4005d43a 	srai	r2,r8,16
 4028744:	3a4f883a 	add	r7,r7,r9
 4028748:	39bfffcc 	andi	r6,r7,65535
 402874c:	1987c83a 	sub	r3,r3,r6
 4028750:	1887883a 	add	r3,r3,r2
 4028754:	1804943a 	slli	r2,r3,16
 4028758:	423fffcc 	andi	r8,r8,65535
 402875c:	29400104 	addi	r5,r5,4
 4028760:	1210b03a 	or	r8,r2,r8
 4028764:	223fff15 	stw	r8,-4(r4)
 4028768:	3812d43a 	srli	r9,r7,16
 402876c:	1807d43a 	srai	r3,r3,16
 4028770:	997fe52e 	bgeu	r19,r5,4028708 <quorem+0x8c>
 4028774:	b0800017 	ldw	r2,0(r22)
 4028778:	1000091e 	bne	r2,zero,40287a0 <quorem+0x124>
 402877c:	b5bfff04 	addi	r22,r22,-4
 4028780:	a5800336 	bltu	r20,r22,4028790 <quorem+0x114>
 4028784:	00000506 	br	402879c <quorem+0x120>
 4028788:	94bfffc4 	addi	r18,r18,-1
 402878c:	a580032e 	bgeu	r20,r22,402879c <quorem+0x120>
 4028790:	b0800017 	ldw	r2,0(r22)
 4028794:	b5bfff04 	addi	r22,r22,-4
 4028798:	103ffb26 	beq	r2,zero,4028788 <quorem+0x10c>
 402879c:	ac800415 	stw	r18,16(r21)
 40287a0:	b80b883a 	mov	r5,r23
 40287a4:	a809883a 	mov	r4,r21
 40287a8:	402b2280 	call	402b228 <__mcmp>
 40287ac:	10002316 	blt	r2,zero,402883c <quorem+0x1c0>
 40287b0:	8c400044 	addi	r17,r17,1
 40287b4:	a00d883a 	mov	r6,r20
 40287b8:	0007883a 	mov	r3,zero
 40287bc:	81000017 	ldw	r4,0(r16)
 40287c0:	31400017 	ldw	r5,0(r6)
 40287c4:	31800104 	addi	r6,r6,4
 40287c8:	20bfffcc 	andi	r2,r4,65535
 40287cc:	1887c83a 	sub	r3,r3,r2
 40287d0:	28bfffcc 	andi	r2,r5,65535
 40287d4:	1885883a 	add	r2,r3,r2
 40287d8:	2008d43a 	srli	r4,r4,16
 40287dc:	2806d43a 	srli	r3,r5,16
 40287e0:	100fd43a 	srai	r7,r2,16
 40287e4:	117fffcc 	andi	r5,r2,65535
 40287e8:	1907c83a 	sub	r3,r3,r4
 40287ec:	19c7883a 	add	r3,r3,r7
 40287f0:	1804943a 	slli	r2,r3,16
 40287f4:	84000104 	addi	r16,r16,4
 40287f8:	1807d43a 	srai	r3,r3,16
 40287fc:	1144b03a 	or	r2,r2,r5
 4028800:	30bfff15 	stw	r2,-4(r6)
 4028804:	9c3fed2e 	bgeu	r19,r16,40287bc <quorem+0x140>
 4028808:	900490ba 	slli	r2,r18,2
 402880c:	a085883a 	add	r2,r20,r2
 4028810:	10c00017 	ldw	r3,0(r2)
 4028814:	1800091e 	bne	r3,zero,402883c <quorem+0x1c0>
 4028818:	10bfff04 	addi	r2,r2,-4
 402881c:	a0800336 	bltu	r20,r2,402882c <quorem+0x1b0>
 4028820:	00000506 	br	4028838 <quorem+0x1bc>
 4028824:	94bfffc4 	addi	r18,r18,-1
 4028828:	a080032e 	bgeu	r20,r2,4028838 <quorem+0x1bc>
 402882c:	10c00017 	ldw	r3,0(r2)
 4028830:	10bfff04 	addi	r2,r2,-4
 4028834:	183ffb26 	beq	r3,zero,4028824 <quorem+0x1a8>
 4028838:	ac800415 	stw	r18,16(r21)
 402883c:	8805883a 	mov	r2,r17
 4028840:	dfc00a17 	ldw	ra,40(sp)
 4028844:	df000917 	ldw	fp,36(sp)
 4028848:	ddc00817 	ldw	r23,32(sp)
 402884c:	dd800717 	ldw	r22,28(sp)
 4028850:	dd400617 	ldw	r21,24(sp)
 4028854:	dd000517 	ldw	r20,20(sp)
 4028858:	dcc00417 	ldw	r19,16(sp)
 402885c:	dc800317 	ldw	r18,12(sp)
 4028860:	dc400217 	ldw	r17,8(sp)
 4028864:	dc000117 	ldw	r16,4(sp)
 4028868:	dec00b04 	addi	sp,sp,44
 402886c:	f800283a 	ret
 4028870:	0005883a 	mov	r2,zero
 4028874:	003ff206 	br	4028840 <quorem+0x1c4>

04028878 <_dtoa_r>:
 4028878:	20801017 	ldw	r2,64(r4)
 402887c:	deffe204 	addi	sp,sp,-120
 4028880:	ddc01b15 	stw	r23,108(sp)
 4028884:	dcc01715 	stw	r19,92(sp)
 4028888:	dc801615 	stw	r18,88(sp)
 402888c:	dc401515 	stw	r17,84(sp)
 4028890:	dc001415 	stw	r16,80(sp)
 4028894:	dfc01d15 	stw	ra,116(sp)
 4028898:	df001c15 	stw	fp,112(sp)
 402889c:	dd801a15 	stw	r22,104(sp)
 40288a0:	dd401915 	stw	r21,100(sp)
 40288a4:	dd001815 	stw	r20,96(sp)
 40288a8:	d9c00215 	stw	r7,8(sp)
 40288ac:	dc002017 	ldw	r16,128(sp)
 40288b0:	202f883a 	mov	r23,r4
 40288b4:	3025883a 	mov	r18,r6
 40288b8:	2827883a 	mov	r19,r5
 40288bc:	3023883a 	mov	r17,r6
 40288c0:	10000826 	beq	r2,zero,40288e4 <_dtoa_r+0x6c>
 40288c4:	21801117 	ldw	r6,68(r4)
 40288c8:	00c00044 	movi	r3,1
 40288cc:	100b883a 	mov	r5,r2
 40288d0:	1986983a 	sll	r3,r3,r6
 40288d4:	11800115 	stw	r6,4(r2)
 40288d8:	10c00215 	stw	r3,8(r2)
 40288dc:	402a8ac0 	call	402a8ac <_Bfree>
 40288e0:	b8001015 	stw	zero,64(r23)
 40288e4:	90018816 	blt	r18,zero,4028f08 <_dtoa_r+0x690>
 40288e8:	80000015 	stw	zero,0(r16)
 40288ec:	909ffc2c 	andhi	r2,r18,32752
 40288f0:	00dffc34 	movhi	r3,32752
 40288f4:	10c18d26 	beq	r2,r3,4028f2c <_dtoa_r+0x6b4>
 40288f8:	000d883a 	mov	r6,zero
 40288fc:	000f883a 	mov	r7,zero
 4028900:	9809883a 	mov	r4,r19
 4028904:	880b883a 	mov	r5,r17
 4028908:	402fbc00 	call	402fbc0 <__eqdf2>
 402890c:	1000191e 	bne	r2,zero,4028974 <_dtoa_r+0xfc>
 4028910:	d8c01f17 	ldw	r3,124(sp)
 4028914:	00800044 	movi	r2,1
 4028918:	18800015 	stw	r2,0(r3)
 402891c:	d8802117 	ldw	r2,132(sp)
 4028920:	1002f926 	beq	r2,zero,4029508 <_dtoa_r+0xc90>
 4028924:	d9002117 	ldw	r4,132(sp)
 4028928:	00800034 	movhi	r2,0
 402892c:	10810244 	addi	r2,r2,1033
 4028930:	00c00034 	movhi	r3,0
 4028934:	20800015 	stw	r2,0(r4)
 4028938:	18810204 	addi	r2,r3,1032
 402893c:	d8800115 	stw	r2,4(sp)
 4028940:	d8800117 	ldw	r2,4(sp)
 4028944:	dfc01d17 	ldw	ra,116(sp)
 4028948:	df001c17 	ldw	fp,112(sp)
 402894c:	ddc01b17 	ldw	r23,108(sp)
 4028950:	dd801a17 	ldw	r22,104(sp)
 4028954:	dd401917 	ldw	r21,100(sp)
 4028958:	dd001817 	ldw	r20,96(sp)
 402895c:	dcc01717 	ldw	r19,92(sp)
 4028960:	dc801617 	ldw	r18,88(sp)
 4028964:	dc401517 	ldw	r17,84(sp)
 4028968:	dc001417 	ldw	r16,80(sp)
 402896c:	dec01e04 	addi	sp,sp,120
 4028970:	f800283a 	ret
 4028974:	d8801204 	addi	r2,sp,72
 4028978:	9020d53a 	srli	r16,r18,20
 402897c:	d8800015 	stw	r2,0(sp)
 4028980:	d9c01304 	addi	r7,sp,76
 4028984:	980b883a 	mov	r5,r19
 4028988:	880d883a 	mov	r6,r17
 402898c:	b809883a 	mov	r4,r23
 4028990:	402b6100 	call	402b610 <__d2b>
 4028994:	1039883a 	mov	fp,r2
 4028998:	8001771e 	bne	r16,zero,4028f78 <_dtoa_r+0x700>
 402899c:	dd001217 	ldw	r20,72(sp)
 40289a0:	dc001317 	ldw	r16,76(sp)
 40289a4:	a421883a 	add	r16,r20,r16
 40289a8:	80810c84 	addi	r2,r16,1074
 40289ac:	10c00850 	cmplti	r3,r2,33
 40289b0:	1802e51e 	bne	r3,zero,4029548 <_dtoa_r+0xcd0>
 40289b4:	01001004 	movi	r4,64
 40289b8:	2085c83a 	sub	r2,r4,r2
 40289bc:	81010484 	addi	r4,r16,1042
 40289c0:	90a4983a 	sll	r18,r18,r2
 40289c4:	9908d83a 	srl	r4,r19,r4
 40289c8:	9108b03a 	or	r4,r18,r4
 40289cc:	4030ec40 	call	4030ec4 <__floatunsidf>
 40289d0:	1009883a 	mov	r4,r2
 40289d4:	017f8434 	movhi	r5,65040
 40289d8:	00800044 	movi	r2,1
 40289dc:	194b883a 	add	r5,r3,r5
 40289e0:	843fffc4 	addi	r16,r16,-1
 40289e4:	d8800a15 	stw	r2,40(sp)
 40289e8:	000d883a 	mov	r6,zero
 40289ec:	01cffe34 	movhi	r7,16376
 40289f0:	40304840 	call	4030484 <__subdf3>
 40289f4:	0198dbf4 	movhi	r6,25455
 40289f8:	01cff4f4 	movhi	r7,16339
 40289fc:	3190d844 	addi	r6,r6,17249
 4028a00:	39e1e9c4 	addi	r7,r7,-30809
 4028a04:	1009883a 	mov	r4,r2
 4028a08:	180b883a 	mov	r5,r3
 4028a0c:	402fe100 	call	402fe10 <__muldf3>
 4028a10:	01a2d874 	movhi	r6,35681
 4028a14:	01cff1f4 	movhi	r7,16327
 4028a18:	31b22cc4 	addi	r6,r6,-14157
 4028a1c:	39e28a04 	addi	r7,r7,-30168
 4028a20:	180b883a 	mov	r5,r3
 4028a24:	1009883a 	mov	r4,r2
 4028a28:	402ea740 	call	402ea74 <__adddf3>
 4028a2c:	8009883a 	mov	r4,r16
 4028a30:	102b883a 	mov	r21,r2
 4028a34:	1825883a 	mov	r18,r3
 4028a38:	4030e0c0 	call	4030e0c <__floatsidf>
 4028a3c:	019427f4 	movhi	r6,20639
 4028a40:	01cff4f4 	movhi	r7,16339
 4028a44:	319e7ec4 	addi	r6,r6,31227
 4028a48:	39d104c4 	addi	r7,r7,17427
 4028a4c:	1009883a 	mov	r4,r2
 4028a50:	180b883a 	mov	r5,r3
 4028a54:	402fe100 	call	402fe10 <__muldf3>
 4028a58:	100d883a 	mov	r6,r2
 4028a5c:	180f883a 	mov	r7,r3
 4028a60:	a809883a 	mov	r4,r21
 4028a64:	900b883a 	mov	r5,r18
 4028a68:	402ea740 	call	402ea74 <__adddf3>
 4028a6c:	1009883a 	mov	r4,r2
 4028a70:	180b883a 	mov	r5,r3
 4028a74:	1025883a 	mov	r18,r2
 4028a78:	182d883a 	mov	r22,r3
 4028a7c:	4030d8c0 	call	4030d8c <__fixdfsi>
 4028a80:	000d883a 	mov	r6,zero
 4028a84:	000f883a 	mov	r7,zero
 4028a88:	9009883a 	mov	r4,r18
 4028a8c:	b00b883a 	mov	r5,r22
 4028a90:	102b883a 	mov	r21,r2
 4028a94:	d8800315 	stw	r2,12(sp)
 4028a98:	402fd280 	call	402fd28 <__ledf2>
 4028a9c:	10028f16 	blt	r2,zero,40294dc <_dtoa_r+0xc64>
 4028aa0:	dc800317 	ldw	r18,12(sp)
 4028aa4:	a421c83a 	sub	r16,r20,r16
 4028aa8:	85bfffc4 	addi	r22,r16,-1
 4028aac:	908005e8 	cmpgeui	r2,r18,23
 4028ab0:	1002821e 	bne	r2,zero,40294bc <_dtoa_r+0xc44>
 4028ab4:	900690fa 	slli	r3,r18,3
 4028ab8:	00800034 	movhi	r2,0
 4028abc:	10814904 	addi	r2,r2,1316
 4028ac0:	10c5883a 	add	r2,r2,r3
 4028ac4:	11800017 	ldw	r6,0(r2)
 4028ac8:	11c00117 	ldw	r7,4(r2)
 4028acc:	9809883a 	mov	r4,r19
 4028ad0:	880b883a 	mov	r5,r17
 4028ad4:	402fd280 	call	402fd28 <__ledf2>
 4028ad8:	1002550e 	bge	r2,zero,4029430 <_dtoa_r+0xbb8>
 4028adc:	90bfffc4 	addi	r2,r18,-1
 4028ae0:	d8800315 	stw	r2,12(sp)
 4028ae4:	d8000915 	stw	zero,36(sp)
 4028ae8:	b0027716 	blt	r22,zero,40294c8 <_dtoa_r+0xc50>
 4028aec:	d8000615 	stw	zero,24(sp)
 4028af0:	d8800317 	ldw	r2,12(sp)
 4028af4:	1002510e 	bge	r2,zero,402943c <_dtoa_r+0xbc4>
 4028af8:	d8800317 	ldw	r2,12(sp)
 4028afc:	d8c00617 	ldw	r3,24(sp)
 4028b00:	d8000315 	stw	zero,12(sp)
 4028b04:	d8800415 	stw	r2,16(sp)
 4028b08:	1887c83a 	sub	r3,r3,r2
 4028b0c:	d8c00615 	stw	r3,24(sp)
 4028b10:	0087c83a 	sub	r3,zero,r2
 4028b14:	d8c00815 	stw	r3,32(sp)
 4028b18:	d8c00217 	ldw	r3,8(sp)
 4028b1c:	188002a8 	cmpgeui	r2,r3,10
 4028b20:	10024d1e 	bne	r2,zero,4029458 <_dtoa_r+0xbe0>
 4028b24:	18800190 	cmplti	r2,r3,6
 4028b28:	10028b1e 	bne	r2,zero,4029558 <_dtoa_r+0xce0>
 4028b2c:	18bfff04 	addi	r2,r3,-4
 4028b30:	d8800215 	stw	r2,8(sp)
 4028b34:	0021883a 	mov	r16,zero
 4028b38:	d8c00217 	ldw	r3,8(sp)
 4028b3c:	18800120 	cmpeqi	r2,r3,4
 4028b40:	10035d1e 	bne	r2,zero,40298b8 <_dtoa_r+0x1040>
 4028b44:	18800160 	cmpeqi	r2,r3,5
 4028b48:	10031b1e 	bne	r2,zero,40297b8 <_dtoa_r+0xf40>
 4028b4c:	188000a0 	cmpeqi	r2,r3,2
 4028b50:	10024d26 	beq	r2,zero,4029488 <_dtoa_r+0xc10>
 4028b54:	d8000715 	stw	zero,28(sp)
 4028b58:	d8801e17 	ldw	r2,120(sp)
 4028b5c:	0083260e 	bge	zero,r2,40297f8 <_dtoa_r+0xf80>
 4028b60:	d8800b15 	stw	r2,44(sp)
 4028b64:	d8800515 	stw	r2,20(sp)
 4028b68:	100d883a 	mov	r6,r2
 4028b6c:	b8001115 	stw	zero,68(r23)
 4028b70:	30800610 	cmplti	r2,r6,24
 4028b74:	1004f11e 	bne	r2,zero,4029f3c <_dtoa_r+0x16c4>
 4028b78:	00c00044 	movi	r3,1
 4028b7c:	00800104 	movi	r2,4
 4028b80:	1085883a 	add	r2,r2,r2
 4028b84:	11000504 	addi	r4,r2,20
 4028b88:	180b883a 	mov	r5,r3
 4028b8c:	18c00044 	addi	r3,r3,1
 4028b90:	313ffb2e 	bgeu	r6,r4,4028b80 <_dtoa_r+0x308>
 4028b94:	b9401115 	stw	r5,68(r23)
 4028b98:	b809883a 	mov	r4,r23
 4028b9c:	402a8080 	call	402a808 <_Balloc>
 4028ba0:	d8800115 	stw	r2,4(sp)
 4028ba4:	1004de26 	beq	r2,zero,4029f20 <_dtoa_r+0x16a8>
 4028ba8:	d8800117 	ldw	r2,4(sp)
 4028bac:	b8801015 	stw	r2,64(r23)
 4028bb0:	d8800517 	ldw	r2,20(sp)
 4028bb4:	108003e8 	cmpgeui	r2,r2,15
 4028bb8:	1001021e 	bne	r2,zero,4028fc4 <_dtoa_r+0x74c>
 4028bbc:	80010126 	beq	r16,zero,4028fc4 <_dtoa_r+0x74c>
 4028bc0:	d9000417 	ldw	r4,16(sp)
 4028bc4:	01038b0e 	bge	zero,r4,40299f4 <_dtoa_r+0x117c>
 4028bc8:	208003cc 	andi	r2,r4,15
 4028bcc:	100690fa 	slli	r3,r2,3
 4028bd0:	2029d13a 	srai	r20,r4,4
 4028bd4:	00800034 	movhi	r2,0
 4028bd8:	10814904 	addi	r2,r2,1316
 4028bdc:	10c5883a 	add	r2,r2,r3
 4028be0:	a0c0040c 	andi	r3,r20,16
 4028be4:	12800017 	ldw	r10,0(r2)
 4028be8:	12400117 	ldw	r9,4(r2)
 4028bec:	18032c26 	beq	r3,zero,40298a0 <_dtoa_r+0x1028>
 4028bf0:	00800034 	movhi	r2,0
 4028bf4:	10813f04 	addi	r2,r2,1276
 4028bf8:	11800817 	ldw	r6,32(r2)
 4028bfc:	11c00917 	ldw	r7,36(r2)
 4028c00:	9809883a 	mov	r4,r19
 4028c04:	880b883a 	mov	r5,r17
 4028c08:	da400e15 	stw	r9,56(sp)
 4028c0c:	da800d15 	stw	r10,52(sp)
 4028c10:	402f3640 	call	402f364 <__divdf3>
 4028c14:	da800d17 	ldw	r10,52(sp)
 4028c18:	da400e17 	ldw	r9,56(sp)
 4028c1c:	a50003cc 	andi	r20,r20,15
 4028c20:	d8800c15 	stw	r2,48(sp)
 4028c24:	1825883a 	mov	r18,r3
 4028c28:	054000c4 	movi	r21,3
 4028c2c:	a0001126 	beq	r20,zero,4028c74 <_dtoa_r+0x3fc>
 4028c30:	04000034 	movhi	r16,0
 4028c34:	84013f04 	addi	r16,r16,1276
 4028c38:	5009883a 	mov	r4,r10
 4028c3c:	480b883a 	mov	r5,r9
 4028c40:	a180004c 	andi	r6,r20,1
 4028c44:	30000626 	beq	r6,zero,4028c60 <_dtoa_r+0x3e8>
 4028c48:	81800017 	ldw	r6,0(r16)
 4028c4c:	81c00117 	ldw	r7,4(r16)
 4028c50:	ad400044 	addi	r21,r21,1
 4028c54:	402fe100 	call	402fe10 <__muldf3>
 4028c58:	1009883a 	mov	r4,r2
 4028c5c:	180b883a 	mov	r5,r3
 4028c60:	a029d07a 	srai	r20,r20,1
 4028c64:	84000204 	addi	r16,r16,8
 4028c68:	a03ff51e 	bne	r20,zero,4028c40 <_dtoa_r+0x3c8>
 4028c6c:	2015883a 	mov	r10,r4
 4028c70:	2813883a 	mov	r9,r5
 4028c74:	d9000c17 	ldw	r4,48(sp)
 4028c78:	900b883a 	mov	r5,r18
 4028c7c:	500d883a 	mov	r6,r10
 4028c80:	480f883a 	mov	r7,r9
 4028c84:	402f3640 	call	402f364 <__divdf3>
 4028c88:	1021883a 	mov	r16,r2
 4028c8c:	1825883a 	mov	r18,r3
 4028c90:	d8800917 	ldw	r2,36(sp)
 4028c94:	10000626 	beq	r2,zero,4028cb0 <_dtoa_r+0x438>
 4028c98:	000d883a 	mov	r6,zero
 4028c9c:	01cffc34 	movhi	r7,16368
 4028ca0:	8009883a 	mov	r4,r16
 4028ca4:	900b883a 	mov	r5,r18
 4028ca8:	402fd280 	call	402fd28 <__ledf2>
 4028cac:	10044416 	blt	r2,zero,4029dc0 <_dtoa_r+0x1548>
 4028cb0:	a809883a 	mov	r4,r21
 4028cb4:	4030e0c0 	call	4030e0c <__floatsidf>
 4028cb8:	800d883a 	mov	r6,r16
 4028cbc:	900f883a 	mov	r7,r18
 4028cc0:	1009883a 	mov	r4,r2
 4028cc4:	180b883a 	mov	r5,r3
 4028cc8:	402fe100 	call	402fe10 <__muldf3>
 4028ccc:	000d883a 	mov	r6,zero
 4028cd0:	01d00734 	movhi	r7,16412
 4028cd4:	1009883a 	mov	r4,r2
 4028cd8:	180b883a 	mov	r5,r3
 4028cdc:	402ea740 	call	402ea74 <__adddf3>
 4028ce0:	1029883a 	mov	r20,r2
 4028ce4:	00bf3034 	movhi	r2,64704
 4028ce8:	1885883a 	add	r2,r3,r2
 4028cec:	d8800c15 	stw	r2,48(sp)
 4028cf0:	d8800517 	ldw	r2,20(sp)
 4028cf4:	10032226 	beq	r2,zero,4029980 <_dtoa_r+0x1108>
 4028cf8:	d8800417 	ldw	r2,16(sp)
 4028cfc:	d8801115 	stw	r2,68(sp)
 4028d00:	d8800517 	ldw	r2,20(sp)
 4028d04:	d8800d15 	stw	r2,52(sp)
 4028d08:	d8800d17 	ldw	r2,52(sp)
 4028d0c:	900b883a 	mov	r5,r18
 4028d10:	8009883a 	mov	r4,r16
 4028d14:	10bfffc4 	addi	r2,r2,-1
 4028d18:	100690fa 	slli	r3,r2,3
 4028d1c:	00800034 	movhi	r2,0
 4028d20:	10814904 	addi	r2,r2,1316
 4028d24:	10c5883a 	add	r2,r2,r3
 4028d28:	12800017 	ldw	r10,0(r2)
 4028d2c:	12c00117 	ldw	r11,4(r2)
 4028d30:	da800f15 	stw	r10,60(sp)
 4028d34:	dac00e15 	stw	r11,56(sp)
 4028d38:	4030d8c0 	call	4030d8c <__fixdfsi>
 4028d3c:	1009883a 	mov	r4,r2
 4028d40:	10800c04 	addi	r2,r2,48
 4028d44:	d8801015 	stw	r2,64(sp)
 4028d48:	4030e0c0 	call	4030e0c <__floatsidf>
 4028d4c:	8009883a 	mov	r4,r16
 4028d50:	100d883a 	mov	r6,r2
 4028d54:	180f883a 	mov	r7,r3
 4028d58:	900b883a 	mov	r5,r18
 4028d5c:	40304840 	call	4030484 <__subdf3>
 4028d60:	d9000117 	ldw	r4,4(sp)
 4028d64:	dac00e17 	ldw	r11,56(sp)
 4028d68:	da800f17 	ldw	r10,60(sp)
 4028d6c:	1825883a 	mov	r18,r3
 4028d70:	d8c00717 	ldw	r3,28(sp)
 4028d74:	25400044 	addi	r21,r4,1
 4028d78:	1021883a 	mov	r16,r2
 4028d7c:	500d883a 	mov	r6,r10
 4028d80:	580f883a 	mov	r7,r11
 4028d84:	1803b626 	beq	r3,zero,4029c60 <_dtoa_r+0x13e8>
 4028d88:	0009883a 	mov	r4,zero
 4028d8c:	014ff834 	movhi	r5,16352
 4028d90:	402f3640 	call	402f364 <__divdf3>
 4028d94:	d9c00c17 	ldw	r7,48(sp)
 4028d98:	a00d883a 	mov	r6,r20
 4028d9c:	1009883a 	mov	r4,r2
 4028da0:	180b883a 	mov	r5,r3
 4028da4:	40304840 	call	4030484 <__subdf3>
 4028da8:	d9000117 	ldw	r4,4(sp)
 4028dac:	1029883a 	mov	r20,r2
 4028db0:	d8801017 	ldw	r2,64(sp)
 4028db4:	800d883a 	mov	r6,r16
 4028db8:	900f883a 	mov	r7,r18
 4028dbc:	20800005 	stb	r2,0(r4)
 4028dc0:	180b883a 	mov	r5,r3
 4028dc4:	a009883a 	mov	r4,r20
 4028dc8:	d8c00c15 	stw	r3,48(sp)
 4028dcc:	402fc400 	call	402fc40 <__gedf2>
 4028dd0:	0083e716 	blt	zero,r2,4029d70 <_dtoa_r+0x14f8>
 4028dd4:	0005883a 	mov	r2,zero
 4028dd8:	dd800e15 	stw	r22,56(sp)
 4028ddc:	dc400f15 	stw	r17,60(sp)
 4028de0:	dd800d17 	ldw	r22,52(sp)
 4028de4:	dc400c17 	ldw	r17,48(sp)
 4028de8:	ddc00d15 	stw	r23,52(sp)
 4028dec:	dcc00c15 	stw	r19,48(sp)
 4028df0:	1027883a 	mov	r19,r2
 4028df4:	00002606 	br	4028e90 <_dtoa_r+0x618>
 4028df8:	9cc00044 	addi	r19,r19,1
 4028dfc:	9d806d0e 	bge	r19,r22,4028fb4 <_dtoa_r+0x73c>
 4028e00:	a009883a 	mov	r4,r20
 4028e04:	880b883a 	mov	r5,r17
 4028e08:	000d883a 	mov	r6,zero
 4028e0c:	01d00934 	movhi	r7,16420
 4028e10:	402fe100 	call	402fe10 <__muldf3>
 4028e14:	000d883a 	mov	r6,zero
 4028e18:	01d00934 	movhi	r7,16420
 4028e1c:	8009883a 	mov	r4,r16
 4028e20:	900b883a 	mov	r5,r18
 4028e24:	1029883a 	mov	r20,r2
 4028e28:	1823883a 	mov	r17,r3
 4028e2c:	402fe100 	call	402fe10 <__muldf3>
 4028e30:	180b883a 	mov	r5,r3
 4028e34:	1009883a 	mov	r4,r2
 4028e38:	1821883a 	mov	r16,r3
 4028e3c:	1025883a 	mov	r18,r2
 4028e40:	4030d8c0 	call	4030d8c <__fixdfsi>
 4028e44:	1009883a 	mov	r4,r2
 4028e48:	102f883a 	mov	r23,r2
 4028e4c:	4030e0c0 	call	4030e0c <__floatsidf>
 4028e50:	9009883a 	mov	r4,r18
 4028e54:	800b883a 	mov	r5,r16
 4028e58:	100d883a 	mov	r6,r2
 4028e5c:	180f883a 	mov	r7,r3
 4028e60:	40304840 	call	4030484 <__subdf3>
 4028e64:	ad400044 	addi	r21,r21,1
 4028e68:	ba000c04 	addi	r8,r23,48
 4028e6c:	aa3fffc5 	stb	r8,-1(r21)
 4028e70:	a00d883a 	mov	r6,r20
 4028e74:	880f883a 	mov	r7,r17
 4028e78:	1009883a 	mov	r4,r2
 4028e7c:	180b883a 	mov	r5,r3
 4028e80:	1021883a 	mov	r16,r2
 4028e84:	1825883a 	mov	r18,r3
 4028e88:	402fd280 	call	402fd28 <__ledf2>
 4028e8c:	10040516 	blt	r2,zero,4029ea4 <_dtoa_r+0x162c>
 4028e90:	800d883a 	mov	r6,r16
 4028e94:	900f883a 	mov	r7,r18
 4028e98:	0009883a 	mov	r4,zero
 4028e9c:	014ffc34 	movhi	r5,16368
 4028ea0:	40304840 	call	4030484 <__subdf3>
 4028ea4:	a00d883a 	mov	r6,r20
 4028ea8:	880f883a 	mov	r7,r17
 4028eac:	1009883a 	mov	r4,r2
 4028eb0:	180b883a 	mov	r5,r3
 4028eb4:	402fd280 	call	402fd28 <__ledf2>
 4028eb8:	103fcf0e 	bge	r2,zero,4028df8 <_dtoa_r+0x580>
 4028ebc:	d8801117 	ldw	r2,68(sp)
 4028ec0:	ddc00d17 	ldw	r23,52(sp)
 4028ec4:	d9000117 	ldw	r4,4(sp)
 4028ec8:	10800044 	addi	r2,r2,1
 4028ecc:	d8800415 	stw	r2,16(sp)
 4028ed0:	a829883a 	mov	r20,r21
 4028ed4:	00000106 	br	4028edc <_dtoa_r+0x664>
 4028ed8:	a103da26 	beq	r20,r4,4029e44 <_dtoa_r+0x15cc>
 4028edc:	a0ffffc3 	ldbu	r3,-1(r20)
 4028ee0:	a02b883a 	mov	r21,r20
 4028ee4:	a53fffc4 	addi	r20,r20,-1
 4028ee8:	18803fcc 	andi	r2,r3,255
 4028eec:	1080201c 	xori	r2,r2,128
 4028ef0:	10bfe004 	addi	r2,r2,-128
 4028ef4:	10800e60 	cmpeqi	r2,r2,57
 4028ef8:	103ff71e 	bne	r2,zero,4028ed8 <_dtoa_r+0x660>
 4028efc:	18c00044 	addi	r3,r3,1
 4028f00:	a0c00005 	stb	r3,0(r20)
 4028f04:	00013f06 	br	4029404 <_dtoa_r+0xb8c>
 4028f08:	04600034 	movhi	r17,32768
 4028f0c:	8c7fffc4 	addi	r17,r17,-1
 4028f10:	9462703a 	and	r17,r18,r17
 4028f14:	00800044 	movi	r2,1
 4028f18:	8825883a 	mov	r18,r17
 4028f1c:	80800015 	stw	r2,0(r16)
 4028f20:	00dffc34 	movhi	r3,32752
 4028f24:	909ffc2c 	andhi	r2,r18,32752
 4028f28:	10fe731e 	bne	r2,r3,40288f8 <_dtoa_r+0x80>
 4028f2c:	d9001f17 	ldw	r4,124(sp)
 4028f30:	00800434 	movhi	r2,16
 4028f34:	10bfffc4 	addi	r2,r2,-1
 4028f38:	9084703a 	and	r2,r18,r2
 4028f3c:	00c9c3c4 	movi	r3,9999
 4028f40:	20c00015 	stw	r3,0(r4)
 4028f44:	14e6b03a 	or	r19,r2,r19
 4028f48:	9800141e 	bne	r19,zero,4028f9c <_dtoa_r+0x724>
 4028f4c:	d8802117 	ldw	r2,132(sp)
 4028f50:	10041226 	beq	r2,zero,4029f9c <_dtoa_r+0x1724>
 4028f54:	00800034 	movhi	r2,0
 4028f58:	1007883a 	mov	r3,r2
 4028f5c:	18c10c04 	addi	r3,r3,1072
 4028f60:	00800034 	movhi	r2,0
 4028f64:	d8c00115 	stw	r3,4(sp)
 4028f68:	10810e04 	addi	r2,r2,1080
 4028f6c:	d8c02117 	ldw	r3,132(sp)
 4028f70:	18800015 	stw	r2,0(r3)
 4028f74:	003e7206 	br	4028940 <_dtoa_r+0xc8>
 4028f78:	01400434 	movhi	r5,16
 4028f7c:	297fffc4 	addi	r5,r5,-1
 4028f80:	894a703a 	and	r5,r17,r5
 4028f84:	dd001217 	ldw	r20,72(sp)
 4028f88:	9809883a 	mov	r4,r19
 4028f8c:	294ffc34 	orhi	r5,r5,16368
 4028f90:	843f0044 	addi	r16,r16,-1023
 4028f94:	d8000a15 	stw	zero,40(sp)
 4028f98:	003e9306 	br	40289e8 <_dtoa_r+0x170>
 4028f9c:	d8802117 	ldw	r2,132(sp)
 4028fa0:	1001fe1e 	bne	r2,zero,402979c <_dtoa_r+0xf24>
 4028fa4:	00800034 	movhi	r2,0
 4028fa8:	10810b04 	addi	r2,r2,1068
 4028fac:	d8800115 	stw	r2,4(sp)
 4028fb0:	003e6306 	br	4028940 <_dtoa_r+0xc8>
 4028fb4:	dd800e17 	ldw	r22,56(sp)
 4028fb8:	ddc00d17 	ldw	r23,52(sp)
 4028fbc:	dc400f17 	ldw	r17,60(sp)
 4028fc0:	dcc00c17 	ldw	r19,48(sp)
 4028fc4:	d8801317 	ldw	r2,76(sp)
 4028fc8:	10006e16 	blt	r2,zero,4029184 <_dtoa_r+0x90c>
 4028fcc:	d9000417 	ldw	r4,16(sp)
 4028fd0:	20c003c8 	cmpgei	r3,r4,15
 4028fd4:	18006b1e 	bne	r3,zero,4029184 <_dtoa_r+0x90c>
 4028fd8:	200690fa 	slli	r3,r4,3
 4028fdc:	00800034 	movhi	r2,0
 4028fe0:	10814904 	addi	r2,r2,1316
 4028fe4:	10c5883a 	add	r2,r2,r3
 4028fe8:	14000017 	ldw	r16,0(r2)
 4028fec:	14800117 	ldw	r18,4(r2)
 4028ff0:	d8801e17 	ldw	r2,120(sp)
 4028ff4:	1000150e 	bge	r2,zero,402904c <_dtoa_r+0x7d4>
 4028ff8:	d8800517 	ldw	r2,20(sp)
 4028ffc:	00801316 	blt	zero,r2,402904c <_dtoa_r+0x7d4>
 4029000:	d8800517 	ldw	r2,20(sp)
 4029004:	1002721e 	bne	r2,zero,40299d0 <_dtoa_r+0x1158>
 4029008:	8009883a 	mov	r4,r16
 402900c:	000d883a 	mov	r6,zero
 4029010:	01d00534 	movhi	r7,16404
 4029014:	900b883a 	mov	r5,r18
 4029018:	402fe100 	call	402fe10 <__muldf3>
 402901c:	100d883a 	mov	r6,r2
 4029020:	180f883a 	mov	r7,r3
 4029024:	9809883a 	mov	r4,r19
 4029028:	880b883a 	mov	r5,r17
 402902c:	402fd280 	call	402fd28 <__ledf2>
 4029030:	0029883a 	mov	r20,zero
 4029034:	0021883a 	mov	r16,zero
 4029038:	00820216 	blt	zero,r2,4029844 <_dtoa_r+0xfcc>
 402903c:	d8801e17 	ldw	r2,120(sp)
 4029040:	dd400117 	ldw	r21,4(sp)
 4029044:	00a2303a 	nor	r17,zero,r2
 4029048:	00020406 	br	402985c <_dtoa_r+0xfe4>
 402904c:	800d883a 	mov	r6,r16
 4029050:	900f883a 	mov	r7,r18
 4029054:	9809883a 	mov	r4,r19
 4029058:	880b883a 	mov	r5,r17
 402905c:	402f3640 	call	402f364 <__divdf3>
 4029060:	180b883a 	mov	r5,r3
 4029064:	1009883a 	mov	r4,r2
 4029068:	4030d8c0 	call	4030d8c <__fixdfsi>
 402906c:	1009883a 	mov	r4,r2
 4029070:	102b883a 	mov	r21,r2
 4029074:	4030e0c0 	call	4030e0c <__floatsidf>
 4029078:	800d883a 	mov	r6,r16
 402907c:	900f883a 	mov	r7,r18
 4029080:	1009883a 	mov	r4,r2
 4029084:	180b883a 	mov	r5,r3
 4029088:	402fe100 	call	402fe10 <__muldf3>
 402908c:	100d883a 	mov	r6,r2
 4029090:	9809883a 	mov	r4,r19
 4029094:	880b883a 	mov	r5,r17
 4029098:	180f883a 	mov	r7,r3
 402909c:	40304840 	call	4030484 <__subdf3>
 40290a0:	d9800117 	ldw	r6,4(sp)
 40290a4:	dd800517 	ldw	r22,20(sp)
 40290a8:	1009883a 	mov	r4,r2
 40290ac:	a8800c04 	addi	r2,r21,48
 40290b0:	30800005 	stb	r2,0(r6)
 40290b4:	b0800060 	cmpeqi	r2,r22,1
 40290b8:	180b883a 	mov	r5,r3
 40290bc:	35000044 	addi	r20,r6,1
 40290c0:	10029f1e 	bne	r2,zero,4029b40 <_dtoa_r+0x12c8>
 40290c4:	04400044 	movi	r17,1
 40290c8:	ddc00215 	stw	r23,8(sp)
 40290cc:	00001c06 	br	4029140 <_dtoa_r+0x8c8>
 40290d0:	800d883a 	mov	r6,r16
 40290d4:	900f883a 	mov	r7,r18
 40290d8:	a809883a 	mov	r4,r21
 40290dc:	980b883a 	mov	r5,r19
 40290e0:	402f3640 	call	402f364 <__divdf3>
 40290e4:	180b883a 	mov	r5,r3
 40290e8:	1009883a 	mov	r4,r2
 40290ec:	4030d8c0 	call	4030d8c <__fixdfsi>
 40290f0:	1009883a 	mov	r4,r2
 40290f4:	102f883a 	mov	r23,r2
 40290f8:	4030e0c0 	call	4030e0c <__floatsidf>
 40290fc:	800d883a 	mov	r6,r16
 4029100:	900f883a 	mov	r7,r18
 4029104:	1009883a 	mov	r4,r2
 4029108:	180b883a 	mov	r5,r3
 402910c:	402fe100 	call	402fe10 <__muldf3>
 4029110:	a809883a 	mov	r4,r21
 4029114:	980b883a 	mov	r5,r19
 4029118:	100d883a 	mov	r6,r2
 402911c:	180f883a 	mov	r7,r3
 4029120:	40304840 	call	4030484 <__subdf3>
 4029124:	b9000c04 	addi	r4,r23,48
 4029128:	a1000005 	stb	r4,0(r20)
 402912c:	8c400044 	addi	r17,r17,1
 4029130:	a5000044 	addi	r20,r20,1
 4029134:	1009883a 	mov	r4,r2
 4029138:	180b883a 	mov	r5,r3
 402913c:	8d827e26 	beq	r17,r22,4029b38 <_dtoa_r+0x12c0>
 4029140:	000d883a 	mov	r6,zero
 4029144:	01d00934 	movhi	r7,16420
 4029148:	402fe100 	call	402fe10 <__muldf3>
 402914c:	000d883a 	mov	r6,zero
 4029150:	000f883a 	mov	r7,zero
 4029154:	1009883a 	mov	r4,r2
 4029158:	180b883a 	mov	r5,r3
 402915c:	102b883a 	mov	r21,r2
 4029160:	1827883a 	mov	r19,r3
 4029164:	402fbc00 	call	402fbc0 <__eqdf2>
 4029168:	103fd91e 	bne	r2,zero,40290d0 <_dtoa_r+0x858>
 402916c:	d8800417 	ldw	r2,16(sp)
 4029170:	ddc00217 	ldw	r23,8(sp)
 4029174:	a02b883a 	mov	r21,r20
 4029178:	10800044 	addi	r2,r2,1
 402917c:	d8800415 	stw	r2,16(sp)
 4029180:	0000a006 	br	4029404 <_dtoa_r+0xb8c>
 4029184:	d8c00717 	ldw	r3,28(sp)
 4029188:	1800e326 	beq	r3,zero,4029518 <_dtoa_r+0xca0>
 402918c:	d8c00217 	ldw	r3,8(sp)
 4029190:	18c00088 	cmpgei	r3,r3,2
 4029194:	1801e026 	beq	r3,zero,4029918 <_dtoa_r+0x10a0>
 4029198:	d8800517 	ldw	r2,20(sp)
 402919c:	153fffc4 	addi	r20,r2,-1
 40291a0:	d8800817 	ldw	r2,32(sp)
 40291a4:	1501bc0e 	bge	r2,r20,4029898 <_dtoa_r+0x1020>
 40291a8:	d8800817 	ldw	r2,32(sp)
 40291ac:	d8c00317 	ldw	r3,12(sp)
 40291b0:	dd000815 	stw	r20,32(sp)
 40291b4:	a085c83a 	sub	r2,r20,r2
 40291b8:	1885883a 	add	r2,r3,r2
 40291bc:	d8800315 	stw	r2,12(sp)
 40291c0:	0029883a 	mov	r20,zero
 40291c4:	d8800517 	ldw	r2,20(sp)
 40291c8:	10028b16 	blt	r2,zero,4029bf8 <_dtoa_r+0x1380>
 40291cc:	d8c00617 	ldw	r3,24(sp)
 40291d0:	b0ad883a 	add	r22,r22,r2
 40291d4:	1885883a 	add	r2,r3,r2
 40291d8:	1825883a 	mov	r18,r3
 40291dc:	d8800615 	stw	r2,24(sp)
 40291e0:	01400044 	movi	r5,1
 40291e4:	b809883a 	mov	r4,r23
 40291e8:	402ac540 	call	402ac54 <__i2b>
 40291ec:	1021883a 	mov	r16,r2
 40291f0:	0480080e 	bge	zero,r18,4029214 <_dtoa_r+0x99c>
 40291f4:	0580070e 	bge	zero,r22,4029214 <_dtoa_r+0x99c>
 40291f8:	9005883a 	mov	r2,r18
 40291fc:	b4819e16 	blt	r22,r18,4029878 <_dtoa_r+0x1000>
 4029200:	d8c00617 	ldw	r3,24(sp)
 4029204:	90a5c83a 	sub	r18,r18,r2
 4029208:	b0adc83a 	sub	r22,r22,r2
 402920c:	1887c83a 	sub	r3,r3,r2
 4029210:	d8c00615 	stw	r3,24(sp)
 4029214:	d8800817 	ldw	r2,32(sp)
 4029218:	10001426 	beq	r2,zero,402926c <_dtoa_r+0x9f4>
 402921c:	d8800717 	ldw	r2,28(sp)
 4029220:	1001ee26 	beq	r2,zero,40299dc <_dtoa_r+0x1164>
 4029224:	05000e0e 	bge	zero,r20,4029260 <_dtoa_r+0x9e8>
 4029228:	800b883a 	mov	r5,r16
 402922c:	a00d883a 	mov	r6,r20
 4029230:	b809883a 	mov	r4,r23
 4029234:	402af580 	call	402af58 <__pow5mult>
 4029238:	e00d883a 	mov	r6,fp
 402923c:	100b883a 	mov	r5,r2
 4029240:	b809883a 	mov	r4,r23
 4029244:	1021883a 	mov	r16,r2
 4029248:	402ad040 	call	402ad04 <__multiply>
 402924c:	102b883a 	mov	r21,r2
 4029250:	e00b883a 	mov	r5,fp
 4029254:	b809883a 	mov	r4,r23
 4029258:	402a8ac0 	call	402a8ac <_Bfree>
 402925c:	a839883a 	mov	fp,r21
 4029260:	d8800817 	ldw	r2,32(sp)
 4029264:	150dc83a 	sub	r6,r2,r20
 4029268:	15025e1e 	bne	r2,r20,4029be4 <_dtoa_r+0x136c>
 402926c:	01400044 	movi	r5,1
 4029270:	b809883a 	mov	r4,r23
 4029274:	402ac540 	call	402ac54 <__i2b>
 4029278:	d9800317 	ldw	r6,12(sp)
 402927c:	1029883a 	mov	r20,r2
 4029280:	0180b716 	blt	zero,r6,4029560 <_dtoa_r+0xce8>
 4029284:	d8800217 	ldw	r2,8(sp)
 4029288:	10800088 	cmpgei	r2,r2,2
 402928c:	10014d26 	beq	r2,zero,40297c4 <_dtoa_r+0xf4c>
 4029290:	0023883a 	mov	r17,zero
 4029294:	d8c00317 	ldw	r3,12(sp)
 4029298:	00800044 	movi	r2,1
 402929c:	1800b81e 	bne	r3,zero,4029580 <_dtoa_r+0xd08>
 40292a0:	1585883a 	add	r2,r2,r22
 40292a4:	108007cc 	andi	r2,r2,31
 40292a8:	1000a526 	beq	r2,zero,4029540 <_dtoa_r+0xcc8>
 40292ac:	00c00804 	movi	r3,32
 40292b0:	1887c83a 	sub	r3,r3,r2
 40292b4:	19000150 	cmplti	r4,r3,5
 40292b8:	20033c1e 	bne	r4,zero,4029fac <_dtoa_r+0x1734>
 40292bc:	00c00704 	movi	r3,28
 40292c0:	1885c83a 	sub	r2,r3,r2
 40292c4:	d8c00617 	ldw	r3,24(sp)
 40292c8:	90a5883a 	add	r18,r18,r2
 40292cc:	b0ad883a 	add	r22,r22,r2
 40292d0:	1887883a 	add	r3,r3,r2
 40292d4:	d8c00615 	stw	r3,24(sp)
 40292d8:	d8800617 	ldw	r2,24(sp)
 40292dc:	00809216 	blt	zero,r2,4029528 <_dtoa_r+0xcb0>
 40292e0:	0580050e 	bge	zero,r22,40292f8 <_dtoa_r+0xa80>
 40292e4:	a00b883a 	mov	r5,r20
 40292e8:	b00d883a 	mov	r6,r22
 40292ec:	b809883a 	mov	r4,r23
 40292f0:	402b0a00 	call	402b0a0 <__lshift>
 40292f4:	1029883a 	mov	r20,r2
 40292f8:	d8800917 	ldw	r2,36(sp)
 40292fc:	1001151e 	bne	r2,zero,4029754 <_dtoa_r+0xedc>
 4029300:	d8800517 	ldw	r2,20(sp)
 4029304:	0081020e 	bge	zero,r2,4029710 <_dtoa_r+0xe98>
 4029308:	d8800717 	ldw	r2,28(sp)
 402930c:	1000af1e 	bne	r2,zero,40295cc <_dtoa_r+0xd54>
 4029310:	d8800417 	ldw	r2,16(sp)
 4029314:	10800044 	addi	r2,r2,1
 4029318:	d8800415 	stw	r2,16(sp)
 402931c:	dc800517 	ldw	r18,20(sp)
 4029320:	dd400117 	ldw	r21,4(sp)
 4029324:	04400044 	movi	r17,1
 4029328:	00000706 	br	4029348 <_dtoa_r+0xad0>
 402932c:	e00b883a 	mov	r5,fp
 4029330:	000f883a 	mov	r7,zero
 4029334:	01800284 	movi	r6,10
 4029338:	b809883a 	mov	r4,r23
 402933c:	402a8d00 	call	402a8d0 <__multadd>
 4029340:	1039883a 	mov	fp,r2
 4029344:	8c400044 	addi	r17,r17,1
 4029348:	a00b883a 	mov	r5,r20
 402934c:	e009883a 	mov	r4,fp
 4029350:	402867c0 	call	402867c <quorem>
 4029354:	14c00c04 	addi	r19,r2,48
 4029358:	ac45883a 	add	r2,r21,r17
 402935c:	14ffffc5 	stb	r19,-1(r2)
 4029360:	8cbff216 	blt	r17,r18,402932c <_dtoa_r+0xab4>
 4029364:	d8800517 	ldw	r2,20(sp)
 4029368:	0081510e 	bge	zero,r2,40298b0 <_dtoa_r+0x1038>
 402936c:	d8c00117 	ldw	r3,4(sp)
 4029370:	0023883a 	mov	r17,zero
 4029374:	18ab883a 	add	r21,r3,r2
 4029378:	e00b883a 	mov	r5,fp
 402937c:	01800044 	movi	r6,1
 4029380:	b809883a 	mov	r4,r23
 4029384:	402b0a00 	call	402b0a0 <__lshift>
 4029388:	1009883a 	mov	r4,r2
 402938c:	a00b883a 	mov	r5,r20
 4029390:	1039883a 	mov	fp,r2
 4029394:	402b2280 	call	402b228 <__mcmp>
 4029398:	a93fffc3 	ldbu	r4,-1(r21)
 402939c:	0081490e 	bge	zero,r2,40298c4 <_dtoa_r+0x104c>
 40293a0:	d9400117 	ldw	r5,4(sp)
 40293a4:	00000306 	br	40293b4 <_dtoa_r+0xb3c>
 40293a8:	19415426 	beq	r3,r5,40298fc <_dtoa_r+0x1084>
 40293ac:	193fffc3 	ldbu	r4,-1(r3)
 40293b0:	182b883a 	mov	r21,r3
 40293b4:	20803fcc 	andi	r2,r4,255
 40293b8:	1080201c 	xori	r2,r2,128
 40293bc:	10bfe004 	addi	r2,r2,-128
 40293c0:	10800e60 	cmpeqi	r2,r2,57
 40293c4:	a8ffffc4 	addi	r3,r21,-1
 40293c8:	103ff71e 	bne	r2,zero,40293a8 <_dtoa_r+0xb30>
 40293cc:	21000044 	addi	r4,r4,1
 40293d0:	19000005 	stb	r4,0(r3)
 40293d4:	a00b883a 	mov	r5,r20
 40293d8:	b809883a 	mov	r4,r23
 40293dc:	402a8ac0 	call	402a8ac <_Bfree>
 40293e0:	80000826 	beq	r16,zero,4029404 <_dtoa_r+0xb8c>
 40293e4:	88000426 	beq	r17,zero,40293f8 <_dtoa_r+0xb80>
 40293e8:	8c000326 	beq	r17,r16,40293f8 <_dtoa_r+0xb80>
 40293ec:	880b883a 	mov	r5,r17
 40293f0:	b809883a 	mov	r4,r23
 40293f4:	402a8ac0 	call	402a8ac <_Bfree>
 40293f8:	800b883a 	mov	r5,r16
 40293fc:	b809883a 	mov	r4,r23
 4029400:	402a8ac0 	call	402a8ac <_Bfree>
 4029404:	e00b883a 	mov	r5,fp
 4029408:	b809883a 	mov	r4,r23
 402940c:	402a8ac0 	call	402a8ac <_Bfree>
 4029410:	d8801f17 	ldw	r2,124(sp)
 4029414:	d8c00417 	ldw	r3,16(sp)
 4029418:	a8000005 	stb	zero,0(r21)
 402941c:	10c00015 	stw	r3,0(r2)
 4029420:	d8802117 	ldw	r2,132(sp)
 4029424:	103d4626 	beq	r2,zero,4028940 <_dtoa_r+0xc8>
 4029428:	15400015 	stw	r21,0(r2)
 402942c:	003d4406 	br	4028940 <_dtoa_r+0xc8>
 4029430:	d8000915 	stw	zero,36(sp)
 4029434:	b0002416 	blt	r22,zero,40294c8 <_dtoa_r+0xc50>
 4029438:	d8000615 	stw	zero,24(sp)
 402943c:	d8800317 	ldw	r2,12(sp)
 4029440:	d8c00217 	ldw	r3,8(sp)
 4029444:	d8000815 	stw	zero,32(sp)
 4029448:	b0ad883a 	add	r22,r22,r2
 402944c:	d8800415 	stw	r2,16(sp)
 4029450:	188002a8 	cmpgeui	r2,r3,10
 4029454:	103db326 	beq	r2,zero,4028b24 <_dtoa_r+0x2ac>
 4029458:	00800044 	movi	r2,1
 402945c:	d8800715 	stw	r2,28(sp)
 4029460:	00bfffc4 	movi	r2,-1
 4029464:	04000044 	movi	r16,1
 4029468:	d8000215 	stw	zero,8(sp)
 402946c:	d8800515 	stw	r2,20(sp)
 4029470:	d8001e15 	stw	zero,120(sp)
 4029474:	d8800517 	ldw	r2,20(sp)
 4029478:	b8001115 	stw	zero,68(r23)
 402947c:	000b883a 	mov	r5,zero
 4029480:	d8800b15 	stw	r2,44(sp)
 4029484:	003dc406 	br	4028b98 <_dtoa_r+0x320>
 4029488:	188000e0 	cmpeqi	r2,r3,3
 402948c:	d8000715 	stw	zero,28(sp)
 4029490:	1002ac26 	beq	r2,zero,4029f44 <_dtoa_r+0x16cc>
 4029494:	d8801e17 	ldw	r2,120(sp)
 4029498:	d8c00417 	ldw	r3,16(sp)
 402949c:	10c5883a 	add	r2,r2,r3
 40294a0:	d8800b15 	stw	r2,44(sp)
 40294a4:	10800044 	addi	r2,r2,1
 40294a8:	d8800515 	stw	r2,20(sp)
 40294ac:	100d883a 	mov	r6,r2
 40294b0:	00bdae16 	blt	zero,r2,4028b6c <_dtoa_r+0x2f4>
 40294b4:	01800044 	movi	r6,1
 40294b8:	003dac06 	br	4028b6c <_dtoa_r+0x2f4>
 40294bc:	00800044 	movi	r2,1
 40294c0:	d8800915 	stw	r2,36(sp)
 40294c4:	b03d890e 	bge	r22,zero,4028aec <_dtoa_r+0x274>
 40294c8:	00800044 	movi	r2,1
 40294cc:	1405c83a 	sub	r2,r2,r16
 40294d0:	d8800615 	stw	r2,24(sp)
 40294d4:	002d883a 	mov	r22,zero
 40294d8:	003d8506 	br	4028af0 <_dtoa_r+0x278>
 40294dc:	a809883a 	mov	r4,r21
 40294e0:	4030e0c0 	call	4030e0c <__floatsidf>
 40294e4:	900d883a 	mov	r6,r18
 40294e8:	b00f883a 	mov	r7,r22
 40294ec:	1009883a 	mov	r4,r2
 40294f0:	180b883a 	mov	r5,r3
 40294f4:	402fbc00 	call	402fbc0 <__eqdf2>
 40294f8:	103d6926 	beq	r2,zero,4028aa0 <_dtoa_r+0x228>
 40294fc:	a8bfffc4 	addi	r2,r21,-1
 4029500:	d8800315 	stw	r2,12(sp)
 4029504:	003d6606 	br	4028aa0 <_dtoa_r+0x228>
 4029508:	00800034 	movhi	r2,0
 402950c:	10810204 	addi	r2,r2,1032
 4029510:	d8800115 	stw	r2,4(sp)
 4029514:	003d0a06 	br	4028940 <_dtoa_r+0xc8>
 4029518:	dd000817 	ldw	r20,32(sp)
 402951c:	dc800617 	ldw	r18,24(sp)
 4029520:	0021883a 	mov	r16,zero
 4029524:	003f3206 	br	40291f0 <_dtoa_r+0x978>
 4029528:	e00b883a 	mov	r5,fp
 402952c:	100d883a 	mov	r6,r2
 4029530:	b809883a 	mov	r4,r23
 4029534:	402b0a00 	call	402b0a0 <__lshift>
 4029538:	1039883a 	mov	fp,r2
 402953c:	003f6806 	br	40292e0 <_dtoa_r+0xa68>
 4029540:	00800704 	movi	r2,28
 4029544:	003f5f06 	br	40292c4 <_dtoa_r+0xa4c>
 4029548:	01000804 	movi	r4,32
 402954c:	2089c83a 	sub	r4,r4,r2
 4029550:	9908983a 	sll	r4,r19,r4
 4029554:	003d1d06 	br	40289cc <_dtoa_r+0x154>
 4029558:	04000044 	movi	r16,1
 402955c:	003d7606 	br	4028b38 <_dtoa_r+0x2c0>
 4029560:	100b883a 	mov	r5,r2
 4029564:	b809883a 	mov	r4,r23
 4029568:	402af580 	call	402af58 <__pow5mult>
 402956c:	d8c00217 	ldw	r3,8(sp)
 4029570:	1029883a 	mov	r20,r2
 4029574:	18c00090 	cmplti	r3,r3,2
 4029578:	1801511e 	bne	r3,zero,4029ac0 <_dtoa_r+0x1248>
 402957c:	0023883a 	mov	r17,zero
 4029580:	a0800417 	ldw	r2,16(r20)
 4029584:	10800104 	addi	r2,r2,4
 4029588:	100490ba 	slli	r2,r2,2
 402958c:	a085883a 	add	r2,r20,r2
 4029590:	11000017 	ldw	r4,0(r2)
 4029594:	402ab400 	call	402ab40 <__hi0bits>
 4029598:	00c00804 	movi	r3,32
 402959c:	1885c83a 	sub	r2,r3,r2
 40295a0:	003f3f06 	br	40292a0 <_dtoa_r+0xa28>
 40295a4:	800b883a 	mov	r5,r16
 40295a8:	000f883a 	mov	r7,zero
 40295ac:	01800284 	movi	r6,10
 40295b0:	b809883a 	mov	r4,r23
 40295b4:	402a8d00 	call	402a8d0 <__multadd>
 40295b8:	1021883a 	mov	r16,r2
 40295bc:	d8800b17 	ldw	r2,44(sp)
 40295c0:	00824b0e 	bge	zero,r2,4029ef0 <_dtoa_r+0x1678>
 40295c4:	dd400415 	stw	r21,16(sp)
 40295c8:	d8800515 	stw	r2,20(sp)
 40295cc:	0480ac16 	blt	zero,r18,4029880 <_dtoa_r+0x1008>
 40295d0:	8801731e 	bne	r17,zero,4029ba0 <_dtoa_r+0x1328>
 40295d4:	8025883a 	mov	r18,r16
 40295d8:	dd800117 	ldw	r22,4(sp)
 40295dc:	d9000517 	ldw	r4,20(sp)
 40295e0:	98c0004c 	andi	r3,r19,1
 40295e4:	b0bfffc4 	addi	r2,r22,-1
 40295e8:	1105883a 	add	r2,r2,r4
 40295ec:	d8800515 	stw	r2,20(sp)
 40295f0:	d8800217 	ldw	r2,8(sp)
 40295f4:	d8c00815 	stw	r3,32(sp)
 40295f8:	1884b03a 	or	r2,r3,r2
 40295fc:	d8800715 	stw	r2,28(sp)
 4029600:	00002906 	br	40296a8 <_dtoa_r+0xe30>
 4029604:	e009883a 	mov	r4,fp
 4029608:	402b2280 	call	402b228 <__mcmp>
 402960c:	980b883a 	mov	r5,r19
 4029610:	b809883a 	mov	r4,r23
 4029614:	d8800315 	stw	r2,12(sp)
 4029618:	402a8ac0 	call	402a8ac <_Bfree>
 402961c:	d8800317 	ldw	r2,12(sp)
 4029620:	1000021e 	bne	r2,zero,402962c <_dtoa_r+0xdb4>
 4029624:	d8c00717 	ldw	r3,28(sp)
 4029628:	18022326 	beq	r3,zero,4029eb8 <_dtoa_r+0x1640>
 402962c:	b4c00044 	addi	r19,r22,1
 4029630:	88012916 	blt	r17,zero,4029ad8 <_dtoa_r+0x1260>
 4029634:	d8c00217 	ldw	r3,8(sp)
 4029638:	88e2b03a 	or	r17,r17,r3
 402963c:	d8c00817 	ldw	r3,32(sp)
 4029640:	1c62b03a 	or	r17,r3,r17
 4029644:	88012426 	beq	r17,zero,4029ad8 <_dtoa_r+0x1260>
 4029648:	00816f16 	blt	zero,r2,4029c08 <_dtoa_r+0x1390>
 402964c:	d8800517 	ldw	r2,20(sp)
 4029650:	b5400005 	stb	r21,0(r22)
 4029654:	15817926 	beq	r2,r22,4029c3c <_dtoa_r+0x13c4>
 4029658:	e00b883a 	mov	r5,fp
 402965c:	000f883a 	mov	r7,zero
 4029660:	01800284 	movi	r6,10
 4029664:	b809883a 	mov	r4,r23
 4029668:	402a8d00 	call	402a8d0 <__multadd>
 402966c:	1039883a 	mov	fp,r2
 4029670:	800b883a 	mov	r5,r16
 4029674:	000f883a 	mov	r7,zero
 4029678:	01800284 	movi	r6,10
 402967c:	b809883a 	mov	r4,r23
 4029680:	84801f26 	beq	r16,r18,4029700 <_dtoa_r+0xe88>
 4029684:	402a8d00 	call	402a8d0 <__multadd>
 4029688:	900b883a 	mov	r5,r18
 402968c:	000f883a 	mov	r7,zero
 4029690:	01800284 	movi	r6,10
 4029694:	b809883a 	mov	r4,r23
 4029698:	1021883a 	mov	r16,r2
 402969c:	402a8d00 	call	402a8d0 <__multadd>
 40296a0:	1025883a 	mov	r18,r2
 40296a4:	982d883a 	mov	r22,r19
 40296a8:	a00b883a 	mov	r5,r20
 40296ac:	e009883a 	mov	r4,fp
 40296b0:	402867c0 	call	402867c <quorem>
 40296b4:	800b883a 	mov	r5,r16
 40296b8:	e009883a 	mov	r4,fp
 40296bc:	102b883a 	mov	r21,r2
 40296c0:	d8800615 	stw	r2,24(sp)
 40296c4:	402b2280 	call	402b228 <__mcmp>
 40296c8:	a00b883a 	mov	r5,r20
 40296cc:	900d883a 	mov	r6,r18
 40296d0:	b809883a 	mov	r4,r23
 40296d4:	1023883a 	mov	r17,r2
 40296d8:	402b2800 	call	402b280 <__mdiff>
 40296dc:	1027883a 	mov	r19,r2
 40296e0:	10800317 	ldw	r2,12(r2)
 40296e4:	ad400c04 	addi	r21,r21,48
 40296e8:	980b883a 	mov	r5,r19
 40296ec:	103fc526 	beq	r2,zero,4029604 <_dtoa_r+0xd8c>
 40296f0:	b809883a 	mov	r4,r23
 40296f4:	402a8ac0 	call	402a8ac <_Bfree>
 40296f8:	00800044 	movi	r2,1
 40296fc:	003fcb06 	br	402962c <_dtoa_r+0xdb4>
 4029700:	402a8d00 	call	402a8d0 <__multadd>
 4029704:	1021883a 	mov	r16,r2
 4029708:	1025883a 	mov	r18,r2
 402970c:	003fe506 	br	40296a4 <_dtoa_r+0xe2c>
 4029710:	d8800217 	ldw	r2,8(sp)
 4029714:	108000d0 	cmplti	r2,r2,3
 4029718:	10003e26 	beq	r2,zero,4029814 <_dtoa_r+0xf9c>
 402971c:	d8800717 	ldw	r2,28(sp)
 4029720:	103faa1e 	bne	r2,zero,40295cc <_dtoa_r+0xd54>
 4029724:	a00b883a 	mov	r5,r20
 4029728:	e009883a 	mov	r4,fp
 402972c:	402867c0 	call	402867c <quorem>
 4029730:	14c00c04 	addi	r19,r2,48
 4029734:	d8800117 	ldw	r2,4(sp)
 4029738:	0023883a 	mov	r17,zero
 402973c:	15400044 	addi	r21,r2,1
 4029740:	14c00005 	stb	r19,0(r2)
 4029744:	d8800417 	ldw	r2,16(sp)
 4029748:	10800044 	addi	r2,r2,1
 402974c:	d8800415 	stw	r2,16(sp)
 4029750:	003f0906 	br	4029378 <_dtoa_r+0xb00>
 4029754:	a00b883a 	mov	r5,r20
 4029758:	e009883a 	mov	r4,fp
 402975c:	402b2280 	call	402b228 <__mcmp>
 4029760:	103ee70e 	bge	r2,zero,4029300 <_dtoa_r+0xa88>
 4029764:	e00b883a 	mov	r5,fp
 4029768:	000f883a 	mov	r7,zero
 402976c:	01800284 	movi	r6,10
 4029770:	b809883a 	mov	r4,r23
 4029774:	402a8d00 	call	402a8d0 <__multadd>
 4029778:	d8c00417 	ldw	r3,16(sp)
 402977c:	1039883a 	mov	fp,r2
 4029780:	d8800717 	ldw	r2,28(sp)
 4029784:	1d7fffc4 	addi	r21,r3,-1
 4029788:	103f861e 	bne	r2,zero,40295a4 <_dtoa_r+0xd2c>
 402978c:	d8800b17 	ldw	r2,44(sp)
 4029790:	0081d20e 	bge	zero,r2,4029edc <_dtoa_r+0x1664>
 4029794:	d8800515 	stw	r2,20(sp)
 4029798:	003ee006 	br	402931c <_dtoa_r+0xaa4>
 402979c:	00800034 	movhi	r2,0
 40297a0:	1007883a 	mov	r3,r2
 40297a4:	18c10b04 	addi	r3,r3,1068
 40297a8:	00800034 	movhi	r2,0
 40297ac:	d8c00115 	stw	r3,4(sp)
 40297b0:	10810bc4 	addi	r2,r2,1071
 40297b4:	003ded06 	br	4028f6c <_dtoa_r+0x6f4>
 40297b8:	00800044 	movi	r2,1
 40297bc:	d8800715 	stw	r2,28(sp)
 40297c0:	003f3406 	br	4029494 <_dtoa_r+0xc1c>
 40297c4:	983eb21e 	bne	r19,zero,4029290 <_dtoa_r+0xa18>
 40297c8:	00800434 	movhi	r2,16
 40297cc:	10bfffc4 	addi	r2,r2,-1
 40297d0:	8884703a 	and	r2,r17,r2
 40297d4:	103eae1e 	bne	r2,zero,4029290 <_dtoa_r+0xa18>
 40297d8:	8c5ffc2c 	andhi	r17,r17,32752
 40297dc:	883eac26 	beq	r17,zero,4029290 <_dtoa_r+0xa18>
 40297e0:	d8800617 	ldw	r2,24(sp)
 40297e4:	b5800044 	addi	r22,r22,1
 40297e8:	04400044 	movi	r17,1
 40297ec:	10800044 	addi	r2,r2,1
 40297f0:	d8800615 	stw	r2,24(sp)
 40297f4:	003ea706 	br	4029294 <_dtoa_r+0xa1c>
 40297f8:	00800044 	movi	r2,1
 40297fc:	d8800515 	stw	r2,20(sp)
 4029800:	d8801e15 	stw	r2,120(sp)
 4029804:	003f1b06 	br	4029474 <_dtoa_r+0xbfc>
 4029808:	d8800b17 	ldw	r2,44(sp)
 402980c:	dd400415 	stw	r21,16(sp)
 4029810:	d8800515 	stw	r2,20(sp)
 4029814:	d8800517 	ldw	r2,20(sp)
 4029818:	103e081e 	bne	r2,zero,402903c <_dtoa_r+0x7c4>
 402981c:	a00b883a 	mov	r5,r20
 4029820:	b809883a 	mov	r4,r23
 4029824:	000f883a 	mov	r7,zero
 4029828:	01800144 	movi	r6,5
 402982c:	402a8d00 	call	402a8d0 <__multadd>
 4029830:	100b883a 	mov	r5,r2
 4029834:	e009883a 	mov	r4,fp
 4029838:	1029883a 	mov	r20,r2
 402983c:	402b2280 	call	402b228 <__mcmp>
 4029840:	00bdfe0e 	bge	zero,r2,402903c <_dtoa_r+0x7c4>
 4029844:	d8c00117 	ldw	r3,4(sp)
 4029848:	00800c44 	movi	r2,49
 402984c:	18800005 	stb	r2,0(r3)
 4029850:	d8800417 	ldw	r2,16(sp)
 4029854:	1d400044 	addi	r21,r3,1
 4029858:	14400044 	addi	r17,r2,1
 402985c:	a00b883a 	mov	r5,r20
 4029860:	b809883a 	mov	r4,r23
 4029864:	402a8ac0 	call	402a8ac <_Bfree>
 4029868:	88800044 	addi	r2,r17,1
 402986c:	d8800415 	stw	r2,16(sp)
 4029870:	803ee11e 	bne	r16,zero,40293f8 <_dtoa_r+0xb80>
 4029874:	003ee306 	br	4029404 <_dtoa_r+0xb8c>
 4029878:	b005883a 	mov	r2,r22
 402987c:	003e6006 	br	4029200 <_dtoa_r+0x988>
 4029880:	800b883a 	mov	r5,r16
 4029884:	900d883a 	mov	r6,r18
 4029888:	b809883a 	mov	r4,r23
 402988c:	402b0a00 	call	402b0a0 <__lshift>
 4029890:	1021883a 	mov	r16,r2
 4029894:	003f4e06 	br	40295d0 <_dtoa_r+0xd58>
 4029898:	1529c83a 	sub	r20,r2,r20
 402989c:	003e4906 	br	40291c4 <_dtoa_r+0x94c>
 40298a0:	dcc00c15 	stw	r19,48(sp)
 40298a4:	8825883a 	mov	r18,r17
 40298a8:	05400084 	movi	r21,2
 40298ac:	003cdf06 	br	4028c2c <_dtoa_r+0x3b4>
 40298b0:	00800044 	movi	r2,1
 40298b4:	003ead06 	br	402936c <_dtoa_r+0xaf4>
 40298b8:	00800044 	movi	r2,1
 40298bc:	d8800715 	stw	r2,28(sp)
 40298c0:	003ca506 	br	4028b58 <_dtoa_r+0x2e0>
 40298c4:	1000021e 	bne	r2,zero,40298d0 <_dtoa_r+0x1058>
 40298c8:	98c0004c 	andi	r3,r19,1
 40298cc:	183eb41e 	bne	r3,zero,40293a0 <_dtoa_r+0xb28>
 40298d0:	2005883a 	mov	r2,r4
 40298d4:	00000206 	br	40298e0 <_dtoa_r+0x1068>
 40298d8:	a8bfff83 	ldbu	r2,-2(r21)
 40298dc:	182b883a 	mov	r21,r3
 40298e0:	10803fcc 	andi	r2,r2,255
 40298e4:	1080201c 	xori	r2,r2,128
 40298e8:	10bfe004 	addi	r2,r2,-128
 40298ec:	10800c18 	cmpnei	r2,r2,48
 40298f0:	a8ffffc4 	addi	r3,r21,-1
 40298f4:	103ff826 	beq	r2,zero,40298d8 <_dtoa_r+0x1060>
 40298f8:	003eb606 	br	40293d4 <_dtoa_r+0xb5c>
 40298fc:	d8c00117 	ldw	r3,4(sp)
 4029900:	00800c44 	movi	r2,49
 4029904:	18800005 	stb	r2,0(r3)
 4029908:	d8800417 	ldw	r2,16(sp)
 402990c:	10800044 	addi	r2,r2,1
 4029910:	d8800415 	stw	r2,16(sp)
 4029914:	003eaf06 	br	40293d4 <_dtoa_r+0xb5c>
 4029918:	d8c00a17 	ldw	r3,40(sp)
 402991c:	18011826 	beq	r3,zero,4029d80 <_dtoa_r+0x1508>
 4029920:	d8c00617 	ldw	r3,24(sp)
 4029924:	10810cc4 	addi	r2,r2,1075
 4029928:	b0ad883a 	add	r22,r22,r2
 402992c:	1885883a 	add	r2,r3,r2
 4029930:	dd000817 	ldw	r20,32(sp)
 4029934:	1825883a 	mov	r18,r3
 4029938:	d8800615 	stw	r2,24(sp)
 402993c:	003e2806 	br	40291e0 <_dtoa_r+0x968>
 4029940:	a809883a 	mov	r4,r21
 4029944:	4030e0c0 	call	4030e0c <__floatsidf>
 4029948:	800d883a 	mov	r6,r16
 402994c:	900f883a 	mov	r7,r18
 4029950:	1009883a 	mov	r4,r2
 4029954:	180b883a 	mov	r5,r3
 4029958:	402fe100 	call	402fe10 <__muldf3>
 402995c:	000d883a 	mov	r6,zero
 4029960:	01d00734 	movhi	r7,16412
 4029964:	1009883a 	mov	r4,r2
 4029968:	180b883a 	mov	r5,r3
 402996c:	402ea740 	call	402ea74 <__adddf3>
 4029970:	1029883a 	mov	r20,r2
 4029974:	00bf3034 	movhi	r2,64704
 4029978:	1885883a 	add	r2,r3,r2
 402997c:	d8800c15 	stw	r2,48(sp)
 4029980:	8009883a 	mov	r4,r16
 4029984:	900b883a 	mov	r5,r18
 4029988:	000d883a 	mov	r6,zero
 402998c:	01d00534 	movhi	r7,16404
 4029990:	40304840 	call	4030484 <__subdf3>
 4029994:	dd400c17 	ldw	r21,48(sp)
 4029998:	a00d883a 	mov	r6,r20
 402999c:	1009883a 	mov	r4,r2
 40299a0:	a80f883a 	mov	r7,r21
 40299a4:	180b883a 	mov	r5,r3
 40299a8:	1025883a 	mov	r18,r2
 40299ac:	1821883a 	mov	r16,r3
 40299b0:	402fc400 	call	402fc40 <__gedf2>
 40299b4:	00812f16 	blt	zero,r2,4029e74 <_dtoa_r+0x15fc>
 40299b8:	a9e0003c 	xorhi	r7,r21,32768
 40299bc:	a00d883a 	mov	r6,r20
 40299c0:	9009883a 	mov	r4,r18
 40299c4:	800b883a 	mov	r5,r16
 40299c8:	402fd280 	call	402fd28 <__ledf2>
 40299cc:	103d7d0e 	bge	r2,zero,4028fc4 <_dtoa_r+0x74c>
 40299d0:	0029883a 	mov	r20,zero
 40299d4:	0021883a 	mov	r16,zero
 40299d8:	003d9806 	br	402903c <_dtoa_r+0x7c4>
 40299dc:	d9800817 	ldw	r6,32(sp)
 40299e0:	e00b883a 	mov	r5,fp
 40299e4:	b809883a 	mov	r4,r23
 40299e8:	402af580 	call	402af58 <__pow5mult>
 40299ec:	1039883a 	mov	fp,r2
 40299f0:	003e1e06 	br	402926c <_dtoa_r+0x9f4>
 40299f4:	d8800417 	ldw	r2,16(sp)
 40299f8:	1000ed26 	beq	r2,zero,4029db0 <_dtoa_r+0x1538>
 40299fc:	00a9c83a 	sub	r20,zero,r2
 4029a00:	a08003cc 	andi	r2,r20,15
 4029a04:	100690fa 	slli	r3,r2,3
 4029a08:	00800034 	movhi	r2,0
 4029a0c:	10814904 	addi	r2,r2,1316
 4029a10:	10c5883a 	add	r2,r2,r3
 4029a14:	11800017 	ldw	r6,0(r2)
 4029a18:	11c00117 	ldw	r7,4(r2)
 4029a1c:	a029d13a 	srai	r20,r20,4
 4029a20:	9809883a 	mov	r4,r19
 4029a24:	880b883a 	mov	r5,r17
 4029a28:	402fe100 	call	402fe10 <__muldf3>
 4029a2c:	1021883a 	mov	r16,r2
 4029a30:	1825883a 	mov	r18,r3
 4029a34:	a0013826 	beq	r20,zero,4029f18 <_dtoa_r+0x16a0>
 4029a38:	02000034 	movhi	r8,0
 4029a3c:	05400084 	movi	r21,2
 4029a40:	42013f04 	addi	r8,r8,1276
 4029a44:	1009883a 	mov	r4,r2
 4029a48:	9805883a 	mov	r2,r19
 4029a4c:	180b883a 	mov	r5,r3
 4029a50:	dc000c15 	stw	r16,48(sp)
 4029a54:	8827883a 	mov	r19,r17
 4029a58:	0007883a 	mov	r3,zero
 4029a5c:	a823883a 	mov	r17,r21
 4029a60:	4021883a 	mov	r16,r8
 4029a64:	102b883a 	mov	r21,r2
 4029a68:	a180004c 	andi	r6,r20,1
 4029a6c:	30000726 	beq	r6,zero,4029a8c <_dtoa_r+0x1214>
 4029a70:	81800017 	ldw	r6,0(r16)
 4029a74:	81c00117 	ldw	r7,4(r16)
 4029a78:	8c400044 	addi	r17,r17,1
 4029a7c:	402fe100 	call	402fe10 <__muldf3>
 4029a80:	180b883a 	mov	r5,r3
 4029a84:	1009883a 	mov	r4,r2
 4029a88:	00c00044 	movi	r3,1
 4029a8c:	a029d07a 	srai	r20,r20,1
 4029a90:	84000204 	addi	r16,r16,8
 4029a94:	a03ff41e 	bne	r20,zero,4029a68 <_dtoa_r+0x11f0>
 4029a98:	a805883a 	mov	r2,r21
 4029a9c:	18c03fcc 	andi	r3,r3,255
 4029aa0:	882b883a 	mov	r21,r17
 4029aa4:	dc000c17 	ldw	r16,48(sp)
 4029aa8:	9823883a 	mov	r17,r19
 4029aac:	1027883a 	mov	r19,r2
 4029ab0:	183c7726 	beq	r3,zero,4028c90 <_dtoa_r+0x418>
 4029ab4:	2021883a 	mov	r16,r4
 4029ab8:	2825883a 	mov	r18,r5
 4029abc:	003c7406 	br	4028c90 <_dtoa_r+0x418>
 4029ac0:	983eae1e 	bne	r19,zero,402957c <_dtoa_r+0xd04>
 4029ac4:	00800434 	movhi	r2,16
 4029ac8:	10bfffc4 	addi	r2,r2,-1
 4029acc:	8884703a 	and	r2,r17,r2
 4029ad0:	103f4126 	beq	r2,zero,40297d8 <_dtoa_r+0xf60>
 4029ad4:	003ea906 	br	402957c <_dtoa_r+0xd04>
 4029ad8:	9807883a 	mov	r3,r19
 4029adc:	a827883a 	mov	r19,r21
 4029ae0:	182b883a 	mov	r21,r3
 4029ae4:	d8c00417 	ldw	r3,16(sp)
 4029ae8:	18c00044 	addi	r3,r3,1
 4029aec:	d8c00415 	stw	r3,16(sp)
 4029af0:	00800d0e 	bge	zero,r2,4029b28 <_dtoa_r+0x12b0>
 4029af4:	e00b883a 	mov	r5,fp
 4029af8:	b809883a 	mov	r4,r23
 4029afc:	01800044 	movi	r6,1
 4029b00:	402b0a00 	call	402b0a0 <__lshift>
 4029b04:	a00b883a 	mov	r5,r20
 4029b08:	1009883a 	mov	r4,r2
 4029b0c:	1039883a 	mov	fp,r2
 4029b10:	402b2280 	call	402b228 <__mcmp>
 4029b14:	0080df0e 	bge	zero,r2,4029e94 <_dtoa_r+0x161c>
 4029b18:	98c00e60 	cmpeqi	r3,r19,57
 4029b1c:	1800ce1e 	bne	r3,zero,4029e58 <_dtoa_r+0x15e0>
 4029b20:	d8800617 	ldw	r2,24(sp)
 4029b24:	14c00c44 	addi	r19,r2,49
 4029b28:	8023883a 	mov	r17,r16
 4029b2c:	b4c00005 	stb	r19,0(r22)
 4029b30:	9021883a 	mov	r16,r18
 4029b34:	003e2706 	br	40293d4 <_dtoa_r+0xb5c>
 4029b38:	b82b883a 	mov	r21,r23
 4029b3c:	ddc00217 	ldw	r23,8(sp)
 4029b40:	200d883a 	mov	r6,r4
 4029b44:	280f883a 	mov	r7,r5
 4029b48:	402ea740 	call	402ea74 <__adddf3>
 4029b4c:	180b883a 	mov	r5,r3
 4029b50:	800d883a 	mov	r6,r16
 4029b54:	900f883a 	mov	r7,r18
 4029b58:	1009883a 	mov	r4,r2
 4029b5c:	1823883a 	mov	r17,r3
 4029b60:	1027883a 	mov	r19,r2
 4029b64:	402fc400 	call	402fc40 <__gedf2>
 4029b68:	d8c00417 	ldw	r3,16(sp)
 4029b6c:	18c00044 	addi	r3,r3,1
 4029b70:	d8c00415 	stw	r3,16(sp)
 4029b74:	00808c16 	blt	zero,r2,4029da8 <_dtoa_r+0x1530>
 4029b78:	800d883a 	mov	r6,r16
 4029b7c:	900f883a 	mov	r7,r18
 4029b80:	9809883a 	mov	r4,r19
 4029b84:	880b883a 	mov	r5,r17
 4029b88:	402fbc00 	call	402fbc0 <__eqdf2>
 4029b8c:	1000021e 	bne	r2,zero,4029b98 <_dtoa_r+0x1320>
 4029b90:	ad40004c 	andi	r21,r21,1
 4029b94:	a800841e 	bne	r21,zero,4029da8 <_dtoa_r+0x1530>
 4029b98:	a02b883a 	mov	r21,r20
 4029b9c:	003e1906 	br	4029404 <_dtoa_r+0xb8c>
 4029ba0:	81400117 	ldw	r5,4(r16)
 4029ba4:	b809883a 	mov	r4,r23
 4029ba8:	402a8080 	call	402a808 <_Balloc>
 4029bac:	1023883a 	mov	r17,r2
 4029bb0:	1000f326 	beq	r2,zero,4029f80 <_dtoa_r+0x1708>
 4029bb4:	81800417 	ldw	r6,16(r16)
 4029bb8:	81400304 	addi	r5,r16,12
 4029bbc:	11000304 	addi	r4,r2,12
 4029bc0:	31800084 	addi	r6,r6,2
 4029bc4:	300c90ba 	slli	r6,r6,2
 4029bc8:	40256900 	call	4025690 <memcpy>
 4029bcc:	01800044 	movi	r6,1
 4029bd0:	880b883a 	mov	r5,r17
 4029bd4:	b809883a 	mov	r4,r23
 4029bd8:	402b0a00 	call	402b0a0 <__lshift>
 4029bdc:	1025883a 	mov	r18,r2
 4029be0:	003e7d06 	br	40295d8 <_dtoa_r+0xd60>
 4029be4:	e00b883a 	mov	r5,fp
 4029be8:	b809883a 	mov	r4,r23
 4029bec:	402af580 	call	402af58 <__pow5mult>
 4029bf0:	1039883a 	mov	fp,r2
 4029bf4:	003d9d06 	br	402926c <_dtoa_r+0x9f4>
 4029bf8:	d8800617 	ldw	r2,24(sp)
 4029bfc:	d8c00517 	ldw	r3,20(sp)
 4029c00:	10e5c83a 	sub	r18,r2,r3
 4029c04:	003d7606 	br	40291e0 <_dtoa_r+0x968>
 4029c08:	d8c00417 	ldw	r3,16(sp)
 4029c0c:	9805883a 	mov	r2,r19
 4029c10:	a827883a 	mov	r19,r21
 4029c14:	18c00044 	addi	r3,r3,1
 4029c18:	102b883a 	mov	r21,r2
 4029c1c:	d8c00415 	stw	r3,16(sp)
 4029c20:	98800e58 	cmpnei	r2,r19,57
 4029c24:	10008c26 	beq	r2,zero,4029e58 <_dtoa_r+0x15e0>
 4029c28:	98c00044 	addi	r3,r19,1
 4029c2c:	8023883a 	mov	r17,r16
 4029c30:	b0c00005 	stb	r3,0(r22)
 4029c34:	9021883a 	mov	r16,r18
 4029c38:	003de606 	br	40293d4 <_dtoa_r+0xb5c>
 4029c3c:	9805883a 	mov	r2,r19
 4029c40:	a827883a 	mov	r19,r21
 4029c44:	102b883a 	mov	r21,r2
 4029c48:	d8800417 	ldw	r2,16(sp)
 4029c4c:	8023883a 	mov	r17,r16
 4029c50:	9021883a 	mov	r16,r18
 4029c54:	10800044 	addi	r2,r2,1
 4029c58:	d8800415 	stw	r2,16(sp)
 4029c5c:	003dc606 	br	4029378 <_dtoa_r+0xb00>
 4029c60:	d9400c17 	ldw	r5,48(sp)
 4029c64:	a009883a 	mov	r4,r20
 4029c68:	402fe100 	call	402fe10 <__muldf3>
 4029c6c:	d9800d17 	ldw	r6,52(sp)
 4029c70:	d9400117 	ldw	r5,4(sp)
 4029c74:	d9001017 	ldw	r4,64(sp)
 4029c78:	d8800c15 	stw	r2,48(sp)
 4029c7c:	d8c00d15 	stw	r3,52(sp)
 4029c80:	29000005 	stb	r4,0(r5)
 4029c84:	31000058 	cmpnei	r4,r6,1
 4029c88:	29a9883a 	add	r20,r5,r6
 4029c8c:	2000a026 	beq	r4,zero,4029f10 <_dtoa_r+0x1698>
 4029c90:	dc400e15 	stw	r17,56(sp)
 4029c94:	8009883a 	mov	r4,r16
 4029c98:	900b883a 	mov	r5,r18
 4029c9c:	a823883a 	mov	r17,r21
 4029ca0:	000d883a 	mov	r6,zero
 4029ca4:	01d00934 	movhi	r7,16420
 4029ca8:	402fe100 	call	402fe10 <__muldf3>
 4029cac:	180b883a 	mov	r5,r3
 4029cb0:	1009883a 	mov	r4,r2
 4029cb4:	1825883a 	mov	r18,r3
 4029cb8:	102b883a 	mov	r21,r2
 4029cbc:	4030d8c0 	call	4030d8c <__fixdfsi>
 4029cc0:	1009883a 	mov	r4,r2
 4029cc4:	1021883a 	mov	r16,r2
 4029cc8:	4030e0c0 	call	4030e0c <__floatsidf>
 4029ccc:	a809883a 	mov	r4,r21
 4029cd0:	900b883a 	mov	r5,r18
 4029cd4:	100d883a 	mov	r6,r2
 4029cd8:	180f883a 	mov	r7,r3
 4029cdc:	8c400044 	addi	r17,r17,1
 4029ce0:	84000c04 	addi	r16,r16,48
 4029ce4:	40304840 	call	4030484 <__subdf3>
 4029ce8:	8c3fffc5 	stb	r16,-1(r17)
 4029cec:	1009883a 	mov	r4,r2
 4029cf0:	180b883a 	mov	r5,r3
 4029cf4:	a47fea1e 	bne	r20,r17,4029ca0 <_dtoa_r+0x1428>
 4029cf8:	dc400e17 	ldw	r17,56(sp)
 4029cfc:	1021883a 	mov	r16,r2
 4029d00:	1825883a 	mov	r18,r3
 4029d04:	d9000c17 	ldw	r4,48(sp)
 4029d08:	d9400d17 	ldw	r5,52(sp)
 4029d0c:	000d883a 	mov	r6,zero
 4029d10:	01cff834 	movhi	r7,16352
 4029d14:	402ea740 	call	402ea74 <__adddf3>
 4029d18:	800d883a 	mov	r6,r16
 4029d1c:	900f883a 	mov	r7,r18
 4029d20:	1009883a 	mov	r4,r2
 4029d24:	180b883a 	mov	r5,r3
 4029d28:	402fd280 	call	402fd28 <__ledf2>
 4029d2c:	10005416 	blt	r2,zero,4029e80 <_dtoa_r+0x1608>
 4029d30:	d9800c17 	ldw	r6,48(sp)
 4029d34:	d9c00d17 	ldw	r7,52(sp)
 4029d38:	0009883a 	mov	r4,zero
 4029d3c:	014ff834 	movhi	r5,16352
 4029d40:	40304840 	call	4030484 <__subdf3>
 4029d44:	800d883a 	mov	r6,r16
 4029d48:	900f883a 	mov	r7,r18
 4029d4c:	1009883a 	mov	r4,r2
 4029d50:	180b883a 	mov	r5,r3
 4029d54:	402fc400 	call	402fc40 <__gedf2>
 4029d58:	00bc9a0e 	bge	zero,r2,4028fc4 <_dtoa_r+0x74c>
 4029d5c:	a0bfffc7 	ldb	r2,-1(r20)
 4029d60:	a02b883a 	mov	r21,r20
 4029d64:	a53fffc4 	addi	r20,r20,-1
 4029d68:	10800c20 	cmpeqi	r2,r2,48
 4029d6c:	103ffb1e 	bne	r2,zero,4029d5c <_dtoa_r+0x14e4>
 4029d70:	d8801117 	ldw	r2,68(sp)
 4029d74:	10800044 	addi	r2,r2,1
 4029d78:	d8800415 	stw	r2,16(sp)
 4029d7c:	003da106 	br	4029404 <_dtoa_r+0xb8c>
 4029d80:	d8c01217 	ldw	r3,72(sp)
 4029d84:	d9000617 	ldw	r4,24(sp)
 4029d88:	00800d84 	movi	r2,54
 4029d8c:	10c5c83a 	sub	r2,r2,r3
 4029d90:	b0ad883a 	add	r22,r22,r2
 4029d94:	2085883a 	add	r2,r4,r2
 4029d98:	dd000817 	ldw	r20,32(sp)
 4029d9c:	2025883a 	mov	r18,r4
 4029da0:	d8800615 	stw	r2,24(sp)
 4029da4:	003d0e06 	br	40291e0 <_dtoa_r+0x968>
 4029da8:	d9000117 	ldw	r4,4(sp)
 4029dac:	003c4b06 	br	4028edc <_dtoa_r+0x664>
 4029db0:	9821883a 	mov	r16,r19
 4029db4:	8825883a 	mov	r18,r17
 4029db8:	05400084 	movi	r21,2
 4029dbc:	003bb406 	br	4028c90 <_dtoa_r+0x418>
 4029dc0:	d8800517 	ldw	r2,20(sp)
 4029dc4:	103ede26 	beq	r2,zero,4029940 <_dtoa_r+0x10c8>
 4029dc8:	d8800b17 	ldw	r2,44(sp)
 4029dcc:	00bc7d0e 	bge	zero,r2,4028fc4 <_dtoa_r+0x74c>
 4029dd0:	900b883a 	mov	r5,r18
 4029dd4:	8009883a 	mov	r4,r16
 4029dd8:	000d883a 	mov	r6,zero
 4029ddc:	01d00934 	movhi	r7,16420
 4029de0:	402fe100 	call	402fe10 <__muldf3>
 4029de4:	a9000044 	addi	r4,r21,1
 4029de8:	1021883a 	mov	r16,r2
 4029dec:	1825883a 	mov	r18,r3
 4029df0:	4030e0c0 	call	4030e0c <__floatsidf>
 4029df4:	800d883a 	mov	r6,r16
 4029df8:	900f883a 	mov	r7,r18
 4029dfc:	1009883a 	mov	r4,r2
 4029e00:	180b883a 	mov	r5,r3
 4029e04:	402fe100 	call	402fe10 <__muldf3>
 4029e08:	1009883a 	mov	r4,r2
 4029e0c:	000d883a 	mov	r6,zero
 4029e10:	01d00734 	movhi	r7,16412
 4029e14:	180b883a 	mov	r5,r3
 4029e18:	402ea740 	call	402ea74 <__adddf3>
 4029e1c:	d9000417 	ldw	r4,16(sp)
 4029e20:	1029883a 	mov	r20,r2
 4029e24:	00bf3034 	movhi	r2,64704
 4029e28:	1887883a 	add	r3,r3,r2
 4029e2c:	d8800b17 	ldw	r2,44(sp)
 4029e30:	213fffc4 	addi	r4,r4,-1
 4029e34:	d9001115 	stw	r4,68(sp)
 4029e38:	d8c00c15 	stw	r3,48(sp)
 4029e3c:	d8800d15 	stw	r2,52(sp)
 4029e40:	003bb106 	br	4028d08 <_dtoa_r+0x490>
 4029e44:	d8800417 	ldw	r2,16(sp)
 4029e48:	00c00c44 	movi	r3,49
 4029e4c:	10800044 	addi	r2,r2,1
 4029e50:	d8800415 	stw	r2,16(sp)
 4029e54:	003c2a06 	br	4028f00 <_dtoa_r+0x688>
 4029e58:	00800e44 	movi	r2,57
 4029e5c:	8023883a 	mov	r17,r16
 4029e60:	d9400117 	ldw	r5,4(sp)
 4029e64:	b0800005 	stb	r2,0(r22)
 4029e68:	9021883a 	mov	r16,r18
 4029e6c:	01000e44 	movi	r4,57
 4029e70:	003d5006 	br	40293b4 <_dtoa_r+0xb3c>
 4029e74:	0029883a 	mov	r20,zero
 4029e78:	0021883a 	mov	r16,zero
 4029e7c:	003e7106 	br	4029844 <_dtoa_r+0xfcc>
 4029e80:	d8801117 	ldw	r2,68(sp)
 4029e84:	d9000117 	ldw	r4,4(sp)
 4029e88:	10800044 	addi	r2,r2,1
 4029e8c:	d8800415 	stw	r2,16(sp)
 4029e90:	003c1206 	br	4028edc <_dtoa_r+0x664>
 4029e94:	103f241e 	bne	r2,zero,4029b28 <_dtoa_r+0x12b0>
 4029e98:	9880004c 	andi	r2,r19,1
 4029e9c:	103f1e1e 	bne	r2,zero,4029b18 <_dtoa_r+0x12a0>
 4029ea0:	003f2106 	br	4029b28 <_dtoa_r+0x12b0>
 4029ea4:	d8801117 	ldw	r2,68(sp)
 4029ea8:	ddc00d17 	ldw	r23,52(sp)
 4029eac:	10800044 	addi	r2,r2,1
 4029eb0:	d8800415 	stw	r2,16(sp)
 4029eb4:	003d5306 	br	4029404 <_dtoa_r+0xb8c>
 4029eb8:	d8c00417 	ldw	r3,16(sp)
 4029ebc:	a8800e60 	cmpeqi	r2,r21,57
 4029ec0:	a827883a 	mov	r19,r21
 4029ec4:	18c00044 	addi	r3,r3,1
 4029ec8:	d8c00415 	stw	r3,16(sp)
 4029ecc:	b5400044 	addi	r21,r22,1
 4029ed0:	103fe11e 	bne	r2,zero,4029e58 <_dtoa_r+0x15e0>
 4029ed4:	047f1216 	blt	zero,r17,4029b20 <_dtoa_r+0x12a8>
 4029ed8:	003f1306 	br	4029b28 <_dtoa_r+0x12b0>
 4029edc:	d8800217 	ldw	r2,8(sp)
 4029ee0:	108000c8 	cmpgei	r2,r2,3
 4029ee4:	103e481e 	bne	r2,zero,4029808 <_dtoa_r+0xf90>
 4029ee8:	dd400415 	stw	r21,16(sp)
 4029eec:	003e0d06 	br	4029724 <_dtoa_r+0xeac>
 4029ef0:	d8800217 	ldw	r2,8(sp)
 4029ef4:	108000c8 	cmpgei	r2,r2,3
 4029ef8:	103e431e 	bne	r2,zero,4029808 <_dtoa_r+0xf90>
 4029efc:	d8800b17 	ldw	r2,44(sp)
 4029f00:	dd400415 	stw	r21,16(sp)
 4029f04:	d8800515 	stw	r2,20(sp)
 4029f08:	04bdb10e 	bge	zero,r18,40295d0 <_dtoa_r+0xd58>
 4029f0c:	003e5c06 	br	4029880 <_dtoa_r+0x1008>
 4029f10:	a829883a 	mov	r20,r21
 4029f14:	003f7b06 	br	4029d04 <_dtoa_r+0x148c>
 4029f18:	05400084 	movi	r21,2
 4029f1c:	003b5c06 	br	4028c90 <_dtoa_r+0x418>
 4029f20:	01c00034 	movhi	r7,0
 4029f24:	01000034 	movhi	r4,0
 4029f28:	39c10f04 	addi	r7,r7,1084
 4029f2c:	000d883a 	mov	r6,zero
 4029f30:	01406a84 	movi	r5,426
 4029f34:	21011404 	addi	r4,r4,1104
 4029f38:	402d44c0 	call	402d44c <__assert_func>
 4029f3c:	000b883a 	mov	r5,zero
 4029f40:	003b1506 	br	4028b98 <_dtoa_r+0x320>
 4029f44:	b8001115 	stw	zero,68(r23)
 4029f48:	000b883a 	mov	r5,zero
 4029f4c:	b809883a 	mov	r4,r23
 4029f50:	402a8080 	call	402a808 <_Balloc>
 4029f54:	d8800115 	stw	r2,4(sp)
 4029f58:	103ff126 	beq	r2,zero,4029f20 <_dtoa_r+0x16a8>
 4029f5c:	d8800117 	ldw	r2,4(sp)
 4029f60:	d8001e15 	stw	zero,120(sp)
 4029f64:	b8801015 	stw	r2,64(r23)
 4029f68:	00bfffc4 	movi	r2,-1
 4029f6c:	d8800515 	stw	r2,20(sp)
 4029f70:	d8800b15 	stw	r2,44(sp)
 4029f74:	00800044 	movi	r2,1
 4029f78:	d8800715 	stw	r2,28(sp)
 4029f7c:	003c1106 	br	4028fc4 <_dtoa_r+0x74c>
 4029f80:	01c00034 	movhi	r7,0
 4029f84:	01000034 	movhi	r4,0
 4029f88:	39c10f04 	addi	r7,r7,1084
 4029f8c:	000d883a 	mov	r6,zero
 4029f90:	0140ba84 	movi	r5,746
 4029f94:	21011404 	addi	r4,r4,1104
 4029f98:	402d44c0 	call	402d44c <__assert_func>
 4029f9c:	00800034 	movhi	r2,0
 4029fa0:	10810c04 	addi	r2,r2,1072
 4029fa4:	d8800115 	stw	r2,4(sp)
 4029fa8:	003a6506 	br	4028940 <_dtoa_r+0xc8>
 4029fac:	18c00120 	cmpeqi	r3,r3,4
 4029fb0:	183cc91e 	bne	r3,zero,40292d8 <_dtoa_r+0xa60>
 4029fb4:	00c00f04 	movi	r3,60
 4029fb8:	1885c83a 	sub	r2,r3,r2
 4029fbc:	003cc106 	br	40292c4 <_dtoa_r+0xa4c>

04029fc0 <__sflags>:
 4029fc0:	28800007 	ldb	r2,0(r5)
 4029fc4:	10c01ca0 	cmpeqi	r3,r2,114
 4029fc8:	1800271e 	bne	r3,zero,402a068 <__sflags+0xa8>
 4029fcc:	10c01de0 	cmpeqi	r3,r2,119
 4029fd0:	1800061e 	bne	r3,zero,4029fec <__sflags+0x2c>
 4029fd4:	10801860 	cmpeqi	r2,r2,97
 4029fd8:	10001f1e 	bne	r2,zero,402a058 <__sflags+0x98>
 4029fdc:	00800584 	movi	r2,22
 4029fe0:	20800015 	stw	r2,0(r4)
 4029fe4:	0005883a 	mov	r2,zero
 4029fe8:	f800283a 	ret
 4029fec:	02018004 	movi	r8,1536
 4029ff0:	01000044 	movi	r4,1
 4029ff4:	00800204 	movi	r2,8
 4029ff8:	28c00047 	ldb	r3,1(r5)
 4029ffc:	29400044 	addi	r5,r5,1
 402a000:	18001226 	beq	r3,zero,402a04c <__sflags+0x8c>
 402a004:	02bff8c4 	movi	r10,-29
 402a008:	027fff04 	movi	r9,-4
 402a00c:	00000506 	br	402a024 <__sflags+0x64>
 402a010:	18000126 	beq	r3,zero,402a018 <__sflags+0x58>
 402a014:	21020014 	ori	r4,r4,2048
 402a018:	28c00047 	ldb	r3,1(r5)
 402a01c:	29400044 	addi	r5,r5,1
 402a020:	18000a26 	beq	r3,zero,402a04c <__sflags+0x8c>
 402a024:	19c00ae0 	cmpeqi	r7,r3,43
 402a028:	18c01e20 	cmpeqi	r3,r3,120
 402a02c:	383ff826 	beq	r7,zero,402a010 <__sflags+0x50>
 402a030:	28c00047 	ldb	r3,1(r5)
 402a034:	1284703a 	and	r2,r2,r10
 402a038:	2248703a 	and	r4,r4,r9
 402a03c:	10800414 	ori	r2,r2,16
 402a040:	21000094 	ori	r4,r4,2
 402a044:	29400044 	addi	r5,r5,1
 402a048:	183ff61e 	bne	r3,zero,402a024 <__sflags+0x64>
 402a04c:	4108b03a 	or	r4,r8,r4
 402a050:	31000015 	stw	r4,0(r6)
 402a054:	f800283a 	ret
 402a058:	02008204 	movi	r8,520
 402a05c:	01000044 	movi	r4,1
 402a060:	00804204 	movi	r2,264
 402a064:	003fe406 	br	4029ff8 <__sflags+0x38>
 402a068:	0011883a 	mov	r8,zero
 402a06c:	0009883a 	mov	r4,zero
 402a070:	00800104 	movi	r2,4
 402a074:	003fe006 	br	4029ff8 <__sflags+0x38>

0402a078 <__sfvwrite_r>:
 402a078:	30800217 	ldw	r2,8(r6)
 402a07c:	1000a226 	beq	r2,zero,402a308 <__sfvwrite_r+0x290>
 402a080:	29c0030b 	ldhu	r7,12(r5)
 402a084:	defff404 	addi	sp,sp,-48
 402a088:	ddc00915 	stw	r23,36(sp)
 402a08c:	dd400715 	stw	r21,28(sp)
 402a090:	dc000215 	stw	r16,8(sp)
 402a094:	dfc00b15 	stw	ra,44(sp)
 402a098:	df000a15 	stw	fp,40(sp)
 402a09c:	dd800815 	stw	r22,32(sp)
 402a0a0:	dd000615 	stw	r20,24(sp)
 402a0a4:	dcc00515 	stw	r19,20(sp)
 402a0a8:	dc800415 	stw	r18,16(sp)
 402a0ac:	dc400315 	stw	r17,12(sp)
 402a0b0:	3880020c 	andi	r2,r7,8
 402a0b4:	302f883a 	mov	r23,r6
 402a0b8:	202b883a 	mov	r21,r4
 402a0bc:	2821883a 	mov	r16,r5
 402a0c0:	10002226 	beq	r2,zero,402a14c <__sfvwrite_r+0xd4>
 402a0c4:	28800417 	ldw	r2,16(r5)
 402a0c8:	10002026 	beq	r2,zero,402a14c <__sfvwrite_r+0xd4>
 402a0cc:	3880008c 	andi	r2,r7,2
 402a0d0:	bc400017 	ldw	r17,0(r23)
 402a0d4:	10002526 	beq	r2,zero,402a16c <__sfvwrite_r+0xf4>
 402a0d8:	80800917 	ldw	r2,36(r16)
 402a0dc:	81400717 	ldw	r5,28(r16)
 402a0e0:	05200034 	movhi	r20,32768
 402a0e4:	0027883a 	mov	r19,zero
 402a0e8:	0025883a 	mov	r18,zero
 402a0ec:	a53f0004 	addi	r20,r20,-1024
 402a0f0:	980d883a 	mov	r6,r19
 402a0f4:	a809883a 	mov	r4,r21
 402a0f8:	90001026 	beq	r18,zero,402a13c <__sfvwrite_r+0xc4>
 402a0fc:	900f883a 	mov	r7,r18
 402a100:	a480012e 	bgeu	r20,r18,402a108 <__sfvwrite_r+0x90>
 402a104:	a00f883a 	mov	r7,r20
 402a108:	103ee83a 	callr	r2
 402a10c:	0080790e 	bge	zero,r2,402a2f4 <__sfvwrite_r+0x27c>
 402a110:	b9000217 	ldw	r4,8(r23)
 402a114:	98a7883a 	add	r19,r19,r2
 402a118:	90a5c83a 	sub	r18,r18,r2
 402a11c:	2085c83a 	sub	r2,r4,r2
 402a120:	b8800215 	stw	r2,8(r23)
 402a124:	10006226 	beq	r2,zero,402a2b0 <__sfvwrite_r+0x238>
 402a128:	80800917 	ldw	r2,36(r16)
 402a12c:	81400717 	ldw	r5,28(r16)
 402a130:	980d883a 	mov	r6,r19
 402a134:	a809883a 	mov	r4,r21
 402a138:	903ff01e 	bne	r18,zero,402a0fc <__sfvwrite_r+0x84>
 402a13c:	8cc00017 	ldw	r19,0(r17)
 402a140:	8c800117 	ldw	r18,4(r17)
 402a144:	8c400204 	addi	r17,r17,8
 402a148:	003fe906 	br	402a0f0 <__sfvwrite_r+0x78>
 402a14c:	800b883a 	mov	r5,r16
 402a150:	a809883a 	mov	r4,r21
 402a154:	40284c00 	call	40284c0 <__swsetup_r>
 402a158:	1000f31e 	bne	r2,zero,402a528 <__sfvwrite_r+0x4b0>
 402a15c:	81c0030b 	ldhu	r7,12(r16)
 402a160:	bc400017 	ldw	r17,0(r23)
 402a164:	3880008c 	andi	r2,r7,2
 402a168:	103fdb1e 	bne	r2,zero,402a0d8 <__sfvwrite_r+0x60>
 402a16c:	3880004c 	andi	r2,r7,1
 402a170:	84800217 	ldw	r18,8(r16)
 402a174:	82000017 	ldw	r8,0(r16)
 402a178:	1000651e 	bne	r2,zero,402a310 <__sfvwrite_r+0x298>
 402a17c:	00a00034 	movhi	r2,32768
 402a180:	10bfff84 	addi	r2,r2,-2
 402a184:	00e00034 	movhi	r3,32768
 402a188:	d8800015 	stw	r2,0(sp)
 402a18c:	18bfffc4 	addi	r2,r3,-1
 402a190:	0039883a 	mov	fp,zero
 402a194:	0027883a 	mov	r19,zero
 402a198:	d8800115 	stw	r2,4(sp)
 402a19c:	98004026 	beq	r19,zero,402a2a0 <__sfvwrite_r+0x228>
 402a1a0:	3880800c 	andi	r2,r7,512
 402a1a4:	10009626 	beq	r2,zero,402a400 <__sfvwrite_r+0x388>
 402a1a8:	902d883a 	mov	r22,r18
 402a1ac:	9c80ba36 	bltu	r19,r18,402a498 <__sfvwrite_r+0x420>
 402a1b0:	3881200c 	andi	r2,r7,1152
 402a1b4:	10002526 	beq	r2,zero,402a24c <__sfvwrite_r+0x1d4>
 402a1b8:	81000517 	ldw	r4,20(r16)
 402a1bc:	81400417 	ldw	r5,16(r16)
 402a1c0:	98800044 	addi	r2,r19,1
 402a1c4:	210000e4 	muli	r4,r4,3
 402a1c8:	4165c83a 	sub	r18,r8,r5
 402a1cc:	1485883a 	add	r2,r2,r18
 402a1d0:	2028d7fa 	srli	r20,r4,31
 402a1d4:	a109883a 	add	r4,r20,r4
 402a1d8:	2029d07a 	srai	r20,r4,1
 402a1dc:	a00d883a 	mov	r6,r20
 402a1e0:	a080022e 	bgeu	r20,r2,402a1ec <__sfvwrite_r+0x174>
 402a1e4:	1029883a 	mov	r20,r2
 402a1e8:	100d883a 	mov	r6,r2
 402a1ec:	39c1000c 	andi	r7,r7,1024
 402a1f0:	3800bd26 	beq	r7,zero,402a4e8 <__sfvwrite_r+0x470>
 402a1f4:	a809883a 	mov	r4,r21
 402a1f8:	300b883a 	mov	r5,r6
 402a1fc:	4024eb00 	call	4024eb0 <_malloc_r>
 402a200:	1009883a 	mov	r4,r2
 402a204:	1000c426 	beq	r2,zero,402a518 <__sfvwrite_r+0x4a0>
 402a208:	81400417 	ldw	r5,16(r16)
 402a20c:	900d883a 	mov	r6,r18
 402a210:	40256900 	call	4025690 <memcpy>
 402a214:	1009883a 	mov	r4,r2
 402a218:	8080030b 	ldhu	r2,12(r16)
 402a21c:	00fedfc4 	movi	r3,-1153
 402a220:	10c4703a 	and	r2,r2,r3
 402a224:	10802014 	ori	r2,r2,128
 402a228:	8080030d 	sth	r2,12(r16)
 402a22c:	2491883a 	add	r8,r4,r18
 402a230:	a485c83a 	sub	r2,r20,r18
 402a234:	81000415 	stw	r4,16(r16)
 402a238:	82000015 	stw	r8,0(r16)
 402a23c:	85000515 	stw	r20,20(r16)
 402a240:	9825883a 	mov	r18,r19
 402a244:	80800215 	stw	r2,8(r16)
 402a248:	982d883a 	mov	r22,r19
 402a24c:	4009883a 	mov	r4,r8
 402a250:	b00d883a 	mov	r6,r22
 402a254:	e00b883a 	mov	r5,fp
 402a258:	402a6dc0 	call	402a6dc <memmove>
 402a25c:	81000217 	ldw	r4,8(r16)
 402a260:	80800017 	ldw	r2,0(r16)
 402a264:	9829883a 	mov	r20,r19
 402a268:	24a5c83a 	sub	r18,r4,r18
 402a26c:	1585883a 	add	r2,r2,r22
 402a270:	84800215 	stw	r18,8(r16)
 402a274:	80800015 	stw	r2,0(r16)
 402a278:	0027883a 	mov	r19,zero
 402a27c:	b8800217 	ldw	r2,8(r23)
 402a280:	e539883a 	add	fp,fp,r20
 402a284:	1529c83a 	sub	r20,r2,r20
 402a288:	bd000215 	stw	r20,8(r23)
 402a28c:	a0000826 	beq	r20,zero,402a2b0 <__sfvwrite_r+0x238>
 402a290:	81c0030b 	ldhu	r7,12(r16)
 402a294:	84800217 	ldw	r18,8(r16)
 402a298:	82000017 	ldw	r8,0(r16)
 402a29c:	983fc01e 	bne	r19,zero,402a1a0 <__sfvwrite_r+0x128>
 402a2a0:	8f000017 	ldw	fp,0(r17)
 402a2a4:	8cc00117 	ldw	r19,4(r17)
 402a2a8:	8c400204 	addi	r17,r17,8
 402a2ac:	003fbb06 	br	402a19c <__sfvwrite_r+0x124>
 402a2b0:	0005883a 	mov	r2,zero
 402a2b4:	dfc00b17 	ldw	ra,44(sp)
 402a2b8:	df000a17 	ldw	fp,40(sp)
 402a2bc:	ddc00917 	ldw	r23,36(sp)
 402a2c0:	dd800817 	ldw	r22,32(sp)
 402a2c4:	dd400717 	ldw	r21,28(sp)
 402a2c8:	dd000617 	ldw	r20,24(sp)
 402a2cc:	dcc00517 	ldw	r19,20(sp)
 402a2d0:	dc800417 	ldw	r18,16(sp)
 402a2d4:	dc400317 	ldw	r17,12(sp)
 402a2d8:	dc000217 	ldw	r16,8(sp)
 402a2dc:	dec00c04 	addi	sp,sp,48
 402a2e0:	f800283a 	ret
 402a2e4:	800b883a 	mov	r5,r16
 402a2e8:	a809883a 	mov	r4,r21
 402a2ec:	40238280 	call	4023828 <_fflush_r>
 402a2f0:	10002026 	beq	r2,zero,402a374 <__sfvwrite_r+0x2fc>
 402a2f4:	8080030b 	ldhu	r2,12(r16)
 402a2f8:	10801014 	ori	r2,r2,64
 402a2fc:	8080030d 	sth	r2,12(r16)
 402a300:	00bfffc4 	movi	r2,-1
 402a304:	003feb06 	br	402a2b4 <__sfvwrite_r+0x23c>
 402a308:	0005883a 	mov	r2,zero
 402a30c:	f800283a 	ret
 402a310:	002d883a 	mov	r22,zero
 402a314:	0027883a 	mov	r19,zero
 402a318:	0005883a 	mov	r2,zero
 402a31c:	0039883a 	mov	fp,zero
 402a320:	b0001d26 	beq	r22,zero,402a398 <__sfvwrite_r+0x320>
 402a324:	10002026 	beq	r2,zero,402a3a8 <__sfvwrite_r+0x330>
 402a328:	9829883a 	mov	r20,r19
 402a32c:	b500012e 	bgeu	r22,r20,402a334 <__sfvwrite_r+0x2bc>
 402a330:	b029883a 	mov	r20,r22
 402a334:	80800417 	ldw	r2,16(r16)
 402a338:	81c00517 	ldw	r7,20(r16)
 402a33c:	1200022e 	bgeu	r2,r8,402a348 <__sfvwrite_r+0x2d0>
 402a340:	3ca5883a 	add	r18,r7,r18
 402a344:	95002216 	blt	r18,r20,402a3d0 <__sfvwrite_r+0x358>
 402a348:	a1c05616 	blt	r20,r7,402a4a4 <__sfvwrite_r+0x42c>
 402a34c:	80800917 	ldw	r2,36(r16)
 402a350:	81400717 	ldw	r5,28(r16)
 402a354:	e00d883a 	mov	r6,fp
 402a358:	a809883a 	mov	r4,r21
 402a35c:	103ee83a 	callr	r2
 402a360:	1025883a 	mov	r18,r2
 402a364:	00bfe30e 	bge	zero,r2,402a2f4 <__sfvwrite_r+0x27c>
 402a368:	9ca7c83a 	sub	r19,r19,r18
 402a36c:	983fdd26 	beq	r19,zero,402a2e4 <__sfvwrite_r+0x26c>
 402a370:	00800044 	movi	r2,1
 402a374:	b9800217 	ldw	r6,8(r23)
 402a378:	e4b9883a 	add	fp,fp,r18
 402a37c:	b4adc83a 	sub	r22,r22,r18
 402a380:	34a5c83a 	sub	r18,r6,r18
 402a384:	bc800215 	stw	r18,8(r23)
 402a388:	903fc926 	beq	r18,zero,402a2b0 <__sfvwrite_r+0x238>
 402a38c:	84800217 	ldw	r18,8(r16)
 402a390:	82000017 	ldw	r8,0(r16)
 402a394:	b03fe31e 	bne	r22,zero,402a324 <__sfvwrite_r+0x2ac>
 402a398:	8d800117 	ldw	r22,4(r17)
 402a39c:	8f000017 	ldw	fp,0(r17)
 402a3a0:	8c400204 	addi	r17,r17,8
 402a3a4:	b03ffc26 	beq	r22,zero,402a398 <__sfvwrite_r+0x320>
 402a3a8:	b00d883a 	mov	r6,r22
 402a3ac:	01400284 	movi	r5,10
 402a3b0:	e009883a 	mov	r4,fp
 402a3b4:	da000015 	stw	r8,0(sp)
 402a3b8:	402a60c0 	call	402a60c <memchr>
 402a3bc:	da000017 	ldw	r8,0(sp)
 402a3c0:	10004626 	beq	r2,zero,402a4dc <__sfvwrite_r+0x464>
 402a3c4:	10800044 	addi	r2,r2,1
 402a3c8:	1727c83a 	sub	r19,r2,fp
 402a3cc:	003fd606 	br	402a328 <__sfvwrite_r+0x2b0>
 402a3d0:	e00b883a 	mov	r5,fp
 402a3d4:	4009883a 	mov	r4,r8
 402a3d8:	900d883a 	mov	r6,r18
 402a3dc:	402a6dc0 	call	402a6dc <memmove>
 402a3e0:	80800017 	ldw	r2,0(r16)
 402a3e4:	800b883a 	mov	r5,r16
 402a3e8:	a809883a 	mov	r4,r21
 402a3ec:	1485883a 	add	r2,r2,r18
 402a3f0:	80800015 	stw	r2,0(r16)
 402a3f4:	40238280 	call	4023828 <_fflush_r>
 402a3f8:	103fdb26 	beq	r2,zero,402a368 <__sfvwrite_r+0x2f0>
 402a3fc:	003fbd06 	br	402a2f4 <__sfvwrite_r+0x27c>
 402a400:	80800417 	ldw	r2,16(r16)
 402a404:	12001136 	bltu	r2,r8,402a44c <__sfvwrite_r+0x3d4>
 402a408:	85000517 	ldw	r20,20(r16)
 402a40c:	9d000f36 	bltu	r19,r20,402a44c <__sfvwrite_r+0x3d4>
 402a410:	d8800017 	ldw	r2,0(sp)
 402a414:	14c02f2e 	bgeu	r2,r19,402a4d4 <__sfvwrite_r+0x45c>
 402a418:	d9000117 	ldw	r4,4(sp)
 402a41c:	a00b883a 	mov	r5,r20
 402a420:	40224b00 	call	40224b0 <__divsi3>
 402a424:	150f383a 	mul	r7,r2,r20
 402a428:	82000917 	ldw	r8,36(r16)
 402a42c:	81400717 	ldw	r5,28(r16)
 402a430:	e00d883a 	mov	r6,fp
 402a434:	a809883a 	mov	r4,r21
 402a438:	403ee83a 	callr	r8
 402a43c:	1029883a 	mov	r20,r2
 402a440:	00bfac0e 	bge	zero,r2,402a2f4 <__sfvwrite_r+0x27c>
 402a444:	9d27c83a 	sub	r19,r19,r20
 402a448:	003f8c06 	br	402a27c <__sfvwrite_r+0x204>
 402a44c:	9029883a 	mov	r20,r18
 402a450:	9c80012e 	bgeu	r19,r18,402a458 <__sfvwrite_r+0x3e0>
 402a454:	9829883a 	mov	r20,r19
 402a458:	4009883a 	mov	r4,r8
 402a45c:	a00d883a 	mov	r6,r20
 402a460:	e00b883a 	mov	r5,fp
 402a464:	402a6dc0 	call	402a6dc <memmove>
 402a468:	80800217 	ldw	r2,8(r16)
 402a46c:	81000017 	ldw	r4,0(r16)
 402a470:	1505c83a 	sub	r2,r2,r20
 402a474:	2509883a 	add	r4,r4,r20
 402a478:	80800215 	stw	r2,8(r16)
 402a47c:	81000015 	stw	r4,0(r16)
 402a480:	103ff01e 	bne	r2,zero,402a444 <__sfvwrite_r+0x3cc>
 402a484:	800b883a 	mov	r5,r16
 402a488:	a809883a 	mov	r4,r21
 402a48c:	40238280 	call	4023828 <_fflush_r>
 402a490:	103fec26 	beq	r2,zero,402a444 <__sfvwrite_r+0x3cc>
 402a494:	003f9706 	br	402a2f4 <__sfvwrite_r+0x27c>
 402a498:	9825883a 	mov	r18,r19
 402a49c:	982d883a 	mov	r22,r19
 402a4a0:	003f6a06 	br	402a24c <__sfvwrite_r+0x1d4>
 402a4a4:	4009883a 	mov	r4,r8
 402a4a8:	a00d883a 	mov	r6,r20
 402a4ac:	e00b883a 	mov	r5,fp
 402a4b0:	402a6dc0 	call	402a6dc <memmove>
 402a4b4:	81000217 	ldw	r4,8(r16)
 402a4b8:	80800017 	ldw	r2,0(r16)
 402a4bc:	a025883a 	mov	r18,r20
 402a4c0:	2509c83a 	sub	r4,r4,r20
 402a4c4:	1505883a 	add	r2,r2,r20
 402a4c8:	81000215 	stw	r4,8(r16)
 402a4cc:	80800015 	stw	r2,0(r16)
 402a4d0:	003fa506 	br	402a368 <__sfvwrite_r+0x2f0>
 402a4d4:	9809883a 	mov	r4,r19
 402a4d8:	003fd006 	br	402a41c <__sfvwrite_r+0x3a4>
 402a4dc:	b5000044 	addi	r20,r22,1
 402a4e0:	a027883a 	mov	r19,r20
 402a4e4:	003f9106 	br	402a32c <__sfvwrite_r+0x2b4>
 402a4e8:	a809883a 	mov	r4,r21
 402a4ec:	402b9cc0 	call	402b9cc <_realloc_r>
 402a4f0:	1009883a 	mov	r4,r2
 402a4f4:	103f4d1e 	bne	r2,zero,402a22c <__sfvwrite_r+0x1b4>
 402a4f8:	81400417 	ldw	r5,16(r16)
 402a4fc:	a809883a 	mov	r4,r21
 402a500:	4023fbc0 	call	4023fbc <_free_r>
 402a504:	8080030b 	ldhu	r2,12(r16)
 402a508:	00c00304 	movi	r3,12
 402a50c:	a8c00015 	stw	r3,0(r21)
 402a510:	10bfdfcc 	andi	r2,r2,65407
 402a514:	003f7806 	br	402a2f8 <__sfvwrite_r+0x280>
 402a518:	00c00304 	movi	r3,12
 402a51c:	8080030b 	ldhu	r2,12(r16)
 402a520:	a8c00015 	stw	r3,0(r21)
 402a524:	003f7406 	br	402a2f8 <__sfvwrite_r+0x280>
 402a528:	00bfffc4 	movi	r2,-1
 402a52c:	003f6106 	br	402a2b4 <__sfvwrite_r+0x23c>

0402a530 <_isatty_r>:
 402a530:	defffe04 	addi	sp,sp,-8
 402a534:	dc000015 	stw	r16,0(sp)
 402a538:	00800034 	movhi	r2,0
 402a53c:	2021883a 	mov	r16,r4
 402a540:	2809883a 	mov	r4,r5
 402a544:	dfc00115 	stw	ra,4(sp)
 402a548:	10095d15 	stw	zero,9588(r2)
 402a54c:	403138c0 	call	403138c <isatty>
 402a550:	10ffffd8 	cmpnei	r3,r2,-1
 402a554:	18000426 	beq	r3,zero,402a568 <_isatty_r+0x38>
 402a558:	dfc00117 	ldw	ra,4(sp)
 402a55c:	dc000017 	ldw	r16,0(sp)
 402a560:	dec00204 	addi	sp,sp,8
 402a564:	f800283a 	ret
 402a568:	00c00034 	movhi	r3,0
 402a56c:	18c95d17 	ldw	r3,9588(r3)
 402a570:	183ff926 	beq	r3,zero,402a558 <_isatty_r+0x28>
 402a574:	80c00015 	stw	r3,0(r16)
 402a578:	dfc00117 	ldw	ra,4(sp)
 402a57c:	dc000017 	ldw	r16,0(sp)
 402a580:	dec00204 	addi	sp,sp,8
 402a584:	f800283a 	ret

0402a588 <__localeconv_l>:
 402a588:	20803c04 	addi	r2,r4,240
 402a58c:	f800283a 	ret

0402a590 <_localeconv_r>:
 402a590:	00800034 	movhi	r2,0
 402a594:	1084a004 	addi	r2,r2,4736
 402a598:	f800283a 	ret

0402a59c <localeconv>:
 402a59c:	00800034 	movhi	r2,0
 402a5a0:	1084a004 	addi	r2,r2,4736
 402a5a4:	f800283a 	ret

0402a5a8 <_lseek_r>:
 402a5a8:	2807883a 	mov	r3,r5
 402a5ac:	defffe04 	addi	sp,sp,-8
 402a5b0:	dc000015 	stw	r16,0(sp)
 402a5b4:	300b883a 	mov	r5,r6
 402a5b8:	00800034 	movhi	r2,0
 402a5bc:	380d883a 	mov	r6,r7
 402a5c0:	2021883a 	mov	r16,r4
 402a5c4:	1809883a 	mov	r4,r3
 402a5c8:	dfc00115 	stw	ra,4(sp)
 402a5cc:	10095d15 	stw	zero,9588(r2)
 402a5d0:	40316c00 	call	40316c0 <lseek>
 402a5d4:	10ffffd8 	cmpnei	r3,r2,-1
 402a5d8:	18000426 	beq	r3,zero,402a5ec <_lseek_r+0x44>
 402a5dc:	dfc00117 	ldw	ra,4(sp)
 402a5e0:	dc000017 	ldw	r16,0(sp)
 402a5e4:	dec00204 	addi	sp,sp,8
 402a5e8:	f800283a 	ret
 402a5ec:	00c00034 	movhi	r3,0
 402a5f0:	18c95d17 	ldw	r3,9588(r3)
 402a5f4:	183ff926 	beq	r3,zero,402a5dc <_lseek_r+0x34>
 402a5f8:	80c00015 	stw	r3,0(r16)
 402a5fc:	dfc00117 	ldw	ra,4(sp)
 402a600:	dc000017 	ldw	r16,0(sp)
 402a604:	dec00204 	addi	sp,sp,8
 402a608:	f800283a 	ret

0402a60c <memchr>:
 402a60c:	208000cc 	andi	r2,r4,3
 402a610:	280f883a 	mov	r7,r5
 402a614:	10000e26 	beq	r2,zero,402a650 <memchr+0x44>
 402a618:	30bfffc4 	addi	r2,r6,-1
 402a61c:	30001726 	beq	r6,zero,402a67c <memchr+0x70>
 402a620:	29803fcc 	andi	r6,r5,255
 402a624:	00000606 	br	402a640 <memchr+0x34>
 402a628:	21000044 	addi	r4,r4,1
 402a62c:	20c000cc 	andi	r3,r4,3
 402a630:	18000826 	beq	r3,zero,402a654 <memchr+0x48>
 402a634:	10bfffc4 	addi	r2,r2,-1
 402a638:	10ffffe0 	cmpeqi	r3,r2,-1
 402a63c:	18000f1e 	bne	r3,zero,402a67c <memchr+0x70>
 402a640:	20c00003 	ldbu	r3,0(r4)
 402a644:	19bff81e 	bne	r3,r6,402a628 <memchr+0x1c>
 402a648:	2005883a 	mov	r2,r4
 402a64c:	f800283a 	ret
 402a650:	3005883a 	mov	r2,r6
 402a654:	10c00128 	cmpgeui	r3,r2,4
 402a658:	18000a1e 	bne	r3,zero,402a684 <memchr+0x78>
 402a65c:	10001e26 	beq	r2,zero,402a6d8 <memchr+0xcc>
 402a660:	2087883a 	add	r3,r4,r2
 402a664:	39803fcc 	andi	r6,r7,255
 402a668:	2005883a 	mov	r2,r4
 402a66c:	11000003 	ldbu	r4,0(r2)
 402a670:	21bff626 	beq	r4,r6,402a64c <memchr+0x40>
 402a674:	10800044 	addi	r2,r2,1
 402a678:	18bffc1e 	bne	r3,r2,402a66c <memchr+0x60>
 402a67c:	0005883a 	mov	r2,zero
 402a680:	f800283a 	ret
 402a684:	29403fcc 	andi	r5,r5,255
 402a688:	280c923a 	slli	r6,r5,8
 402a68c:	027fbff4 	movhi	r9,65279
 402a690:	02202074 	movhi	r8,32897
 402a694:	314ab03a 	or	r5,r6,r5
 402a698:	280c943a 	slli	r6,r5,16
 402a69c:	4a7fbfc4 	addi	r9,r9,-257
 402a6a0:	42202004 	addi	r8,r8,-32640
 402a6a4:	314cb03a 	or	r6,r6,r5
 402a6a8:	20c00017 	ldw	r3,0(r4)
 402a6ac:	30c6f03a 	xor	r3,r6,r3
 402a6b0:	1a4b883a 	add	r5,r3,r9
 402a6b4:	00c6303a 	nor	r3,zero,r3
 402a6b8:	28c6703a 	and	r3,r5,r3
 402a6bc:	1a06703a 	and	r3,r3,r8
 402a6c0:	183fe71e 	bne	r3,zero,402a660 <memchr+0x54>
 402a6c4:	10bfff04 	addi	r2,r2,-4
 402a6c8:	10c00128 	cmpgeui	r3,r2,4
 402a6cc:	21000104 	addi	r4,r4,4
 402a6d0:	183ff51e 	bne	r3,zero,402a6a8 <memchr+0x9c>
 402a6d4:	003fe106 	br	402a65c <memchr+0x50>
 402a6d8:	f800283a 	ret

0402a6dc <memmove>:
 402a6dc:	2005883a 	mov	r2,r4
 402a6e0:	29000a2e 	bgeu	r5,r4,402a70c <memmove+0x30>
 402a6e4:	2989883a 	add	r4,r5,r6
 402a6e8:	1100082e 	bgeu	r2,r4,402a70c <memmove+0x30>
 402a6ec:	1187883a 	add	r3,r2,r6
 402a6f0:	30003e26 	beq	r6,zero,402a7ec <memmove+0x110>
 402a6f4:	217fffc3 	ldbu	r5,-1(r4)
 402a6f8:	18ffffc4 	addi	r3,r3,-1
 402a6fc:	213fffc4 	addi	r4,r4,-1
 402a700:	19400005 	stb	r5,0(r3)
 402a704:	10fffb1e 	bne	r2,r3,402a6f4 <memmove+0x18>
 402a708:	f800283a 	ret
 402a70c:	30c00430 	cmpltui	r3,r6,16
 402a710:	18000b26 	beq	r3,zero,402a740 <memmove+0x64>
 402a714:	1007883a 	mov	r3,r2
 402a718:	31ffffc4 	addi	r7,r6,-1
 402a71c:	30003726 	beq	r6,zero,402a7fc <memmove+0x120>
 402a720:	39c00044 	addi	r7,r7,1
 402a724:	29cf883a 	add	r7,r5,r7
 402a728:	29800003 	ldbu	r6,0(r5)
 402a72c:	29400044 	addi	r5,r5,1
 402a730:	18c00044 	addi	r3,r3,1
 402a734:	19bfffc5 	stb	r6,-1(r3)
 402a738:	29fffb1e 	bne	r5,r7,402a728 <memmove+0x4c>
 402a73c:	f800283a 	ret
 402a740:	2886b03a 	or	r3,r5,r2
 402a744:	18c000cc 	andi	r3,r3,3
 402a748:	1800291e 	bne	r3,zero,402a7f0 <memmove+0x114>
 402a74c:	327ffc04 	addi	r9,r6,-16
 402a750:	4812d13a 	srli	r9,r9,4
 402a754:	280f883a 	mov	r7,r5
 402a758:	1007883a 	mov	r3,r2
 402a75c:	4a400044 	addi	r9,r9,1
 402a760:	4812913a 	slli	r9,r9,4
 402a764:	1251883a 	add	r8,r2,r9
 402a768:	39000017 	ldw	r4,0(r7)
 402a76c:	39c00404 	addi	r7,r7,16
 402a770:	18c00404 	addi	r3,r3,16
 402a774:	193ffc15 	stw	r4,-16(r3)
 402a778:	393ffd17 	ldw	r4,-12(r7)
 402a77c:	193ffd15 	stw	r4,-12(r3)
 402a780:	393ffe17 	ldw	r4,-8(r7)
 402a784:	193ffe15 	stw	r4,-8(r3)
 402a788:	393fff17 	ldw	r4,-4(r7)
 402a78c:	193fff15 	stw	r4,-4(r3)
 402a790:	40fff51e 	bne	r8,r3,402a768 <memmove+0x8c>
 402a794:	3100030c 	andi	r4,r6,12
 402a798:	2a4b883a 	add	r5,r5,r9
 402a79c:	320003cc 	andi	r8,r6,15
 402a7a0:	20001726 	beq	r4,zero,402a800 <memmove+0x124>
 402a7a4:	2813883a 	mov	r9,r5
 402a7a8:	180f883a 	mov	r7,r3
 402a7ac:	4a800017 	ldw	r10,0(r9)
 402a7b0:	39c00104 	addi	r7,r7,4
 402a7b4:	41c9c83a 	sub	r4,r8,r7
 402a7b8:	1909883a 	add	r4,r3,r4
 402a7bc:	21000128 	cmpgeui	r4,r4,4
 402a7c0:	3abfff15 	stw	r10,-4(r7)
 402a7c4:	4a400104 	addi	r9,r9,4
 402a7c8:	203ff81e 	bne	r4,zero,402a7ac <memmove+0xd0>
 402a7cc:	413fff04 	addi	r4,r8,-4
 402a7d0:	2008d0ba 	srli	r4,r4,2
 402a7d4:	318000cc 	andi	r6,r6,3
 402a7d8:	21000044 	addi	r4,r4,1
 402a7dc:	200890ba 	slli	r4,r4,2
 402a7e0:	1907883a 	add	r3,r3,r4
 402a7e4:	290b883a 	add	r5,r5,r4
 402a7e8:	003fcb06 	br	402a718 <memmove+0x3c>
 402a7ec:	f800283a 	ret
 402a7f0:	31ffffc4 	addi	r7,r6,-1
 402a7f4:	1007883a 	mov	r3,r2
 402a7f8:	003fc906 	br	402a720 <memmove+0x44>
 402a7fc:	f800283a 	ret
 402a800:	400d883a 	mov	r6,r8
 402a804:	003fc406 	br	402a718 <memmove+0x3c>

0402a808 <_Balloc>:
 402a808:	20801317 	ldw	r2,76(r4)
 402a80c:	defffc04 	addi	sp,sp,-16
 402a810:	dc400115 	stw	r17,4(sp)
 402a814:	dc000015 	stw	r16,0(sp)
 402a818:	dfc00315 	stw	ra,12(sp)
 402a81c:	dc800215 	stw	r18,8(sp)
 402a820:	2021883a 	mov	r16,r4
 402a824:	2823883a 	mov	r17,r5
 402a828:	10000e26 	beq	r2,zero,402a864 <_Balloc+0x5c>
 402a82c:	880690ba 	slli	r3,r17,2
 402a830:	10c7883a 	add	r3,r2,r3
 402a834:	18800017 	ldw	r2,0(r3)
 402a838:	10001126 	beq	r2,zero,402a880 <_Balloc+0x78>
 402a83c:	11000017 	ldw	r4,0(r2)
 402a840:	19000015 	stw	r4,0(r3)
 402a844:	10000415 	stw	zero,16(r2)
 402a848:	10000315 	stw	zero,12(r2)
 402a84c:	dfc00317 	ldw	ra,12(sp)
 402a850:	dc800217 	ldw	r18,8(sp)
 402a854:	dc400117 	ldw	r17,4(sp)
 402a858:	dc000017 	ldw	r16,0(sp)
 402a85c:	dec00404 	addi	sp,sp,16
 402a860:	f800283a 	ret
 402a864:	01800844 	movi	r6,33
 402a868:	01400104 	movi	r5,4
 402a86c:	402d4c40 	call	402d4c4 <_calloc_r>
 402a870:	80801315 	stw	r2,76(r16)
 402a874:	103fed1e 	bne	r2,zero,402a82c <_Balloc+0x24>
 402a878:	0005883a 	mov	r2,zero
 402a87c:	003ff306 	br	402a84c <_Balloc+0x44>
 402a880:	04800044 	movi	r18,1
 402a884:	9464983a 	sll	r18,r18,r17
 402a888:	01400044 	movi	r5,1
 402a88c:	8009883a 	mov	r4,r16
 402a890:	91800144 	addi	r6,r18,5
 402a894:	300c90ba 	slli	r6,r6,2
 402a898:	402d4c40 	call	402d4c4 <_calloc_r>
 402a89c:	103ff626 	beq	r2,zero,402a878 <_Balloc+0x70>
 402a8a0:	14400115 	stw	r17,4(r2)
 402a8a4:	14800215 	stw	r18,8(r2)
 402a8a8:	003fe606 	br	402a844 <_Balloc+0x3c>

0402a8ac <_Bfree>:
 402a8ac:	28000726 	beq	r5,zero,402a8cc <_Bfree+0x20>
 402a8b0:	28c00117 	ldw	r3,4(r5)
 402a8b4:	20801317 	ldw	r2,76(r4)
 402a8b8:	180690ba 	slli	r3,r3,2
 402a8bc:	10c5883a 	add	r2,r2,r3
 402a8c0:	10c00017 	ldw	r3,0(r2)
 402a8c4:	28c00015 	stw	r3,0(r5)
 402a8c8:	11400015 	stw	r5,0(r2)
 402a8cc:	f800283a 	ret

0402a8d0 <__multadd>:
 402a8d0:	defffa04 	addi	sp,sp,-24
 402a8d4:	dc400115 	stw	r17,4(sp)
 402a8d8:	2c400417 	ldw	r17,16(r5)
 402a8dc:	dcc00315 	stw	r19,12(sp)
 402a8e0:	dc800215 	stw	r18,8(sp)
 402a8e4:	dc000015 	stw	r16,0(sp)
 402a8e8:	dfc00515 	stw	ra,20(sp)
 402a8ec:	dd000415 	stw	r20,16(sp)
 402a8f0:	2825883a 	mov	r18,r5
 402a8f4:	2027883a 	mov	r19,r4
 402a8f8:	3821883a 	mov	r16,r7
 402a8fc:	2a400504 	addi	r9,r5,20
 402a900:	0015883a 	mov	r10,zero
 402a904:	48c00017 	ldw	r3,0(r9)
 402a908:	4a400104 	addi	r9,r9,4
 402a90c:	52800044 	addi	r10,r10,1
 402a910:	1a3fffcc 	andi	r8,r3,65535
 402a914:	4191383a 	mul	r8,r8,r6
 402a918:	180ed43a 	srli	r7,r3,16
 402a91c:	4407883a 	add	r3,r8,r16
 402a920:	1810d43a 	srli	r8,r3,16
 402a924:	398f383a 	mul	r7,r7,r6
 402a928:	18ffffcc 	andi	r3,r3,65535
 402a92c:	3a0f883a 	add	r7,r7,r8
 402a930:	3810943a 	slli	r8,r7,16
 402a934:	3820d43a 	srli	r16,r7,16
 402a938:	40c7883a 	add	r3,r8,r3
 402a93c:	48ffff15 	stw	r3,-4(r9)
 402a940:	547ff016 	blt	r10,r17,402a904 <__multadd+0x34>
 402a944:	80000826 	beq	r16,zero,402a968 <__multadd+0x98>
 402a948:	90800217 	ldw	r2,8(r18)
 402a94c:	88800f0e 	bge	r17,r2,402a98c <__multadd+0xbc>
 402a950:	88800144 	addi	r2,r17,5
 402a954:	100490ba 	slli	r2,r2,2
 402a958:	8c400044 	addi	r17,r17,1
 402a95c:	9085883a 	add	r2,r18,r2
 402a960:	14000015 	stw	r16,0(r2)
 402a964:	94400415 	stw	r17,16(r18)
 402a968:	9005883a 	mov	r2,r18
 402a96c:	dfc00517 	ldw	ra,20(sp)
 402a970:	dd000417 	ldw	r20,16(sp)
 402a974:	dcc00317 	ldw	r19,12(sp)
 402a978:	dc800217 	ldw	r18,8(sp)
 402a97c:	dc400117 	ldw	r17,4(sp)
 402a980:	dc000017 	ldw	r16,0(sp)
 402a984:	dec00604 	addi	sp,sp,24
 402a988:	f800283a 	ret
 402a98c:	91400117 	ldw	r5,4(r18)
 402a990:	9809883a 	mov	r4,r19
 402a994:	29400044 	addi	r5,r5,1
 402a998:	402a8080 	call	402a808 <_Balloc>
 402a99c:	1029883a 	mov	r20,r2
 402a9a0:	10001226 	beq	r2,zero,402a9ec <__multadd+0x11c>
 402a9a4:	91800417 	ldw	r6,16(r18)
 402a9a8:	91400304 	addi	r5,r18,12
 402a9ac:	11000304 	addi	r4,r2,12
 402a9b0:	31800084 	addi	r6,r6,2
 402a9b4:	300c90ba 	slli	r6,r6,2
 402a9b8:	40256900 	call	4025690 <memcpy>
 402a9bc:	90000926 	beq	r18,zero,402a9e4 <__multadd+0x114>
 402a9c0:	90c00117 	ldw	r3,4(r18)
 402a9c4:	98801317 	ldw	r2,76(r19)
 402a9c8:	180690ba 	slli	r3,r3,2
 402a9cc:	10c5883a 	add	r2,r2,r3
 402a9d0:	10c00017 	ldw	r3,0(r2)
 402a9d4:	90c00015 	stw	r3,0(r18)
 402a9d8:	14800015 	stw	r18,0(r2)
 402a9dc:	a025883a 	mov	r18,r20
 402a9e0:	003fdb06 	br	402a950 <__multadd+0x80>
 402a9e4:	a025883a 	mov	r18,r20
 402a9e8:	003fd906 	br	402a950 <__multadd+0x80>
 402a9ec:	01c00034 	movhi	r7,0
 402a9f0:	01000034 	movhi	r4,0
 402a9f4:	39c10f04 	addi	r7,r7,1084
 402a9f8:	000d883a 	mov	r6,zero
 402a9fc:	01402d44 	movi	r5,181
 402aa00:	21012304 	addi	r4,r4,1164
 402aa04:	402d44c0 	call	402d44c <__assert_func>

0402aa08 <__s2b>:
 402aa08:	defff904 	addi	sp,sp,-28
 402aa0c:	dc800215 	stw	r18,8(sp)
 402aa10:	dc000015 	stw	r16,0(sp)
 402aa14:	2025883a 	mov	r18,r4
 402aa18:	2821883a 	mov	r16,r5
 402aa1c:	39000204 	addi	r4,r7,8
 402aa20:	01400244 	movi	r5,9
 402aa24:	dcc00315 	stw	r19,12(sp)
 402aa28:	dc400115 	stw	r17,4(sp)
 402aa2c:	dfc00615 	stw	ra,24(sp)
 402aa30:	3823883a 	mov	r17,r7
 402aa34:	dd400515 	stw	r21,20(sp)
 402aa38:	dd000415 	stw	r20,16(sp)
 402aa3c:	3027883a 	mov	r19,r6
 402aa40:	40224b00 	call	40224b0 <__divsi3>
 402aa44:	88c00290 	cmplti	r3,r17,10
 402aa48:	1800341e 	bne	r3,zero,402ab1c <__s2b+0x114>
 402aa4c:	00c00044 	movi	r3,1
 402aa50:	000b883a 	mov	r5,zero
 402aa54:	18c7883a 	add	r3,r3,r3
 402aa58:	29400044 	addi	r5,r5,1
 402aa5c:	18bffd16 	blt	r3,r2,402aa54 <__s2b+0x4c>
 402aa60:	9009883a 	mov	r4,r18
 402aa64:	402a8080 	call	402a808 <_Balloc>
 402aa68:	100b883a 	mov	r5,r2
 402aa6c:	10002d26 	beq	r2,zero,402ab24 <__s2b+0x11c>
 402aa70:	d8800717 	ldw	r2,28(sp)
 402aa74:	28800515 	stw	r2,20(r5)
 402aa78:	00800044 	movi	r2,1
 402aa7c:	28800415 	stw	r2,16(r5)
 402aa80:	98800290 	cmplti	r2,r19,10
 402aa84:	1000221e 	bne	r2,zero,402ab10 <__s2b+0x108>
 402aa88:	85400244 	addi	r21,r16,9
 402aa8c:	a829883a 	mov	r20,r21
 402aa90:	84e1883a 	add	r16,r16,r19
 402aa94:	a1c00007 	ldb	r7,0(r20)
 402aa98:	01800284 	movi	r6,10
 402aa9c:	9009883a 	mov	r4,r18
 402aaa0:	39fff404 	addi	r7,r7,-48
 402aaa4:	402a8d00 	call	402a8d0 <__multadd>
 402aaa8:	a5000044 	addi	r20,r20,1
 402aaac:	100b883a 	mov	r5,r2
 402aab0:	a43ff81e 	bne	r20,r16,402aa94 <__s2b+0x8c>
 402aab4:	9c3ffe04 	addi	r16,r19,-8
 402aab8:	ac21883a 	add	r16,r21,r16
 402aabc:	9c400a0e 	bge	r19,r17,402aae8 <__s2b+0xe0>
 402aac0:	8ce3c83a 	sub	r17,r17,r19
 402aac4:	8463883a 	add	r17,r16,r17
 402aac8:	81c00007 	ldb	r7,0(r16)
 402aacc:	01800284 	movi	r6,10
 402aad0:	9009883a 	mov	r4,r18
 402aad4:	39fff404 	addi	r7,r7,-48
 402aad8:	402a8d00 	call	402a8d0 <__multadd>
 402aadc:	84000044 	addi	r16,r16,1
 402aae0:	100b883a 	mov	r5,r2
 402aae4:	8c3ff81e 	bne	r17,r16,402aac8 <__s2b+0xc0>
 402aae8:	2805883a 	mov	r2,r5
 402aaec:	dfc00617 	ldw	ra,24(sp)
 402aaf0:	dd400517 	ldw	r21,20(sp)
 402aaf4:	dd000417 	ldw	r20,16(sp)
 402aaf8:	dcc00317 	ldw	r19,12(sp)
 402aafc:	dc800217 	ldw	r18,8(sp)
 402ab00:	dc400117 	ldw	r17,4(sp)
 402ab04:	dc000017 	ldw	r16,0(sp)
 402ab08:	dec00704 	addi	sp,sp,28
 402ab0c:	f800283a 	ret
 402ab10:	84000284 	addi	r16,r16,10
 402ab14:	04c00244 	movi	r19,9
 402ab18:	003fe806 	br	402aabc <__s2b+0xb4>
 402ab1c:	000b883a 	mov	r5,zero
 402ab20:	003fcf06 	br	402aa60 <__s2b+0x58>
 402ab24:	01c00034 	movhi	r7,0
 402ab28:	01000034 	movhi	r4,0
 402ab2c:	39c10f04 	addi	r7,r7,1084
 402ab30:	000d883a 	mov	r6,zero
 402ab34:	01403384 	movi	r5,206
 402ab38:	21012304 	addi	r4,r4,1164
 402ab3c:	402d44c0 	call	402d44c <__assert_func>

0402ab40 <__hi0bits>:
 402ab40:	20bfffec 	andhi	r2,r4,65535
 402ab44:	1000131e 	bne	r2,zero,402ab94 <__hi0bits+0x54>
 402ab48:	2008943a 	slli	r4,r4,16
 402ab4c:	00800404 	movi	r2,16
 402ab50:	20ffc02c 	andhi	r3,r4,65280
 402ab54:	1800021e 	bne	r3,zero,402ab60 <__hi0bits+0x20>
 402ab58:	2008923a 	slli	r4,r4,8
 402ab5c:	10800204 	addi	r2,r2,8
 402ab60:	20fc002c 	andhi	r3,r4,61440
 402ab64:	1800021e 	bne	r3,zero,402ab70 <__hi0bits+0x30>
 402ab68:	2008913a 	slli	r4,r4,4
 402ab6c:	10800104 	addi	r2,r2,4
 402ab70:	20f0002c 	andhi	r3,r4,49152
 402ab74:	1800021e 	bne	r3,zero,402ab80 <__hi0bits+0x40>
 402ab78:	200890ba 	slli	r4,r4,2
 402ab7c:	10800084 	addi	r2,r2,2
 402ab80:	20000316 	blt	r4,zero,402ab90 <__hi0bits+0x50>
 402ab84:	2110002c 	andhi	r4,r4,16384
 402ab88:	10800044 	addi	r2,r2,1
 402ab8c:	20000326 	beq	r4,zero,402ab9c <__hi0bits+0x5c>
 402ab90:	f800283a 	ret
 402ab94:	0005883a 	mov	r2,zero
 402ab98:	003fed06 	br	402ab50 <__hi0bits+0x10>
 402ab9c:	00800804 	movi	r2,32
 402aba0:	f800283a 	ret

0402aba4 <__lo0bits>:
 402aba4:	20c00017 	ldw	r3,0(r4)
 402aba8:	188001cc 	andi	r2,r3,7
 402abac:	10000826 	beq	r2,zero,402abd0 <__lo0bits+0x2c>
 402abb0:	1880004c 	andi	r2,r3,1
 402abb4:	10001f1e 	bne	r2,zero,402ac34 <__lo0bits+0x90>
 402abb8:	1880008c 	andi	r2,r3,2
 402abbc:	10002126 	beq	r2,zero,402ac44 <__lo0bits+0xa0>
 402abc0:	1806d07a 	srli	r3,r3,1
 402abc4:	00800044 	movi	r2,1
 402abc8:	20c00015 	stw	r3,0(r4)
 402abcc:	f800283a 	ret
 402abd0:	18bfffcc 	andi	r2,r3,65535
 402abd4:	10001426 	beq	r2,zero,402ac28 <__lo0bits+0x84>
 402abd8:	0005883a 	mov	r2,zero
 402abdc:	19403fcc 	andi	r5,r3,255
 402abe0:	2800021e 	bne	r5,zero,402abec <__lo0bits+0x48>
 402abe4:	1806d23a 	srli	r3,r3,8
 402abe8:	10800204 	addi	r2,r2,8
 402abec:	194003cc 	andi	r5,r3,15
 402abf0:	2800021e 	bne	r5,zero,402abfc <__lo0bits+0x58>
 402abf4:	1806d13a 	srli	r3,r3,4
 402abf8:	10800104 	addi	r2,r2,4
 402abfc:	194000cc 	andi	r5,r3,3
 402ac00:	2800021e 	bne	r5,zero,402ac0c <__lo0bits+0x68>
 402ac04:	1806d0ba 	srli	r3,r3,2
 402ac08:	10800084 	addi	r2,r2,2
 402ac0c:	1940004c 	andi	r5,r3,1
 402ac10:	2800031e 	bne	r5,zero,402ac20 <__lo0bits+0x7c>
 402ac14:	1806d07a 	srli	r3,r3,1
 402ac18:	10800044 	addi	r2,r2,1
 402ac1c:	18000726 	beq	r3,zero,402ac3c <__lo0bits+0x98>
 402ac20:	20c00015 	stw	r3,0(r4)
 402ac24:	f800283a 	ret
 402ac28:	1806d43a 	srli	r3,r3,16
 402ac2c:	00800404 	movi	r2,16
 402ac30:	003fea06 	br	402abdc <__lo0bits+0x38>
 402ac34:	0005883a 	mov	r2,zero
 402ac38:	f800283a 	ret
 402ac3c:	00800804 	movi	r2,32
 402ac40:	f800283a 	ret
 402ac44:	1806d0ba 	srli	r3,r3,2
 402ac48:	00800084 	movi	r2,2
 402ac4c:	20c00015 	stw	r3,0(r4)
 402ac50:	f800283a 	ret

0402ac54 <__i2b>:
 402ac54:	20c01317 	ldw	r3,76(r4)
 402ac58:	defffd04 	addi	sp,sp,-12
 402ac5c:	dc400115 	stw	r17,4(sp)
 402ac60:	dc000015 	stw	r16,0(sp)
 402ac64:	dfc00215 	stw	ra,8(sp)
 402ac68:	2021883a 	mov	r16,r4
 402ac6c:	2823883a 	mov	r17,r5
 402ac70:	18000d26 	beq	r3,zero,402aca8 <__i2b+0x54>
 402ac74:	18800117 	ldw	r2,4(r3)
 402ac78:	10001826 	beq	r2,zero,402acdc <__i2b+0x88>
 402ac7c:	11000017 	ldw	r4,0(r2)
 402ac80:	19000115 	stw	r4,4(r3)
 402ac84:	00c00044 	movi	r3,1
 402ac88:	10000315 	stw	zero,12(r2)
 402ac8c:	14400515 	stw	r17,20(r2)
 402ac90:	10c00415 	stw	r3,16(r2)
 402ac94:	dfc00217 	ldw	ra,8(sp)
 402ac98:	dc400117 	ldw	r17,4(sp)
 402ac9c:	dc000017 	ldw	r16,0(sp)
 402aca0:	dec00304 	addi	sp,sp,12
 402aca4:	f800283a 	ret
 402aca8:	01800844 	movi	r6,33
 402acac:	01400104 	movi	r5,4
 402acb0:	402d4c40 	call	402d4c4 <_calloc_r>
 402acb4:	80801315 	stw	r2,76(r16)
 402acb8:	1007883a 	mov	r3,r2
 402acbc:	103fed1e 	bne	r2,zero,402ac74 <__i2b+0x20>
 402acc0:	01c00034 	movhi	r7,0
 402acc4:	01000034 	movhi	r4,0
 402acc8:	39c10f04 	addi	r7,r7,1084
 402accc:	000d883a 	mov	r6,zero
 402acd0:	01405004 	movi	r5,320
 402acd4:	21012304 	addi	r4,r4,1164
 402acd8:	402d44c0 	call	402d44c <__assert_func>
 402acdc:	01800704 	movi	r6,28
 402ace0:	01400044 	movi	r5,1
 402ace4:	8009883a 	mov	r4,r16
 402ace8:	402d4c40 	call	402d4c4 <_calloc_r>
 402acec:	103ff426 	beq	r2,zero,402acc0 <__i2b+0x6c>
 402acf0:	00c00044 	movi	r3,1
 402acf4:	10c00115 	stw	r3,4(r2)
 402acf8:	00c00084 	movi	r3,2
 402acfc:	10c00215 	stw	r3,8(r2)
 402ad00:	003fe006 	br	402ac84 <__i2b+0x30>

0402ad04 <__multiply>:
 402ad04:	defff804 	addi	sp,sp,-32
 402ad08:	dd400515 	stw	r21,20(sp)
 402ad0c:	dd000415 	stw	r20,16(sp)
 402ad10:	35400417 	ldw	r21,16(r6)
 402ad14:	2d000417 	ldw	r20,16(r5)
 402ad18:	dd800615 	stw	r22,24(sp)
 402ad1c:	dcc00315 	stw	r19,12(sp)
 402ad20:	dfc00715 	stw	ra,28(sp)
 402ad24:	dc800215 	stw	r18,8(sp)
 402ad28:	dc400115 	stw	r17,4(sp)
 402ad2c:	dc000015 	stw	r16,0(sp)
 402ad30:	282d883a 	mov	r22,r5
 402ad34:	3027883a 	mov	r19,r6
 402ad38:	a5400516 	blt	r20,r21,402ad50 <__multiply+0x4c>
 402ad3c:	a807883a 	mov	r3,r21
 402ad40:	2827883a 	mov	r19,r5
 402ad44:	a02b883a 	mov	r21,r20
 402ad48:	302d883a 	mov	r22,r6
 402ad4c:	1829883a 	mov	r20,r3
 402ad50:	98800217 	ldw	r2,8(r19)
 402ad54:	ad23883a 	add	r17,r21,r20
 402ad58:	99400117 	ldw	r5,4(r19)
 402ad5c:	1440010e 	bge	r2,r17,402ad64 <__multiply+0x60>
 402ad60:	29400044 	addi	r5,r5,1
 402ad64:	402a8080 	call	402a808 <_Balloc>
 402ad68:	1025883a 	mov	r18,r2
 402ad6c:	10007326 	beq	r2,zero,402af3c <__multiply+0x238>
 402ad70:	882090ba 	slli	r16,r17,2
 402ad74:	11000504 	addi	r4,r2,20
 402ad78:	2421883a 	add	r16,r4,r16
 402ad7c:	2400082e 	bgeu	r4,r16,402ada0 <__multiply+0x9c>
 402ad80:	808dc83a 	sub	r6,r16,r2
 402ad84:	31bffac4 	addi	r6,r6,-21
 402ad88:	300cd0ba 	srli	r6,r6,2
 402ad8c:	000b883a 	mov	r5,zero
 402ad90:	31800044 	addi	r6,r6,1
 402ad94:	300c90ba 	slli	r6,r6,2
 402ad98:	40257900 	call	4025790 <memset>
 402ad9c:	1009883a 	mov	r4,r2
 402ada0:	a01290ba 	slli	r9,r20,2
 402ada4:	a80e90ba 	slli	r7,r21,2
 402ada8:	b0800504 	addi	r2,r22,20
 402adac:	9a800504 	addi	r10,r19,20
 402adb0:	1253883a 	add	r9,r2,r9
 402adb4:	51cf883a 	add	r7,r10,r7
 402adb8:	12404b2e 	bgeu	r2,r9,402aee8 <__multiply+0x1e4>
 402adbc:	98c00544 	addi	r3,r19,21
 402adc0:	38c05c36 	bltu	r7,r3,402af34 <__multiply+0x230>
 402adc4:	3cd1c83a 	sub	r8,r7,r19
 402adc8:	423ffac4 	addi	r8,r8,-21
 402adcc:	4010d0ba 	srli	r8,r8,2
 402add0:	42000044 	addi	r8,r8,1
 402add4:	401090ba 	slli	r8,r8,2
 402add8:	00000506 	br	402adf0 <__multiply+0xec>
 402addc:	6018d43a 	srli	r12,r12,16
 402ade0:	6000231e 	bne	r12,zero,402ae70 <__multiply+0x16c>
 402ade4:	10800104 	addi	r2,r2,4
 402ade8:	21000104 	addi	r4,r4,4
 402adec:	12403e2e 	bgeu	r2,r9,402aee8 <__multiply+0x1e4>
 402adf0:	13000017 	ldw	r12,0(r2)
 402adf4:	63bfffcc 	andi	r14,r12,65535
 402adf8:	703ff826 	beq	r14,zero,402addc <__multiply+0xd8>
 402adfc:	201b883a 	mov	r13,r4
 402ae00:	5019883a 	mov	r12,r10
 402ae04:	001f883a 	mov	r15,zero
 402ae08:	61400017 	ldw	r5,0(r12)
 402ae0c:	6ac00017 	ldw	r11,0(r13)
 402ae10:	6b400104 	addi	r13,r13,4
 402ae14:	29bfffcc 	andi	r6,r5,65535
 402ae18:	338d383a 	mul	r6,r6,r14
 402ae1c:	2806d43a 	srli	r3,r5,16
 402ae20:	597fffcc 	andi	r5,r11,65535
 402ae24:	314d883a 	add	r6,r6,r5
 402ae28:	33cd883a 	add	r6,r6,r15
 402ae2c:	1b87383a 	mul	r3,r3,r14
 402ae30:	5816d43a 	srli	r11,r11,16
 402ae34:	300ad43a 	srli	r5,r6,16
 402ae38:	31bfffcc 	andi	r6,r6,65535
 402ae3c:	1ac7883a 	add	r3,r3,r11
 402ae40:	1947883a 	add	r3,r3,r5
 402ae44:	180a943a 	slli	r5,r3,16
 402ae48:	63000104 	addi	r12,r12,4
 402ae4c:	181ed43a 	srli	r15,r3,16
 402ae50:	298cb03a 	or	r6,r5,r6
 402ae54:	69bfff15 	stw	r6,-4(r13)
 402ae58:	61ffeb36 	bltu	r12,r7,402ae08 <__multiply+0x104>
 402ae5c:	2207883a 	add	r3,r4,r8
 402ae60:	1bc00015 	stw	r15,0(r3)
 402ae64:	13000017 	ldw	r12,0(r2)
 402ae68:	6018d43a 	srli	r12,r12,16
 402ae6c:	603fdd26 	beq	r12,zero,402ade4 <__multiply+0xe0>
 402ae70:	20c00017 	ldw	r3,0(r4)
 402ae74:	201b883a 	mov	r13,r4
 402ae78:	5017883a 	mov	r11,r10
 402ae7c:	181d883a 	mov	r14,r3
 402ae80:	001f883a 	mov	r15,zero
 402ae84:	5980000b 	ldhu	r6,0(r11)
 402ae88:	703ed43a 	srli	ra,r14,16
 402ae8c:	197fffcc 	andi	r5,r3,65535
 402ae90:	3307383a 	mul	r3,r6,r12
 402ae94:	5ac00104 	addi	r11,r11,4
 402ae98:	6b800117 	ldw	r14,4(r13)
 402ae9c:	1fc7883a 	add	r3,r3,ra
 402aea0:	1bc7883a 	add	r3,r3,r15
 402aea4:	181e943a 	slli	r15,r3,16
 402aea8:	180cd43a 	srli	r6,r3,16
 402aeac:	77ffffcc 	andi	ra,r14,65535
 402aeb0:	794ab03a 	or	r5,r15,r5
 402aeb4:	69400015 	stw	r5,0(r13)
 402aeb8:	58ffff8b 	ldhu	r3,-2(r11)
 402aebc:	6b400104 	addi	r13,r13,4
 402aec0:	1b07383a 	mul	r3,r3,r12
 402aec4:	1fc7883a 	add	r3,r3,ra
 402aec8:	1987883a 	add	r3,r3,r6
 402aecc:	181ed43a 	srli	r15,r3,16
 402aed0:	59ffec36 	bltu	r11,r7,402ae84 <__multiply+0x180>
 402aed4:	220b883a 	add	r5,r4,r8
 402aed8:	28c00015 	stw	r3,0(r5)
 402aedc:	10800104 	addi	r2,r2,4
 402aee0:	21000104 	addi	r4,r4,4
 402aee4:	127fc236 	bltu	r2,r9,402adf0 <__multiply+0xec>
 402aee8:	04400316 	blt	zero,r17,402aef8 <__multiply+0x1f4>
 402aeec:	00000506 	br	402af04 <__multiply+0x200>
 402aef0:	8c7fffc4 	addi	r17,r17,-1
 402aef4:	88000326 	beq	r17,zero,402af04 <__multiply+0x200>
 402aef8:	80bfff17 	ldw	r2,-4(r16)
 402aefc:	843fff04 	addi	r16,r16,-4
 402af00:	103ffb26 	beq	r2,zero,402aef0 <__multiply+0x1ec>
 402af04:	9005883a 	mov	r2,r18
 402af08:	94400415 	stw	r17,16(r18)
 402af0c:	dfc00717 	ldw	ra,28(sp)
 402af10:	dd800617 	ldw	r22,24(sp)
 402af14:	dd400517 	ldw	r21,20(sp)
 402af18:	dd000417 	ldw	r20,16(sp)
 402af1c:	dcc00317 	ldw	r19,12(sp)
 402af20:	dc800217 	ldw	r18,8(sp)
 402af24:	dc400117 	ldw	r17,4(sp)
 402af28:	dc000017 	ldw	r16,0(sp)
 402af2c:	dec00804 	addi	sp,sp,32
 402af30:	f800283a 	ret
 402af34:	02000104 	movi	r8,4
 402af38:	003fad06 	br	402adf0 <__multiply+0xec>
 402af3c:	01c00034 	movhi	r7,0
 402af40:	01000034 	movhi	r4,0
 402af44:	39c10f04 	addi	r7,r7,1084
 402af48:	000d883a 	mov	r6,zero
 402af4c:	01405744 	movi	r5,349
 402af50:	21012304 	addi	r4,r4,1164
 402af54:	402d44c0 	call	402d44c <__assert_func>

0402af58 <__pow5mult>:
 402af58:	defffb04 	addi	sp,sp,-20
 402af5c:	dcc00315 	stw	r19,12(sp)
 402af60:	dc000015 	stw	r16,0(sp)
 402af64:	dfc00415 	stw	ra,16(sp)
 402af68:	dc800215 	stw	r18,8(sp)
 402af6c:	dc400115 	stw	r17,4(sp)
 402af70:	308000cc 	andi	r2,r6,3
 402af74:	3021883a 	mov	r16,r6
 402af78:	2027883a 	mov	r19,r4
 402af7c:	10002d1e 	bne	r2,zero,402b034 <__pow5mult+0xdc>
 402af80:	2825883a 	mov	r18,r5
 402af84:	8021d0ba 	srai	r16,r16,2
 402af88:	80001926 	beq	r16,zero,402aff0 <__pow5mult+0x98>
 402af8c:	9c401217 	ldw	r17,72(r19)
 402af90:	8800061e 	bne	r17,zero,402afac <__pow5mult+0x54>
 402af94:	00002f06 	br	402b054 <__pow5mult+0xfc>
 402af98:	8021d07a 	srai	r16,r16,1
 402af9c:	80001426 	beq	r16,zero,402aff0 <__pow5mult+0x98>
 402afa0:	88800017 	ldw	r2,0(r17)
 402afa4:	10001a26 	beq	r2,zero,402b010 <__pow5mult+0xb8>
 402afa8:	1023883a 	mov	r17,r2
 402afac:	8080004c 	andi	r2,r16,1
 402afb0:	103ff926 	beq	r2,zero,402af98 <__pow5mult+0x40>
 402afb4:	880d883a 	mov	r6,r17
 402afb8:	900b883a 	mov	r5,r18
 402afbc:	9809883a 	mov	r4,r19
 402afc0:	402ad040 	call	402ad04 <__multiply>
 402afc4:	90001926 	beq	r18,zero,402b02c <__pow5mult+0xd4>
 402afc8:	91000117 	ldw	r4,4(r18)
 402afcc:	98c01317 	ldw	r3,76(r19)
 402afd0:	8021d07a 	srai	r16,r16,1
 402afd4:	200890ba 	slli	r4,r4,2
 402afd8:	1907883a 	add	r3,r3,r4
 402afdc:	19000017 	ldw	r4,0(r3)
 402afe0:	91000015 	stw	r4,0(r18)
 402afe4:	1c800015 	stw	r18,0(r3)
 402afe8:	1025883a 	mov	r18,r2
 402afec:	803fec1e 	bne	r16,zero,402afa0 <__pow5mult+0x48>
 402aff0:	9005883a 	mov	r2,r18
 402aff4:	dfc00417 	ldw	ra,16(sp)
 402aff8:	dcc00317 	ldw	r19,12(sp)
 402affc:	dc800217 	ldw	r18,8(sp)
 402b000:	dc400117 	ldw	r17,4(sp)
 402b004:	dc000017 	ldw	r16,0(sp)
 402b008:	dec00504 	addi	sp,sp,20
 402b00c:	f800283a 	ret
 402b010:	880d883a 	mov	r6,r17
 402b014:	880b883a 	mov	r5,r17
 402b018:	9809883a 	mov	r4,r19
 402b01c:	402ad040 	call	402ad04 <__multiply>
 402b020:	88800015 	stw	r2,0(r17)
 402b024:	10000015 	stw	zero,0(r2)
 402b028:	003fdf06 	br	402afa8 <__pow5mult+0x50>
 402b02c:	1025883a 	mov	r18,r2
 402b030:	003fd906 	br	402af98 <__pow5mult+0x40>
 402b034:	100490ba 	slli	r2,r2,2
 402b038:	00c00034 	movhi	r3,0
 402b03c:	000f883a 	mov	r7,zero
 402b040:	10c7883a 	add	r3,r2,r3
 402b044:	19813117 	ldw	r6,1220(r3)
 402b048:	402a8d00 	call	402a8d0 <__multadd>
 402b04c:	1025883a 	mov	r18,r2
 402b050:	003fcc06 	br	402af84 <__pow5mult+0x2c>
 402b054:	01400044 	movi	r5,1
 402b058:	9809883a 	mov	r4,r19
 402b05c:	402a8080 	call	402a808 <_Balloc>
 402b060:	1023883a 	mov	r17,r2
 402b064:	10000726 	beq	r2,zero,402b084 <__pow5mult+0x12c>
 402b068:	00809c44 	movi	r2,625
 402b06c:	88800515 	stw	r2,20(r17)
 402b070:	00800044 	movi	r2,1
 402b074:	88800415 	stw	r2,16(r17)
 402b078:	9c401215 	stw	r17,72(r19)
 402b07c:	88000015 	stw	zero,0(r17)
 402b080:	003fca06 	br	402afac <__pow5mult+0x54>
 402b084:	01c00034 	movhi	r7,0
 402b088:	01000034 	movhi	r4,0
 402b08c:	39c10f04 	addi	r7,r7,1084
 402b090:	000d883a 	mov	r6,zero
 402b094:	01405004 	movi	r5,320
 402b098:	21012304 	addi	r4,r4,1164
 402b09c:	402d44c0 	call	402d44c <__assert_func>

0402b0a0 <__lshift>:
 402b0a0:	defff804 	addi	sp,sp,-32
 402b0a4:	dd800615 	stw	r22,24(sp)
 402b0a8:	dc000015 	stw	r16,0(sp)
 402b0ac:	302dd17a 	srai	r22,r6,5
 402b0b0:	2c000417 	ldw	r16,16(r5)
 402b0b4:	28800217 	ldw	r2,8(r5)
 402b0b8:	dd000415 	stw	r20,16(sp)
 402b0bc:	b421883a 	add	r16,r22,r16
 402b0c0:	dcc00315 	stw	r19,12(sp)
 402b0c4:	dc800215 	stw	r18,8(sp)
 402b0c8:	dc400115 	stw	r17,4(sp)
 402b0cc:	dfc00715 	stw	ra,28(sp)
 402b0d0:	dd400515 	stw	r21,20(sp)
 402b0d4:	85000044 	addi	r20,r16,1
 402b0d8:	2827883a 	mov	r19,r5
 402b0dc:	3025883a 	mov	r18,r6
 402b0e0:	29400117 	ldw	r5,4(r5)
 402b0e4:	2023883a 	mov	r17,r4
 402b0e8:	1500030e 	bge	r2,r20,402b0f8 <__lshift+0x58>
 402b0ec:	1085883a 	add	r2,r2,r2
 402b0f0:	29400044 	addi	r5,r5,1
 402b0f4:	153ffd16 	blt	r2,r20,402b0ec <__lshift+0x4c>
 402b0f8:	8809883a 	mov	r4,r17
 402b0fc:	402a8080 	call	402a808 <_Balloc>
 402b100:	102b883a 	mov	r21,r2
 402b104:	10004126 	beq	r2,zero,402b20c <__lshift+0x16c>
 402b108:	11000504 	addi	r4,r2,20
 402b10c:	0580050e 	bge	zero,r22,402b124 <__lshift+0x84>
 402b110:	b02c90ba 	slli	r22,r22,2
 402b114:	000b883a 	mov	r5,zero
 402b118:	b00d883a 	mov	r6,r22
 402b11c:	40257900 	call	4025790 <memset>
 402b120:	1589883a 	add	r4,r2,r22
 402b124:	9a000417 	ldw	r8,16(r19)
 402b128:	98c00504 	addi	r3,r19,20
 402b12c:	948007cc 	andi	r18,r18,31
 402b130:	401090ba 	slli	r8,r8,2
 402b134:	1a11883a 	add	r8,r3,r8
 402b138:	90002c26 	beq	r18,zero,402b1ec <__lshift+0x14c>
 402b13c:	01400804 	movi	r5,32
 402b140:	2c8bc83a 	sub	r5,r5,r18
 402b144:	2005883a 	mov	r2,r4
 402b148:	000f883a 	mov	r7,zero
 402b14c:	19800017 	ldw	r6,0(r3)
 402b150:	10800104 	addi	r2,r2,4
 402b154:	18c00104 	addi	r3,r3,4
 402b158:	348c983a 	sll	r6,r6,r18
 402b15c:	31ccb03a 	or	r6,r6,r7
 402b160:	11bfff15 	stw	r6,-4(r2)
 402b164:	19bfff17 	ldw	r6,-4(r3)
 402b168:	314ed83a 	srl	r7,r6,r5
 402b16c:	1a3ff736 	bltu	r3,r8,402b14c <__lshift+0xac>
 402b170:	98800544 	addi	r2,r19,21
 402b174:	40802336 	bltu	r8,r2,402b204 <__lshift+0x164>
 402b178:	44c7c83a 	sub	r3,r8,r19
 402b17c:	18fffac4 	addi	r3,r3,-21
 402b180:	1806d0ba 	srli	r3,r3,2
 402b184:	18c00044 	addi	r3,r3,1
 402b188:	180690ba 	slli	r3,r3,2
 402b18c:	20c9883a 	add	r4,r4,r3
 402b190:	21c00015 	stw	r7,0(r4)
 402b194:	38000126 	beq	r7,zero,402b19c <__lshift+0xfc>
 402b198:	a021883a 	mov	r16,r20
 402b19c:	ac000415 	stw	r16,16(r21)
 402b1a0:	98000726 	beq	r19,zero,402b1c0 <__lshift+0x120>
 402b1a4:	98c00117 	ldw	r3,4(r19)
 402b1a8:	88801317 	ldw	r2,76(r17)
 402b1ac:	180690ba 	slli	r3,r3,2
 402b1b0:	10c5883a 	add	r2,r2,r3
 402b1b4:	10c00017 	ldw	r3,0(r2)
 402b1b8:	98c00015 	stw	r3,0(r19)
 402b1bc:	14c00015 	stw	r19,0(r2)
 402b1c0:	a805883a 	mov	r2,r21
 402b1c4:	dfc00717 	ldw	ra,28(sp)
 402b1c8:	dd800617 	ldw	r22,24(sp)
 402b1cc:	dd400517 	ldw	r21,20(sp)
 402b1d0:	dd000417 	ldw	r20,16(sp)
 402b1d4:	dcc00317 	ldw	r19,12(sp)
 402b1d8:	dc800217 	ldw	r18,8(sp)
 402b1dc:	dc400117 	ldw	r17,4(sp)
 402b1e0:	dc000017 	ldw	r16,0(sp)
 402b1e4:	dec00804 	addi	sp,sp,32
 402b1e8:	f800283a 	ret
 402b1ec:	18800017 	ldw	r2,0(r3)
 402b1f0:	18c00104 	addi	r3,r3,4
 402b1f4:	21000104 	addi	r4,r4,4
 402b1f8:	20bfff15 	stw	r2,-4(r4)
 402b1fc:	1a3ffb36 	bltu	r3,r8,402b1ec <__lshift+0x14c>
 402b200:	003fe606 	br	402b19c <__lshift+0xfc>
 402b204:	00c00104 	movi	r3,4
 402b208:	003fe006 	br	402b18c <__lshift+0xec>
 402b20c:	01c00034 	movhi	r7,0
 402b210:	01000034 	movhi	r4,0
 402b214:	39c10f04 	addi	r7,r7,1084
 402b218:	000d883a 	mov	r6,zero
 402b21c:	01407644 	movi	r5,473
 402b220:	21012304 	addi	r4,r4,1164
 402b224:	402d44c0 	call	402d44c <__assert_func>

0402b228 <__mcmp>:
 402b228:	21800417 	ldw	r6,16(r4)
 402b22c:	28c00417 	ldw	r3,16(r5)
 402b230:	30c5c83a 	sub	r2,r6,r3
 402b234:	30c00e1e 	bne	r6,r3,402b270 <__mcmp+0x48>
 402b238:	180690ba 	slli	r3,r3,2
 402b23c:	21c00504 	addi	r7,r4,20
 402b240:	29400504 	addi	r5,r5,20
 402b244:	38c9883a 	add	r4,r7,r3
 402b248:	28c7883a 	add	r3,r5,r3
 402b24c:	00000106 	br	402b254 <__mcmp+0x2c>
 402b250:	3900082e 	bgeu	r7,r4,402b274 <__mcmp+0x4c>
 402b254:	21bfff17 	ldw	r6,-4(r4)
 402b258:	197fff17 	ldw	r5,-4(r3)
 402b25c:	213fff04 	addi	r4,r4,-4
 402b260:	18ffff04 	addi	r3,r3,-4
 402b264:	317ffa26 	beq	r6,r5,402b250 <__mcmp+0x28>
 402b268:	3140032e 	bgeu	r6,r5,402b278 <__mcmp+0x50>
 402b26c:	00bfffc4 	movi	r2,-1
 402b270:	f800283a 	ret
 402b274:	f800283a 	ret
 402b278:	00800044 	movi	r2,1
 402b27c:	f800283a 	ret

0402b280 <__mdiff>:
 402b280:	28800417 	ldw	r2,16(r5)
 402b284:	30c00417 	ldw	r3,16(r6)
 402b288:	defffc04 	addi	sp,sp,-16
 402b28c:	dc800215 	stw	r18,8(sp)
 402b290:	dc400115 	stw	r17,4(sp)
 402b294:	dc000015 	stw	r16,0(sp)
 402b298:	dfc00315 	stw	ra,12(sp)
 402b29c:	2823883a 	mov	r17,r5
 402b2a0:	3021883a 	mov	r16,r6
 402b2a4:	10e5c83a 	sub	r18,r2,r3
 402b2a8:	10c0641e 	bne	r2,r3,402b43c <__mdiff+0x1bc>
 402b2ac:	180c90ba 	slli	r6,r3,2
 402b2b0:	29400504 	addi	r5,r5,20
 402b2b4:	80c00504 	addi	r3,r16,20
 402b2b8:	2985883a 	add	r2,r5,r6
 402b2bc:	1987883a 	add	r3,r3,r6
 402b2c0:	00000106 	br	402b2c8 <__mdiff+0x48>
 402b2c4:	2880642e 	bgeu	r5,r2,402b458 <__mdiff+0x1d8>
 402b2c8:	11bfff17 	ldw	r6,-4(r2)
 402b2cc:	19ffff17 	ldw	r7,-4(r3)
 402b2d0:	10bfff04 	addi	r2,r2,-4
 402b2d4:	18ffff04 	addi	r3,r3,-4
 402b2d8:	31fffa26 	beq	r6,r7,402b2c4 <__mdiff+0x44>
 402b2dc:	31c05236 	bltu	r6,r7,402b428 <__mdiff+0x1a8>
 402b2e0:	89400117 	ldw	r5,4(r17)
 402b2e4:	402a8080 	call	402a808 <_Balloc>
 402b2e8:	10006226 	beq	r2,zero,402b474 <__mdiff+0x1f4>
 402b2ec:	8a400417 	ldw	r9,16(r17)
 402b2f0:	83000417 	ldw	r12,16(r16)
 402b2f4:	8ac00504 	addi	r11,r17,20
 402b2f8:	481090ba 	slli	r8,r9,2
 402b2fc:	601890ba 	slli	r12,r12,2
 402b300:	81800504 	addi	r6,r16,20
 402b304:	13400504 	addi	r13,r2,20
 402b308:	14800315 	stw	r18,12(r2)
 402b30c:	5a11883a 	add	r8,r11,r8
 402b310:	3319883a 	add	r12,r6,r12
 402b314:	681d883a 	mov	r14,r13
 402b318:	5815883a 	mov	r10,r11
 402b31c:	0007883a 	mov	r3,zero
 402b320:	51000017 	ldw	r4,0(r10)
 402b324:	31c00017 	ldw	r7,0(r6)
 402b328:	73800104 	addi	r14,r14,4
 402b32c:	217fffcc 	andi	r5,r4,65535
 402b330:	28cb883a 	add	r5,r5,r3
 402b334:	38ffffcc 	andi	r3,r7,65535
 402b338:	28cbc83a 	sub	r5,r5,r3
 402b33c:	380ed43a 	srli	r7,r7,16
 402b340:	2006d43a 	srli	r3,r4,16
 402b344:	2809d43a 	srai	r4,r5,16
 402b348:	297fffcc 	andi	r5,r5,65535
 402b34c:	19c7c83a 	sub	r3,r3,r7
 402b350:	1907883a 	add	r3,r3,r4
 402b354:	1808943a 	slli	r4,r3,16
 402b358:	31800104 	addi	r6,r6,4
 402b35c:	1807d43a 	srai	r3,r3,16
 402b360:	214ab03a 	or	r5,r4,r5
 402b364:	717fff15 	stw	r5,-4(r14)
 402b368:	52800104 	addi	r10,r10,4
 402b36c:	333fec36 	bltu	r6,r12,402b320 <__mdiff+0xa0>
 402b370:	640fc83a 	sub	r7,r12,r16
 402b374:	39fffac4 	addi	r7,r7,-21
 402b378:	84000544 	addi	r16,r16,21
 402b37c:	380ed0ba 	srli	r7,r7,2
 402b380:	64003336 	bltu	r12,r16,402b450 <__mdiff+0x1d0>
 402b384:	380890ba 	slli	r4,r7,2
 402b388:	6909883a 	add	r4,r13,r4
 402b38c:	64002e36 	bltu	r12,r16,402b448 <__mdiff+0x1c8>
 402b390:	39800044 	addi	r6,r7,1
 402b394:	300c90ba 	slli	r6,r6,2
 402b398:	5997883a 	add	r11,r11,r6
 402b39c:	699b883a 	add	r13,r13,r6
 402b3a0:	5a00152e 	bgeu	r11,r8,402b3f8 <__mdiff+0x178>
 402b3a4:	680f883a 	mov	r7,r13
 402b3a8:	580d883a 	mov	r6,r11
 402b3ac:	31000017 	ldw	r4,0(r6)
 402b3b0:	39c00104 	addi	r7,r7,4
 402b3b4:	31800104 	addi	r6,r6,4
 402b3b8:	217fffcc 	andi	r5,r4,65535
 402b3bc:	28cb883a 	add	r5,r5,r3
 402b3c0:	2815d43a 	srai	r10,r5,16
 402b3c4:	2006d43a 	srli	r3,r4,16
 402b3c8:	297fffcc 	andi	r5,r5,65535
 402b3cc:	1a87883a 	add	r3,r3,r10
 402b3d0:	1814943a 	slli	r10,r3,16
 402b3d4:	1807d43a 	srai	r3,r3,16
 402b3d8:	514ab03a 	or	r5,r10,r5
 402b3dc:	397fff15 	stw	r5,-4(r7)
 402b3e0:	323ff236 	bltu	r6,r8,402b3ac <__mdiff+0x12c>
 402b3e4:	413fffc4 	addi	r4,r8,-1
 402b3e8:	22c9c83a 	sub	r4,r4,r11
 402b3ec:	2008d0ba 	srli	r4,r4,2
 402b3f0:	200890ba 	slli	r4,r4,2
 402b3f4:	6909883a 	add	r4,r13,r4
 402b3f8:	2800041e 	bne	r5,zero,402b40c <__mdiff+0x18c>
 402b3fc:	20ffff17 	ldw	r3,-4(r4)
 402b400:	4a7fffc4 	addi	r9,r9,-1
 402b404:	213fff04 	addi	r4,r4,-4
 402b408:	183ffc26 	beq	r3,zero,402b3fc <__mdiff+0x17c>
 402b40c:	12400415 	stw	r9,16(r2)
 402b410:	dfc00317 	ldw	ra,12(sp)
 402b414:	dc800217 	ldw	r18,8(sp)
 402b418:	dc400117 	ldw	r17,4(sp)
 402b41c:	dc000017 	ldw	r16,0(sp)
 402b420:	dec00404 	addi	sp,sp,16
 402b424:	f800283a 	ret
 402b428:	8805883a 	mov	r2,r17
 402b42c:	04800044 	movi	r18,1
 402b430:	8023883a 	mov	r17,r16
 402b434:	1021883a 	mov	r16,r2
 402b438:	003fa906 	br	402b2e0 <__mdiff+0x60>
 402b43c:	903ffa16 	blt	r18,zero,402b428 <__mdiff+0x1a8>
 402b440:	0025883a 	mov	r18,zero
 402b444:	003fa606 	br	402b2e0 <__mdiff+0x60>
 402b448:	01800104 	movi	r6,4
 402b44c:	003fd206 	br	402b398 <__mdiff+0x118>
 402b450:	0009883a 	mov	r4,zero
 402b454:	003fcc06 	br	402b388 <__mdiff+0x108>
 402b458:	000b883a 	mov	r5,zero
 402b45c:	402a8080 	call	402a808 <_Balloc>
 402b460:	10000b26 	beq	r2,zero,402b490 <__mdiff+0x210>
 402b464:	00c00044 	movi	r3,1
 402b468:	10c00415 	stw	r3,16(r2)
 402b46c:	10000515 	stw	zero,20(r2)
 402b470:	003fe706 	br	402b410 <__mdiff+0x190>
 402b474:	01c00034 	movhi	r7,0
 402b478:	01000034 	movhi	r4,0
 402b47c:	39c10f04 	addi	r7,r7,1084
 402b480:	000d883a 	mov	r6,zero
 402b484:	01409004 	movi	r5,576
 402b488:	21012304 	addi	r4,r4,1164
 402b48c:	402d44c0 	call	402d44c <__assert_func>
 402b490:	01c00034 	movhi	r7,0
 402b494:	01000034 	movhi	r4,0
 402b498:	39c10f04 	addi	r7,r7,1084
 402b49c:	000d883a 	mov	r6,zero
 402b4a0:	01408c84 	movi	r5,562
 402b4a4:	21012304 	addi	r4,r4,1164
 402b4a8:	402d44c0 	call	402d44c <__assert_func>

0402b4ac <__ulp>:
 402b4ac:	28dffc2c 	andhi	r3,r5,32752
 402b4b0:	017f3034 	movhi	r5,64704
 402b4b4:	1947883a 	add	r3,r3,r5
 402b4b8:	00c0020e 	bge	zero,r3,402b4c4 <__ulp+0x18>
 402b4bc:	0005883a 	mov	r2,zero
 402b4c0:	f800283a 	ret
 402b4c4:	00c7c83a 	sub	r3,zero,r3
 402b4c8:	1807d53a 	srai	r3,r3,20
 402b4cc:	18800508 	cmpgei	r2,r3,20
 402b4d0:	1000041e 	bne	r2,zero,402b4e4 <__ulp+0x38>
 402b4d4:	00800234 	movhi	r2,8
 402b4d8:	10c7d83a 	sra	r3,r2,r3
 402b4dc:	0005883a 	mov	r2,zero
 402b4e0:	f800283a 	ret
 402b4e4:	193ffb04 	addi	r4,r3,-20
 402b4e8:	208007c8 	cmpgei	r2,r4,31
 402b4ec:	0007883a 	mov	r3,zero
 402b4f0:	1000031e 	bne	r2,zero,402b500 <__ulp+0x54>
 402b4f4:	00a00034 	movhi	r2,32768
 402b4f8:	1104d83a 	srl	r2,r2,r4
 402b4fc:	f800283a 	ret
 402b500:	00800044 	movi	r2,1
 402b504:	f800283a 	ret

0402b508 <__b2d>:
 402b508:	defffa04 	addi	sp,sp,-24
 402b50c:	dc400115 	stw	r17,4(sp)
 402b510:	24400417 	ldw	r17,16(r4)
 402b514:	dc000015 	stw	r16,0(sp)
 402b518:	24000504 	addi	r16,r4,20
 402b51c:	882290ba 	slli	r17,r17,2
 402b520:	dc800215 	stw	r18,8(sp)
 402b524:	dd000415 	stw	r20,16(sp)
 402b528:	8463883a 	add	r17,r16,r17
 402b52c:	8cbfff17 	ldw	r18,-4(r17)
 402b530:	dcc00315 	stw	r19,12(sp)
 402b534:	dfc00515 	stw	ra,20(sp)
 402b538:	9009883a 	mov	r4,r18
 402b53c:	2827883a 	mov	r19,r5
 402b540:	402ab400 	call	402ab40 <__hi0bits>
 402b544:	00c00804 	movi	r3,32
 402b548:	1889c83a 	sub	r4,r3,r2
 402b54c:	99000015 	stw	r4,0(r19)
 402b550:	110002c8 	cmpgei	r4,r2,11
 402b554:	8d3fff04 	addi	r20,r17,-4
 402b558:	20002026 	beq	r4,zero,402b5dc <__b2d+0xd4>
 402b55c:	10bffd44 	addi	r2,r2,-11
 402b560:	85000e2e 	bgeu	r16,r20,402b59c <__b2d+0x94>
 402b564:	897ffe17 	ldw	r5,-8(r17)
 402b568:	10001226 	beq	r2,zero,402b5b4 <__b2d+0xac>
 402b56c:	1889c83a 	sub	r4,r3,r2
 402b570:	90a4983a 	sll	r18,r18,r2
 402b574:	2906d83a 	srl	r3,r5,r4
 402b578:	89bffe04 	addi	r6,r17,-8
 402b57c:	2884983a 	sll	r2,r5,r2
 402b580:	90e4b03a 	or	r18,r18,r3
 402b584:	90cffc34 	orhi	r3,r18,16368
 402b588:	81800c2e 	bgeu	r16,r6,402b5bc <__b2d+0xb4>
 402b58c:	897ffd17 	ldw	r5,-12(r17)
 402b590:	2908d83a 	srl	r4,r5,r4
 402b594:	1104b03a 	or	r2,r2,r4
 402b598:	00000806 	br	402b5bc <__b2d+0xb4>
 402b59c:	10000426 	beq	r2,zero,402b5b0 <__b2d+0xa8>
 402b5a0:	90a4983a 	sll	r18,r18,r2
 402b5a4:	0005883a 	mov	r2,zero
 402b5a8:	90cffc34 	orhi	r3,r18,16368
 402b5ac:	00000306 	br	402b5bc <__b2d+0xb4>
 402b5b0:	000b883a 	mov	r5,zero
 402b5b4:	90cffc34 	orhi	r3,r18,16368
 402b5b8:	2805883a 	mov	r2,r5
 402b5bc:	dfc00517 	ldw	ra,20(sp)
 402b5c0:	dd000417 	ldw	r20,16(sp)
 402b5c4:	dcc00317 	ldw	r19,12(sp)
 402b5c8:	dc800217 	ldw	r18,8(sp)
 402b5cc:	dc400117 	ldw	r17,4(sp)
 402b5d0:	dc000017 	ldw	r16,0(sp)
 402b5d4:	dec00604 	addi	sp,sp,24
 402b5d8:	f800283a 	ret
 402b5dc:	014002c4 	movi	r5,11
 402b5e0:	2889c83a 	sub	r4,r5,r2
 402b5e4:	9106d83a 	srl	r3,r18,r4
 402b5e8:	18cffc34 	orhi	r3,r3,16368
 402b5ec:	85000536 	bltu	r16,r20,402b604 <__b2d+0xfc>
 402b5f0:	000b883a 	mov	r5,zero
 402b5f4:	10800544 	addi	r2,r2,21
 402b5f8:	9084983a 	sll	r2,r18,r2
 402b5fc:	1144b03a 	or	r2,r2,r5
 402b600:	003fee06 	br	402b5bc <__b2d+0xb4>
 402b604:	897ffe17 	ldw	r5,-8(r17)
 402b608:	290ad83a 	srl	r5,r5,r4
 402b60c:	003ff906 	br	402b5f4 <__b2d+0xec>

0402b610 <__d2b>:
 402b610:	defff804 	addi	sp,sp,-32
 402b614:	dd000615 	stw	r20,24(sp)
 402b618:	2829883a 	mov	r20,r5
 402b61c:	01400044 	movi	r5,1
 402b620:	dcc00515 	stw	r19,20(sp)
 402b624:	dc000215 	stw	r16,8(sp)
 402b628:	dfc00715 	stw	ra,28(sp)
 402b62c:	dc800415 	stw	r18,16(sp)
 402b630:	dc400315 	stw	r17,12(sp)
 402b634:	3021883a 	mov	r16,r6
 402b638:	3827883a 	mov	r19,r7
 402b63c:	402a8080 	call	402a808 <_Balloc>
 402b640:	10004526 	beq	r2,zero,402b758 <__d2b+0x148>
 402b644:	8024d53a 	srli	r18,r16,20
 402b648:	01800434 	movhi	r6,16
 402b64c:	31bfffc4 	addi	r6,r6,-1
 402b650:	9481ffcc 	andi	r18,r18,2047
 402b654:	1023883a 	mov	r17,r2
 402b658:	81a0703a 	and	r16,r16,r6
 402b65c:	90000126 	beq	r18,zero,402b664 <__d2b+0x54>
 402b660:	84000434 	orhi	r16,r16,16
 402b664:	dc000115 	stw	r16,4(sp)
 402b668:	a0002226 	beq	r20,zero,402b6f4 <__d2b+0xe4>
 402b66c:	d809883a 	mov	r4,sp
 402b670:	dd000015 	stw	r20,0(sp)
 402b674:	402aba40 	call	402aba4 <__lo0bits>
 402b678:	d8c00117 	ldw	r3,4(sp)
 402b67c:	10003326 	beq	r2,zero,402b74c <__d2b+0x13c>
 402b680:	01000804 	movi	r4,32
 402b684:	2089c83a 	sub	r4,r4,r2
 402b688:	1908983a 	sll	r4,r3,r4
 402b68c:	d9400017 	ldw	r5,0(sp)
 402b690:	1886d83a 	srl	r3,r3,r2
 402b694:	2148b03a 	or	r4,r4,r5
 402b698:	89000515 	stw	r4,20(r17)
 402b69c:	d8c00115 	stw	r3,4(sp)
 402b6a0:	88c00615 	stw	r3,24(r17)
 402b6a4:	1800271e 	bne	r3,zero,402b744 <__d2b+0x134>
 402b6a8:	04000044 	movi	r16,1
 402b6ac:	8c000415 	stw	r16,16(r17)
 402b6b0:	90001926 	beq	r18,zero,402b718 <__d2b+0x108>
 402b6b4:	00c00d44 	movi	r3,53
 402b6b8:	94bef344 	addi	r18,r18,-1075
 402b6bc:	90a5883a 	add	r18,r18,r2
 402b6c0:	1885c83a 	sub	r2,r3,r2
 402b6c4:	d8c00817 	ldw	r3,32(sp)
 402b6c8:	9c800015 	stw	r18,0(r19)
 402b6cc:	18800015 	stw	r2,0(r3)
 402b6d0:	8805883a 	mov	r2,r17
 402b6d4:	dfc00717 	ldw	ra,28(sp)
 402b6d8:	dd000617 	ldw	r20,24(sp)
 402b6dc:	dcc00517 	ldw	r19,20(sp)
 402b6e0:	dc800417 	ldw	r18,16(sp)
 402b6e4:	dc400317 	ldw	r17,12(sp)
 402b6e8:	dc000217 	ldw	r16,8(sp)
 402b6ec:	dec00804 	addi	sp,sp,32
 402b6f0:	f800283a 	ret
 402b6f4:	d9000104 	addi	r4,sp,4
 402b6f8:	402aba40 	call	402aba4 <__lo0bits>
 402b6fc:	00c00044 	movi	r3,1
 402b700:	88c00415 	stw	r3,16(r17)
 402b704:	d8c00117 	ldw	r3,4(sp)
 402b708:	10800804 	addi	r2,r2,32
 402b70c:	04000044 	movi	r16,1
 402b710:	88c00515 	stw	r3,20(r17)
 402b714:	903fe71e 	bne	r18,zero,402b6b4 <__d2b+0xa4>
 402b718:	800690ba 	slli	r3,r16,2
 402b71c:	10bef384 	addi	r2,r2,-1074
 402b720:	98800015 	stw	r2,0(r19)
 402b724:	88c5883a 	add	r2,r17,r3
 402b728:	11000417 	ldw	r4,16(r2)
 402b72c:	8020917a 	slli	r16,r16,5
 402b730:	402ab400 	call	402ab40 <__hi0bits>
 402b734:	80a1c83a 	sub	r16,r16,r2
 402b738:	d8800817 	ldw	r2,32(sp)
 402b73c:	14000015 	stw	r16,0(r2)
 402b740:	003fe306 	br	402b6d0 <__d2b+0xc0>
 402b744:	04000084 	movi	r16,2
 402b748:	003fd806 	br	402b6ac <__d2b+0x9c>
 402b74c:	d9000017 	ldw	r4,0(sp)
 402b750:	89000515 	stw	r4,20(r17)
 402b754:	003fd206 	br	402b6a0 <__d2b+0x90>
 402b758:	01c00034 	movhi	r7,0
 402b75c:	01000034 	movhi	r4,0
 402b760:	39c10f04 	addi	r7,r7,1084
 402b764:	000d883a 	mov	r6,zero
 402b768:	0140c284 	movi	r5,778
 402b76c:	21012304 	addi	r4,r4,1164
 402b770:	402d44c0 	call	402d44c <__assert_func>

0402b774 <__ratio>:
 402b774:	defff904 	addi	sp,sp,-28
 402b778:	dc400315 	stw	r17,12(sp)
 402b77c:	2823883a 	mov	r17,r5
 402b780:	d80b883a 	mov	r5,sp
 402b784:	dfc00615 	stw	ra,24(sp)
 402b788:	dcc00515 	stw	r19,20(sp)
 402b78c:	dc800415 	stw	r18,16(sp)
 402b790:	2027883a 	mov	r19,r4
 402b794:	dc000215 	stw	r16,8(sp)
 402b798:	402b5080 	call	402b508 <__b2d>
 402b79c:	d9400104 	addi	r5,sp,4
 402b7a0:	8809883a 	mov	r4,r17
 402b7a4:	1025883a 	mov	r18,r2
 402b7a8:	1821883a 	mov	r16,r3
 402b7ac:	402b5080 	call	402b508 <__b2d>
 402b7b0:	89000417 	ldw	r4,16(r17)
 402b7b4:	9a000417 	ldw	r8,16(r19)
 402b7b8:	d9400117 	ldw	r5,4(sp)
 402b7bc:	100d883a 	mov	r6,r2
 402b7c0:	4111c83a 	sub	r8,r8,r4
 402b7c4:	d9000017 	ldw	r4,0(sp)
 402b7c8:	4010917a 	slli	r8,r8,5
 402b7cc:	180f883a 	mov	r7,r3
 402b7d0:	2149c83a 	sub	r4,r4,r5
 402b7d4:	4111883a 	add	r8,r8,r4
 402b7d8:	02000c0e 	bge	zero,r8,402b80c <__ratio+0x98>
 402b7dc:	4010953a 	slli	r8,r8,20
 402b7e0:	4421883a 	add	r16,r8,r16
 402b7e4:	9009883a 	mov	r4,r18
 402b7e8:	800b883a 	mov	r5,r16
 402b7ec:	402f3640 	call	402f364 <__divdf3>
 402b7f0:	dfc00617 	ldw	ra,24(sp)
 402b7f4:	dcc00517 	ldw	r19,20(sp)
 402b7f8:	dc800417 	ldw	r18,16(sp)
 402b7fc:	dc400317 	ldw	r17,12(sp)
 402b800:	dc000217 	ldw	r16,8(sp)
 402b804:	dec00704 	addi	sp,sp,28
 402b808:	f800283a 	ret
 402b80c:	00bffc34 	movhi	r2,65520
 402b810:	4091383a 	mul	r8,r8,r2
 402b814:	40cf883a 	add	r7,r8,r3
 402b818:	003ff206 	br	402b7e4 <__ratio+0x70>

0402b81c <_mprec_log10>:
 402b81c:	defffe04 	addi	sp,sp,-8
 402b820:	dc000015 	stw	r16,0(sp)
 402b824:	dfc00115 	stw	ra,4(sp)
 402b828:	20800608 	cmpgei	r2,r4,24
 402b82c:	2021883a 	mov	r16,r4
 402b830:	10000f26 	beq	r2,zero,402b870 <_mprec_log10+0x54>
 402b834:	0009883a 	mov	r4,zero
 402b838:	014ffc34 	movhi	r5,16368
 402b83c:	000d883a 	mov	r6,zero
 402b840:	01d00934 	movhi	r7,16420
 402b844:	402fe100 	call	402fe10 <__muldf3>
 402b848:	843fffc4 	addi	r16,r16,-1
 402b84c:	1009883a 	mov	r4,r2
 402b850:	180b883a 	mov	r5,r3
 402b854:	803ff91e 	bne	r16,zero,402b83c <_mprec_log10+0x20>
 402b858:	2005883a 	mov	r2,r4
 402b85c:	2807883a 	mov	r3,r5
 402b860:	dfc00117 	ldw	ra,4(sp)
 402b864:	dc000017 	ldw	r16,0(sp)
 402b868:	dec00204 	addi	sp,sp,8
 402b86c:	f800283a 	ret
 402b870:	202090fa 	slli	r16,r4,3
 402b874:	00800034 	movhi	r2,0
 402b878:	10814904 	addi	r2,r2,1316
 402b87c:	1421883a 	add	r16,r2,r16
 402b880:	81000017 	ldw	r4,0(r16)
 402b884:	81400117 	ldw	r5,4(r16)
 402b888:	003ff306 	br	402b858 <_mprec_log10+0x3c>

0402b88c <__copybits>:
 402b88c:	297fffc4 	addi	r5,r5,-1
 402b890:	280fd17a 	srai	r7,r5,5
 402b894:	31400417 	ldw	r5,16(r6)
 402b898:	30800504 	addi	r2,r6,20
 402b89c:	39c00044 	addi	r7,r7,1
 402b8a0:	280a90ba 	slli	r5,r5,2
 402b8a4:	380e90ba 	slli	r7,r7,2
 402b8a8:	114b883a 	add	r5,r2,r5
 402b8ac:	21cf883a 	add	r7,r4,r7
 402b8b0:	11400c2e 	bgeu	r2,r5,402b8e4 <__copybits+0x58>
 402b8b4:	2007883a 	mov	r3,r4
 402b8b8:	12000017 	ldw	r8,0(r2)
 402b8bc:	10800104 	addi	r2,r2,4
 402b8c0:	18c00104 	addi	r3,r3,4
 402b8c4:	1a3fff15 	stw	r8,-4(r3)
 402b8c8:	117ffb36 	bltu	r2,r5,402b8b8 <__copybits+0x2c>
 402b8cc:	2985c83a 	sub	r2,r5,r6
 402b8d0:	10bffac4 	addi	r2,r2,-21
 402b8d4:	1004d0ba 	srli	r2,r2,2
 402b8d8:	10800044 	addi	r2,r2,1
 402b8dc:	100490ba 	slli	r2,r2,2
 402b8e0:	2089883a 	add	r4,r4,r2
 402b8e4:	21c0072e 	bgeu	r4,r7,402b904 <__copybits+0x78>
 402b8e8:	39bfffc4 	addi	r6,r7,-1
 402b8ec:	310dc83a 	sub	r6,r6,r4
 402b8f0:	300cd0ba 	srli	r6,r6,2
 402b8f4:	000b883a 	mov	r5,zero
 402b8f8:	31800044 	addi	r6,r6,1
 402b8fc:	300c90ba 	slli	r6,r6,2
 402b900:	40257901 	jmpi	4025790 <memset>
 402b904:	f800283a 	ret

0402b908 <__any_on>:
 402b908:	20c00417 	ldw	r3,16(r4)
 402b90c:	280dd17a 	srai	r6,r5,5
 402b910:	21000504 	addi	r4,r4,20
 402b914:	1980080e 	bge	r3,r6,402b938 <__any_on+0x30>
 402b918:	180490ba 	slli	r2,r3,2
 402b91c:	2085883a 	add	r2,r4,r2
 402b920:	20800f2e 	bgeu	r4,r2,402b960 <__any_on+0x58>
 402b924:	10ffff17 	ldw	r3,-4(r2)
 402b928:	10bfff04 	addi	r2,r2,-4
 402b92c:	183ffc26 	beq	r3,zero,402b920 <__any_on+0x18>
 402b930:	00800044 	movi	r2,1
 402b934:	f800283a 	ret
 402b938:	300490ba 	slli	r2,r6,2
 402b93c:	2085883a 	add	r2,r4,r2
 402b940:	30fff70e 	bge	r6,r3,402b920 <__any_on+0x18>
 402b944:	294007cc 	andi	r5,r5,31
 402b948:	283ff526 	beq	r5,zero,402b920 <__any_on+0x18>
 402b94c:	11800017 	ldw	r6,0(r2)
 402b950:	3146d83a 	srl	r3,r6,r5
 402b954:	194a983a 	sll	r5,r3,r5
 402b958:	317ff51e 	bne	r6,r5,402b930 <__any_on+0x28>
 402b95c:	003ff006 	br	402b920 <__any_on+0x18>
 402b960:	0005883a 	mov	r2,zero
 402b964:	f800283a 	ret

0402b968 <_read_r>:
 402b968:	2807883a 	mov	r3,r5
 402b96c:	defffe04 	addi	sp,sp,-8
 402b970:	dc000015 	stw	r16,0(sp)
 402b974:	300b883a 	mov	r5,r6
 402b978:	00800034 	movhi	r2,0
 402b97c:	380d883a 	mov	r6,r7
 402b980:	2021883a 	mov	r16,r4
 402b984:	1809883a 	mov	r4,r3
 402b988:	dfc00115 	stw	ra,4(sp)
 402b98c:	10095d15 	stw	zero,9588(r2)
 402b990:	4031adc0 	call	4031adc <read>
 402b994:	10ffffd8 	cmpnei	r3,r2,-1
 402b998:	18000426 	beq	r3,zero,402b9ac <_read_r+0x44>
 402b99c:	dfc00117 	ldw	ra,4(sp)
 402b9a0:	dc000017 	ldw	r16,0(sp)
 402b9a4:	dec00204 	addi	sp,sp,8
 402b9a8:	f800283a 	ret
 402b9ac:	00c00034 	movhi	r3,0
 402b9b0:	18c95d17 	ldw	r3,9588(r3)
 402b9b4:	183ff926 	beq	r3,zero,402b99c <_read_r+0x34>
 402b9b8:	80c00015 	stw	r3,0(r16)
 402b9bc:	dfc00117 	ldw	ra,4(sp)
 402b9c0:	dc000017 	ldw	r16,0(sp)
 402b9c4:	dec00204 	addi	sp,sp,8
 402b9c8:	f800283a 	ret

0402b9cc <_realloc_r>:
 402b9cc:	defff504 	addi	sp,sp,-44
 402b9d0:	dc800315 	stw	r18,12(sp)
 402b9d4:	dfc00a15 	stw	ra,40(sp)
 402b9d8:	df000915 	stw	fp,36(sp)
 402b9dc:	ddc00815 	stw	r23,32(sp)
 402b9e0:	dd800715 	stw	r22,28(sp)
 402b9e4:	dd400615 	stw	r21,24(sp)
 402b9e8:	dd000515 	stw	r20,20(sp)
 402b9ec:	dcc00415 	stw	r19,16(sp)
 402b9f0:	dc400215 	stw	r17,8(sp)
 402b9f4:	dc000115 	stw	r16,4(sp)
 402b9f8:	3025883a 	mov	r18,r6
 402b9fc:	28008b26 	beq	r5,zero,402bc2c <_realloc_r+0x260>
 402ba00:	2821883a 	mov	r16,r5
 402ba04:	2027883a 	mov	r19,r4
 402ba08:	944002c4 	addi	r17,r18,11
 402ba0c:	40318100 	call	4031810 <__malloc_lock>
 402ba10:	888005f0 	cmpltui	r2,r17,23
 402ba14:	1000521e 	bne	r2,zero,402bb60 <_realloc_r+0x194>
 402ba18:	017ffe04 	movi	r5,-8
 402ba1c:	8962703a 	and	r17,r17,r5
 402ba20:	8807883a 	mov	r3,r17
 402ba24:	88005116 	blt	r17,zero,402bb6c <_realloc_r+0x1a0>
 402ba28:	8c805036 	bltu	r17,r18,402bb6c <_realloc_r+0x1a0>
 402ba2c:	80bfff17 	ldw	r2,-4(r16)
 402ba30:	017fff04 	movi	r5,-4
 402ba34:	857ffe04 	addi	r21,r16,-8
 402ba38:	1168703a 	and	r20,r2,r5
 402ba3c:	ad2d883a 	add	r22,r21,r20
 402ba40:	a0c0390e 	bge	r20,r3,402bb28 <_realloc_r+0x15c>
 402ba44:	07000034 	movhi	fp,0
 402ba48:	e7036204 	addi	fp,fp,3464
 402ba4c:	e2000217 	ldw	r8,8(fp)
 402ba50:	b1000117 	ldw	r4,4(r22)
 402ba54:	45808e26 	beq	r8,r22,402bc90 <_realloc_r+0x2c4>
 402ba58:	01bfff84 	movi	r6,-2
 402ba5c:	218c703a 	and	r6,r4,r6
 402ba60:	b18d883a 	add	r6,r22,r6
 402ba64:	31800117 	ldw	r6,4(r6)
 402ba68:	3180004c 	andi	r6,r6,1
 402ba6c:	30004f1e 	bne	r6,zero,402bbac <_realloc_r+0x1e0>
 402ba70:	2148703a 	and	r4,r4,r5
 402ba74:	a10b883a 	add	r5,r20,r4
 402ba78:	28c0bf0e 	bge	r5,r3,402bd78 <_realloc_r+0x3ac>
 402ba7c:	1080004c 	andi	r2,r2,1
 402ba80:	10004c1e 	bne	r2,zero,402bbb4 <_realloc_r+0x1e8>
 402ba84:	81fffe17 	ldw	r7,-8(r16)
 402ba88:	00bfff04 	movi	r2,-4
 402ba8c:	a9cfc83a 	sub	r7,r21,r7
 402ba90:	39400117 	ldw	r5,4(r7)
 402ba94:	288a703a 	and	r5,r5,r2
 402ba98:	b0000426 	beq	r22,zero,402baac <_realloc_r+0xe0>
 402ba9c:	a16f883a 	add	r23,r20,r5
 402baa0:	b92f883a 	add	r23,r23,r4
 402baa4:	4580bf26 	beq	r8,r22,402bda4 <_realloc_r+0x3d8>
 402baa8:	b8c0930e 	bge	r23,r3,402bcf8 <_realloc_r+0x32c>
 402baac:	38004126 	beq	r7,zero,402bbb4 <_realloc_r+0x1e8>
 402bab0:	a16f883a 	add	r23,r20,r5
 402bab4:	b8c03f16 	blt	r23,r3,402bbb4 <_realloc_r+0x1e8>
 402bab8:	38800317 	ldw	r2,12(r7)
 402babc:	38c00217 	ldw	r3,8(r7)
 402bac0:	a1bfff04 	addi	r6,r20,-4
 402bac4:	31400968 	cmpgeui	r5,r6,37
 402bac8:	18800315 	stw	r2,12(r3)
 402bacc:	10c00215 	stw	r3,8(r2)
 402bad0:	39000204 	addi	r4,r7,8
 402bad4:	3ded883a 	add	r22,r7,r23
 402bad8:	2800941e 	bne	r5,zero,402bd2c <_realloc_r+0x360>
 402badc:	30800530 	cmpltui	r2,r6,20
 402bae0:	80c00017 	ldw	r3,0(r16)
 402bae4:	1000df1e 	bne	r2,zero,402be64 <_realloc_r+0x498>
 402bae8:	38c00215 	stw	r3,8(r7)
 402baec:	80c00117 	ldw	r3,4(r16)
 402baf0:	30800728 	cmpgeui	r2,r6,28
 402baf4:	38c00315 	stw	r3,12(r7)
 402baf8:	1000dc1e 	bne	r2,zero,402be6c <_realloc_r+0x4a0>
 402bafc:	80c00217 	ldw	r3,8(r16)
 402bb00:	38800404 	addi	r2,r7,16
 402bb04:	84000204 	addi	r16,r16,8
 402bb08:	10c00015 	stw	r3,0(r2)
 402bb0c:	80c00117 	ldw	r3,4(r16)
 402bb10:	b829883a 	mov	r20,r23
 402bb14:	382b883a 	mov	r21,r7
 402bb18:	10c00115 	stw	r3,4(r2)
 402bb1c:	80c00217 	ldw	r3,8(r16)
 402bb20:	2021883a 	mov	r16,r4
 402bb24:	10c00215 	stw	r3,8(r2)
 402bb28:	a9800117 	ldw	r6,4(r21)
 402bb2c:	a445c83a 	sub	r2,r20,r17
 402bb30:	10c00430 	cmpltui	r3,r2,16
 402bb34:	3180004c 	andi	r6,r6,1
 402bb38:	18004926 	beq	r3,zero,402bc60 <_realloc_r+0x294>
 402bb3c:	a18cb03a 	or	r6,r20,r6
 402bb40:	a9800115 	stw	r6,4(r21)
 402bb44:	b0800117 	ldw	r2,4(r22)
 402bb48:	10800054 	ori	r2,r2,1
 402bb4c:	b0800115 	stw	r2,4(r22)
 402bb50:	9809883a 	mov	r4,r19
 402bb54:	40318340 	call	4031834 <__malloc_unlock>
 402bb58:	8025883a 	mov	r18,r16
 402bb5c:	00000606 	br	402bb78 <_realloc_r+0x1ac>
 402bb60:	04400404 	movi	r17,16
 402bb64:	00c00404 	movi	r3,16
 402bb68:	8cbfb02e 	bgeu	r17,r18,402ba2c <_realloc_r+0x60>
 402bb6c:	00800304 	movi	r2,12
 402bb70:	98800015 	stw	r2,0(r19)
 402bb74:	0025883a 	mov	r18,zero
 402bb78:	9005883a 	mov	r2,r18
 402bb7c:	dfc00a17 	ldw	ra,40(sp)
 402bb80:	df000917 	ldw	fp,36(sp)
 402bb84:	ddc00817 	ldw	r23,32(sp)
 402bb88:	dd800717 	ldw	r22,28(sp)
 402bb8c:	dd400617 	ldw	r21,24(sp)
 402bb90:	dd000517 	ldw	r20,20(sp)
 402bb94:	dcc00417 	ldw	r19,16(sp)
 402bb98:	dc800317 	ldw	r18,12(sp)
 402bb9c:	dc400217 	ldw	r17,8(sp)
 402bba0:	dc000117 	ldw	r16,4(sp)
 402bba4:	dec00b04 	addi	sp,sp,44
 402bba8:	f800283a 	ret
 402bbac:	1080004c 	andi	r2,r2,1
 402bbb0:	10006c26 	beq	r2,zero,402bd64 <_realloc_r+0x398>
 402bbb4:	900b883a 	mov	r5,r18
 402bbb8:	9809883a 	mov	r4,r19
 402bbbc:	4024eb00 	call	4024eb0 <_malloc_r>
 402bbc0:	1025883a 	mov	r18,r2
 402bbc4:	10001626 	beq	r2,zero,402bc20 <_realloc_r+0x254>
 402bbc8:	80bfff17 	ldw	r2,-4(r16)
 402bbcc:	013fff84 	movi	r4,-2
 402bbd0:	90fffe04 	addi	r3,r18,-8
 402bbd4:	1104703a 	and	r2,r2,r4
 402bbd8:	a885883a 	add	r2,r21,r2
 402bbdc:	10c05b26 	beq	r2,r3,402bd4c <_realloc_r+0x380>
 402bbe0:	a1bfff04 	addi	r6,r20,-4
 402bbe4:	30800968 	cmpgeui	r2,r6,37
 402bbe8:	10006a1e 	bne	r2,zero,402bd94 <_realloc_r+0x3c8>
 402bbec:	30800530 	cmpltui	r2,r6,20
 402bbf0:	81000017 	ldw	r4,0(r16)
 402bbf4:	10003726 	beq	r2,zero,402bcd4 <_realloc_r+0x308>
 402bbf8:	9005883a 	mov	r2,r18
 402bbfc:	8007883a 	mov	r3,r16
 402bc00:	11000015 	stw	r4,0(r2)
 402bc04:	19000117 	ldw	r4,4(r3)
 402bc08:	11000115 	stw	r4,4(r2)
 402bc0c:	18c00217 	ldw	r3,8(r3)
 402bc10:	10c00215 	stw	r3,8(r2)
 402bc14:	800b883a 	mov	r5,r16
 402bc18:	9809883a 	mov	r4,r19
 402bc1c:	4023fbc0 	call	4023fbc <_free_r>
 402bc20:	9809883a 	mov	r4,r19
 402bc24:	40318340 	call	4031834 <__malloc_unlock>
 402bc28:	003fd306 	br	402bb78 <_realloc_r+0x1ac>
 402bc2c:	300b883a 	mov	r5,r6
 402bc30:	dfc00a17 	ldw	ra,40(sp)
 402bc34:	df000917 	ldw	fp,36(sp)
 402bc38:	ddc00817 	ldw	r23,32(sp)
 402bc3c:	dd800717 	ldw	r22,28(sp)
 402bc40:	dd400617 	ldw	r21,24(sp)
 402bc44:	dd000517 	ldw	r20,20(sp)
 402bc48:	dcc00417 	ldw	r19,16(sp)
 402bc4c:	dc800317 	ldw	r18,12(sp)
 402bc50:	dc400217 	ldw	r17,8(sp)
 402bc54:	dc000117 	ldw	r16,4(sp)
 402bc58:	dec00b04 	addi	sp,sp,44
 402bc5c:	4024eb01 	jmpi	4024eb0 <_malloc_r>
 402bc60:	344cb03a 	or	r6,r6,r17
 402bc64:	a9800115 	stw	r6,4(r21)
 402bc68:	ac4b883a 	add	r5,r21,r17
 402bc6c:	10800054 	ori	r2,r2,1
 402bc70:	28800115 	stw	r2,4(r5)
 402bc74:	b0800117 	ldw	r2,4(r22)
 402bc78:	29400204 	addi	r5,r5,8
 402bc7c:	9809883a 	mov	r4,r19
 402bc80:	10800054 	ori	r2,r2,1
 402bc84:	b0800115 	stw	r2,4(r22)
 402bc88:	4023fbc0 	call	4023fbc <_free_r>
 402bc8c:	003fb006 	br	402bb50 <_realloc_r+0x184>
 402bc90:	2148703a 	and	r4,r4,r5
 402bc94:	a10b883a 	add	r5,r20,r4
 402bc98:	89800404 	addi	r6,r17,16
 402bc9c:	29bf7716 	blt	r5,r6,402ba7c <_realloc_r+0xb0>
 402bca0:	ac6b883a 	add	r21,r21,r17
 402bca4:	2c45c83a 	sub	r2,r5,r17
 402bca8:	e5400215 	stw	r21,8(fp)
 402bcac:	10800054 	ori	r2,r2,1
 402bcb0:	a8800115 	stw	r2,4(r21)
 402bcb4:	80bfff17 	ldw	r2,-4(r16)
 402bcb8:	9809883a 	mov	r4,r19
 402bcbc:	8025883a 	mov	r18,r16
 402bcc0:	1080004c 	andi	r2,r2,1
 402bcc4:	1462b03a 	or	r17,r2,r17
 402bcc8:	847fff15 	stw	r17,-4(r16)
 402bccc:	40318340 	call	4031834 <__malloc_unlock>
 402bcd0:	003fa906 	br	402bb78 <_realloc_r+0x1ac>
 402bcd4:	91000015 	stw	r4,0(r18)
 402bcd8:	80c00117 	ldw	r3,4(r16)
 402bcdc:	30800728 	cmpgeui	r2,r6,28
 402bce0:	90c00115 	stw	r3,4(r18)
 402bce4:	1000551e 	bne	r2,zero,402be3c <_realloc_r+0x470>
 402bce8:	81000217 	ldw	r4,8(r16)
 402bcec:	80c00204 	addi	r3,r16,8
 402bcf0:	90800204 	addi	r2,r18,8
 402bcf4:	003fc206 	br	402bc00 <_realloc_r+0x234>
 402bcf8:	b0800317 	ldw	r2,12(r22)
 402bcfc:	b0c00217 	ldw	r3,8(r22)
 402bd00:	a1bfff04 	addi	r6,r20,-4
 402bd04:	31400968 	cmpgeui	r5,r6,37
 402bd08:	18800315 	stw	r2,12(r3)
 402bd0c:	10c00215 	stw	r3,8(r2)
 402bd10:	38c00217 	ldw	r3,8(r7)
 402bd14:	38800317 	ldw	r2,12(r7)
 402bd18:	39000204 	addi	r4,r7,8
 402bd1c:	3ded883a 	add	r22,r7,r23
 402bd20:	18800315 	stw	r2,12(r3)
 402bd24:	10c00215 	stw	r3,8(r2)
 402bd28:	283f6c26 	beq	r5,zero,402badc <_realloc_r+0x110>
 402bd2c:	800b883a 	mov	r5,r16
 402bd30:	d9c00015 	stw	r7,0(sp)
 402bd34:	402a6dc0 	call	402a6dc <memmove>
 402bd38:	d9c00017 	ldw	r7,0(sp)
 402bd3c:	1021883a 	mov	r16,r2
 402bd40:	b829883a 	mov	r20,r23
 402bd44:	382b883a 	mov	r21,r7
 402bd48:	003f7706 	br	402bb28 <_realloc_r+0x15c>
 402bd4c:	90bfff17 	ldw	r2,-4(r18)
 402bd50:	00ffff04 	movi	r3,-4
 402bd54:	10c4703a 	and	r2,r2,r3
 402bd58:	a0a9883a 	add	r20,r20,r2
 402bd5c:	ad2d883a 	add	r22,r21,r20
 402bd60:	003f7106 	br	402bb28 <_realloc_r+0x15c>
 402bd64:	81fffe17 	ldw	r7,-8(r16)
 402bd68:	a9cfc83a 	sub	r7,r21,r7
 402bd6c:	38800117 	ldw	r2,4(r7)
 402bd70:	114a703a 	and	r5,r2,r5
 402bd74:	003f4d06 	br	402baac <_realloc_r+0xe0>
 402bd78:	b0800317 	ldw	r2,12(r22)
 402bd7c:	b0c00217 	ldw	r3,8(r22)
 402bd80:	2829883a 	mov	r20,r5
 402bd84:	a96d883a 	add	r22,r21,r5
 402bd88:	18800315 	stw	r2,12(r3)
 402bd8c:	10c00215 	stw	r3,8(r2)
 402bd90:	003f6506 	br	402bb28 <_realloc_r+0x15c>
 402bd94:	800b883a 	mov	r5,r16
 402bd98:	9009883a 	mov	r4,r18
 402bd9c:	402a6dc0 	call	402a6dc <memmove>
 402bda0:	003f9c06 	br	402bc14 <_realloc_r+0x248>
 402bda4:	88800404 	addi	r2,r17,16
 402bda8:	b8bf4016 	blt	r23,r2,402baac <_realloc_r+0xe0>
 402bdac:	38800317 	ldw	r2,12(r7)
 402bdb0:	38c00217 	ldw	r3,8(r7)
 402bdb4:	a1bfff04 	addi	r6,r20,-4
 402bdb8:	31000968 	cmpgeui	r4,r6,37
 402bdbc:	18800315 	stw	r2,12(r3)
 402bdc0:	10c00215 	stw	r3,8(r2)
 402bdc4:	3c800204 	addi	r18,r7,8
 402bdc8:	20003b1e 	bne	r4,zero,402beb8 <_realloc_r+0x4ec>
 402bdcc:	30800530 	cmpltui	r2,r6,20
 402bdd0:	80c00017 	ldw	r3,0(r16)
 402bdd4:	1000361e 	bne	r2,zero,402beb0 <_realloc_r+0x4e4>
 402bdd8:	38c00215 	stw	r3,8(r7)
 402bddc:	80c00117 	ldw	r3,4(r16)
 402bde0:	30800728 	cmpgeui	r2,r6,28
 402bde4:	38c00315 	stw	r3,12(r7)
 402bde8:	1000401e 	bne	r2,zero,402beec <_realloc_r+0x520>
 402bdec:	80c00217 	ldw	r3,8(r16)
 402bdf0:	38800404 	addi	r2,r7,16
 402bdf4:	84000204 	addi	r16,r16,8
 402bdf8:	10c00015 	stw	r3,0(r2)
 402bdfc:	80c00117 	ldw	r3,4(r16)
 402be00:	10c00115 	stw	r3,4(r2)
 402be04:	80c00217 	ldw	r3,8(r16)
 402be08:	10c00215 	stw	r3,8(r2)
 402be0c:	3c47883a 	add	r3,r7,r17
 402be10:	bc45c83a 	sub	r2,r23,r17
 402be14:	e0c00215 	stw	r3,8(fp)
 402be18:	10800054 	ori	r2,r2,1
 402be1c:	18800115 	stw	r2,4(r3)
 402be20:	38800117 	ldw	r2,4(r7)
 402be24:	9809883a 	mov	r4,r19
 402be28:	1080004c 	andi	r2,r2,1
 402be2c:	1462b03a 	or	r17,r2,r17
 402be30:	3c400115 	stw	r17,4(r7)
 402be34:	40318340 	call	4031834 <__malloc_unlock>
 402be38:	003f4f06 	br	402bb78 <_realloc_r+0x1ac>
 402be3c:	80800217 	ldw	r2,8(r16)
 402be40:	31800920 	cmpeqi	r6,r6,36
 402be44:	90800215 	stw	r2,8(r18)
 402be48:	80800317 	ldw	r2,12(r16)
 402be4c:	90800315 	stw	r2,12(r18)
 402be50:	81000417 	ldw	r4,16(r16)
 402be54:	30000f1e 	bne	r6,zero,402be94 <_realloc_r+0x4c8>
 402be58:	80c00404 	addi	r3,r16,16
 402be5c:	90800404 	addi	r2,r18,16
 402be60:	003f6706 	br	402bc00 <_realloc_r+0x234>
 402be64:	2005883a 	mov	r2,r4
 402be68:	003f2706 	br	402bb08 <_realloc_r+0x13c>
 402be6c:	80800217 	ldw	r2,8(r16)
 402be70:	31800920 	cmpeqi	r6,r6,36
 402be74:	38800415 	stw	r2,16(r7)
 402be78:	80800317 	ldw	r2,12(r16)
 402be7c:	38800515 	stw	r2,20(r7)
 402be80:	80c00417 	ldw	r3,16(r16)
 402be84:	3000121e 	bne	r6,zero,402bed0 <_realloc_r+0x504>
 402be88:	38800604 	addi	r2,r7,24
 402be8c:	84000404 	addi	r16,r16,16
 402be90:	003f1d06 	br	402bb08 <_realloc_r+0x13c>
 402be94:	91000415 	stw	r4,16(r18)
 402be98:	81000517 	ldw	r4,20(r16)
 402be9c:	80c00604 	addi	r3,r16,24
 402bea0:	90800604 	addi	r2,r18,24
 402bea4:	91000515 	stw	r4,20(r18)
 402bea8:	81000617 	ldw	r4,24(r16)
 402beac:	003f5406 	br	402bc00 <_realloc_r+0x234>
 402beb0:	9005883a 	mov	r2,r18
 402beb4:	003fd006 	br	402bdf8 <_realloc_r+0x42c>
 402beb8:	800b883a 	mov	r5,r16
 402bebc:	9009883a 	mov	r4,r18
 402bec0:	d9c00015 	stw	r7,0(sp)
 402bec4:	402a6dc0 	call	402a6dc <memmove>
 402bec8:	d9c00017 	ldw	r7,0(sp)
 402becc:	003fcf06 	br	402be0c <_realloc_r+0x440>
 402bed0:	84000604 	addi	r16,r16,24
 402bed4:	38c00615 	stw	r3,24(r7)
 402bed8:	80ffff17 	ldw	r3,-4(r16)
 402bedc:	38800804 	addi	r2,r7,32
 402bee0:	38c00715 	stw	r3,28(r7)
 402bee4:	80c00017 	ldw	r3,0(r16)
 402bee8:	003f0706 	br	402bb08 <_realloc_r+0x13c>
 402beec:	80800217 	ldw	r2,8(r16)
 402bef0:	31800920 	cmpeqi	r6,r6,36
 402bef4:	38800415 	stw	r2,16(r7)
 402bef8:	80800317 	ldw	r2,12(r16)
 402befc:	38800515 	stw	r2,20(r7)
 402bf00:	80c00417 	ldw	r3,16(r16)
 402bf04:	3000031e 	bne	r6,zero,402bf14 <_realloc_r+0x548>
 402bf08:	38800604 	addi	r2,r7,24
 402bf0c:	84000404 	addi	r16,r16,16
 402bf10:	003fb906 	br	402bdf8 <_realloc_r+0x42c>
 402bf14:	84000604 	addi	r16,r16,24
 402bf18:	38c00615 	stw	r3,24(r7)
 402bf1c:	80ffff17 	ldw	r3,-4(r16)
 402bf20:	38800804 	addi	r2,r7,32
 402bf24:	38c00715 	stw	r3,28(r7)
 402bf28:	80c00017 	ldw	r3,0(r16)
 402bf2c:	003fb206 	br	402bdf8 <_realloc_r+0x42c>

0402bf30 <__sprint_r.part.0>:
 402bf30:	28801917 	ldw	r2,100(r5)
 402bf34:	defff604 	addi	sp,sp,-40
 402bf38:	dcc00315 	stw	r19,12(sp)
 402bf3c:	dfc00915 	stw	ra,36(sp)
 402bf40:	df000815 	stw	fp,32(sp)
 402bf44:	ddc00715 	stw	r23,28(sp)
 402bf48:	dd800615 	stw	r22,24(sp)
 402bf4c:	dd400515 	stw	r21,20(sp)
 402bf50:	dd000415 	stw	r20,16(sp)
 402bf54:	dc800215 	stw	r18,8(sp)
 402bf58:	dc400115 	stw	r17,4(sp)
 402bf5c:	dc000015 	stw	r16,0(sp)
 402bf60:	1088000c 	andi	r2,r2,8192
 402bf64:	3027883a 	mov	r19,r6
 402bf68:	10002c26 	beq	r2,zero,402c01c <__sprint_r.part.0+0xec>
 402bf6c:	30800217 	ldw	r2,8(r6)
 402bf70:	35000017 	ldw	r20,0(r6)
 402bf74:	2821883a 	mov	r16,r5
 402bf78:	2023883a 	mov	r17,r4
 402bf7c:	05bfff04 	movi	r22,-4
 402bf80:	10002426 	beq	r2,zero,402c014 <__sprint_r.part.0+0xe4>
 402bf84:	a5400117 	ldw	r21,4(r20)
 402bf88:	a5c00017 	ldw	r23,0(r20)
 402bf8c:	a824d0ba 	srli	r18,r21,2
 402bf90:	90001b26 	beq	r18,zero,402c000 <__sprint_r.part.0+0xd0>
 402bf94:	0039883a 	mov	fp,zero
 402bf98:	00000206 	br	402bfa4 <__sprint_r.part.0+0x74>
 402bf9c:	bdc00104 	addi	r23,r23,4
 402bfa0:	97001626 	beq	r18,fp,402bffc <__sprint_r.part.0+0xcc>
 402bfa4:	b9400017 	ldw	r5,0(r23)
 402bfa8:	800d883a 	mov	r6,r16
 402bfac:	8809883a 	mov	r4,r17
 402bfb0:	402d7340 	call	402d734 <_fputwc_r>
 402bfb4:	10bfffe0 	cmpeqi	r2,r2,-1
 402bfb8:	e7000044 	addi	fp,fp,1
 402bfbc:	103ff726 	beq	r2,zero,402bf9c <__sprint_r.part.0+0x6c>
 402bfc0:	00bfffc4 	movi	r2,-1
 402bfc4:	98000215 	stw	zero,8(r19)
 402bfc8:	98000115 	stw	zero,4(r19)
 402bfcc:	dfc00917 	ldw	ra,36(sp)
 402bfd0:	df000817 	ldw	fp,32(sp)
 402bfd4:	ddc00717 	ldw	r23,28(sp)
 402bfd8:	dd800617 	ldw	r22,24(sp)
 402bfdc:	dd400517 	ldw	r21,20(sp)
 402bfe0:	dd000417 	ldw	r20,16(sp)
 402bfe4:	dcc00317 	ldw	r19,12(sp)
 402bfe8:	dc800217 	ldw	r18,8(sp)
 402bfec:	dc400117 	ldw	r17,4(sp)
 402bff0:	dc000017 	ldw	r16,0(sp)
 402bff4:	dec00a04 	addi	sp,sp,40
 402bff8:	f800283a 	ret
 402bffc:	98800217 	ldw	r2,8(r19)
 402c000:	adaa703a 	and	r21,r21,r22
 402c004:	1545c83a 	sub	r2,r2,r21
 402c008:	98800215 	stw	r2,8(r19)
 402c00c:	a5000204 	addi	r20,r20,8
 402c010:	103fdc1e 	bne	r2,zero,402bf84 <__sprint_r.part.0+0x54>
 402c014:	0005883a 	mov	r2,zero
 402c018:	003fea06 	br	402bfc4 <__sprint_r.part.0+0x94>
 402c01c:	402a0780 	call	402a078 <__sfvwrite_r>
 402c020:	003fe806 	br	402bfc4 <__sprint_r.part.0+0x94>

0402c024 <__sprint_r>:
 402c024:	30c00217 	ldw	r3,8(r6)
 402c028:	18000126 	beq	r3,zero,402c030 <__sprint_r+0xc>
 402c02c:	402bf301 	jmpi	402bf30 <__sprint_r.part.0>
 402c030:	30000115 	stw	zero,4(r6)
 402c034:	0005883a 	mov	r2,zero
 402c038:	f800283a 	ret

0402c03c <___vfiprintf_internal_r>:
 402c03c:	deffcf04 	addi	sp,sp,-196
 402c040:	dd802d15 	stw	r22,180(sp)
 402c044:	dd402c15 	stw	r21,176(sp)
 402c048:	dd002b15 	stw	r20,172(sp)
 402c04c:	dfc03015 	stw	ra,192(sp)
 402c050:	df002f15 	stw	fp,188(sp)
 402c054:	ddc02e15 	stw	r23,184(sp)
 402c058:	dcc02a15 	stw	r19,168(sp)
 402c05c:	dc802915 	stw	r18,164(sp)
 402c060:	dc402815 	stw	r17,160(sp)
 402c064:	dc002715 	stw	r16,156(sp)
 402c068:	d9c00415 	stw	r7,16(sp)
 402c06c:	202d883a 	mov	r22,r4
 402c070:	282b883a 	mov	r21,r5
 402c074:	3029883a 	mov	r20,r6
 402c078:	20000226 	beq	r4,zero,402c084 <___vfiprintf_internal_r+0x48>
 402c07c:	20800e17 	ldw	r2,56(r4)
 402c080:	1001bb26 	beq	r2,zero,402c770 <___vfiprintf_internal_r+0x734>
 402c084:	a880030b 	ldhu	r2,12(r21)
 402c088:	10c8000c 	andi	r3,r2,8192
 402c08c:	1800061e 	bne	r3,zero,402c0a8 <___vfiprintf_internal_r+0x6c>
 402c090:	a8c01917 	ldw	r3,100(r21)
 402c094:	0137ffc4 	movi	r4,-8193
 402c098:	10880014 	ori	r2,r2,8192
 402c09c:	1906703a 	and	r3,r3,r4
 402c0a0:	a880030d 	sth	r2,12(r21)
 402c0a4:	a8c01915 	stw	r3,100(r21)
 402c0a8:	10c0020c 	andi	r3,r2,8
 402c0ac:	18010626 	beq	r3,zero,402c4c8 <___vfiprintf_internal_r+0x48c>
 402c0b0:	a8c00417 	ldw	r3,16(r21)
 402c0b4:	18010426 	beq	r3,zero,402c4c8 <___vfiprintf_internal_r+0x48c>
 402c0b8:	1080068c 	andi	r2,r2,26
 402c0bc:	10800298 	cmpnei	r2,r2,10
 402c0c0:	10010926 	beq	r2,zero,402c4e8 <___vfiprintf_internal_r+0x4ac>
 402c0c4:	dc801704 	addi	r18,sp,92
 402c0c8:	dc800a15 	stw	r18,40(sp)
 402c0cc:	d8000c15 	stw	zero,48(sp)
 402c0d0:	d8000b15 	stw	zero,44(sp)
 402c0d4:	9021883a 	mov	r16,r18
 402c0d8:	d8000515 	stw	zero,20(sp)
 402c0dc:	d8000115 	stw	zero,4(sp)
 402c0e0:	a0800007 	ldb	r2,0(r20)
 402c0e4:	1000e626 	beq	r2,zero,402c480 <___vfiprintf_internal_r+0x444>
 402c0e8:	a023883a 	mov	r17,r20
 402c0ec:	00000306 	br	402c0fc <___vfiprintf_internal_r+0xc0>
 402c0f0:	88800047 	ldb	r2,1(r17)
 402c0f4:	8c400044 	addi	r17,r17,1
 402c0f8:	10013126 	beq	r2,zero,402c5c0 <___vfiprintf_internal_r+0x584>
 402c0fc:	10800958 	cmpnei	r2,r2,37
 402c100:	103ffb1e 	bne	r2,zero,402c0f0 <___vfiprintf_internal_r+0xb4>
 402c104:	8d27c83a 	sub	r19,r17,r20
 402c108:	8d012f1e 	bne	r17,r20,402c5c8 <___vfiprintf_internal_r+0x58c>
 402c10c:	88800003 	ldbu	r2,0(r17)
 402c110:	10803fcc 	andi	r2,r2,255
 402c114:	1080201c 	xori	r2,r2,128
 402c118:	10bfe004 	addi	r2,r2,-128
 402c11c:	1000d826 	beq	r2,zero,402c480 <___vfiprintf_internal_r+0x444>
 402c120:	88800047 	ldb	r2,1(r17)
 402c124:	8d000044 	addi	r20,r17,1
 402c128:	d8000945 	stb	zero,37(sp)
 402c12c:	000b883a 	mov	r5,zero
 402c130:	000d883a 	mov	r6,zero
 402c134:	023fffc4 	movi	r8,-1
 402c138:	0023883a 	mov	r17,zero
 402c13c:	001b883a 	mov	r13,zero
 402c140:	a5000044 	addi	r20,r20,1
 402c144:	10fff804 	addi	r3,r2,-32
 402c148:	19001668 	cmpgeui	r4,r3,89
 402c14c:	20006a1e 	bne	r4,zero,402c2f8 <___vfiprintf_internal_r+0x2bc>
 402c150:	180690ba 	slli	r3,r3,2
 402c154:	010100f4 	movhi	r4,1027
 402c158:	1909883a 	add	r4,r3,r4
 402c15c:	20f05917 	ldw	r3,-16028(r4)
 402c160:	1800683a 	jmp	r3
 402c164:	0402ca90 	cmplti	r16,zero,2858
 402c168:	0402c2f8 	rdprs	r16,zero,2827
 402c16c:	0402c2f8 	rdprs	r16,zero,2827
 402c170:	0402ca84 	movi	r16,2858
 402c174:	0402c2f8 	rdprs	r16,zero,2827
 402c178:	0402c2f8 	rdprs	r16,zero,2827
 402c17c:	0402c2f8 	rdprs	r16,zero,2827
 402c180:	0402c2f8 	rdprs	r16,zero,2827
 402c184:	0402c2f8 	rdprs	r16,zero,2827
 402c188:	0402c2f8 	rdprs	r16,zero,2827
 402c18c:	0402ca5c 	xori	r16,zero,2857
 402c190:	0402ca4c 	andi	r16,zero,2857
 402c194:	0402c2f8 	rdprs	r16,zero,2827
 402c198:	0402ca34 	movhi	r16,2856
 402c19c:	0402c9f0 	cmpltui	r16,zero,2855
 402c1a0:	0402c2f8 	rdprs	r16,zero,2827
 402c1a4:	0402c9e4 	muli	r16,zero,2855
 402c1a8:	0402c2c8 	cmpgei	r16,zero,2827
 402c1ac:	0402c2c8 	cmpgei	r16,zero,2827
 402c1b0:	0402c2c8 	cmpgei	r16,zero,2827
 402c1b4:	0402c2c8 	cmpgei	r16,zero,2827
 402c1b8:	0402c2c8 	cmpgei	r16,zero,2827
 402c1bc:	0402c2c8 	cmpgei	r16,zero,2827
 402c1c0:	0402c2c8 	cmpgei	r16,zero,2827
 402c1c4:	0402c2c8 	cmpgei	r16,zero,2827
 402c1c8:	0402c2c8 	cmpgei	r16,zero,2827
 402c1cc:	0402c2f8 	rdprs	r16,zero,2827
 402c1d0:	0402c2f8 	rdprs	r16,zero,2827
 402c1d4:	0402c2f8 	rdprs	r16,zero,2827
 402c1d8:	0402c2f8 	rdprs	r16,zero,2827
 402c1dc:	0402c2f8 	rdprs	r16,zero,2827
 402c1e0:	0402c2f8 	rdprs	r16,zero,2827
 402c1e4:	0402c2f8 	rdprs	r16,zero,2827
 402c1e8:	0402c2f8 	rdprs	r16,zero,2827
 402c1ec:	0402c2f8 	rdprs	r16,zero,2827
 402c1f0:	0402c2f8 	rdprs	r16,zero,2827
 402c1f4:	0402c8e0 	cmpeqi	r16,zero,2851
 402c1f8:	0402c2f8 	rdprs	r16,zero,2827
 402c1fc:	0402c2f8 	rdprs	r16,zero,2827
 402c200:	0402c2f8 	rdprs	r16,zero,2827
 402c204:	0402c2f8 	rdprs	r16,zero,2827
 402c208:	0402c2f8 	rdprs	r16,zero,2827
 402c20c:	0402c2f8 	rdprs	r16,zero,2827
 402c210:	0402c2f8 	rdprs	r16,zero,2827
 402c214:	0402c2f8 	rdprs	r16,zero,2827
 402c218:	0402c2f8 	rdprs	r16,zero,2827
 402c21c:	0402c2f8 	rdprs	r16,zero,2827
 402c220:	0402c558 	cmpnei	r16,zero,2837
 402c224:	0402c2f8 	rdprs	r16,zero,2827
 402c228:	0402c2f8 	rdprs	r16,zero,2827
 402c22c:	0402c2f8 	rdprs	r16,zero,2827
 402c230:	0402c2f8 	rdprs	r16,zero,2827
 402c234:	0402c2f8 	rdprs	r16,zero,2827
 402c238:	0402c530 	cmpltui	r16,zero,2836
 402c23c:	0402c2f8 	rdprs	r16,zero,2827
 402c240:	0402c2f8 	rdprs	r16,zero,2827
 402c244:	0402cae4 	muli	r16,zero,2859
 402c248:	0402c2f8 	rdprs	r16,zero,2827
 402c24c:	0402c2f8 	rdprs	r16,zero,2827
 402c250:	0402c2f8 	rdprs	r16,zero,2827
 402c254:	0402c2f8 	rdprs	r16,zero,2827
 402c258:	0402c2f8 	rdprs	r16,zero,2827
 402c25c:	0402c2f8 	rdprs	r16,zero,2827
 402c260:	0402c2f8 	rdprs	r16,zero,2827
 402c264:	0402c2f8 	rdprs	r16,zero,2827
 402c268:	0402c2f8 	rdprs	r16,zero,2827
 402c26c:	0402c2f8 	rdprs	r16,zero,2827
 402c270:	0402cabc 	xorhi	r16,zero,2858
 402c274:	0402c778 	rdprs	r16,zero,2845
 402c278:	0402c2f8 	rdprs	r16,zero,2827
 402c27c:	0402c2f8 	rdprs	r16,zero,2827
 402c280:	0402c2f8 	rdprs	r16,zero,2827
 402c284:	0402c7ec 	andhi	r16,zero,2847
 402c288:	0402c778 	rdprs	r16,zero,2845
 402c28c:	0402c2f8 	rdprs	r16,zero,2827
 402c290:	0402c2f8 	rdprs	r16,zero,2827
 402c294:	0402cb68 	cmpgeui	r16,zero,2861
 402c298:	0402c2f8 	rdprs	r16,zero,2827
 402c29c:	0402cb2c 	andhi	r16,zero,2860
 402c2a0:	0402c55c 	xori	r16,zero,2837
 402c2a4:	0402c8a4 	muli	r16,zero,2850
 402c2a8:	0402c898 	cmpnei	r16,zero,2850
 402c2ac:	0402c2f8 	rdprs	r16,zero,2827
 402c2b0:	0402c840 	call	402c84 <_gp+0x3f8754>
 402c2b4:	0402c2f8 	rdprs	r16,zero,2827
 402c2b8:	0402c534 	movhi	r16,2836
 402c2bc:	0402c2f8 	rdprs	r16,zero,2827
 402c2c0:	0402c2f8 	rdprs	r16,zero,2827
 402c2c4:	0402c7f8 	rdprs	r16,zero,2847
 402c2c8:	0023883a 	mov	r17,zero
 402c2cc:	10fff404 	addi	r3,r2,-48
 402c2d0:	a0800007 	ldb	r2,0(r20)
 402c2d4:	8c4002a4 	muli	r17,r17,10
 402c2d8:	a5000044 	addi	r20,r20,1
 402c2dc:	1c63883a 	add	r17,r3,r17
 402c2e0:	10fff404 	addi	r3,r2,-48
 402c2e4:	190002b0 	cmpltui	r4,r3,10
 402c2e8:	203ff91e 	bne	r4,zero,402c2d0 <___vfiprintf_internal_r+0x294>
 402c2ec:	10fff804 	addi	r3,r2,-32
 402c2f0:	19001668 	cmpgeui	r4,r3,89
 402c2f4:	203f9626 	beq	r4,zero,402c150 <___vfiprintf_internal_r+0x114>
 402c2f8:	29403fcc 	andi	r5,r5,255
 402c2fc:	2803eb1e 	bne	r5,zero,402d2ac <___vfiprintf_internal_r+0x1270>
 402c300:	10005f26 	beq	r2,zero,402c480 <___vfiprintf_internal_r+0x444>
 402c304:	d8800d05 	stb	r2,52(sp)
 402c308:	d8000945 	stb	zero,37(sp)
 402c30c:	05c00044 	movi	r23,1
 402c310:	07000044 	movi	fp,1
 402c314:	dcc00d04 	addi	r19,sp,52
 402c318:	db400015 	stw	r13,0(sp)
 402c31c:	0011883a 	mov	r8,zero
 402c320:	d8800017 	ldw	r2,0(sp)
 402c324:	1380008c 	andi	r14,r2,2
 402c328:	70000126 	beq	r14,zero,402c330 <___vfiprintf_internal_r+0x2f4>
 402c32c:	bdc00084 	addi	r23,r23,2
 402c330:	d8800017 	ldw	r2,0(sp)
 402c334:	d9000b17 	ldw	r4,44(sp)
 402c338:	1340210c 	andi	r13,r2,132
 402c33c:	21800044 	addi	r6,r4,1
 402c340:	d8800c17 	ldw	r2,48(sp)
 402c344:	300b883a 	mov	r5,r6
 402c348:	6800021e 	bne	r13,zero,402c354 <___vfiprintf_internal_r+0x318>
 402c34c:	8dc7c83a 	sub	r3,r17,r23
 402c350:	00c2e016 	blt	zero,r3,402ced4 <___vfiprintf_internal_r+0xe98>
 402c354:	d8c00947 	ldb	r3,37(sp)
 402c358:	81800204 	addi	r6,r16,8
 402c35c:	18000d26 	beq	r3,zero,402c394 <___vfiprintf_internal_r+0x358>
 402c360:	d8c00944 	addi	r3,sp,37
 402c364:	10800044 	addi	r2,r2,1
 402c368:	80c00015 	stw	r3,0(r16)
 402c36c:	00c00044 	movi	r3,1
 402c370:	80c00115 	stw	r3,4(r16)
 402c374:	d8800c15 	stw	r2,48(sp)
 402c378:	d9400b15 	stw	r5,44(sp)
 402c37c:	28c00208 	cmpgei	r3,r5,8
 402c380:	1802981e 	bne	r3,zero,402cde4 <___vfiprintf_internal_r+0xda8>
 402c384:	2809883a 	mov	r4,r5
 402c388:	3021883a 	mov	r16,r6
 402c38c:	29400044 	addi	r5,r5,1
 402c390:	31800204 	addi	r6,r6,8
 402c394:	70001826 	beq	r14,zero,402c3f8 <___vfiprintf_internal_r+0x3bc>
 402c398:	d8c00984 	addi	r3,sp,38
 402c39c:	10800084 	addi	r2,r2,2
 402c3a0:	80c00015 	stw	r3,0(r16)
 402c3a4:	00c00084 	movi	r3,2
 402c3a8:	80c00115 	stw	r3,4(r16)
 402c3ac:	d8800c15 	stw	r2,48(sp)
 402c3b0:	d9400b15 	stw	r5,44(sp)
 402c3b4:	28c00208 	cmpgei	r3,r5,8
 402c3b8:	1802a226 	beq	r3,zero,402ce44 <___vfiprintf_internal_r+0xe08>
 402c3bc:	10032026 	beq	r2,zero,402d040 <___vfiprintf_internal_r+0x1004>
 402c3c0:	d9800a04 	addi	r6,sp,40
 402c3c4:	a80b883a 	mov	r5,r21
 402c3c8:	b009883a 	mov	r4,r22
 402c3cc:	da000315 	stw	r8,12(sp)
 402c3d0:	db400215 	stw	r13,8(sp)
 402c3d4:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402c3d8:	10002b1e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402c3dc:	d9000b17 	ldw	r4,44(sp)
 402c3e0:	d8800c17 	ldw	r2,48(sp)
 402c3e4:	da000317 	ldw	r8,12(sp)
 402c3e8:	db400217 	ldw	r13,8(sp)
 402c3ec:	d9801904 	addi	r6,sp,100
 402c3f0:	21400044 	addi	r5,r4,1
 402c3f4:	9021883a 	mov	r16,r18
 402c3f8:	6b402018 	cmpnei	r13,r13,128
 402c3fc:	6801e326 	beq	r13,zero,402cb8c <___vfiprintf_internal_r+0xb50>
 402c400:	4711c83a 	sub	r8,r8,fp
 402c404:	02022216 	blt	zero,r8,402cc90 <___vfiprintf_internal_r+0xc54>
 402c408:	e085883a 	add	r2,fp,r2
 402c40c:	d9400b15 	stw	r5,44(sp)
 402c410:	84c00015 	stw	r19,0(r16)
 402c414:	87000115 	stw	fp,4(r16)
 402c418:	d8800c15 	stw	r2,48(sp)
 402c41c:	29400210 	cmplti	r5,r5,8
 402c420:	2800081e 	bne	r5,zero,402c444 <___vfiprintf_internal_r+0x408>
 402c424:	10009826 	beq	r2,zero,402c688 <___vfiprintf_internal_r+0x64c>
 402c428:	d9800a04 	addi	r6,sp,40
 402c42c:	a80b883a 	mov	r5,r21
 402c430:	b009883a 	mov	r4,r22
 402c434:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402c438:	1000131e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402c43c:	d8800c17 	ldw	r2,48(sp)
 402c440:	900d883a 	mov	r6,r18
 402c444:	d8c00017 	ldw	r3,0(sp)
 402c448:	1cc0010c 	andi	r19,r3,4
 402c44c:	98000226 	beq	r19,zero,402c458 <___vfiprintf_internal_r+0x41c>
 402c450:	8de1c83a 	sub	r16,r17,r23
 402c454:	04009316 	blt	zero,r16,402c6a4 <___vfiprintf_internal_r+0x668>
 402c458:	8dc0010e 	bge	r17,r23,402c460 <___vfiprintf_internal_r+0x424>
 402c45c:	b823883a 	mov	r17,r23
 402c460:	d8c00117 	ldw	r3,4(sp)
 402c464:	1c47883a 	add	r3,r3,r17
 402c468:	d8c00115 	stw	r3,4(sp)
 402c46c:	1002531e 	bne	r2,zero,402cdbc <___vfiprintf_internal_r+0xd80>
 402c470:	a0800007 	ldb	r2,0(r20)
 402c474:	d8000b15 	stw	zero,44(sp)
 402c478:	9021883a 	mov	r16,r18
 402c47c:	103f1a1e 	bne	r2,zero,402c0e8 <___vfiprintf_internal_r+0xac>
 402c480:	d8800c17 	ldw	r2,48(sp)
 402c484:	10038b1e 	bne	r2,zero,402d2b4 <___vfiprintf_internal_r+0x1278>
 402c488:	a880030b 	ldhu	r2,12(r21)
 402c48c:	1080100c 	andi	r2,r2,64
 402c490:	1003a31e 	bne	r2,zero,402d320 <___vfiprintf_internal_r+0x12e4>
 402c494:	d8800117 	ldw	r2,4(sp)
 402c498:	dfc03017 	ldw	ra,192(sp)
 402c49c:	df002f17 	ldw	fp,188(sp)
 402c4a0:	ddc02e17 	ldw	r23,184(sp)
 402c4a4:	dd802d17 	ldw	r22,180(sp)
 402c4a8:	dd402c17 	ldw	r21,176(sp)
 402c4ac:	dd002b17 	ldw	r20,172(sp)
 402c4b0:	dcc02a17 	ldw	r19,168(sp)
 402c4b4:	dc802917 	ldw	r18,164(sp)
 402c4b8:	dc402817 	ldw	r17,160(sp)
 402c4bc:	dc002717 	ldw	r16,156(sp)
 402c4c0:	dec03104 	addi	sp,sp,196
 402c4c4:	f800283a 	ret
 402c4c8:	a80b883a 	mov	r5,r21
 402c4cc:	b009883a 	mov	r4,r22
 402c4d0:	40284c00 	call	40284c0 <__swsetup_r>
 402c4d4:	1003921e 	bne	r2,zero,402d320 <___vfiprintf_internal_r+0x12e4>
 402c4d8:	a880030b 	ldhu	r2,12(r21)
 402c4dc:	1080068c 	andi	r2,r2,26
 402c4e0:	10800298 	cmpnei	r2,r2,10
 402c4e4:	103ef71e 	bne	r2,zero,402c0c4 <___vfiprintf_internal_r+0x88>
 402c4e8:	a880038f 	ldh	r2,14(r21)
 402c4ec:	103ef516 	blt	r2,zero,402c0c4 <___vfiprintf_internal_r+0x88>
 402c4f0:	d9c00417 	ldw	r7,16(sp)
 402c4f4:	a00d883a 	mov	r6,r20
 402c4f8:	a80b883a 	mov	r5,r21
 402c4fc:	b009883a 	mov	r4,r22
 402c500:	dfc03017 	ldw	ra,192(sp)
 402c504:	df002f17 	ldw	fp,188(sp)
 402c508:	ddc02e17 	ldw	r23,184(sp)
 402c50c:	dd802d17 	ldw	r22,180(sp)
 402c510:	dd402c17 	ldw	r21,176(sp)
 402c514:	dd002b17 	ldw	r20,172(sp)
 402c518:	dcc02a17 	ldw	r19,168(sp)
 402c51c:	dc802917 	ldw	r18,164(sp)
 402c520:	dc402817 	ldw	r17,160(sp)
 402c524:	dc002717 	ldw	r16,156(sp)
 402c528:	dec03104 	addi	sp,sp,196
 402c52c:	402d38c1 	jmpi	402d38c <__sbprintf>
 402c530:	6b400414 	ori	r13,r13,16
 402c534:	6880080c 	andi	r2,r13,32
 402c538:	10004726 	beq	r2,zero,402c658 <___vfiprintf_internal_r+0x61c>
 402c53c:	d8c00417 	ldw	r3,16(sp)
 402c540:	00800044 	movi	r2,1
 402c544:	1dc00017 	ldw	r23,0(r3)
 402c548:	1f000117 	ldw	fp,4(r3)
 402c54c:	18c00204 	addi	r3,r3,8
 402c550:	d8c00415 	stw	r3,16(sp)
 402c554:	00000906 	br	402c57c <___vfiprintf_internal_r+0x540>
 402c558:	6b400414 	ori	r13,r13,16
 402c55c:	6880080c 	andi	r2,r13,32
 402c560:	10003126 	beq	r2,zero,402c628 <___vfiprintf_internal_r+0x5ec>
 402c564:	d8c00417 	ldw	r3,16(sp)
 402c568:	0005883a 	mov	r2,zero
 402c56c:	1dc00017 	ldw	r23,0(r3)
 402c570:	1f000117 	ldw	fp,4(r3)
 402c574:	18c00204 	addi	r3,r3,8
 402c578:	d8c00415 	stw	r3,16(sp)
 402c57c:	d8000945 	stb	zero,37(sp)
 402c580:	40ffffe0 	cmpeqi	r3,r8,-1
 402c584:	001d883a 	mov	r14,zero
 402c588:	1800f01e 	bne	r3,zero,402c94c <___vfiprintf_internal_r+0x910>
 402c58c:	04ffdfc4 	movi	r19,-129
 402c590:	6cc8703a 	and	r4,r13,r19
 402c594:	bf06b03a 	or	r3,r23,fp
 402c598:	d9000015 	stw	r4,0(sp)
 402c59c:	18022e1e 	bne	r3,zero,402ce58 <___vfiprintf_internal_r+0xe1c>
 402c5a0:	4001f11e 	bne	r8,zero,402cd68 <___vfiprintf_internal_r+0xd2c>
 402c5a4:	10029c1e 	bne	r2,zero,402d018 <___vfiprintf_internal_r+0xfdc>
 402c5a8:	6f00004c 	andi	fp,r13,1
 402c5ac:	e002ba26 	beq	fp,zero,402d098 <___vfiprintf_internal_r+0x105c>
 402c5b0:	00800c04 	movi	r2,48
 402c5b4:	d88016c5 	stb	r2,91(sp)
 402c5b8:	dcc016c4 	addi	r19,sp,91
 402c5bc:	00010006 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402c5c0:	8d27c83a 	sub	r19,r17,r20
 402c5c4:	8d3fae26 	beq	r17,r20,402c480 <___vfiprintf_internal_r+0x444>
 402c5c8:	d8c00c17 	ldw	r3,48(sp)
 402c5cc:	d8800b17 	ldw	r2,44(sp)
 402c5d0:	85000015 	stw	r20,0(r16)
 402c5d4:	98c7883a 	add	r3,r19,r3
 402c5d8:	10800044 	addi	r2,r2,1
 402c5dc:	d8800b15 	stw	r2,44(sp)
 402c5e0:	84c00115 	stw	r19,4(r16)
 402c5e4:	d8c00c15 	stw	r3,48(sp)
 402c5e8:	10800208 	cmpgei	r2,r2,8
 402c5ec:	1000061e 	bne	r2,zero,402c608 <___vfiprintf_internal_r+0x5cc>
 402c5f0:	84000204 	addi	r16,r16,8
 402c5f4:	d8c00117 	ldw	r3,4(sp)
 402c5f8:	88800003 	ldbu	r2,0(r17)
 402c5fc:	1cc7883a 	add	r3,r3,r19
 402c600:	d8c00115 	stw	r3,4(sp)
 402c604:	003ec206 	br	402c110 <___vfiprintf_internal_r+0xd4>
 402c608:	18027f26 	beq	r3,zero,402d008 <___vfiprintf_internal_r+0xfcc>
 402c60c:	d9800a04 	addi	r6,sp,40
 402c610:	a80b883a 	mov	r5,r21
 402c614:	b009883a 	mov	r4,r22
 402c618:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402c61c:	103f9a1e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402c620:	9021883a 	mov	r16,r18
 402c624:	003ff306 	br	402c5f4 <___vfiprintf_internal_r+0x5b8>
 402c628:	d9000417 	ldw	r4,16(sp)
 402c62c:	6880040c 	andi	r2,r13,16
 402c630:	20c00104 	addi	r3,r4,4
 402c634:	1002aa1e 	bne	r2,zero,402d0e0 <___vfiprintf_internal_r+0x10a4>
 402c638:	6880100c 	andi	r2,r13,64
 402c63c:	1002f926 	beq	r2,zero,402d224 <___vfiprintf_internal_r+0x11e8>
 402c640:	d8800417 	ldw	r2,16(sp)
 402c644:	0039883a 	mov	fp,zero
 402c648:	d8c00415 	stw	r3,16(sp)
 402c64c:	15c0000b 	ldhu	r23,0(r2)
 402c650:	0005883a 	mov	r2,zero
 402c654:	003fc906 	br	402c57c <___vfiprintf_internal_r+0x540>
 402c658:	d9000417 	ldw	r4,16(sp)
 402c65c:	6880040c 	andi	r2,r13,16
 402c660:	20c00104 	addi	r3,r4,4
 402c664:	1002ad1e 	bne	r2,zero,402d11c <___vfiprintf_internal_r+0x10e0>
 402c668:	6880100c 	andi	r2,r13,64
 402c66c:	1002f926 	beq	r2,zero,402d254 <___vfiprintf_internal_r+0x1218>
 402c670:	d8800417 	ldw	r2,16(sp)
 402c674:	0039883a 	mov	fp,zero
 402c678:	d8c00415 	stw	r3,16(sp)
 402c67c:	15c0000b 	ldhu	r23,0(r2)
 402c680:	00800044 	movi	r2,1
 402c684:	003fbd06 	br	402c57c <___vfiprintf_internal_r+0x540>
 402c688:	d8c00017 	ldw	r3,0(sp)
 402c68c:	d8000b15 	stw	zero,44(sp)
 402c690:	1cc0010c 	andi	r19,r3,4
 402c694:	98024a26 	beq	r19,zero,402cfc0 <___vfiprintf_internal_r+0xf84>
 402c698:	8de1c83a 	sub	r16,r17,r23
 402c69c:	0402480e 	bge	zero,r16,402cfc0 <___vfiprintf_internal_r+0xf84>
 402c6a0:	900d883a 	mov	r6,r18
 402c6a4:	80c00450 	cmplti	r3,r16,17
 402c6a8:	d9000b17 	ldw	r4,44(sp)
 402c6ac:	01c00034 	movhi	r7,0
 402c6b0:	1803181e 	bne	r3,zero,402d314 <___vfiprintf_internal_r+0x12d8>
 402c6b4:	39c17f04 	addi	r7,r7,1532
 402c6b8:	04c00404 	movi	r19,16
 402c6bc:	00000606 	br	402c6d8 <___vfiprintf_internal_r+0x69c>
 402c6c0:	21400084 	addi	r5,r4,2
 402c6c4:	31800204 	addi	r6,r6,8
 402c6c8:	1809883a 	mov	r4,r3
 402c6cc:	843ffc04 	addi	r16,r16,-16
 402c6d0:	80c00448 	cmpgei	r3,r16,17
 402c6d4:	18001726 	beq	r3,zero,402c734 <___vfiprintf_internal_r+0x6f8>
 402c6d8:	20c00044 	addi	r3,r4,1
 402c6dc:	10800404 	addi	r2,r2,16
 402c6e0:	31c00015 	stw	r7,0(r6)
 402c6e4:	34c00115 	stw	r19,4(r6)
 402c6e8:	d8800c15 	stw	r2,48(sp)
 402c6ec:	d8c00b15 	stw	r3,44(sp)
 402c6f0:	19400208 	cmpgei	r5,r3,8
 402c6f4:	283ff226 	beq	r5,zero,402c6c0 <___vfiprintf_internal_r+0x684>
 402c6f8:	d9800a04 	addi	r6,sp,40
 402c6fc:	a80b883a 	mov	r5,r21
 402c700:	b009883a 	mov	r4,r22
 402c704:	10011d26 	beq	r2,zero,402cb7c <___vfiprintf_internal_r+0xb40>
 402c708:	d9c00015 	stw	r7,0(sp)
 402c70c:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402c710:	103f5d1e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402c714:	d9000b17 	ldw	r4,44(sp)
 402c718:	843ffc04 	addi	r16,r16,-16
 402c71c:	80c00448 	cmpgei	r3,r16,17
 402c720:	d8800c17 	ldw	r2,48(sp)
 402c724:	d9c00017 	ldw	r7,0(sp)
 402c728:	900d883a 	mov	r6,r18
 402c72c:	21400044 	addi	r5,r4,1
 402c730:	183fe91e 	bne	r3,zero,402c6d8 <___vfiprintf_internal_r+0x69c>
 402c734:	1405883a 	add	r2,r2,r16
 402c738:	d9400b15 	stw	r5,44(sp)
 402c73c:	31c00015 	stw	r7,0(r6)
 402c740:	34000115 	stw	r16,4(r6)
 402c744:	d8800c15 	stw	r2,48(sp)
 402c748:	29400210 	cmplti	r5,r5,8
 402c74c:	283f421e 	bne	r5,zero,402c458 <___vfiprintf_internal_r+0x41c>
 402c750:	10021b26 	beq	r2,zero,402cfc0 <___vfiprintf_internal_r+0xf84>
 402c754:	d9800a04 	addi	r6,sp,40
 402c758:	a80b883a 	mov	r5,r21
 402c75c:	b009883a 	mov	r4,r22
 402c760:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402c764:	103f481e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402c768:	d8800c17 	ldw	r2,48(sp)
 402c76c:	003f3a06 	br	402c458 <___vfiprintf_internal_r+0x41c>
 402c770:	4023c600 	call	4023c60 <__sinit>
 402c774:	003e4306 	br	402c084 <___vfiprintf_internal_r+0x48>
 402c778:	29403fcc 	andi	r5,r5,255
 402c77c:	2802d81e 	bne	r5,zero,402d2e0 <___vfiprintf_internal_r+0x12a4>
 402c780:	6880080c 	andi	r2,r13,32
 402c784:	10005b26 	beq	r2,zero,402c8f4 <___vfiprintf_internal_r+0x8b8>
 402c788:	d8c00417 	ldw	r3,16(sp)
 402c78c:	18800117 	ldw	r2,4(r3)
 402c790:	1dc00017 	ldw	r23,0(r3)
 402c794:	18c00204 	addi	r3,r3,8
 402c798:	d8c00415 	stw	r3,16(sp)
 402c79c:	1039883a 	mov	fp,r2
 402c7a0:	10006016 	blt	r2,zero,402c924 <___vfiprintf_internal_r+0x8e8>
 402c7a4:	40bfffd8 	cmpnei	r2,r8,-1
 402c7a8:	db800943 	ldbu	r14,37(sp)
 402c7ac:	10000626 	beq	r2,zero,402c7c8 <___vfiprintf_internal_r+0x78c>
 402c7b0:	04ffdfc4 	movi	r19,-129
 402c7b4:	6cc6703a 	and	r3,r13,r19
 402c7b8:	bf04b03a 	or	r2,r23,fp
 402c7bc:	d8c00015 	stw	r3,0(sp)
 402c7c0:	10021426 	beq	r2,zero,402d014 <___vfiprintf_internal_r+0xfd8>
 402c7c4:	db400017 	ldw	r13,0(sp)
 402c7c8:	e001a51e 	bne	fp,zero,402ce60 <___vfiprintf_internal_r+0xe24>
 402c7cc:	b88002a8 	cmpgeui	r2,r23,10
 402c7d0:	1001a31e 	bne	r2,zero,402ce60 <___vfiprintf_internal_r+0xe24>
 402c7d4:	bdc00c04 	addi	r23,r23,48
 402c7d8:	ddc016c5 	stb	r23,91(sp)
 402c7dc:	db400015 	stw	r13,0(sp)
 402c7e0:	07000044 	movi	fp,1
 402c7e4:	dcc016c4 	addi	r19,sp,91
 402c7e8:	00007506 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402c7ec:	a0800007 	ldb	r2,0(r20)
 402c7f0:	6b401014 	ori	r13,r13,64
 402c7f4:	003e5206 	br	402c140 <___vfiprintf_internal_r+0x104>
 402c7f8:	29403fcc 	andi	r5,r5,255
 402c7fc:	2802ba1e 	bne	r5,zero,402d2e8 <___vfiprintf_internal_r+0x12ac>
 402c800:	00c00034 	movhi	r3,0
 402c804:	18c0f604 	addi	r3,r3,984
 402c808:	d8c00515 	stw	r3,20(sp)
 402c80c:	68c0080c 	andi	r3,r13,32
 402c810:	1800bb26 	beq	r3,zero,402cb00 <___vfiprintf_internal_r+0xac4>
 402c814:	d8c00417 	ldw	r3,16(sp)
 402c818:	1dc00017 	ldw	r23,0(r3)
 402c81c:	1f000117 	ldw	fp,4(r3)
 402c820:	18c00204 	addi	r3,r3,8
 402c824:	d8c00415 	stw	r3,16(sp)
 402c828:	68c0004c 	andi	r3,r13,1
 402c82c:	18000226 	beq	r3,zero,402c838 <___vfiprintf_internal_r+0x7fc>
 402c830:	bf06b03a 	or	r3,r23,fp
 402c834:	1802241e 	bne	r3,zero,402d0c8 <___vfiprintf_internal_r+0x108c>
 402c838:	00800084 	movi	r2,2
 402c83c:	003f4f06 	br	402c57c <___vfiprintf_internal_r+0x540>
 402c840:	d8800417 	ldw	r2,16(sp)
 402c844:	d8000945 	stb	zero,37(sp)
 402c848:	14c00017 	ldw	r19,0(r2)
 402c84c:	10c00104 	addi	r3,r2,4
 402c850:	98026726 	beq	r19,zero,402d1f0 <___vfiprintf_internal_r+0x11b4>
 402c854:	40bfffe0 	cmpeqi	r2,r8,-1
 402c858:	10023f1e 	bne	r2,zero,402d158 <___vfiprintf_internal_r+0x111c>
 402c85c:	400d883a 	mov	r6,r8
 402c860:	000b883a 	mov	r5,zero
 402c864:	9809883a 	mov	r4,r19
 402c868:	d8c00315 	stw	r3,12(sp)
 402c86c:	db400215 	stw	r13,8(sp)
 402c870:	da000015 	stw	r8,0(sp)
 402c874:	402a60c0 	call	402a60c <memchr>
 402c878:	da000017 	ldw	r8,0(sp)
 402c87c:	db400217 	ldw	r13,8(sp)
 402c880:	d8c00317 	ldw	r3,12(sp)
 402c884:	10029226 	beq	r2,zero,402d2d0 <___vfiprintf_internal_r+0x1294>
 402c888:	14f9c83a 	sub	fp,r2,r19
 402c88c:	e02f883a 	mov	r23,fp
 402c890:	d8c00415 	stw	r3,16(sp)
 402c894:	003ea006 	br	402c318 <___vfiprintf_internal_r+0x2dc>
 402c898:	a0800007 	ldb	r2,0(r20)
 402c89c:	6b400814 	ori	r13,r13,32
 402c8a0:	003e2706 	br	402c140 <___vfiprintf_internal_r+0x104>
 402c8a4:	d8c00417 	ldw	r3,16(sp)
 402c8a8:	00800c04 	movi	r2,48
 402c8ac:	d8800985 	stb	r2,38(sp)
 402c8b0:	00801e04 	movi	r2,120
 402c8b4:	01000034 	movhi	r4,0
 402c8b8:	d88009c5 	stb	r2,39(sp)
 402c8bc:	18800104 	addi	r2,r3,4
 402c8c0:	d8800415 	stw	r2,16(sp)
 402c8c4:	2080f604 	addi	r2,r4,984
 402c8c8:	d8800515 	stw	r2,20(sp)
 402c8cc:	1dc00017 	ldw	r23,0(r3)
 402c8d0:	0039883a 	mov	fp,zero
 402c8d4:	6b400094 	ori	r13,r13,2
 402c8d8:	00800084 	movi	r2,2
 402c8dc:	003f2706 	br	402c57c <___vfiprintf_internal_r+0x540>
 402c8e0:	29403fcc 	andi	r5,r5,255
 402c8e4:	2802821e 	bne	r5,zero,402d2f0 <___vfiprintf_internal_r+0x12b4>
 402c8e8:	6b400414 	ori	r13,r13,16
 402c8ec:	6880080c 	andi	r2,r13,32
 402c8f0:	103fa51e 	bne	r2,zero,402c788 <___vfiprintf_internal_r+0x74c>
 402c8f4:	d9000417 	ldw	r4,16(sp)
 402c8f8:	6880040c 	andi	r2,r13,16
 402c8fc:	20c00104 	addi	r3,r4,4
 402c900:	1001ec1e 	bne	r2,zero,402d0b4 <___vfiprintf_internal_r+0x1078>
 402c904:	6880100c 	andi	r2,r13,64
 402c908:	10024c26 	beq	r2,zero,402d23c <___vfiprintf_internal_r+0x1200>
 402c90c:	d8800417 	ldw	r2,16(sp)
 402c910:	d8c00415 	stw	r3,16(sp)
 402c914:	15c0000f 	ldh	r23,0(r2)
 402c918:	b839d7fa 	srai	fp,r23,31
 402c91c:	e005883a 	mov	r2,fp
 402c920:	103fa00e 	bge	r2,zero,402c7a4 <___vfiprintf_internal_r+0x768>
 402c924:	b804c03a 	cmpne	r2,r23,zero
 402c928:	0739c83a 	sub	fp,zero,fp
 402c92c:	e0b9c83a 	sub	fp,fp,r2
 402c930:	00800b44 	movi	r2,45
 402c934:	d8800945 	stb	r2,37(sp)
 402c938:	40ffffe0 	cmpeqi	r3,r8,-1
 402c93c:	05efc83a 	sub	r23,zero,r23
 402c940:	03800b44 	movi	r14,45
 402c944:	00800044 	movi	r2,1
 402c948:	183f1026 	beq	r3,zero,402c58c <___vfiprintf_internal_r+0x550>
 402c94c:	10c00060 	cmpeqi	r3,r2,1
 402c950:	183f9d1e 	bne	r3,zero,402c7c8 <___vfiprintf_internal_r+0x78c>
 402c954:	108000a0 	cmpeqi	r2,r2,2
 402c958:	1001081e 	bne	r2,zero,402cd7c <___vfiprintf_internal_r+0xd40>
 402c95c:	9027883a 	mov	r19,r18
 402c960:	e008977a 	slli	r4,fp,29
 402c964:	b806d0fa 	srli	r3,r23,3
 402c968:	e038d0fa 	srli	fp,fp,3
 402c96c:	b88001cc 	andi	r2,r23,7
 402c970:	10800c04 	addi	r2,r2,48
 402c974:	20eeb03a 	or	r23,r4,r3
 402c978:	98bfffc5 	stb	r2,-1(r19)
 402c97c:	bf06b03a 	or	r3,r23,fp
 402c980:	980b883a 	mov	r5,r19
 402c984:	9cffffc4 	addi	r19,r19,-1
 402c988:	183ff51e 	bne	r3,zero,402c960 <___vfiprintf_internal_r+0x924>
 402c98c:	68c0004c 	andi	r3,r13,1
 402c990:	18010726 	beq	r3,zero,402cdb0 <___vfiprintf_internal_r+0xd74>
 402c994:	10803fcc 	andi	r2,r2,255
 402c998:	1080201c 	xori	r2,r2,128
 402c99c:	10bfe004 	addi	r2,r2,-128
 402c9a0:	10800c18 	cmpnei	r2,r2,48
 402c9a4:	10010226 	beq	r2,zero,402cdb0 <___vfiprintf_internal_r+0xd74>
 402c9a8:	297fff84 	addi	r5,r5,-2
 402c9ac:	00800c04 	movi	r2,48
 402c9b0:	98bfffc5 	stb	r2,-1(r19)
 402c9b4:	9179c83a 	sub	fp,r18,r5
 402c9b8:	db400015 	stw	r13,0(sp)
 402c9bc:	2827883a 	mov	r19,r5
 402c9c0:	402f883a 	mov	r23,r8
 402c9c4:	4700010e 	bge	r8,fp,402c9cc <___vfiprintf_internal_r+0x990>
 402c9c8:	e02f883a 	mov	r23,fp
 402c9cc:	73803fcc 	andi	r14,r14,255
 402c9d0:	7380201c 	xori	r14,r14,128
 402c9d4:	73bfe004 	addi	r14,r14,-128
 402c9d8:	703e5126 	beq	r14,zero,402c320 <___vfiprintf_internal_r+0x2e4>
 402c9dc:	bdc00044 	addi	r23,r23,1
 402c9e0:	003e4f06 	br	402c320 <___vfiprintf_internal_r+0x2e4>
 402c9e4:	a0800007 	ldb	r2,0(r20)
 402c9e8:	6b402014 	ori	r13,r13,128
 402c9ec:	003dd406 	br	402c140 <___vfiprintf_internal_r+0x104>
 402c9f0:	a0800007 	ldb	r2,0(r20)
 402c9f4:	a1000044 	addi	r4,r20,1
 402c9f8:	10c00aa0 	cmpeqi	r3,r2,42
 402c9fc:	1802501e 	bne	r3,zero,402d340 <___vfiprintf_internal_r+0x1304>
 402ca00:	10fff404 	addi	r3,r2,-48
 402ca04:	19c002b0 	cmpltui	r7,r3,10
 402ca08:	2029883a 	mov	r20,r4
 402ca0c:	0011883a 	mov	r8,zero
 402ca10:	383dcc26 	beq	r7,zero,402c144 <___vfiprintf_internal_r+0x108>
 402ca14:	a0800007 	ldb	r2,0(r20)
 402ca18:	420002a4 	muli	r8,r8,10
 402ca1c:	a5000044 	addi	r20,r20,1
 402ca20:	40d1883a 	add	r8,r8,r3
 402ca24:	10fff404 	addi	r3,r2,-48
 402ca28:	190002b0 	cmpltui	r4,r3,10
 402ca2c:	203ff91e 	bne	r4,zero,402ca14 <___vfiprintf_internal_r+0x9d8>
 402ca30:	003dc406 	br	402c144 <___vfiprintf_internal_r+0x108>
 402ca34:	a0800003 	ldbu	r2,0(r20)
 402ca38:	10803fcc 	andi	r2,r2,255
 402ca3c:	1080201c 	xori	r2,r2,128
 402ca40:	6b400114 	ori	r13,r13,4
 402ca44:	10bfe004 	addi	r2,r2,-128
 402ca48:	003dbd06 	br	402c140 <___vfiprintf_internal_r+0x104>
 402ca4c:	a0800007 	ldb	r2,0(r20)
 402ca50:	01400044 	movi	r5,1
 402ca54:	01800ac4 	movi	r6,43
 402ca58:	003db906 	br	402c140 <___vfiprintf_internal_r+0x104>
 402ca5c:	d8c00417 	ldw	r3,16(sp)
 402ca60:	a0800003 	ldbu	r2,0(r20)
 402ca64:	1c400017 	ldw	r17,0(r3)
 402ca68:	18c00104 	addi	r3,r3,4
 402ca6c:	8801b716 	blt	r17,zero,402d14c <___vfiprintf_internal_r+0x1110>
 402ca70:	d8c00415 	stw	r3,16(sp)
 402ca74:	10803fcc 	andi	r2,r2,255
 402ca78:	1080201c 	xori	r2,r2,128
 402ca7c:	10bfe004 	addi	r2,r2,-128
 402ca80:	003daf06 	br	402c140 <___vfiprintf_internal_r+0x104>
 402ca84:	a0800007 	ldb	r2,0(r20)
 402ca88:	6b400054 	ori	r13,r13,1
 402ca8c:	003dac06 	br	402c140 <___vfiprintf_internal_r+0x104>
 402ca90:	30c03fcc 	andi	r3,r6,255
 402ca94:	18c0201c 	xori	r3,r3,128
 402ca98:	18ffe004 	addi	r3,r3,-128
 402ca9c:	a0800003 	ldbu	r2,0(r20)
 402caa0:	183ff41e 	bne	r3,zero,402ca74 <___vfiprintf_internal_r+0xa38>
 402caa4:	10803fcc 	andi	r2,r2,255
 402caa8:	1080201c 	xori	r2,r2,128
 402caac:	01400044 	movi	r5,1
 402cab0:	01800804 	movi	r6,32
 402cab4:	10bfe004 	addi	r2,r2,-128
 402cab8:	003da106 	br	402c140 <___vfiprintf_internal_r+0x104>
 402cabc:	d8c00417 	ldw	r3,16(sp)
 402cac0:	d8000945 	stb	zero,37(sp)
 402cac4:	05c00044 	movi	r23,1
 402cac8:	18800017 	ldw	r2,0(r3)
 402cacc:	18c00104 	addi	r3,r3,4
 402cad0:	d8c00415 	stw	r3,16(sp)
 402cad4:	d8800d05 	stb	r2,52(sp)
 402cad8:	07000044 	movi	fp,1
 402cadc:	dcc00d04 	addi	r19,sp,52
 402cae0:	003e0d06 	br	402c318 <___vfiprintf_internal_r+0x2dc>
 402cae4:	29403fcc 	andi	r5,r5,255
 402cae8:	2802061e 	bne	r5,zero,402d304 <___vfiprintf_internal_r+0x12c8>
 402caec:	00c00034 	movhi	r3,0
 402caf0:	18c0fb04 	addi	r3,r3,1004
 402caf4:	d8c00515 	stw	r3,20(sp)
 402caf8:	68c0080c 	andi	r3,r13,32
 402cafc:	183f451e 	bne	r3,zero,402c814 <___vfiprintf_internal_r+0x7d8>
 402cb00:	d9400417 	ldw	r5,16(sp)
 402cb04:	68c0040c 	andi	r3,r13,16
 402cb08:	29000104 	addi	r4,r5,4
 402cb0c:	18017f1e 	bne	r3,zero,402d10c <___vfiprintf_internal_r+0x10d0>
 402cb10:	68c0100c 	andi	r3,r13,64
 402cb14:	1801be26 	beq	r3,zero,402d210 <___vfiprintf_internal_r+0x11d4>
 402cb18:	d8c00417 	ldw	r3,16(sp)
 402cb1c:	0039883a 	mov	fp,zero
 402cb20:	d9000415 	stw	r4,16(sp)
 402cb24:	1dc0000b 	ldhu	r23,0(r3)
 402cb28:	003f3f06 	br	402c828 <___vfiprintf_internal_r+0x7ec>
 402cb2c:	29403fcc 	andi	r5,r5,255
 402cb30:	2801f61e 	bne	r5,zero,402d30c <___vfiprintf_internal_r+0x12d0>
 402cb34:	d9000417 	ldw	r4,16(sp)
 402cb38:	6880080c 	andi	r2,r13,32
 402cb3c:	20c00017 	ldw	r3,0(r4)
 402cb40:	21000104 	addi	r4,r4,4
 402cb44:	10016b1e 	bne	r2,zero,402d0f4 <___vfiprintf_internal_r+0x10b8>
 402cb48:	6880040c 	andi	r2,r13,16
 402cb4c:	1001951e 	bne	r2,zero,402d1a4 <___vfiprintf_internal_r+0x1168>
 402cb50:	6b40100c 	andi	r13,r13,64
 402cb54:	68019326 	beq	r13,zero,402d1a4 <___vfiprintf_internal_r+0x1168>
 402cb58:	d8800117 	ldw	r2,4(sp)
 402cb5c:	d9000415 	stw	r4,16(sp)
 402cb60:	1880000d 	sth	r2,0(r3)
 402cb64:	003d5e06 	br	402c0e0 <___vfiprintf_internal_r+0xa4>
 402cb68:	a0800007 	ldb	r2,0(r20)
 402cb6c:	10c01b18 	cmpnei	r3,r2,108
 402cb70:	18019826 	beq	r3,zero,402d1d4 <___vfiprintf_internal_r+0x1198>
 402cb74:	6b400414 	ori	r13,r13,16
 402cb78:	003d7106 	br	402c140 <___vfiprintf_internal_r+0x104>
 402cb7c:	01400044 	movi	r5,1
 402cb80:	0009883a 	mov	r4,zero
 402cb84:	900d883a 	mov	r6,r18
 402cb88:	003ed006 	br	402c6cc <___vfiprintf_internal_r+0x690>
 402cb8c:	8dc7c83a 	sub	r3,r17,r23
 402cb90:	00fe1b0e 	bge	zero,r3,402c400 <___vfiprintf_internal_r+0x3c4>
 402cb94:	19c00450 	cmplti	r7,r3,17
 402cb98:	3801e41e 	bne	r7,zero,402d32c <___vfiprintf_internal_r+0x12f0>
 402cb9c:	01c00034 	movhi	r7,0
 402cba0:	39c17b04 	addi	r7,r7,1516
 402cba4:	03400404 	movi	r13,16
 402cba8:	00000606 	br	402cbc4 <___vfiprintf_internal_r+0xb88>
 402cbac:	23800084 	addi	r14,r4,2
 402cbb0:	84000204 	addi	r16,r16,8
 402cbb4:	2809883a 	mov	r4,r5
 402cbb8:	18fffc04 	addi	r3,r3,-16
 402cbbc:	19400448 	cmpgei	r5,r3,17
 402cbc0:	28001c26 	beq	r5,zero,402cc34 <___vfiprintf_internal_r+0xbf8>
 402cbc4:	21400044 	addi	r5,r4,1
 402cbc8:	10800404 	addi	r2,r2,16
 402cbcc:	81c00015 	stw	r7,0(r16)
 402cbd0:	83400115 	stw	r13,4(r16)
 402cbd4:	d8800c15 	stw	r2,48(sp)
 402cbd8:	d9400b15 	stw	r5,44(sp)
 402cbdc:	29800208 	cmpgei	r6,r5,8
 402cbe0:	303ff226 	beq	r6,zero,402cbac <___vfiprintf_internal_r+0xb70>
 402cbe4:	d9800a04 	addi	r6,sp,40
 402cbe8:	a80b883a 	mov	r5,r21
 402cbec:	b009883a 	mov	r4,r22
 402cbf0:	10007826 	beq	r2,zero,402cdd4 <___vfiprintf_internal_r+0xd98>
 402cbf4:	d9c00615 	stw	r7,24(sp)
 402cbf8:	d8c00315 	stw	r3,12(sp)
 402cbfc:	da000215 	stw	r8,8(sp)
 402cc00:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402cc04:	103e201e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402cc08:	d8c00317 	ldw	r3,12(sp)
 402cc0c:	d9000b17 	ldw	r4,44(sp)
 402cc10:	d8800c17 	ldw	r2,48(sp)
 402cc14:	18fffc04 	addi	r3,r3,-16
 402cc18:	19400448 	cmpgei	r5,r3,17
 402cc1c:	d9c00617 	ldw	r7,24(sp)
 402cc20:	da000217 	ldw	r8,8(sp)
 402cc24:	9021883a 	mov	r16,r18
 402cc28:	23800044 	addi	r14,r4,1
 402cc2c:	03400404 	movi	r13,16
 402cc30:	283fe41e 	bne	r5,zero,402cbc4 <___vfiprintf_internal_r+0xb88>
 402cc34:	83400204 	addi	r13,r16,8
 402cc38:	10c5883a 	add	r2,r2,r3
 402cc3c:	80c00115 	stw	r3,4(r16)
 402cc40:	81c00015 	stw	r7,0(r16)
 402cc44:	d8800c15 	stw	r2,48(sp)
 402cc48:	db800b15 	stw	r14,44(sp)
 402cc4c:	70c00208 	cmpgei	r3,r14,8
 402cc50:	18011326 	beq	r3,zero,402d0a0 <___vfiprintf_internal_r+0x1064>
 402cc54:	10018826 	beq	r2,zero,402d278 <___vfiprintf_internal_r+0x123c>
 402cc58:	d9800a04 	addi	r6,sp,40
 402cc5c:	a80b883a 	mov	r5,r21
 402cc60:	b009883a 	mov	r4,r22
 402cc64:	da000215 	stw	r8,8(sp)
 402cc68:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402cc6c:	103e061e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402cc70:	da000217 	ldw	r8,8(sp)
 402cc74:	d9000b17 	ldw	r4,44(sp)
 402cc78:	d8800c17 	ldw	r2,48(sp)
 402cc7c:	4711c83a 	sub	r8,r8,fp
 402cc80:	d9801904 	addi	r6,sp,100
 402cc84:	21400044 	addi	r5,r4,1
 402cc88:	9021883a 	mov	r16,r18
 402cc8c:	023dde0e 	bge	zero,r8,402c408 <___vfiprintf_internal_r+0x3cc>
 402cc90:	40c00450 	cmplti	r3,r8,17
 402cc94:	01c00034 	movhi	r7,0
 402cc98:	1801741e 	bne	r3,zero,402d26c <___vfiprintf_internal_r+0x1230>
 402cc9c:	39c17b04 	addi	r7,r7,1516
 402cca0:	03400404 	movi	r13,16
 402cca4:	00000606 	br	402ccc0 <___vfiprintf_internal_r+0xc84>
 402cca8:	21400084 	addi	r5,r4,2
 402ccac:	84000204 	addi	r16,r16,8
 402ccb0:	1809883a 	mov	r4,r3
 402ccb4:	423ffc04 	addi	r8,r8,-16
 402ccb8:	40c00448 	cmpgei	r3,r8,17
 402ccbc:	18001a26 	beq	r3,zero,402cd28 <___vfiprintf_internal_r+0xcec>
 402ccc0:	20c00044 	addi	r3,r4,1
 402ccc4:	10800404 	addi	r2,r2,16
 402ccc8:	81c00015 	stw	r7,0(r16)
 402cccc:	83400115 	stw	r13,4(r16)
 402ccd0:	d8800c15 	stw	r2,48(sp)
 402ccd4:	d8c00b15 	stw	r3,44(sp)
 402ccd8:	19400208 	cmpgei	r5,r3,8
 402ccdc:	283ff226 	beq	r5,zero,402cca8 <___vfiprintf_internal_r+0xc6c>
 402cce0:	d9800a04 	addi	r6,sp,40
 402cce4:	a80b883a 	mov	r5,r21
 402cce8:	b009883a 	mov	r4,r22
 402ccec:	10001a26 	beq	r2,zero,402cd58 <___vfiprintf_internal_r+0xd1c>
 402ccf0:	d9c00315 	stw	r7,12(sp)
 402ccf4:	da000215 	stw	r8,8(sp)
 402ccf8:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402ccfc:	103de21e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402cd00:	da000217 	ldw	r8,8(sp)
 402cd04:	d9000b17 	ldw	r4,44(sp)
 402cd08:	d8800c17 	ldw	r2,48(sp)
 402cd0c:	423ffc04 	addi	r8,r8,-16
 402cd10:	40c00448 	cmpgei	r3,r8,17
 402cd14:	d9c00317 	ldw	r7,12(sp)
 402cd18:	9021883a 	mov	r16,r18
 402cd1c:	21400044 	addi	r5,r4,1
 402cd20:	03400404 	movi	r13,16
 402cd24:	183fe61e 	bne	r3,zero,402ccc0 <___vfiprintf_internal_r+0xc84>
 402cd28:	81000204 	addi	r4,r16,8
 402cd2c:	1205883a 	add	r2,r2,r8
 402cd30:	81c00015 	stw	r7,0(r16)
 402cd34:	82000115 	stw	r8,4(r16)
 402cd38:	d8800c15 	stw	r2,48(sp)
 402cd3c:	d9400b15 	stw	r5,44(sp)
 402cd40:	28c00208 	cmpgei	r3,r5,8
 402cd44:	1800a41e 	bne	r3,zero,402cfd8 <___vfiprintf_internal_r+0xf9c>
 402cd48:	29400044 	addi	r5,r5,1
 402cd4c:	21800204 	addi	r6,r4,8
 402cd50:	2021883a 	mov	r16,r4
 402cd54:	003dac06 	br	402c408 <___vfiprintf_internal_r+0x3cc>
 402cd58:	01400044 	movi	r5,1
 402cd5c:	0009883a 	mov	r4,zero
 402cd60:	9021883a 	mov	r16,r18
 402cd64:	003fd306 	br	402ccb4 <___vfiprintf_internal_r+0xc78>
 402cd68:	10c00060 	cmpeqi	r3,r2,1
 402cd6c:	1801561e 	bne	r3,zero,402d2c8 <___vfiprintf_internal_r+0x128c>
 402cd70:	108000a0 	cmpeqi	r2,r2,2
 402cd74:	db400017 	ldw	r13,0(sp)
 402cd78:	103ef826 	beq	r2,zero,402c95c <___vfiprintf_internal_r+0x920>
 402cd7c:	9027883a 	mov	r19,r18
 402cd80:	d9000517 	ldw	r4,20(sp)
 402cd84:	b88003cc 	andi	r2,r23,15
 402cd88:	e006973a 	slli	r3,fp,28
 402cd8c:	b82ed13a 	srli	r23,r23,4
 402cd90:	2085883a 	add	r2,r4,r2
 402cd94:	10800003 	ldbu	r2,0(r2)
 402cd98:	e038d13a 	srli	fp,fp,4
 402cd9c:	1deeb03a 	or	r23,r3,r23
 402cda0:	98bfffc5 	stb	r2,-1(r19)
 402cda4:	bf04b03a 	or	r2,r23,fp
 402cda8:	9cffffc4 	addi	r19,r19,-1
 402cdac:	103ff41e 	bne	r2,zero,402cd80 <___vfiprintf_internal_r+0xd44>
 402cdb0:	94f9c83a 	sub	fp,r18,r19
 402cdb4:	db400015 	stw	r13,0(sp)
 402cdb8:	003f0106 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402cdbc:	d9800a04 	addi	r6,sp,40
 402cdc0:	a80b883a 	mov	r5,r21
 402cdc4:	b009883a 	mov	r4,r22
 402cdc8:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402cdcc:	103da826 	beq	r2,zero,402c470 <___vfiprintf_internal_r+0x434>
 402cdd0:	003dad06 	br	402c488 <___vfiprintf_internal_r+0x44c>
 402cdd4:	03800044 	movi	r14,1
 402cdd8:	0009883a 	mov	r4,zero
 402cddc:	9021883a 	mov	r16,r18
 402cde0:	003f7506 	br	402cbb8 <___vfiprintf_internal_r+0xb7c>
 402cde4:	10009026 	beq	r2,zero,402d028 <___vfiprintf_internal_r+0xfec>
 402cde8:	d9800a04 	addi	r6,sp,40
 402cdec:	a80b883a 	mov	r5,r21
 402cdf0:	b009883a 	mov	r4,r22
 402cdf4:	da000615 	stw	r8,24(sp)
 402cdf8:	db400315 	stw	r13,12(sp)
 402cdfc:	db800215 	stw	r14,8(sp)
 402ce00:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402ce04:	103da01e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402ce08:	d9000b17 	ldw	r4,44(sp)
 402ce0c:	d8800c17 	ldw	r2,48(sp)
 402ce10:	da000617 	ldw	r8,24(sp)
 402ce14:	db400317 	ldw	r13,12(sp)
 402ce18:	db800217 	ldw	r14,8(sp)
 402ce1c:	d9801904 	addi	r6,sp,100
 402ce20:	21400044 	addi	r5,r4,1
 402ce24:	9021883a 	mov	r16,r18
 402ce28:	003d5a06 	br	402c394 <___vfiprintf_internal_r+0x358>
 402ce2c:	d8800984 	addi	r2,sp,38
 402ce30:	d8801715 	stw	r2,92(sp)
 402ce34:	00800084 	movi	r2,2
 402ce38:	d8801815 	stw	r2,96(sp)
 402ce3c:	d9801904 	addi	r6,sp,100
 402ce40:	01400044 	movi	r5,1
 402ce44:	3021883a 	mov	r16,r6
 402ce48:	2809883a 	mov	r4,r5
 402ce4c:	21400044 	addi	r5,r4,1
 402ce50:	81800204 	addi	r6,r16,8
 402ce54:	003d6806 	br	402c3f8 <___vfiprintf_internal_r+0x3bc>
 402ce58:	db400017 	ldw	r13,0(sp)
 402ce5c:	003ebb06 	br	402c94c <___vfiprintf_internal_r+0x910>
 402ce60:	9027883a 	mov	r19,r18
 402ce64:	b809883a 	mov	r4,r23
 402ce68:	e00b883a 	mov	r5,fp
 402ce6c:	01800284 	movi	r6,10
 402ce70:	000f883a 	mov	r7,zero
 402ce74:	db800315 	stw	r14,12(sp)
 402ce78:	da000215 	stw	r8,8(sp)
 402ce7c:	db400015 	stw	r13,0(sp)
 402ce80:	402e5400 	call	402e540 <__umoddi3>
 402ce84:	10800c04 	addi	r2,r2,48
 402ce88:	b809883a 	mov	r4,r23
 402ce8c:	e00b883a 	mov	r5,fp
 402ce90:	98bfffc5 	stb	r2,-1(r19)
 402ce94:	01800284 	movi	r6,10
 402ce98:	000f883a 	mov	r7,zero
 402ce9c:	402dfb00 	call	402dfb0 <__udivdi3>
 402cea0:	e009883a 	mov	r4,fp
 402cea4:	b80b883a 	mov	r5,r23
 402cea8:	db400017 	ldw	r13,0(sp)
 402ceac:	da000217 	ldw	r8,8(sp)
 402ceb0:	db800317 	ldw	r14,12(sp)
 402ceb4:	9cffffc4 	addi	r19,r19,-1
 402ceb8:	102f883a 	mov	r23,r2
 402cebc:	1839883a 	mov	fp,r3
 402cec0:	203fe81e 	bne	r4,zero,402ce64 <___vfiprintf_internal_r+0xe28>
 402cec4:	294002a8 	cmpgeui	r5,r5,10
 402cec8:	283fe61e 	bne	r5,zero,402ce64 <___vfiprintf_internal_r+0xe28>
 402cecc:	94f9c83a 	sub	fp,r18,r19
 402ced0:	003ebb06 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402ced4:	19400450 	cmplti	r5,r3,17
 402ced8:	01c00034 	movhi	r7,0
 402cedc:	2801061e 	bne	r5,zero,402d2f8 <___vfiprintf_internal_r+0x12bc>
 402cee0:	39c17f04 	addi	r7,r7,1532
 402cee4:	03c00404 	movi	r15,16
 402cee8:	00000706 	br	402cf08 <___vfiprintf_internal_r+0xecc>
 402ceec:	27c00084 	addi	ra,r4,2
 402cef0:	84000204 	addi	r16,r16,8
 402cef4:	3009883a 	mov	r4,r6
 402cef8:	18fffc04 	addi	r3,r3,-16
 402cefc:	19400448 	cmpgei	r5,r3,17
 402cf00:	28002026 	beq	r5,zero,402cf84 <___vfiprintf_internal_r+0xf48>
 402cf04:	21800044 	addi	r6,r4,1
 402cf08:	10800404 	addi	r2,r2,16
 402cf0c:	81c00015 	stw	r7,0(r16)
 402cf10:	83c00115 	stw	r15,4(r16)
 402cf14:	d8800c15 	stw	r2,48(sp)
 402cf18:	d9800b15 	stw	r6,44(sp)
 402cf1c:	31400208 	cmpgei	r5,r6,8
 402cf20:	283ff226 	beq	r5,zero,402ceec <___vfiprintf_internal_r+0xeb0>
 402cf24:	d9800a04 	addi	r6,sp,40
 402cf28:	a80b883a 	mov	r5,r21
 402cf2c:	b009883a 	mov	r4,r22
 402cf30:	10001f26 	beq	r2,zero,402cfb0 <___vfiprintf_internal_r+0xf74>
 402cf34:	d9c00815 	stw	r7,32(sp)
 402cf38:	d8c00715 	stw	r3,28(sp)
 402cf3c:	da000615 	stw	r8,24(sp)
 402cf40:	db400315 	stw	r13,12(sp)
 402cf44:	db800215 	stw	r14,8(sp)
 402cf48:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402cf4c:	103d4e1e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402cf50:	d8c00717 	ldw	r3,28(sp)
 402cf54:	d9000b17 	ldw	r4,44(sp)
 402cf58:	d8800c17 	ldw	r2,48(sp)
 402cf5c:	18fffc04 	addi	r3,r3,-16
 402cf60:	19400448 	cmpgei	r5,r3,17
 402cf64:	d9c00817 	ldw	r7,32(sp)
 402cf68:	da000617 	ldw	r8,24(sp)
 402cf6c:	db400317 	ldw	r13,12(sp)
 402cf70:	db800217 	ldw	r14,8(sp)
 402cf74:	9021883a 	mov	r16,r18
 402cf78:	27c00044 	addi	ra,r4,1
 402cf7c:	03c00404 	movi	r15,16
 402cf80:	283fe01e 	bne	r5,zero,402cf04 <___vfiprintf_internal_r+0xec8>
 402cf84:	10c5883a 	add	r2,r2,r3
 402cf88:	80c00115 	stw	r3,4(r16)
 402cf8c:	81c00015 	stw	r7,0(r16)
 402cf90:	d8800c15 	stw	r2,48(sp)
 402cf94:	dfc00b15 	stw	ra,44(sp)
 402cf98:	f8c00208 	cmpgei	r3,ra,8
 402cf9c:	18002d1e 	bne	r3,zero,402d054 <___vfiprintf_internal_r+0x1018>
 402cfa0:	84000204 	addi	r16,r16,8
 402cfa4:	f9400044 	addi	r5,ra,1
 402cfa8:	f809883a 	mov	r4,ra
 402cfac:	003ce906 	br	402c354 <___vfiprintf_internal_r+0x318>
 402cfb0:	0009883a 	mov	r4,zero
 402cfb4:	07c00044 	movi	ra,1
 402cfb8:	9021883a 	mov	r16,r18
 402cfbc:	003fce06 	br	402cef8 <___vfiprintf_internal_r+0xebc>
 402cfc0:	8dc0010e 	bge	r17,r23,402cfc8 <___vfiprintf_internal_r+0xf8c>
 402cfc4:	b823883a 	mov	r17,r23
 402cfc8:	d8800117 	ldw	r2,4(sp)
 402cfcc:	1445883a 	add	r2,r2,r17
 402cfd0:	d8800115 	stw	r2,4(sp)
 402cfd4:	003d2606 	br	402c470 <___vfiprintf_internal_r+0x434>
 402cfd8:	10007626 	beq	r2,zero,402d1b4 <___vfiprintf_internal_r+0x1178>
 402cfdc:	d9800a04 	addi	r6,sp,40
 402cfe0:	a80b883a 	mov	r5,r21
 402cfe4:	b009883a 	mov	r4,r22
 402cfe8:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402cfec:	103d261e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402cff0:	d9400b17 	ldw	r5,44(sp)
 402cff4:	d8800c17 	ldw	r2,48(sp)
 402cff8:	d9801904 	addi	r6,sp,100
 402cffc:	29400044 	addi	r5,r5,1
 402d000:	9021883a 	mov	r16,r18
 402d004:	003d0006 	br	402c408 <___vfiprintf_internal_r+0x3cc>
 402d008:	d8000b15 	stw	zero,44(sp)
 402d00c:	9021883a 	mov	r16,r18
 402d010:	003d7806 	br	402c5f4 <___vfiprintf_internal_r+0x5b8>
 402d014:	4000ac1e 	bne	r8,zero,402d2c8 <___vfiprintf_internal_r+0x128c>
 402d018:	0011883a 	mov	r8,zero
 402d01c:	0039883a 	mov	fp,zero
 402d020:	9027883a 	mov	r19,r18
 402d024:	003e6606 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402d028:	7000411e 	bne	r14,zero,402d130 <___vfiprintf_internal_r+0x10f4>
 402d02c:	0009883a 	mov	r4,zero
 402d030:	d9801904 	addi	r6,sp,100
 402d034:	01400044 	movi	r5,1
 402d038:	9021883a 	mov	r16,r18
 402d03c:	003cee06 	br	402c3f8 <___vfiprintf_internal_r+0x3bc>
 402d040:	d9801904 	addi	r6,sp,100
 402d044:	01400044 	movi	r5,1
 402d048:	0009883a 	mov	r4,zero
 402d04c:	9021883a 	mov	r16,r18
 402d050:	003ce906 	br	402c3f8 <___vfiprintf_internal_r+0x3bc>
 402d054:	10004a26 	beq	r2,zero,402d180 <___vfiprintf_internal_r+0x1144>
 402d058:	d9800a04 	addi	r6,sp,40
 402d05c:	a80b883a 	mov	r5,r21
 402d060:	b009883a 	mov	r4,r22
 402d064:	da000615 	stw	r8,24(sp)
 402d068:	db400315 	stw	r13,12(sp)
 402d06c:	db800215 	stw	r14,8(sp)
 402d070:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402d074:	103d041e 	bne	r2,zero,402c488 <___vfiprintf_internal_r+0x44c>
 402d078:	d9000b17 	ldw	r4,44(sp)
 402d07c:	d8800c17 	ldw	r2,48(sp)
 402d080:	da000617 	ldw	r8,24(sp)
 402d084:	db400317 	ldw	r13,12(sp)
 402d088:	db800217 	ldw	r14,8(sp)
 402d08c:	9021883a 	mov	r16,r18
 402d090:	21400044 	addi	r5,r4,1
 402d094:	003caf06 	br	402c354 <___vfiprintf_internal_r+0x318>
 402d098:	9027883a 	mov	r19,r18
 402d09c:	003e4806 	br	402c9c0 <___vfiprintf_internal_r+0x984>
 402d0a0:	71400044 	addi	r5,r14,1
 402d0a4:	69800204 	addi	r6,r13,8
 402d0a8:	7009883a 	mov	r4,r14
 402d0ac:	6821883a 	mov	r16,r13
 402d0b0:	003cd306 	br	402c400 <___vfiprintf_internal_r+0x3c4>
 402d0b4:	25c00017 	ldw	r23,0(r4)
 402d0b8:	d8c00415 	stw	r3,16(sp)
 402d0bc:	b839d7fa 	srai	fp,r23,31
 402d0c0:	e005883a 	mov	r2,fp
 402d0c4:	003db606 	br	402c7a0 <___vfiprintf_internal_r+0x764>
 402d0c8:	00c00c04 	movi	r3,48
 402d0cc:	d88009c5 	stb	r2,39(sp)
 402d0d0:	d8c00985 	stb	r3,38(sp)
 402d0d4:	6b400094 	ori	r13,r13,2
 402d0d8:	00800084 	movi	r2,2
 402d0dc:	003d2706 	br	402c57c <___vfiprintf_internal_r+0x540>
 402d0e0:	25c00017 	ldw	r23,0(r4)
 402d0e4:	0039883a 	mov	fp,zero
 402d0e8:	d8c00415 	stw	r3,16(sp)
 402d0ec:	0005883a 	mov	r2,zero
 402d0f0:	003d2206 	br	402c57c <___vfiprintf_internal_r+0x540>
 402d0f4:	d9400117 	ldw	r5,4(sp)
 402d0f8:	d9000415 	stw	r4,16(sp)
 402d0fc:	2805d7fa 	srai	r2,r5,31
 402d100:	19400015 	stw	r5,0(r3)
 402d104:	18800115 	stw	r2,4(r3)
 402d108:	003bf506 	br	402c0e0 <___vfiprintf_internal_r+0xa4>
 402d10c:	2dc00017 	ldw	r23,0(r5)
 402d110:	0039883a 	mov	fp,zero
 402d114:	d9000415 	stw	r4,16(sp)
 402d118:	003dc306 	br	402c828 <___vfiprintf_internal_r+0x7ec>
 402d11c:	25c00017 	ldw	r23,0(r4)
 402d120:	0039883a 	mov	fp,zero
 402d124:	d8c00415 	stw	r3,16(sp)
 402d128:	00800044 	movi	r2,1
 402d12c:	003d1306 	br	402c57c <___vfiprintf_internal_r+0x540>
 402d130:	d8800984 	addi	r2,sp,38
 402d134:	d8801715 	stw	r2,92(sp)
 402d138:	00800084 	movi	r2,2
 402d13c:	d8801815 	stw	r2,96(sp)
 402d140:	dc001904 	addi	r16,sp,100
 402d144:	01000044 	movi	r4,1
 402d148:	003f4006 	br	402ce4c <___vfiprintf_internal_r+0xe10>
 402d14c:	0463c83a 	sub	r17,zero,r17
 402d150:	d8c00415 	stw	r3,16(sp)
 402d154:	003e3806 	br	402ca38 <___vfiprintf_internal_r+0x9fc>
 402d158:	9809883a 	mov	r4,r19
 402d15c:	d8c00215 	stw	r3,8(sp)
 402d160:	db400015 	stw	r13,0(sp)
 402d164:	40260940 	call	4026094 <strlen>
 402d168:	d8c00217 	ldw	r3,8(sp)
 402d16c:	db400017 	ldw	r13,0(sp)
 402d170:	1039883a 	mov	fp,r2
 402d174:	102f883a 	mov	r23,r2
 402d178:	d8c00415 	stw	r3,16(sp)
 402d17c:	003c6606 	br	402c318 <___vfiprintf_internal_r+0x2dc>
 402d180:	d8c00947 	ldb	r3,37(sp)
 402d184:	18004326 	beq	r3,zero,402d294 <___vfiprintf_internal_r+0x1258>
 402d188:	d8800944 	addi	r2,sp,37
 402d18c:	d8801715 	stw	r2,92(sp)
 402d190:	00800044 	movi	r2,1
 402d194:	d8801815 	stw	r2,96(sp)
 402d198:	d9801904 	addi	r6,sp,100
 402d19c:	01400044 	movi	r5,1
 402d1a0:	003c7806 	br	402c384 <___vfiprintf_internal_r+0x348>
 402d1a4:	d8800117 	ldw	r2,4(sp)
 402d1a8:	18800015 	stw	r2,0(r3)
 402d1ac:	d9000415 	stw	r4,16(sp)
 402d1b0:	003bcb06 	br	402c0e0 <___vfiprintf_internal_r+0xa4>
 402d1b4:	00c00044 	movi	r3,1
 402d1b8:	e005883a 	mov	r2,fp
 402d1bc:	dcc01715 	stw	r19,92(sp)
 402d1c0:	df001815 	stw	fp,96(sp)
 402d1c4:	df000c15 	stw	fp,48(sp)
 402d1c8:	d8c00b15 	stw	r3,44(sp)
 402d1cc:	d9801904 	addi	r6,sp,100
 402d1d0:	003c9c06 	br	402c444 <___vfiprintf_internal_r+0x408>
 402d1d4:	a0800043 	ldbu	r2,1(r20)
 402d1d8:	6b400814 	ori	r13,r13,32
 402d1dc:	a5000044 	addi	r20,r20,1
 402d1e0:	10803fcc 	andi	r2,r2,255
 402d1e4:	1080201c 	xori	r2,r2,128
 402d1e8:	10bfe004 	addi	r2,r2,-128
 402d1ec:	003bd406 	br	402c140 <___vfiprintf_internal_r+0x104>
 402d1f0:	408001f0 	cmpltui	r2,r8,7
 402d1f4:	4039883a 	mov	fp,r8
 402d1f8:	10002426 	beq	r2,zero,402d28c <___vfiprintf_internal_r+0x1250>
 402d1fc:	04c00034 	movhi	r19,0
 402d200:	e02f883a 	mov	r23,fp
 402d204:	d8c00415 	stw	r3,16(sp)
 402d208:	9cc10004 	addi	r19,r19,1024
 402d20c:	003c4206 	br	402c318 <___vfiprintf_internal_r+0x2dc>
 402d210:	d8c00417 	ldw	r3,16(sp)
 402d214:	0039883a 	mov	fp,zero
 402d218:	d9000415 	stw	r4,16(sp)
 402d21c:	1dc00017 	ldw	r23,0(r3)
 402d220:	003d8106 	br	402c828 <___vfiprintf_internal_r+0x7ec>
 402d224:	d8800417 	ldw	r2,16(sp)
 402d228:	0039883a 	mov	fp,zero
 402d22c:	d8c00415 	stw	r3,16(sp)
 402d230:	15c00017 	ldw	r23,0(r2)
 402d234:	0005883a 	mov	r2,zero
 402d238:	003cd006 	br	402c57c <___vfiprintf_internal_r+0x540>
 402d23c:	d8800417 	ldw	r2,16(sp)
 402d240:	d8c00415 	stw	r3,16(sp)
 402d244:	15c00017 	ldw	r23,0(r2)
 402d248:	b839d7fa 	srai	fp,r23,31
 402d24c:	e005883a 	mov	r2,fp
 402d250:	003d5306 	br	402c7a0 <___vfiprintf_internal_r+0x764>
 402d254:	d8800417 	ldw	r2,16(sp)
 402d258:	0039883a 	mov	fp,zero
 402d25c:	d8c00415 	stw	r3,16(sp)
 402d260:	15c00017 	ldw	r23,0(r2)
 402d264:	00800044 	movi	r2,1
 402d268:	003cc406 	br	402c57c <___vfiprintf_internal_r+0x540>
 402d26c:	3009883a 	mov	r4,r6
 402d270:	39c17b04 	addi	r7,r7,1516
 402d274:	003ead06 	br	402cd2c <___vfiprintf_internal_r+0xcf0>
 402d278:	d9801904 	addi	r6,sp,100
 402d27c:	01400044 	movi	r5,1
 402d280:	0009883a 	mov	r4,zero
 402d284:	9021883a 	mov	r16,r18
 402d288:	003c5d06 	br	402c400 <___vfiprintf_internal_r+0x3c4>
 402d28c:	07000184 	movi	fp,6
 402d290:	003fda06 	br	402d1fc <___vfiprintf_internal_r+0x11c0>
 402d294:	703ee51e 	bne	r14,zero,402ce2c <___vfiprintf_internal_r+0xdf0>
 402d298:	0009883a 	mov	r4,zero
 402d29c:	d9801904 	addi	r6,sp,100
 402d2a0:	01400044 	movi	r5,1
 402d2a4:	9021883a 	mov	r16,r18
 402d2a8:	003c5506 	br	402c400 <___vfiprintf_internal_r+0x3c4>
 402d2ac:	d9800945 	stb	r6,37(sp)
 402d2b0:	003c1306 	br	402c300 <___vfiprintf_internal_r+0x2c4>
 402d2b4:	d9800a04 	addi	r6,sp,40
 402d2b8:	a80b883a 	mov	r5,r21
 402d2bc:	b009883a 	mov	r4,r22
 402d2c0:	402bf300 	call	402bf30 <__sprint_r.part.0>
 402d2c4:	003c7006 	br	402c488 <___vfiprintf_internal_r+0x44c>
 402d2c8:	db400017 	ldw	r13,0(sp)
 402d2cc:	003d4106 	br	402c7d4 <___vfiprintf_internal_r+0x798>
 402d2d0:	402f883a 	mov	r23,r8
 402d2d4:	d8c00415 	stw	r3,16(sp)
 402d2d8:	4039883a 	mov	fp,r8
 402d2dc:	003c0e06 	br	402c318 <___vfiprintf_internal_r+0x2dc>
 402d2e0:	d9800945 	stb	r6,37(sp)
 402d2e4:	003d2606 	br	402c780 <___vfiprintf_internal_r+0x744>
 402d2e8:	d9800945 	stb	r6,37(sp)
 402d2ec:	003d4406 	br	402c800 <___vfiprintf_internal_r+0x7c4>
 402d2f0:	d9800945 	stb	r6,37(sp)
 402d2f4:	003d7c06 	br	402c8e8 <___vfiprintf_internal_r+0x8ac>
 402d2f8:	303f883a 	mov	ra,r6
 402d2fc:	39c17f04 	addi	r7,r7,1532
 402d300:	003f2006 	br	402cf84 <___vfiprintf_internal_r+0xf48>
 402d304:	d9800945 	stb	r6,37(sp)
 402d308:	003df806 	br	402caec <___vfiprintf_internal_r+0xab0>
 402d30c:	d9800945 	stb	r6,37(sp)
 402d310:	003e0806 	br	402cb34 <___vfiprintf_internal_r+0xaf8>
 402d314:	21400044 	addi	r5,r4,1
 402d318:	39c17f04 	addi	r7,r7,1532
 402d31c:	003d0506 	br	402c734 <___vfiprintf_internal_r+0x6f8>
 402d320:	00bfffc4 	movi	r2,-1
 402d324:	d8800115 	stw	r2,4(sp)
 402d328:	003c5a06 	br	402c494 <___vfiprintf_internal_r+0x458>
 402d32c:	01c00034 	movhi	r7,0
 402d330:	301b883a 	mov	r13,r6
 402d334:	281d883a 	mov	r14,r5
 402d338:	39c17b04 	addi	r7,r7,1516
 402d33c:	003e3e06 	br	402cc38 <___vfiprintf_internal_r+0xbfc>
 402d340:	d8800417 	ldw	r2,16(sp)
 402d344:	12000017 	ldw	r8,0(r2)
 402d348:	10c00104 	addi	r3,r2,4
 402d34c:	4000010e 	bge	r8,zero,402d354 <___vfiprintf_internal_r+0x1318>
 402d350:	023fffc4 	movi	r8,-1
 402d354:	a0800043 	ldbu	r2,1(r20)
 402d358:	d8c00415 	stw	r3,16(sp)
 402d35c:	2029883a 	mov	r20,r4
 402d360:	10803fcc 	andi	r2,r2,255
 402d364:	1080201c 	xori	r2,r2,128
 402d368:	10bfe004 	addi	r2,r2,-128
 402d36c:	003b7406 	br	402c140 <___vfiprintf_internal_r+0x104>

0402d370 <__vfiprintf_internal>:
 402d370:	00c00034 	movhi	r3,0
 402d374:	2005883a 	mov	r2,r4
 402d378:	19094e17 	ldw	r4,9528(r3)
 402d37c:	300f883a 	mov	r7,r6
 402d380:	280d883a 	mov	r6,r5
 402d384:	100b883a 	mov	r5,r2
 402d388:	402c03c1 	jmpi	402c03c <___vfiprintf_internal_r>

0402d38c <__sbprintf>:
 402d38c:	2880030b 	ldhu	r2,12(r5)
 402d390:	2b001917 	ldw	r12,100(r5)
 402d394:	2ac0038b 	ldhu	r11,14(r5)
 402d398:	2a800717 	ldw	r10,28(r5)
 402d39c:	2a400917 	ldw	r9,36(r5)
 402d3a0:	defee204 	addi	sp,sp,-1144
 402d3a4:	da001a04 	addi	r8,sp,104
 402d3a8:	00c10004 	movi	r3,1024
 402d3ac:	dc011a15 	stw	r16,1128(sp)
 402d3b0:	10bfff4c 	andi	r2,r2,65533
 402d3b4:	2821883a 	mov	r16,r5
 402d3b8:	d80b883a 	mov	r5,sp
 402d3bc:	dc811c15 	stw	r18,1136(sp)
 402d3c0:	dc411b15 	stw	r17,1132(sp)
 402d3c4:	dfc11d15 	stw	ra,1140(sp)
 402d3c8:	2025883a 	mov	r18,r4
 402d3cc:	d880030d 	sth	r2,12(sp)
 402d3d0:	db001915 	stw	r12,100(sp)
 402d3d4:	dac0038d 	sth	r11,14(sp)
 402d3d8:	da800715 	stw	r10,28(sp)
 402d3dc:	da400915 	stw	r9,36(sp)
 402d3e0:	da000015 	stw	r8,0(sp)
 402d3e4:	da000415 	stw	r8,16(sp)
 402d3e8:	d8c00215 	stw	r3,8(sp)
 402d3ec:	d8c00515 	stw	r3,20(sp)
 402d3f0:	d8000615 	stw	zero,24(sp)
 402d3f4:	402c03c0 	call	402c03c <___vfiprintf_internal_r>
 402d3f8:	1023883a 	mov	r17,r2
 402d3fc:	10000d0e 	bge	r2,zero,402d434 <__sbprintf+0xa8>
 402d400:	d880030b 	ldhu	r2,12(sp)
 402d404:	1080100c 	andi	r2,r2,64
 402d408:	10000326 	beq	r2,zero,402d418 <__sbprintf+0x8c>
 402d40c:	8080030b 	ldhu	r2,12(r16)
 402d410:	10801014 	ori	r2,r2,64
 402d414:	8080030d 	sth	r2,12(r16)
 402d418:	8805883a 	mov	r2,r17
 402d41c:	dfc11d17 	ldw	ra,1140(sp)
 402d420:	dc811c17 	ldw	r18,1136(sp)
 402d424:	dc411b17 	ldw	r17,1132(sp)
 402d428:	dc011a17 	ldw	r16,1128(sp)
 402d42c:	dec11e04 	addi	sp,sp,1144
 402d430:	f800283a 	ret
 402d434:	d80b883a 	mov	r5,sp
 402d438:	9009883a 	mov	r4,r18
 402d43c:	40238280 	call	4023828 <_fflush_r>
 402d440:	103fef26 	beq	r2,zero,402d400 <__sbprintf+0x74>
 402d444:	047fffc4 	movi	r17,-1
 402d448:	003fed06 	br	402d400 <__sbprintf+0x74>

0402d44c <__assert_func>:
 402d44c:	00800034 	movhi	r2,0
 402d450:	12094e17 	ldw	r8,9528(r2)
 402d454:	defffc04 	addi	sp,sp,-16
 402d458:	3807883a 	mov	r3,r7
 402d45c:	3005883a 	mov	r2,r6
 402d460:	dfc00315 	stw	ra,12(sp)
 402d464:	42400317 	ldw	r9,12(r8)
 402d468:	200f883a 	mov	r7,r4
 402d46c:	2811883a 	mov	r8,r5
 402d470:	180d883a 	mov	r6,r3
 402d474:	10000a26 	beq	r2,zero,402d4a0 <__assert_func+0x54>
 402d478:	00c00034 	movhi	r3,0
 402d47c:	18c18304 	addi	r3,r3,1548
 402d480:	01400034 	movhi	r5,0
 402d484:	29418704 	addi	r5,r5,1564
 402d488:	4809883a 	mov	r4,r9
 402d48c:	d8c00115 	stw	r3,4(sp)
 402d490:	da000015 	stw	r8,0(sp)
 402d494:	d8800215 	stw	r2,8(sp)
 402d498:	402d5980 	call	402d598 <fiprintf>
 402d49c:	402da480 	call	402da48 <abort>
 402d4a0:	00c00034 	movhi	r3,0
 402d4a4:	18c18604 	addi	r3,r3,1560
 402d4a8:	1805883a 	mov	r2,r3
 402d4ac:	003ff406 	br	402d480 <__assert_func+0x34>

0402d4b0 <__assert>:
 402d4b0:	deffff04 	addi	sp,sp,-4
 402d4b4:	300f883a 	mov	r7,r6
 402d4b8:	000d883a 	mov	r6,zero
 402d4bc:	dfc00015 	stw	ra,0(sp)
 402d4c0:	402d44c0 	call	402d44c <__assert_func>

0402d4c4 <_calloc_r>:
 402d4c4:	298b383a 	mul	r5,r5,r6
 402d4c8:	deffff04 	addi	sp,sp,-4
 402d4cc:	dfc00015 	stw	ra,0(sp)
 402d4d0:	4024eb00 	call	4024eb0 <_malloc_r>
 402d4d4:	1009883a 	mov	r4,r2
 402d4d8:	10000c26 	beq	r2,zero,402d50c <_calloc_r+0x48>
 402d4dc:	11bfff17 	ldw	r6,-4(r2)
 402d4e0:	00bfff04 	movi	r2,-4
 402d4e4:	308c703a 	and	r6,r6,r2
 402d4e8:	31bfff04 	addi	r6,r6,-4
 402d4ec:	30800968 	cmpgeui	r2,r6,37
 402d4f0:	1000141e 	bne	r2,zero,402d544 <_calloc_r+0x80>
 402d4f4:	30800530 	cmpltui	r2,r6,20
 402d4f8:	10000826 	beq	r2,zero,402d51c <_calloc_r+0x58>
 402d4fc:	2005883a 	mov	r2,r4
 402d500:	10000015 	stw	zero,0(r2)
 402d504:	10000115 	stw	zero,4(r2)
 402d508:	10000215 	stw	zero,8(r2)
 402d50c:	2005883a 	mov	r2,r4
 402d510:	dfc00017 	ldw	ra,0(sp)
 402d514:	dec00104 	addi	sp,sp,4
 402d518:	f800283a 	ret
 402d51c:	20000015 	stw	zero,0(r4)
 402d520:	20000115 	stw	zero,4(r4)
 402d524:	30800728 	cmpgeui	r2,r6,28
 402d528:	10000d26 	beq	r2,zero,402d560 <_calloc_r+0x9c>
 402d52c:	20000215 	stw	zero,8(r4)
 402d530:	20000315 	stw	zero,12(r4)
 402d534:	31800920 	cmpeqi	r6,r6,36
 402d538:	30000b1e 	bne	r6,zero,402d568 <_calloc_r+0xa4>
 402d53c:	20800404 	addi	r2,r4,16
 402d540:	003fef06 	br	402d500 <_calloc_r+0x3c>
 402d544:	000b883a 	mov	r5,zero
 402d548:	40257900 	call	4025790 <memset>
 402d54c:	1009883a 	mov	r4,r2
 402d550:	2005883a 	mov	r2,r4
 402d554:	dfc00017 	ldw	ra,0(sp)
 402d558:	dec00104 	addi	sp,sp,4
 402d55c:	f800283a 	ret
 402d560:	20800204 	addi	r2,r4,8
 402d564:	003fe606 	br	402d500 <_calloc_r+0x3c>
 402d568:	20000415 	stw	zero,16(r4)
 402d56c:	20800604 	addi	r2,r4,24
 402d570:	20000515 	stw	zero,20(r4)
 402d574:	003fe206 	br	402d500 <_calloc_r+0x3c>

0402d578 <_fiprintf_r>:
 402d578:	defffe04 	addi	sp,sp,-8
 402d57c:	dfc00015 	stw	ra,0(sp)
 402d580:	d9c00115 	stw	r7,4(sp)
 402d584:	d9c00104 	addi	r7,sp,4
 402d588:	402d9140 	call	402d914 <_vfiprintf_r>
 402d58c:	dfc00017 	ldw	ra,0(sp)
 402d590:	dec00204 	addi	sp,sp,8
 402d594:	f800283a 	ret

0402d598 <fiprintf>:
 402d598:	defffd04 	addi	sp,sp,-12
 402d59c:	2005883a 	mov	r2,r4
 402d5a0:	dfc00015 	stw	ra,0(sp)
 402d5a4:	d9800115 	stw	r6,4(sp)
 402d5a8:	d9c00215 	stw	r7,8(sp)
 402d5ac:	00c00034 	movhi	r3,0
 402d5b0:	19094e17 	ldw	r4,9528(r3)
 402d5b4:	280d883a 	mov	r6,r5
 402d5b8:	d9c00104 	addi	r7,sp,4
 402d5bc:	100b883a 	mov	r5,r2
 402d5c0:	402d9140 	call	402d914 <_vfiprintf_r>
 402d5c4:	dfc00017 	ldw	ra,0(sp)
 402d5c8:	dec00304 	addi	sp,sp,12
 402d5cc:	f800283a 	ret

0402d5d0 <__fputwc>:
 402d5d0:	defff904 	addi	sp,sp,-28
 402d5d4:	dcc00415 	stw	r19,16(sp)
 402d5d8:	dc800315 	stw	r18,12(sp)
 402d5dc:	dc000115 	stw	r16,4(sp)
 402d5e0:	dfc00615 	stw	ra,24(sp)
 402d5e4:	dd000515 	stw	r20,20(sp)
 402d5e8:	dc400215 	stw	r17,8(sp)
 402d5ec:	2025883a 	mov	r18,r4
 402d5f0:	2827883a 	mov	r19,r5
 402d5f4:	3021883a 	mov	r16,r6
 402d5f8:	402d8440 	call	402d844 <__locale_mb_cur_max>
 402d5fc:	10800058 	cmpnei	r2,r2,1
 402d600:	1000071e 	bne	r2,zero,402d620 <__fputwc+0x50>
 402d604:	98bfffc4 	addi	r2,r19,-1
 402d608:	10803fe8 	cmpgeui	r2,r2,255
 402d60c:	1000041e 	bne	r2,zero,402d620 <__fputwc+0x50>
 402d610:	980b883a 	mov	r5,r19
 402d614:	dcc000c5 	stb	r19,3(sp)
 402d618:	05000044 	movi	r20,1
 402d61c:	00000a06 	br	402d648 <__fputwc+0x78>
 402d620:	81c01704 	addi	r7,r16,92
 402d624:	980d883a 	mov	r6,r19
 402d628:	d94000c4 	addi	r5,sp,3
 402d62c:	9009883a 	mov	r4,r18
 402d630:	402d9180 	call	402d918 <_wcrtomb_r>
 402d634:	1029883a 	mov	r20,r2
 402d638:	10bfffd8 	cmpnei	r2,r2,-1
 402d63c:	10003926 	beq	r2,zero,402d724 <__fputwc+0x154>
 402d640:	a0001f26 	beq	r20,zero,402d6c0 <__fputwc+0xf0>
 402d644:	d94000c3 	ldbu	r5,3(sp)
 402d648:	0023883a 	mov	r17,zero
 402d64c:	00000a06 	br	402d678 <__fputwc+0xa8>
 402d650:	80800017 	ldw	r2,0(r16)
 402d654:	11400005 	stb	r5,0(r2)
 402d658:	80c00017 	ldw	r3,0(r16)
 402d65c:	18c00044 	addi	r3,r3,1
 402d660:	80c00015 	stw	r3,0(r16)
 402d664:	8c400044 	addi	r17,r17,1
 402d668:	d88000c4 	addi	r2,sp,3
 402d66c:	1447883a 	add	r3,r2,r17
 402d670:	8d00132e 	bgeu	r17,r20,402d6c0 <__fputwc+0xf0>
 402d674:	19400003 	ldbu	r5,0(r3)
 402d678:	80c00217 	ldw	r3,8(r16)
 402d67c:	18ffffc4 	addi	r3,r3,-1
 402d680:	80c00215 	stw	r3,8(r16)
 402d684:	183ff20e 	bge	r3,zero,402d650 <__fputwc+0x80>
 402d688:	80800617 	ldw	r2,24(r16)
 402d68c:	18801616 	blt	r3,r2,402d6e8 <__fputwc+0x118>
 402d690:	80800017 	ldw	r2,0(r16)
 402d694:	11400005 	stb	r5,0(r2)
 402d698:	80800017 	ldw	r2,0(r16)
 402d69c:	10c00003 	ldbu	r3,0(r2)
 402d6a0:	10800044 	addi	r2,r2,1
 402d6a4:	18c002a0 	cmpeqi	r3,r3,10
 402d6a8:	1800171e 	bne	r3,zero,402d708 <__fputwc+0x138>
 402d6ac:	80800015 	stw	r2,0(r16)
 402d6b0:	8c400044 	addi	r17,r17,1
 402d6b4:	d88000c4 	addi	r2,sp,3
 402d6b8:	1447883a 	add	r3,r2,r17
 402d6bc:	8d3fed36 	bltu	r17,r20,402d674 <__fputwc+0xa4>
 402d6c0:	9829883a 	mov	r20,r19
 402d6c4:	a005883a 	mov	r2,r20
 402d6c8:	dfc00617 	ldw	ra,24(sp)
 402d6cc:	dd000517 	ldw	r20,20(sp)
 402d6d0:	dcc00417 	ldw	r19,16(sp)
 402d6d4:	dc800317 	ldw	r18,12(sp)
 402d6d8:	dc400217 	ldw	r17,8(sp)
 402d6dc:	dc000117 	ldw	r16,4(sp)
 402d6e0:	dec00704 	addi	sp,sp,28
 402d6e4:	f800283a 	ret
 402d6e8:	29403fcc 	andi	r5,r5,255
 402d6ec:	800d883a 	mov	r6,r16
 402d6f0:	9009883a 	mov	r4,r18
 402d6f4:	40282fc0 	call	40282fc <__swbuf_r>
 402d6f8:	10bfffe0 	cmpeqi	r2,r2,-1
 402d6fc:	103fd926 	beq	r2,zero,402d664 <__fputwc+0x94>
 402d700:	053fffc4 	movi	r20,-1
 402d704:	003fef06 	br	402d6c4 <__fputwc+0xf4>
 402d708:	800d883a 	mov	r6,r16
 402d70c:	01400284 	movi	r5,10
 402d710:	9009883a 	mov	r4,r18
 402d714:	40282fc0 	call	40282fc <__swbuf_r>
 402d718:	10bfffe0 	cmpeqi	r2,r2,-1
 402d71c:	103fd126 	beq	r2,zero,402d664 <__fputwc+0x94>
 402d720:	003ff706 	br	402d700 <__fputwc+0x130>
 402d724:	8080030b 	ldhu	r2,12(r16)
 402d728:	10801014 	ori	r2,r2,64
 402d72c:	8080030d 	sth	r2,12(r16)
 402d730:	003fe406 	br	402d6c4 <__fputwc+0xf4>

0402d734 <_fputwc_r>:
 402d734:	3080030b 	ldhu	r2,12(r6)
 402d738:	10c8000c 	andi	r3,r2,8192
 402d73c:	1800051e 	bne	r3,zero,402d754 <_fputwc_r+0x20>
 402d740:	30c01917 	ldw	r3,100(r6)
 402d744:	10880014 	ori	r2,r2,8192
 402d748:	3080030d 	sth	r2,12(r6)
 402d74c:	18880014 	ori	r2,r3,8192
 402d750:	30801915 	stw	r2,100(r6)
 402d754:	402d5d01 	jmpi	402d5d0 <__fputwc>

0402d758 <fputwc>:
 402d758:	defffc04 	addi	sp,sp,-16
 402d75c:	00800034 	movhi	r2,0
 402d760:	dc000215 	stw	r16,8(sp)
 402d764:	14094e17 	ldw	r16,9528(r2)
 402d768:	dfc00315 	stw	ra,12(sp)
 402d76c:	280d883a 	mov	r6,r5
 402d770:	200b883a 	mov	r5,r4
 402d774:	80000226 	beq	r16,zero,402d780 <fputwc+0x28>
 402d778:	80800e17 	ldw	r2,56(r16)
 402d77c:	10000d26 	beq	r2,zero,402d7b4 <fputwc+0x5c>
 402d780:	3080030b 	ldhu	r2,12(r6)
 402d784:	10c8000c 	andi	r3,r2,8192
 402d788:	1800051e 	bne	r3,zero,402d7a0 <fputwc+0x48>
 402d78c:	30c01917 	ldw	r3,100(r6)
 402d790:	10880014 	ori	r2,r2,8192
 402d794:	3080030d 	sth	r2,12(r6)
 402d798:	18880014 	ori	r2,r3,8192
 402d79c:	30801915 	stw	r2,100(r6)
 402d7a0:	8009883a 	mov	r4,r16
 402d7a4:	dfc00317 	ldw	ra,12(sp)
 402d7a8:	dc000217 	ldw	r16,8(sp)
 402d7ac:	dec00404 	addi	sp,sp,16
 402d7b0:	402d5d01 	jmpi	402d5d0 <__fputwc>
 402d7b4:	d9000015 	stw	r4,0(sp)
 402d7b8:	8009883a 	mov	r4,r16
 402d7bc:	d9800115 	stw	r6,4(sp)
 402d7c0:	4023c600 	call	4023c60 <__sinit>
 402d7c4:	d9800117 	ldw	r6,4(sp)
 402d7c8:	d9400017 	ldw	r5,0(sp)
 402d7cc:	003fec06 	br	402d780 <fputwc+0x28>

0402d7d0 <_setlocale_r>:
 402d7d0:	30001626 	beq	r6,zero,402d82c <_setlocale_r+0x5c>
 402d7d4:	01400034 	movhi	r5,0
 402d7d8:	defffe04 	addi	sp,sp,-8
 402d7dc:	29419404 	addi	r5,r5,1616
 402d7e0:	3009883a 	mov	r4,r6
 402d7e4:	dc000015 	stw	r16,0(sp)
 402d7e8:	dfc00115 	stw	ra,4(sp)
 402d7ec:	3021883a 	mov	r16,r6
 402d7f0:	4025fdc0 	call	4025fdc <strcmp>
 402d7f4:	1000061e 	bne	r2,zero,402d810 <_setlocale_r+0x40>
 402d7f8:	00800034 	movhi	r2,0
 402d7fc:	10819304 	addi	r2,r2,1612
 402d800:	dfc00117 	ldw	ra,4(sp)
 402d804:	dc000017 	ldw	r16,0(sp)
 402d808:	dec00204 	addi	sp,sp,8
 402d80c:	f800283a 	ret
 402d810:	80800003 	ldbu	r2,0(r16)
 402d814:	10bfef44 	addi	r2,r2,-67
 402d818:	10000726 	beq	r2,zero,402d838 <_setlocale_r+0x68>
 402d81c:	80800003 	ldbu	r2,0(r16)
 402d820:	103ff526 	beq	r2,zero,402d7f8 <_setlocale_r+0x28>
 402d824:	0005883a 	mov	r2,zero
 402d828:	003ff506 	br	402d800 <_setlocale_r+0x30>
 402d82c:	00800034 	movhi	r2,0
 402d830:	10819304 	addi	r2,r2,1612
 402d834:	f800283a 	ret
 402d838:	80800043 	ldbu	r2,1(r16)
 402d83c:	103fee26 	beq	r2,zero,402d7f8 <_setlocale_r+0x28>
 402d840:	003ff606 	br	402d81c <_setlocale_r+0x4c>

0402d844 <__locale_mb_cur_max>:
 402d844:	00800034 	movhi	r2,0
 402d848:	1084ae07 	ldb	r2,4792(r2)
 402d84c:	f800283a 	ret

0402d850 <setlocale>:
 402d850:	28001626 	beq	r5,zero,402d8ac <setlocale+0x5c>
 402d854:	defffe04 	addi	sp,sp,-8
 402d858:	dc000015 	stw	r16,0(sp)
 402d85c:	2821883a 	mov	r16,r5
 402d860:	01400034 	movhi	r5,0
 402d864:	29419404 	addi	r5,r5,1616
 402d868:	8009883a 	mov	r4,r16
 402d86c:	dfc00115 	stw	ra,4(sp)
 402d870:	4025fdc0 	call	4025fdc <strcmp>
 402d874:	1000061e 	bne	r2,zero,402d890 <setlocale+0x40>
 402d878:	00800034 	movhi	r2,0
 402d87c:	10819304 	addi	r2,r2,1612
 402d880:	dfc00117 	ldw	ra,4(sp)
 402d884:	dc000017 	ldw	r16,0(sp)
 402d888:	dec00204 	addi	sp,sp,8
 402d88c:	f800283a 	ret
 402d890:	80800003 	ldbu	r2,0(r16)
 402d894:	10bfef44 	addi	r2,r2,-67
 402d898:	10000726 	beq	r2,zero,402d8b8 <setlocale+0x68>
 402d89c:	80800003 	ldbu	r2,0(r16)
 402d8a0:	103ff526 	beq	r2,zero,402d878 <setlocale+0x28>
 402d8a4:	0005883a 	mov	r2,zero
 402d8a8:	003ff506 	br	402d880 <setlocale+0x30>
 402d8ac:	00800034 	movhi	r2,0
 402d8b0:	10819304 	addi	r2,r2,1612
 402d8b4:	f800283a 	ret
 402d8b8:	80800043 	ldbu	r2,1(r16)
 402d8bc:	103fee26 	beq	r2,zero,402d878 <setlocale+0x28>
 402d8c0:	003ff606 	br	402d89c <setlocale+0x4c>

0402d8c4 <_mbtowc_r>:
 402d8c4:	00800034 	movhi	r2,0
 402d8c8:	10849d17 	ldw	r2,4724(r2)
 402d8cc:	1000683a 	jmp	r2

0402d8d0 <__ascii_mbtowc>:
 402d8d0:	deffff04 	addi	sp,sp,-4
 402d8d4:	28000826 	beq	r5,zero,402d8f8 <__ascii_mbtowc+0x28>
 402d8d8:	30000926 	beq	r6,zero,402d900 <__ascii_mbtowc+0x30>
 402d8dc:	38000b26 	beq	r7,zero,402d90c <__ascii_mbtowc+0x3c>
 402d8e0:	30800003 	ldbu	r2,0(r6)
 402d8e4:	28800015 	stw	r2,0(r5)
 402d8e8:	30800003 	ldbu	r2,0(r6)
 402d8ec:	1004c03a 	cmpne	r2,r2,zero
 402d8f0:	dec00104 	addi	sp,sp,4
 402d8f4:	f800283a 	ret
 402d8f8:	d80b883a 	mov	r5,sp
 402d8fc:	303ff71e 	bne	r6,zero,402d8dc <__ascii_mbtowc+0xc>
 402d900:	0005883a 	mov	r2,zero
 402d904:	dec00104 	addi	sp,sp,4
 402d908:	f800283a 	ret
 402d90c:	00bfff84 	movi	r2,-2
 402d910:	003ff706 	br	402d8f0 <__ascii_mbtowc+0x20>

0402d914 <_vfiprintf_r>:
 402d914:	402c03c1 	jmpi	402c03c <___vfiprintf_internal_r>

0402d918 <_wcrtomb_r>:
 402d918:	defffa04 	addi	sp,sp,-24
 402d91c:	dc400415 	stw	r17,16(sp)
 402d920:	dc000315 	stw	r16,12(sp)
 402d924:	00800034 	movhi	r2,0
 402d928:	dfc00515 	stw	ra,20(sp)
 402d92c:	10849c17 	ldw	r2,4720(r2)
 402d930:	2023883a 	mov	r17,r4
 402d934:	3821883a 	mov	r16,r7
 402d938:	28000826 	beq	r5,zero,402d95c <_wcrtomb_r+0x44>
 402d93c:	103ee83a 	callr	r2
 402d940:	10ffffd8 	cmpnei	r3,r2,-1
 402d944:	18000a26 	beq	r3,zero,402d970 <_wcrtomb_r+0x58>
 402d948:	dfc00517 	ldw	ra,20(sp)
 402d94c:	dc400417 	ldw	r17,16(sp)
 402d950:	dc000317 	ldw	r16,12(sp)
 402d954:	dec00604 	addi	sp,sp,24
 402d958:	f800283a 	ret
 402d95c:	000d883a 	mov	r6,zero
 402d960:	d9400084 	addi	r5,sp,2
 402d964:	103ee83a 	callr	r2
 402d968:	10ffffd8 	cmpnei	r3,r2,-1
 402d96c:	183ff61e 	bne	r3,zero,402d948 <_wcrtomb_r+0x30>
 402d970:	00802284 	movi	r2,138
 402d974:	80000015 	stw	zero,0(r16)
 402d978:	88800015 	stw	r2,0(r17)
 402d97c:	00bfffc4 	movi	r2,-1
 402d980:	003ff106 	br	402d948 <_wcrtomb_r+0x30>

0402d984 <wcrtomb>:
 402d984:	defffa04 	addi	sp,sp,-24
 402d988:	00c00034 	movhi	r3,0
 402d98c:	dc400415 	stw	r17,16(sp)
 402d990:	dc000315 	stw	r16,12(sp)
 402d994:	1c494e17 	ldw	r17,9528(r3)
 402d998:	dfc00515 	stw	ra,20(sp)
 402d99c:	00c00034 	movhi	r3,0
 402d9a0:	18c49c17 	ldw	r3,4720(r3)
 402d9a4:	3021883a 	mov	r16,r6
 402d9a8:	20000c26 	beq	r4,zero,402d9dc <wcrtomb+0x58>
 402d9ac:	280d883a 	mov	r6,r5
 402d9b0:	800f883a 	mov	r7,r16
 402d9b4:	200b883a 	mov	r5,r4
 402d9b8:	8809883a 	mov	r4,r17
 402d9bc:	183ee83a 	callr	r3
 402d9c0:	10ffffd8 	cmpnei	r3,r2,-1
 402d9c4:	18000c26 	beq	r3,zero,402d9f8 <wcrtomb+0x74>
 402d9c8:	dfc00517 	ldw	ra,20(sp)
 402d9cc:	dc400417 	ldw	r17,16(sp)
 402d9d0:	dc000317 	ldw	r16,12(sp)
 402d9d4:	dec00604 	addi	sp,sp,24
 402d9d8:	f800283a 	ret
 402d9dc:	300f883a 	mov	r7,r6
 402d9e0:	d9400084 	addi	r5,sp,2
 402d9e4:	000d883a 	mov	r6,zero
 402d9e8:	8809883a 	mov	r4,r17
 402d9ec:	183ee83a 	callr	r3
 402d9f0:	10ffffd8 	cmpnei	r3,r2,-1
 402d9f4:	183ff41e 	bne	r3,zero,402d9c8 <wcrtomb+0x44>
 402d9f8:	00802284 	movi	r2,138
 402d9fc:	80000015 	stw	zero,0(r16)
 402da00:	88800015 	stw	r2,0(r17)
 402da04:	00bfffc4 	movi	r2,-1
 402da08:	003fef06 	br	402d9c8 <wcrtomb+0x44>

0402da0c <_wctomb_r>:
 402da0c:	00800034 	movhi	r2,0
 402da10:	10849c17 	ldw	r2,4720(r2)
 402da14:	1000683a 	jmp	r2

0402da18 <__ascii_wctomb>:
 402da18:	28000926 	beq	r5,zero,402da40 <__ascii_wctomb+0x28>
 402da1c:	30804030 	cmpltui	r2,r6,256
 402da20:	10000326 	beq	r2,zero,402da30 <__ascii_wctomb+0x18>
 402da24:	29800005 	stb	r6,0(r5)
 402da28:	00800044 	movi	r2,1
 402da2c:	f800283a 	ret
 402da30:	00802284 	movi	r2,138
 402da34:	20800015 	stw	r2,0(r4)
 402da38:	00bfffc4 	movi	r2,-1
 402da3c:	f800283a 	ret
 402da40:	0005883a 	mov	r2,zero
 402da44:	f800283a 	ret

0402da48 <abort>:
 402da48:	deffff04 	addi	sp,sp,-4
 402da4c:	01000184 	movi	r4,6
 402da50:	dfc00015 	stw	ra,0(sp)
 402da54:	402dcd40 	call	402dcd4 <raise>
 402da58:	01000044 	movi	r4,1
 402da5c:	403108c0 	call	403108c <_exit>

0402da60 <_init_signal_r>:
 402da60:	2080b717 	ldw	r2,732(r4)
 402da64:	10000226 	beq	r2,zero,402da70 <_init_signal_r+0x10>
 402da68:	0005883a 	mov	r2,zero
 402da6c:	f800283a 	ret
 402da70:	defffe04 	addi	sp,sp,-8
 402da74:	01402004 	movi	r5,128
 402da78:	dc000015 	stw	r16,0(sp)
 402da7c:	dfc00115 	stw	ra,4(sp)
 402da80:	2021883a 	mov	r16,r4
 402da84:	4024eb00 	call	4024eb0 <_malloc_r>
 402da88:	8080b715 	stw	r2,732(r16)
 402da8c:	1009883a 	mov	r4,r2
 402da90:	10000826 	beq	r2,zero,402dab4 <_init_signal_r+0x54>
 402da94:	01802004 	movi	r6,128
 402da98:	000b883a 	mov	r5,zero
 402da9c:	40257900 	call	4025790 <memset>
 402daa0:	0005883a 	mov	r2,zero
 402daa4:	dfc00117 	ldw	ra,4(sp)
 402daa8:	dc000017 	ldw	r16,0(sp)
 402daac:	dec00204 	addi	sp,sp,8
 402dab0:	f800283a 	ret
 402dab4:	00bfffc4 	movi	r2,-1
 402dab8:	003ffa06 	br	402daa4 <_init_signal_r+0x44>

0402dabc <_signal_r>:
 402dabc:	defffc04 	addi	sp,sp,-16
 402dac0:	dc400115 	stw	r17,4(sp)
 402dac4:	dfc00315 	stw	ra,12(sp)
 402dac8:	dc800215 	stw	r18,8(sp)
 402dacc:	dc000015 	stw	r16,0(sp)
 402dad0:	28800830 	cmpltui	r2,r5,32
 402dad4:	2023883a 	mov	r17,r4
 402dad8:	10000e26 	beq	r2,zero,402db14 <_signal_r+0x58>
 402dadc:	20c0b717 	ldw	r3,732(r4)
 402dae0:	2821883a 	mov	r16,r5
 402dae4:	3025883a 	mov	r18,r6
 402dae8:	18000e26 	beq	r3,zero,402db24 <_signal_r+0x68>
 402daec:	802090ba 	slli	r16,r16,2
 402daf0:	1c21883a 	add	r16,r3,r16
 402daf4:	80800017 	ldw	r2,0(r16)
 402daf8:	84800015 	stw	r18,0(r16)
 402dafc:	dfc00317 	ldw	ra,12(sp)
 402db00:	dc800217 	ldw	r18,8(sp)
 402db04:	dc400117 	ldw	r17,4(sp)
 402db08:	dc000017 	ldw	r16,0(sp)
 402db0c:	dec00404 	addi	sp,sp,16
 402db10:	f800283a 	ret
 402db14:	00800584 	movi	r2,22
 402db18:	20800015 	stw	r2,0(r4)
 402db1c:	00bfffc4 	movi	r2,-1
 402db20:	003ff606 	br	402dafc <_signal_r+0x40>
 402db24:	01402004 	movi	r5,128
 402db28:	4024eb00 	call	4024eb0 <_malloc_r>
 402db2c:	8880b715 	stw	r2,732(r17)
 402db30:	10000626 	beq	r2,zero,402db4c <_signal_r+0x90>
 402db34:	01802004 	movi	r6,128
 402db38:	000b883a 	mov	r5,zero
 402db3c:	1009883a 	mov	r4,r2
 402db40:	40257900 	call	4025790 <memset>
 402db44:	1007883a 	mov	r3,r2
 402db48:	003fe806 	br	402daec <_signal_r+0x30>
 402db4c:	00bfffc4 	movi	r2,-1
 402db50:	003fea06 	br	402dafc <_signal_r+0x40>

0402db54 <_raise_r>:
 402db54:	28800830 	cmpltui	r2,r5,32
 402db58:	10002b26 	beq	r2,zero,402dc08 <_raise_r+0xb4>
 402db5c:	2080b717 	ldw	r2,732(r4)
 402db60:	defffd04 	addi	sp,sp,-12
 402db64:	dc000115 	stw	r16,4(sp)
 402db68:	dfc00215 	stw	ra,8(sp)
 402db6c:	2821883a 	mov	r16,r5
 402db70:	10001026 	beq	r2,zero,402dbb4 <_raise_r+0x60>
 402db74:	280690ba 	slli	r3,r5,2
 402db78:	10c5883a 	add	r2,r2,r3
 402db7c:	10c00017 	ldw	r3,0(r2)
 402db80:	18000c26 	beq	r3,zero,402dbb4 <_raise_r+0x60>
 402db84:	19400060 	cmpeqi	r5,r3,1
 402db88:	28001a1e 	bne	r5,zero,402dbf4 <_raise_r+0xa0>
 402db8c:	197fffd8 	cmpnei	r5,r3,-1
 402db90:	28001126 	beq	r5,zero,402dbd8 <_raise_r+0x84>
 402db94:	10000015 	stw	zero,0(r2)
 402db98:	8009883a 	mov	r4,r16
 402db9c:	183ee83a 	callr	r3
 402dba0:	0005883a 	mov	r2,zero
 402dba4:	dfc00217 	ldw	ra,8(sp)
 402dba8:	dc000117 	ldw	r16,4(sp)
 402dbac:	dec00304 	addi	sp,sp,12
 402dbb0:	f800283a 	ret
 402dbb4:	d9000015 	stw	r4,0(sp)
 402dbb8:	402dfac0 	call	402dfac <_getpid_r>
 402dbbc:	d9000017 	ldw	r4,0(sp)
 402dbc0:	800d883a 	mov	r6,r16
 402dbc4:	100b883a 	mov	r5,r2
 402dbc8:	dfc00217 	ldw	ra,8(sp)
 402dbcc:	dc000117 	ldw	r16,4(sp)
 402dbd0:	dec00304 	addi	sp,sp,12
 402dbd4:	402df4c1 	jmpi	402df4c <_kill_r>
 402dbd8:	00800584 	movi	r2,22
 402dbdc:	20800015 	stw	r2,0(r4)
 402dbe0:	00800044 	movi	r2,1
 402dbe4:	dfc00217 	ldw	ra,8(sp)
 402dbe8:	dc000117 	ldw	r16,4(sp)
 402dbec:	dec00304 	addi	sp,sp,12
 402dbf0:	f800283a 	ret
 402dbf4:	0005883a 	mov	r2,zero
 402dbf8:	dfc00217 	ldw	ra,8(sp)
 402dbfc:	dc000117 	ldw	r16,4(sp)
 402dc00:	dec00304 	addi	sp,sp,12
 402dc04:	f800283a 	ret
 402dc08:	00800584 	movi	r2,22
 402dc0c:	20800015 	stw	r2,0(r4)
 402dc10:	00bfffc4 	movi	r2,-1
 402dc14:	f800283a 	ret

0402dc18 <__sigtramp_r>:
 402dc18:	28800830 	cmpltui	r2,r5,32
 402dc1c:	10002b26 	beq	r2,zero,402dccc <__sigtramp_r+0xb4>
 402dc20:	20c0b717 	ldw	r3,732(r4)
 402dc24:	defffd04 	addi	sp,sp,-12
 402dc28:	dc400115 	stw	r17,4(sp)
 402dc2c:	dc000015 	stw	r16,0(sp)
 402dc30:	dfc00215 	stw	ra,8(sp)
 402dc34:	2821883a 	mov	r16,r5
 402dc38:	2023883a 	mov	r17,r4
 402dc3c:	18001326 	beq	r3,zero,402dc8c <__sigtramp_r+0x74>
 402dc40:	800490ba 	slli	r2,r16,2
 402dc44:	1887883a 	add	r3,r3,r2
 402dc48:	18800017 	ldw	r2,0(r3)
 402dc4c:	10000d26 	beq	r2,zero,402dc84 <__sigtramp_r+0x6c>
 402dc50:	113fffe0 	cmpeqi	r4,r2,-1
 402dc54:	2000191e 	bne	r4,zero,402dcbc <__sigtramp_r+0xa4>
 402dc58:	11000060 	cmpeqi	r4,r2,1
 402dc5c:	2000151e 	bne	r4,zero,402dcb4 <__sigtramp_r+0x9c>
 402dc60:	18000015 	stw	zero,0(r3)
 402dc64:	8009883a 	mov	r4,r16
 402dc68:	103ee83a 	callr	r2
 402dc6c:	0005883a 	mov	r2,zero
 402dc70:	dfc00217 	ldw	ra,8(sp)
 402dc74:	dc400117 	ldw	r17,4(sp)
 402dc78:	dc000017 	ldw	r16,0(sp)
 402dc7c:	dec00304 	addi	sp,sp,12
 402dc80:	f800283a 	ret
 402dc84:	00800044 	movi	r2,1
 402dc88:	003ff906 	br	402dc70 <__sigtramp_r+0x58>
 402dc8c:	01402004 	movi	r5,128
 402dc90:	4024eb00 	call	4024eb0 <_malloc_r>
 402dc94:	8880b715 	stw	r2,732(r17)
 402dc98:	10000a26 	beq	r2,zero,402dcc4 <__sigtramp_r+0xac>
 402dc9c:	01802004 	movi	r6,128
 402dca0:	000b883a 	mov	r5,zero
 402dca4:	1009883a 	mov	r4,r2
 402dca8:	40257900 	call	4025790 <memset>
 402dcac:	1007883a 	mov	r3,r2
 402dcb0:	003fe306 	br	402dc40 <__sigtramp_r+0x28>
 402dcb4:	008000c4 	movi	r2,3
 402dcb8:	003fed06 	br	402dc70 <__sigtramp_r+0x58>
 402dcbc:	00800084 	movi	r2,2
 402dcc0:	003feb06 	br	402dc70 <__sigtramp_r+0x58>
 402dcc4:	00bfffc4 	movi	r2,-1
 402dcc8:	003fe906 	br	402dc70 <__sigtramp_r+0x58>
 402dccc:	00bfffc4 	movi	r2,-1
 402dcd0:	f800283a 	ret

0402dcd4 <raise>:
 402dcd4:	defffd04 	addi	sp,sp,-12
 402dcd8:	dc400115 	stw	r17,4(sp)
 402dcdc:	00c00034 	movhi	r3,0
 402dce0:	dfc00215 	stw	ra,8(sp)
 402dce4:	dc000015 	stw	r16,0(sp)
 402dce8:	20800830 	cmpltui	r2,r4,32
 402dcec:	1c494e17 	ldw	r17,9528(r3)
 402dcf0:	10002326 	beq	r2,zero,402dd80 <raise+0xac>
 402dcf4:	8880b717 	ldw	r2,732(r17)
 402dcf8:	2021883a 	mov	r16,r4
 402dcfc:	10001026 	beq	r2,zero,402dd40 <raise+0x6c>
 402dd00:	200690ba 	slli	r3,r4,2
 402dd04:	10c5883a 	add	r2,r2,r3
 402dd08:	10c00017 	ldw	r3,0(r2)
 402dd0c:	18000c26 	beq	r3,zero,402dd40 <raise+0x6c>
 402dd10:	19400060 	cmpeqi	r5,r3,1
 402dd14:	2800181e 	bne	r5,zero,402dd78 <raise+0xa4>
 402dd18:	197fffd8 	cmpnei	r5,r3,-1
 402dd1c:	28001226 	beq	r5,zero,402dd68 <raise+0x94>
 402dd20:	10000015 	stw	zero,0(r2)
 402dd24:	183ee83a 	callr	r3
 402dd28:	0005883a 	mov	r2,zero
 402dd2c:	dfc00217 	ldw	ra,8(sp)
 402dd30:	dc400117 	ldw	r17,4(sp)
 402dd34:	dc000017 	ldw	r16,0(sp)
 402dd38:	dec00304 	addi	sp,sp,12
 402dd3c:	f800283a 	ret
 402dd40:	8809883a 	mov	r4,r17
 402dd44:	402dfac0 	call	402dfac <_getpid_r>
 402dd48:	800d883a 	mov	r6,r16
 402dd4c:	100b883a 	mov	r5,r2
 402dd50:	8809883a 	mov	r4,r17
 402dd54:	dfc00217 	ldw	ra,8(sp)
 402dd58:	dc400117 	ldw	r17,4(sp)
 402dd5c:	dc000017 	ldw	r16,0(sp)
 402dd60:	dec00304 	addi	sp,sp,12
 402dd64:	402df4c1 	jmpi	402df4c <_kill_r>
 402dd68:	00800584 	movi	r2,22
 402dd6c:	88800015 	stw	r2,0(r17)
 402dd70:	00800044 	movi	r2,1
 402dd74:	003fed06 	br	402dd2c <raise+0x58>
 402dd78:	0005883a 	mov	r2,zero
 402dd7c:	003feb06 	br	402dd2c <raise+0x58>
 402dd80:	00800584 	movi	r2,22
 402dd84:	88800015 	stw	r2,0(r17)
 402dd88:	00bfffc4 	movi	r2,-1
 402dd8c:	003fe706 	br	402dd2c <raise+0x58>

0402dd90 <signal>:
 402dd90:	defffc04 	addi	sp,sp,-16
 402dd94:	dc800215 	stw	r18,8(sp)
 402dd98:	00c00034 	movhi	r3,0
 402dd9c:	dfc00315 	stw	ra,12(sp)
 402dda0:	dc400115 	stw	r17,4(sp)
 402dda4:	dc000015 	stw	r16,0(sp)
 402dda8:	20800830 	cmpltui	r2,r4,32
 402ddac:	1c894e17 	ldw	r18,9528(r3)
 402ddb0:	10000e26 	beq	r2,zero,402ddec <signal+0x5c>
 402ddb4:	2021883a 	mov	r16,r4
 402ddb8:	9100b717 	ldw	r4,732(r18)
 402ddbc:	2823883a 	mov	r17,r5
 402ddc0:	20000e26 	beq	r4,zero,402ddfc <signal+0x6c>
 402ddc4:	802090ba 	slli	r16,r16,2
 402ddc8:	2421883a 	add	r16,r4,r16
 402ddcc:	80800017 	ldw	r2,0(r16)
 402ddd0:	84400015 	stw	r17,0(r16)
 402ddd4:	dfc00317 	ldw	ra,12(sp)
 402ddd8:	dc800217 	ldw	r18,8(sp)
 402dddc:	dc400117 	ldw	r17,4(sp)
 402dde0:	dc000017 	ldw	r16,0(sp)
 402dde4:	dec00404 	addi	sp,sp,16
 402dde8:	f800283a 	ret
 402ddec:	00800584 	movi	r2,22
 402ddf0:	90800015 	stw	r2,0(r18)
 402ddf4:	00bfffc4 	movi	r2,-1
 402ddf8:	003ff606 	br	402ddd4 <signal+0x44>
 402ddfc:	9009883a 	mov	r4,r18
 402de00:	01402004 	movi	r5,128
 402de04:	4024eb00 	call	4024eb0 <_malloc_r>
 402de08:	9080b715 	stw	r2,732(r18)
 402de0c:	1009883a 	mov	r4,r2
 402de10:	10000526 	beq	r2,zero,402de28 <signal+0x98>
 402de14:	01802004 	movi	r6,128
 402de18:	000b883a 	mov	r5,zero
 402de1c:	40257900 	call	4025790 <memset>
 402de20:	1009883a 	mov	r4,r2
 402de24:	003fe706 	br	402ddc4 <signal+0x34>
 402de28:	00bfffc4 	movi	r2,-1
 402de2c:	003fe906 	br	402ddd4 <signal+0x44>

0402de30 <_init_signal>:
 402de30:	defffe04 	addi	sp,sp,-8
 402de34:	00800034 	movhi	r2,0
 402de38:	dc000015 	stw	r16,0(sp)
 402de3c:	14094e17 	ldw	r16,9528(r2)
 402de40:	dfc00115 	stw	ra,4(sp)
 402de44:	8080b717 	ldw	r2,732(r16)
 402de48:	10000526 	beq	r2,zero,402de60 <_init_signal+0x30>
 402de4c:	0005883a 	mov	r2,zero
 402de50:	dfc00117 	ldw	ra,4(sp)
 402de54:	dc000017 	ldw	r16,0(sp)
 402de58:	dec00204 	addi	sp,sp,8
 402de5c:	f800283a 	ret
 402de60:	8009883a 	mov	r4,r16
 402de64:	01402004 	movi	r5,128
 402de68:	4024eb00 	call	4024eb0 <_malloc_r>
 402de6c:	8080b715 	stw	r2,732(r16)
 402de70:	1009883a 	mov	r4,r2
 402de74:	10000426 	beq	r2,zero,402de88 <_init_signal+0x58>
 402de78:	01802004 	movi	r6,128
 402de7c:	000b883a 	mov	r5,zero
 402de80:	40257900 	call	4025790 <memset>
 402de84:	003ff106 	br	402de4c <_init_signal+0x1c>
 402de88:	00bfffc4 	movi	r2,-1
 402de8c:	003ff006 	br	402de50 <_init_signal+0x20>

0402de90 <__sigtramp>:
 402de90:	defffd04 	addi	sp,sp,-12
 402de94:	dc400115 	stw	r17,4(sp)
 402de98:	00c00034 	movhi	r3,0
 402de9c:	dfc00215 	stw	ra,8(sp)
 402dea0:	dc000015 	stw	r16,0(sp)
 402dea4:	20800830 	cmpltui	r2,r4,32
 402dea8:	1c494e17 	ldw	r17,9528(r3)
 402deac:	10002526 	beq	r2,zero,402df44 <__sigtramp+0xb4>
 402deb0:	88c0b717 	ldw	r3,732(r17)
 402deb4:	2021883a 	mov	r16,r4
 402deb8:	18001326 	beq	r3,zero,402df08 <__sigtramp+0x78>
 402debc:	800890ba 	slli	r4,r16,2
 402dec0:	1907883a 	add	r3,r3,r4
 402dec4:	18800017 	ldw	r2,0(r3)
 402dec8:	10000d26 	beq	r2,zero,402df00 <__sigtramp+0x70>
 402decc:	113fffe0 	cmpeqi	r4,r2,-1
 402ded0:	20001a1e 	bne	r4,zero,402df3c <__sigtramp+0xac>
 402ded4:	11000060 	cmpeqi	r4,r2,1
 402ded8:	2000161e 	bne	r4,zero,402df34 <__sigtramp+0xa4>
 402dedc:	18000015 	stw	zero,0(r3)
 402dee0:	8009883a 	mov	r4,r16
 402dee4:	103ee83a 	callr	r2
 402dee8:	0005883a 	mov	r2,zero
 402deec:	dfc00217 	ldw	ra,8(sp)
 402def0:	dc400117 	ldw	r17,4(sp)
 402def4:	dc000017 	ldw	r16,0(sp)
 402def8:	dec00304 	addi	sp,sp,12
 402defc:	f800283a 	ret
 402df00:	00800044 	movi	r2,1
 402df04:	003ff906 	br	402deec <__sigtramp+0x5c>
 402df08:	01402004 	movi	r5,128
 402df0c:	8809883a 	mov	r4,r17
 402df10:	4024eb00 	call	4024eb0 <_malloc_r>
 402df14:	8880b715 	stw	r2,732(r17)
 402df18:	10000a26 	beq	r2,zero,402df44 <__sigtramp+0xb4>
 402df1c:	01802004 	movi	r6,128
 402df20:	000b883a 	mov	r5,zero
 402df24:	1009883a 	mov	r4,r2
 402df28:	40257900 	call	4025790 <memset>
 402df2c:	1007883a 	mov	r3,r2
 402df30:	003fe206 	br	402debc <__sigtramp+0x2c>
 402df34:	008000c4 	movi	r2,3
 402df38:	003fec06 	br	402deec <__sigtramp+0x5c>
 402df3c:	00800084 	movi	r2,2
 402df40:	003fea06 	br	402deec <__sigtramp+0x5c>
 402df44:	00bfffc4 	movi	r2,-1
 402df48:	003fe806 	br	402deec <__sigtramp+0x5c>

0402df4c <_kill_r>:
 402df4c:	2807883a 	mov	r3,r5
 402df50:	defffe04 	addi	sp,sp,-8
 402df54:	dc000015 	stw	r16,0(sp)
 402df58:	00800034 	movhi	r2,0
 402df5c:	300b883a 	mov	r5,r6
 402df60:	2021883a 	mov	r16,r4
 402df64:	1809883a 	mov	r4,r3
 402df68:	dfc00115 	stw	ra,4(sp)
 402df6c:	10095d15 	stw	zero,9588(r2)
 402df70:	403146c0 	call	403146c <kill>
 402df74:	10ffffd8 	cmpnei	r3,r2,-1
 402df78:	18000426 	beq	r3,zero,402df8c <_kill_r+0x40>
 402df7c:	dfc00117 	ldw	ra,4(sp)
 402df80:	dc000017 	ldw	r16,0(sp)
 402df84:	dec00204 	addi	sp,sp,8
 402df88:	f800283a 	ret
 402df8c:	00c00034 	movhi	r3,0
 402df90:	18c95d17 	ldw	r3,9588(r3)
 402df94:	183ff926 	beq	r3,zero,402df7c <_kill_r+0x30>
 402df98:	80c00015 	stw	r3,0(r16)
 402df9c:	dfc00117 	ldw	ra,4(sp)
 402dfa0:	dc000017 	ldw	r16,0(sp)
 402dfa4:	dec00204 	addi	sp,sp,8
 402dfa8:	f800283a 	ret

0402dfac <_getpid_r>:
 402dfac:	40311b01 	jmpi	40311b0 <getpid>

0402dfb0 <__udivdi3>:
 402dfb0:	defff504 	addi	sp,sp,-44
 402dfb4:	dcc00415 	stw	r19,16(sp)
 402dfb8:	dc000115 	stw	r16,4(sp)
 402dfbc:	dfc00a15 	stw	ra,40(sp)
 402dfc0:	df000915 	stw	fp,36(sp)
 402dfc4:	ddc00815 	stw	r23,32(sp)
 402dfc8:	dd800715 	stw	r22,28(sp)
 402dfcc:	dd400615 	stw	r21,24(sp)
 402dfd0:	dd000515 	stw	r20,20(sp)
 402dfd4:	dc800315 	stw	r18,12(sp)
 402dfd8:	dc400215 	stw	r17,8(sp)
 402dfdc:	2027883a 	mov	r19,r4
 402dfe0:	2821883a 	mov	r16,r5
 402dfe4:	3800411e 	bne	r7,zero,402e0ec <__udivdi3+0x13c>
 402dfe8:	3829883a 	mov	r20,r7
 402dfec:	3023883a 	mov	r17,r6
 402dff0:	2025883a 	mov	r18,r4
 402dff4:	29805d2e 	bgeu	r5,r6,402e16c <__udivdi3+0x1bc>
 402dff8:	00bfffd4 	movui	r2,65535
 402dffc:	282b883a 	mov	r21,r5
 402e000:	1180a02e 	bgeu	r2,r6,402e284 <__udivdi3+0x2d4>
 402e004:	00804034 	movhi	r2,256
 402e008:	30813636 	bltu	r6,r2,402e4e4 <__udivdi3+0x534>
 402e00c:	3006d63a 	srli	r3,r6,24
 402e010:	05000604 	movi	r20,24
 402e014:	00800034 	movhi	r2,0
 402e018:	1885883a 	add	r2,r3,r2
 402e01c:	1080b103 	ldbu	r2,708(r2)
 402e020:	00c00804 	movi	r3,32
 402e024:	1505883a 	add	r2,r2,r20
 402e028:	1889c83a 	sub	r4,r3,r2
 402e02c:	18800526 	beq	r3,r2,402e044 <__udivdi3+0x94>
 402e030:	8120983a 	sll	r16,r16,r4
 402e034:	9884d83a 	srl	r2,r19,r2
 402e038:	3122983a 	sll	r17,r6,r4
 402e03c:	9924983a 	sll	r18,r19,r4
 402e040:	142ab03a 	or	r21,r2,r16
 402e044:	882cd43a 	srli	r22,r17,16
 402e048:	a809883a 	mov	r4,r21
 402e04c:	8d3fffcc 	andi	r20,r17,65535
 402e050:	b00b883a 	mov	r5,r22
 402e054:	40226080 	call	4022608 <__umodsi3>
 402e058:	a809883a 	mov	r4,r21
 402e05c:	b00b883a 	mov	r5,r22
 402e060:	1027883a 	mov	r19,r2
 402e064:	40225a40 	call	40225a4 <__udivsi3>
 402e068:	9826943a 	slli	r19,r19,16
 402e06c:	9008d43a 	srli	r4,r18,16
 402e070:	1021883a 	mov	r16,r2
 402e074:	a085383a 	mul	r2,r20,r2
 402e078:	9908b03a 	or	r4,r19,r4
 402e07c:	2080052e 	bgeu	r4,r2,402e094 <__udivdi3+0xe4>
 402e080:	2449883a 	add	r4,r4,r17
 402e084:	80ffffc4 	addi	r3,r16,-1
 402e088:	24400136 	bltu	r4,r17,402e090 <__udivdi3+0xe0>
 402e08c:	20812636 	bltu	r4,r2,402e528 <__udivdi3+0x578>
 402e090:	1821883a 	mov	r16,r3
 402e094:	20a7c83a 	sub	r19,r4,r2
 402e098:	9809883a 	mov	r4,r19
 402e09c:	b00b883a 	mov	r5,r22
 402e0a0:	40226080 	call	4022608 <__umodsi3>
 402e0a4:	9809883a 	mov	r4,r19
 402e0a8:	b00b883a 	mov	r5,r22
 402e0ac:	1027883a 	mov	r19,r2
 402e0b0:	9826943a 	slli	r19,r19,16
 402e0b4:	40225a40 	call	40225a4 <__udivsi3>
 402e0b8:	a0a9383a 	mul	r20,r20,r2
 402e0bc:	94bfffcc 	andi	r18,r18,65535
 402e0c0:	9ca4b03a 	or	r18,r19,r18
 402e0c4:	9500052e 	bgeu	r18,r20,402e0dc <__udivdi3+0x12c>
 402e0c8:	8ca5883a 	add	r18,r17,r18
 402e0cc:	10ffffc4 	addi	r3,r2,-1
 402e0d0:	94400136 	bltu	r18,r17,402e0d8 <__udivdi3+0x128>
 402e0d4:	95011236 	bltu	r18,r20,402e520 <__udivdi3+0x570>
 402e0d8:	1805883a 	mov	r2,r3
 402e0dc:	8020943a 	slli	r16,r16,16
 402e0e0:	0007883a 	mov	r3,zero
 402e0e4:	8084b03a 	or	r2,r16,r2
 402e0e8:	00000306 	br	402e0f8 <__udivdi3+0x148>
 402e0ec:	29c00e2e 	bgeu	r5,r7,402e128 <__udivdi3+0x178>
 402e0f0:	0007883a 	mov	r3,zero
 402e0f4:	0005883a 	mov	r2,zero
 402e0f8:	dfc00a17 	ldw	ra,40(sp)
 402e0fc:	df000917 	ldw	fp,36(sp)
 402e100:	ddc00817 	ldw	r23,32(sp)
 402e104:	dd800717 	ldw	r22,28(sp)
 402e108:	dd400617 	ldw	r21,24(sp)
 402e10c:	dd000517 	ldw	r20,20(sp)
 402e110:	dcc00417 	ldw	r19,16(sp)
 402e114:	dc800317 	ldw	r18,12(sp)
 402e118:	dc400217 	ldw	r17,8(sp)
 402e11c:	dc000117 	ldw	r16,4(sp)
 402e120:	dec00b04 	addi	sp,sp,44
 402e124:	f800283a 	ret
 402e128:	00bfffd4 	movui	r2,65535
 402e12c:	11c05a2e 	bgeu	r2,r7,402e298 <__udivdi3+0x2e8>
 402e130:	00804034 	movhi	r2,256
 402e134:	3880dd36 	bltu	r7,r2,402e4ac <__udivdi3+0x4fc>
 402e138:	3804d63a 	srli	r2,r7,24
 402e13c:	01000604 	movi	r4,24
 402e140:	00c00034 	movhi	r3,0
 402e144:	10c7883a 	add	r3,r2,r3
 402e148:	1880b103 	ldbu	r2,708(r3)
 402e14c:	00c00804 	movi	r3,32
 402e150:	1105883a 	add	r2,r2,r4
 402e154:	18abc83a 	sub	r21,r3,r2
 402e158:	1880861e 	bne	r3,r2,402e374 <__udivdi3+0x3c4>
 402e15c:	3c00d836 	bltu	r7,r16,402e4c0 <__udivdi3+0x510>
 402e160:	9985403a 	cmpgeu	r2,r19,r6
 402e164:	0007883a 	mov	r3,zero
 402e168:	003fe306 	br	402e0f8 <__udivdi3+0x148>
 402e16c:	3000041e 	bne	r6,zero,402e180 <__udivdi3+0x1d0>
 402e170:	000b883a 	mov	r5,zero
 402e174:	01000044 	movi	r4,1
 402e178:	40225a40 	call	40225a4 <__udivsi3>
 402e17c:	1023883a 	mov	r17,r2
 402e180:	00bfffd4 	movui	r2,65535
 402e184:	14403a2e 	bgeu	r2,r17,402e270 <__udivdi3+0x2c0>
 402e188:	00804034 	movhi	r2,256
 402e18c:	8880d236 	bltu	r17,r2,402e4d8 <__udivdi3+0x528>
 402e190:	8806d63a 	srli	r3,r17,24
 402e194:	05000604 	movi	r20,24
 402e198:	00800034 	movhi	r2,0
 402e19c:	1885883a 	add	r2,r3,r2
 402e1a0:	1080b103 	ldbu	r2,708(r2)
 402e1a4:	00c00804 	movi	r3,32
 402e1a8:	1505883a 	add	r2,r2,r20
 402e1ac:	188dc83a 	sub	r6,r3,r2
 402e1b0:	18803e1e 	bne	r3,r2,402e2ac <__udivdi3+0x2fc>
 402e1b4:	882ad43a 	srli	r21,r17,16
 402e1b8:	8461c83a 	sub	r16,r16,r17
 402e1bc:	8cffffcc 	andi	r19,r17,65535
 402e1c0:	00c00044 	movi	r3,1
 402e1c4:	8009883a 	mov	r4,r16
 402e1c8:	a80b883a 	mov	r5,r21
 402e1cc:	d8c00015 	stw	r3,0(sp)
 402e1d0:	40226080 	call	4022608 <__umodsi3>
 402e1d4:	8009883a 	mov	r4,r16
 402e1d8:	a80b883a 	mov	r5,r21
 402e1dc:	1021883a 	mov	r16,r2
 402e1e0:	40225a40 	call	40225a4 <__udivsi3>
 402e1e4:	8020943a 	slli	r16,r16,16
 402e1e8:	9008d43a 	srli	r4,r18,16
 402e1ec:	1029883a 	mov	r20,r2
 402e1f0:	14c5383a 	mul	r2,r2,r19
 402e1f4:	8108b03a 	or	r4,r16,r4
 402e1f8:	d8c00017 	ldw	r3,0(sp)
 402e1fc:	2080052e 	bgeu	r4,r2,402e214 <__udivdi3+0x264>
 402e200:	2449883a 	add	r4,r4,r17
 402e204:	a17fffc4 	addi	r5,r20,-1
 402e208:	24400136 	bltu	r4,r17,402e210 <__udivdi3+0x260>
 402e20c:	2080c936 	bltu	r4,r2,402e534 <__udivdi3+0x584>
 402e210:	2829883a 	mov	r20,r5
 402e214:	20a1c83a 	sub	r16,r4,r2
 402e218:	8009883a 	mov	r4,r16
 402e21c:	a80b883a 	mov	r5,r21
 402e220:	d8c00015 	stw	r3,0(sp)
 402e224:	40226080 	call	4022608 <__umodsi3>
 402e228:	8009883a 	mov	r4,r16
 402e22c:	a80b883a 	mov	r5,r21
 402e230:	1021883a 	mov	r16,r2
 402e234:	8020943a 	slli	r16,r16,16
 402e238:	40225a40 	call	40225a4 <__udivsi3>
 402e23c:	14e7383a 	mul	r19,r2,r19
 402e240:	94bfffcc 	andi	r18,r18,65535
 402e244:	84a4b03a 	or	r18,r16,r18
 402e248:	d8c00017 	ldw	r3,0(sp)
 402e24c:	94c0052e 	bgeu	r18,r19,402e264 <__udivdi3+0x2b4>
 402e250:	8ca5883a 	add	r18,r17,r18
 402e254:	113fffc4 	addi	r4,r2,-1
 402e258:	94400136 	bltu	r18,r17,402e260 <__udivdi3+0x2b0>
 402e25c:	94c0ae36 	bltu	r18,r19,402e518 <__udivdi3+0x568>
 402e260:	2005883a 	mov	r2,r4
 402e264:	a00c943a 	slli	r6,r20,16
 402e268:	3084b03a 	or	r2,r6,r2
 402e26c:	003fa206 	br	402e0f8 <__udivdi3+0x148>
 402e270:	88804030 	cmpltui	r2,r17,256
 402e274:	10009e1e 	bne	r2,zero,402e4f0 <__udivdi3+0x540>
 402e278:	8806d23a 	srli	r3,r17,8
 402e27c:	05000204 	movi	r20,8
 402e280:	003fc506 	br	402e198 <__udivdi3+0x1e8>
 402e284:	30804030 	cmpltui	r2,r6,256
 402e288:	10008b1e 	bne	r2,zero,402e4b8 <__udivdi3+0x508>
 402e28c:	3006d23a 	srli	r3,r6,8
 402e290:	05000204 	movi	r20,8
 402e294:	003f5f06 	br	402e014 <__udivdi3+0x64>
 402e298:	38804030 	cmpltui	r2,r7,256
 402e29c:	10008b1e 	bne	r2,zero,402e4cc <__udivdi3+0x51c>
 402e2a0:	3804d23a 	srli	r2,r7,8
 402e2a4:	01000204 	movi	r4,8
 402e2a8:	003fa506 	br	402e140 <__udivdi3+0x190>
 402e2ac:	89a2983a 	sll	r17,r17,r6
 402e2b0:	80acd83a 	srl	r22,r16,r2
 402e2b4:	81a0983a 	sll	r16,r16,r6
 402e2b8:	882ad43a 	srli	r21,r17,16
 402e2bc:	9884d83a 	srl	r2,r19,r2
 402e2c0:	b009883a 	mov	r4,r22
 402e2c4:	a80b883a 	mov	r5,r21
 402e2c8:	99a4983a 	sll	r18,r19,r6
 402e2cc:	1428b03a 	or	r20,r2,r16
 402e2d0:	40226080 	call	4022608 <__umodsi3>
 402e2d4:	b009883a 	mov	r4,r22
 402e2d8:	a80b883a 	mov	r5,r21
 402e2dc:	1021883a 	mov	r16,r2
 402e2e0:	40225a40 	call	40225a4 <__udivsi3>
 402e2e4:	8008943a 	slli	r4,r16,16
 402e2e8:	a00ad43a 	srli	r5,r20,16
 402e2ec:	8cffffcc 	andi	r19,r17,65535
 402e2f0:	98a1383a 	mul	r16,r19,r2
 402e2f4:	2148b03a 	or	r4,r4,r5
 402e2f8:	102d883a 	mov	r22,r2
 402e2fc:	2400062e 	bgeu	r4,r16,402e318 <__udivdi3+0x368>
 402e300:	2449883a 	add	r4,r4,r17
 402e304:	10bfffc4 	addi	r2,r2,-1
 402e308:	24408136 	bltu	r4,r17,402e510 <__udivdi3+0x560>
 402e30c:	2400802e 	bgeu	r4,r16,402e510 <__udivdi3+0x560>
 402e310:	b5bfff84 	addi	r22,r22,-2
 402e314:	2449883a 	add	r4,r4,r17
 402e318:	2421c83a 	sub	r16,r4,r16
 402e31c:	8009883a 	mov	r4,r16
 402e320:	a80b883a 	mov	r5,r21
 402e324:	40226080 	call	4022608 <__umodsi3>
 402e328:	8009883a 	mov	r4,r16
 402e32c:	a80b883a 	mov	r5,r21
 402e330:	1021883a 	mov	r16,r2
 402e334:	8020943a 	slli	r16,r16,16
 402e338:	40225a40 	call	40225a4 <__udivsi3>
 402e33c:	9889383a 	mul	r4,r19,r2
 402e340:	a53fffcc 	andi	r20,r20,65535
 402e344:	8520b03a 	or	r16,r16,r20
 402e348:	8100062e 	bgeu	r16,r4,402e364 <__udivdi3+0x3b4>
 402e34c:	8461883a 	add	r16,r16,r17
 402e350:	10ffffc4 	addi	r3,r2,-1
 402e354:	84406a36 	bltu	r16,r17,402e500 <__udivdi3+0x550>
 402e358:	8100692e 	bgeu	r16,r4,402e500 <__udivdi3+0x550>
 402e35c:	10bfff84 	addi	r2,r2,-2
 402e360:	8461883a 	add	r16,r16,r17
 402e364:	b006943a 	slli	r3,r22,16
 402e368:	8121c83a 	sub	r16,r16,r4
 402e36c:	1886b03a 	or	r3,r3,r2
 402e370:	003f9406 	br	402e1c4 <__udivdi3+0x214>
 402e374:	30acd83a 	srl	r22,r6,r2
 402e378:	3d4e983a 	sll	r7,r7,r21
 402e37c:	80a4d83a 	srl	r18,r16,r2
 402e380:	8546983a 	sll	r3,r16,r21
 402e384:	b1ecb03a 	or	r22,r22,r7
 402e388:	b038d43a 	srli	fp,r22,16
 402e38c:	9884d83a 	srl	r2,r19,r2
 402e390:	9009883a 	mov	r4,r18
 402e394:	e00b883a 	mov	r5,fp
 402e398:	10e2b03a 	or	r17,r2,r3
 402e39c:	3568983a 	sll	r20,r6,r21
 402e3a0:	40226080 	call	4022608 <__umodsi3>
 402e3a4:	9009883a 	mov	r4,r18
 402e3a8:	e00b883a 	mov	r5,fp
 402e3ac:	1025883a 	mov	r18,r2
 402e3b0:	40225a40 	call	40225a4 <__udivsi3>
 402e3b4:	9008943a 	slli	r4,r18,16
 402e3b8:	8806d43a 	srli	r3,r17,16
 402e3bc:	b5ffffcc 	andi	r23,r22,65535
 402e3c0:	b8a5383a 	mul	r18,r23,r2
 402e3c4:	20c8b03a 	or	r4,r4,r3
 402e3c8:	1021883a 	mov	r16,r2
 402e3cc:	2480062e 	bgeu	r4,r18,402e3e8 <__udivdi3+0x438>
 402e3d0:	2589883a 	add	r4,r4,r22
 402e3d4:	10bfffc4 	addi	r2,r2,-1
 402e3d8:	25804b36 	bltu	r4,r22,402e508 <__udivdi3+0x558>
 402e3dc:	24804a2e 	bgeu	r4,r18,402e508 <__udivdi3+0x558>
 402e3e0:	843fff84 	addi	r16,r16,-2
 402e3e4:	2589883a 	add	r4,r4,r22
 402e3e8:	24a5c83a 	sub	r18,r4,r18
 402e3ec:	9009883a 	mov	r4,r18
 402e3f0:	e00b883a 	mov	r5,fp
 402e3f4:	40226080 	call	4022608 <__umodsi3>
 402e3f8:	9009883a 	mov	r4,r18
 402e3fc:	e00b883a 	mov	r5,fp
 402e400:	1025883a 	mov	r18,r2
 402e404:	9024943a 	slli	r18,r18,16
 402e408:	40225a40 	call	40225a4 <__udivsi3>
 402e40c:	b8af383a 	mul	r23,r23,r2
 402e410:	8c7fffcc 	andi	r17,r17,65535
 402e414:	9462b03a 	or	r17,r18,r17
 402e418:	8dc0062e 	bgeu	r17,r23,402e434 <__udivdi3+0x484>
 402e41c:	8da3883a 	add	r17,r17,r22
 402e420:	10ffffc4 	addi	r3,r2,-1
 402e424:	8d803436 	bltu	r17,r22,402e4f8 <__udivdi3+0x548>
 402e428:	8dc0332e 	bgeu	r17,r23,402e4f8 <__udivdi3+0x548>
 402e42c:	10bfff84 	addi	r2,r2,-2
 402e430:	8da3883a 	add	r17,r17,r22
 402e434:	8020943a 	slli	r16,r16,16
 402e438:	10ffffcc 	andi	r3,r2,65535
 402e43c:	a00ed43a 	srli	r7,r20,16
 402e440:	8084b03a 	or	r2,r16,r2
 402e444:	1008d43a 	srli	r4,r2,16
 402e448:	a1bfffcc 	andi	r6,r20,65535
 402e44c:	1991383a 	mul	r8,r3,r6
 402e450:	218d383a 	mul	r6,r4,r6
 402e454:	19c7383a 	mul	r3,r3,r7
 402e458:	400ad43a 	srli	r5,r8,16
 402e45c:	21c9383a 	mul	r4,r4,r7
 402e460:	1987883a 	add	r3,r3,r6
 402e464:	28c7883a 	add	r3,r5,r3
 402e468:	8de3c83a 	sub	r17,r17,r23
 402e46c:	1980022e 	bgeu	r3,r6,402e478 <__udivdi3+0x4c8>
 402e470:	01400074 	movhi	r5,1
 402e474:	2149883a 	add	r4,r4,r5
 402e478:	180ad43a 	srli	r5,r3,16
 402e47c:	2909883a 	add	r4,r5,r4
 402e480:	89000836 	bltu	r17,r4,402e4a4 <__udivdi3+0x4f4>
 402e484:	89000226 	beq	r17,r4,402e490 <__udivdi3+0x4e0>
 402e488:	0007883a 	mov	r3,zero
 402e48c:	003f1a06 	br	402e0f8 <__udivdi3+0x148>
 402e490:	1806943a 	slli	r3,r3,16
 402e494:	9d4c983a 	sll	r6,r19,r21
 402e498:	423fffcc 	andi	r8,r8,65535
 402e49c:	1a07883a 	add	r3,r3,r8
 402e4a0:	30fff92e 	bgeu	r6,r3,402e488 <__udivdi3+0x4d8>
 402e4a4:	10bfffc4 	addi	r2,r2,-1
 402e4a8:	003ff706 	br	402e488 <__udivdi3+0x4d8>
 402e4ac:	3804d43a 	srli	r2,r7,16
 402e4b0:	01000404 	movi	r4,16
 402e4b4:	003f2206 	br	402e140 <__udivdi3+0x190>
 402e4b8:	3007883a 	mov	r3,r6
 402e4bc:	003ed506 	br	402e014 <__udivdi3+0x64>
 402e4c0:	0007883a 	mov	r3,zero
 402e4c4:	00800044 	movi	r2,1
 402e4c8:	003f0b06 	br	402e0f8 <__udivdi3+0x148>
 402e4cc:	3805883a 	mov	r2,r7
 402e4d0:	0009883a 	mov	r4,zero
 402e4d4:	003f1a06 	br	402e140 <__udivdi3+0x190>
 402e4d8:	8806d43a 	srli	r3,r17,16
 402e4dc:	05000404 	movi	r20,16
 402e4e0:	003f2d06 	br	402e198 <__udivdi3+0x1e8>
 402e4e4:	3006d43a 	srli	r3,r6,16
 402e4e8:	05000404 	movi	r20,16
 402e4ec:	003ec906 	br	402e014 <__udivdi3+0x64>
 402e4f0:	8807883a 	mov	r3,r17
 402e4f4:	003f2806 	br	402e198 <__udivdi3+0x1e8>
 402e4f8:	1805883a 	mov	r2,r3
 402e4fc:	003fcd06 	br	402e434 <__udivdi3+0x484>
 402e500:	1805883a 	mov	r2,r3
 402e504:	003f9706 	br	402e364 <__udivdi3+0x3b4>
 402e508:	1021883a 	mov	r16,r2
 402e50c:	003fb606 	br	402e3e8 <__udivdi3+0x438>
 402e510:	102d883a 	mov	r22,r2
 402e514:	003f8006 	br	402e318 <__udivdi3+0x368>
 402e518:	10bfff84 	addi	r2,r2,-2
 402e51c:	003f5106 	br	402e264 <__udivdi3+0x2b4>
 402e520:	10bfff84 	addi	r2,r2,-2
 402e524:	003eed06 	br	402e0dc <__udivdi3+0x12c>
 402e528:	843fff84 	addi	r16,r16,-2
 402e52c:	2449883a 	add	r4,r4,r17
 402e530:	003ed806 	br	402e094 <__udivdi3+0xe4>
 402e534:	a53fff84 	addi	r20,r20,-2
 402e538:	2449883a 	add	r4,r4,r17
 402e53c:	003f3506 	br	402e214 <__udivdi3+0x264>

0402e540 <__umoddi3>:
 402e540:	defff504 	addi	sp,sp,-44
 402e544:	dc400215 	stw	r17,8(sp)
 402e548:	dc000115 	stw	r16,4(sp)
 402e54c:	dfc00a15 	stw	ra,40(sp)
 402e550:	df000915 	stw	fp,36(sp)
 402e554:	ddc00815 	stw	r23,32(sp)
 402e558:	dd800715 	stw	r22,28(sp)
 402e55c:	dd400615 	stw	r21,24(sp)
 402e560:	dd000515 	stw	r20,20(sp)
 402e564:	dcc00415 	stw	r19,16(sp)
 402e568:	dc800315 	stw	r18,12(sp)
 402e56c:	2823883a 	mov	r17,r5
 402e570:	2021883a 	mov	r16,r4
 402e574:	3800371e 	bne	r7,zero,402e654 <__umoddi3+0x114>
 402e578:	3825883a 	mov	r18,r7
 402e57c:	3029883a 	mov	r20,r6
 402e580:	2027883a 	mov	r19,r4
 402e584:	2980572e 	bgeu	r5,r6,402e6e4 <__umoddi3+0x1a4>
 402e588:	00bfffd4 	movui	r2,65535
 402e58c:	282b883a 	mov	r21,r5
 402e590:	1180922e 	bgeu	r2,r6,402e7dc <__umoddi3+0x29c>
 402e594:	00804034 	movhi	r2,256
 402e598:	30812036 	bltu	r6,r2,402ea1c <__umoddi3+0x4dc>
 402e59c:	3006d63a 	srli	r3,r6,24
 402e5a0:	04800604 	movi	r18,24
 402e5a4:	00800034 	movhi	r2,0
 402e5a8:	1885883a 	add	r2,r3,r2
 402e5ac:	1080b103 	ldbu	r2,708(r2)
 402e5b0:	00c00804 	movi	r3,32
 402e5b4:	1485883a 	add	r2,r2,r18
 402e5b8:	18a5c83a 	sub	r18,r3,r2
 402e5bc:	18800526 	beq	r3,r2,402e5d4 <__umoddi3+0x94>
 402e5c0:	8ca2983a 	sll	r17,r17,r18
 402e5c4:	8084d83a 	srl	r2,r16,r2
 402e5c8:	34a8983a 	sll	r20,r6,r18
 402e5cc:	84a6983a 	sll	r19,r16,r18
 402e5d0:	146ab03a 	or	r21,r2,r17
 402e5d4:	a02cd43a 	srli	r22,r20,16
 402e5d8:	a809883a 	mov	r4,r21
 402e5dc:	a43fffcc 	andi	r16,r20,65535
 402e5e0:	b00b883a 	mov	r5,r22
 402e5e4:	40226080 	call	4022608 <__umodsi3>
 402e5e8:	a809883a 	mov	r4,r21
 402e5ec:	b00b883a 	mov	r5,r22
 402e5f0:	1023883a 	mov	r17,r2
 402e5f4:	40225a40 	call	40225a4 <__udivsi3>
 402e5f8:	8822943a 	slli	r17,r17,16
 402e5fc:	9808d43a 	srli	r4,r19,16
 402e600:	80ab383a 	mul	r21,r16,r2
 402e604:	8908b03a 	or	r4,r17,r4
 402e608:	2540042e 	bgeu	r4,r21,402e61c <__umoddi3+0xdc>
 402e60c:	2509883a 	add	r4,r4,r20
 402e610:	25000236 	bltu	r4,r20,402e61c <__umoddi3+0xdc>
 402e614:	2540012e 	bgeu	r4,r21,402e61c <__umoddi3+0xdc>
 402e618:	2509883a 	add	r4,r4,r20
 402e61c:	256bc83a 	sub	r21,r4,r21
 402e620:	b00b883a 	mov	r5,r22
 402e624:	a809883a 	mov	r4,r21
 402e628:	40226080 	call	4022608 <__umodsi3>
 402e62c:	1023883a 	mov	r17,r2
 402e630:	b00b883a 	mov	r5,r22
 402e634:	a809883a 	mov	r4,r21
 402e638:	40225a40 	call	40225a4 <__udivsi3>
 402e63c:	8822943a 	slli	r17,r17,16
 402e640:	8085383a 	mul	r2,r16,r2
 402e644:	98ffffcc 	andi	r3,r19,65535
 402e648:	88c6b03a 	or	r3,r17,r3
 402e64c:	18805a2e 	bgeu	r3,r2,402e7b8 <__umoddi3+0x278>
 402e650:	00005506 	br	402e7a8 <__umoddi3+0x268>
 402e654:	2005883a 	mov	r2,r4
 402e658:	29c00d2e 	bgeu	r5,r7,402e690 <__umoddi3+0x150>
 402e65c:	2807883a 	mov	r3,r5
 402e660:	dfc00a17 	ldw	ra,40(sp)
 402e664:	df000917 	ldw	fp,36(sp)
 402e668:	ddc00817 	ldw	r23,32(sp)
 402e66c:	dd800717 	ldw	r22,28(sp)
 402e670:	dd400617 	ldw	r21,24(sp)
 402e674:	dd000517 	ldw	r20,20(sp)
 402e678:	dcc00417 	ldw	r19,16(sp)
 402e67c:	dc800317 	ldw	r18,12(sp)
 402e680:	dc400217 	ldw	r17,8(sp)
 402e684:	dc000117 	ldw	r16,4(sp)
 402e688:	dec00b04 	addi	sp,sp,44
 402e68c:	f800283a 	ret
 402e690:	013fffd4 	movui	r4,65535
 402e694:	2807883a 	mov	r3,r5
 402e698:	21c0552e 	bgeu	r4,r7,402e7f0 <__umoddi3+0x2b0>
 402e69c:	01004034 	movhi	r4,256
 402e6a0:	3900e336 	bltu	r7,r4,402ea30 <__umoddi3+0x4f0>
 402e6a4:	3808d63a 	srli	r4,r7,24
 402e6a8:	02000604 	movi	r8,24
 402e6ac:	01400034 	movhi	r5,0
 402e6b0:	214b883a 	add	r5,r4,r5
 402e6b4:	2d40b103 	ldbu	r21,708(r5)
 402e6b8:	01000804 	movi	r4,32
 402e6bc:	aa2b883a 	add	r21,r21,r8
 402e6c0:	2569c83a 	sub	r20,r4,r21
 402e6c4:	25404f1e 	bne	r4,r21,402e804 <__umoddi3+0x2c4>
 402e6c8:	3c400136 	bltu	r7,r17,402e6d0 <__umoddi3+0x190>
 402e6cc:	81bfe436 	bltu	r16,r6,402e660 <__umoddi3+0x120>
 402e6d0:	8185c83a 	sub	r2,r16,r6
 402e6d4:	89cfc83a 	sub	r7,r17,r7
 402e6d8:	8087803a 	cmpltu	r3,r16,r2
 402e6dc:	38c7c83a 	sub	r3,r7,r3
 402e6e0:	003fdf06 	br	402e660 <__umoddi3+0x120>
 402e6e4:	3000041e 	bne	r6,zero,402e6f8 <__umoddi3+0x1b8>
 402e6e8:	000b883a 	mov	r5,zero
 402e6ec:	01000044 	movi	r4,1
 402e6f0:	40225a40 	call	40225a4 <__udivsi3>
 402e6f4:	1029883a 	mov	r20,r2
 402e6f8:	00bfffd4 	movui	r2,65535
 402e6fc:	1500322e 	bgeu	r2,r20,402e7c8 <__umoddi3+0x288>
 402e700:	00804034 	movhi	r2,256
 402e704:	a080cd36 	bltu	r20,r2,402ea3c <__umoddi3+0x4fc>
 402e708:	a006d63a 	srli	r3,r20,24
 402e70c:	04800604 	movi	r18,24
 402e710:	00800034 	movhi	r2,0
 402e714:	1885883a 	add	r2,r3,r2
 402e718:	1580b103 	ldbu	r22,708(r2)
 402e71c:	00800804 	movi	r2,32
 402e720:	b4ad883a 	add	r22,r22,r18
 402e724:	15a5c83a 	sub	r18,r2,r22
 402e728:	15808a1e 	bne	r2,r22,402e954 <__umoddi3+0x414>
 402e72c:	a02ed43a 	srli	r23,r20,16
 402e730:	8d23c83a 	sub	r17,r17,r20
 402e734:	a57fffcc 	andi	r21,r20,65535
 402e738:	b80b883a 	mov	r5,r23
 402e73c:	8809883a 	mov	r4,r17
 402e740:	40226080 	call	4022608 <__umodsi3>
 402e744:	8809883a 	mov	r4,r17
 402e748:	b80b883a 	mov	r5,r23
 402e74c:	102d883a 	mov	r22,r2
 402e750:	40225a40 	call	40225a4 <__udivsi3>
 402e754:	b02c943a 	slli	r22,r22,16
 402e758:	9808d43a 	srli	r4,r19,16
 402e75c:	1561383a 	mul	r16,r2,r21
 402e760:	b108b03a 	or	r4,r22,r4
 402e764:	2400032e 	bgeu	r4,r16,402e774 <__umoddi3+0x234>
 402e768:	2509883a 	add	r4,r4,r20
 402e76c:	25000136 	bltu	r4,r20,402e774 <__umoddi3+0x234>
 402e770:	2400be36 	bltu	r4,r16,402ea6c <__umoddi3+0x52c>
 402e774:	2421c83a 	sub	r16,r4,r16
 402e778:	b80b883a 	mov	r5,r23
 402e77c:	8009883a 	mov	r4,r16
 402e780:	40226080 	call	4022608 <__umodsi3>
 402e784:	1023883a 	mov	r17,r2
 402e788:	b80b883a 	mov	r5,r23
 402e78c:	8009883a 	mov	r4,r16
 402e790:	40225a40 	call	40225a4 <__udivsi3>
 402e794:	8822943a 	slli	r17,r17,16
 402e798:	1545383a 	mul	r2,r2,r21
 402e79c:	98ffffcc 	andi	r3,r19,65535
 402e7a0:	88c6b03a 	or	r3,r17,r3
 402e7a4:	1880042e 	bgeu	r3,r2,402e7b8 <__umoddi3+0x278>
 402e7a8:	1d07883a 	add	r3,r3,r20
 402e7ac:	1d000236 	bltu	r3,r20,402e7b8 <__umoddi3+0x278>
 402e7b0:	1880012e 	bgeu	r3,r2,402e7b8 <__umoddi3+0x278>
 402e7b4:	1d07883a 	add	r3,r3,r20
 402e7b8:	1885c83a 	sub	r2,r3,r2
 402e7bc:	1484d83a 	srl	r2,r2,r18
 402e7c0:	0007883a 	mov	r3,zero
 402e7c4:	003fa606 	br	402e660 <__umoddi3+0x120>
 402e7c8:	a0804030 	cmpltui	r2,r20,256
 402e7cc:	10009e1e 	bne	r2,zero,402ea48 <__umoddi3+0x508>
 402e7d0:	a006d23a 	srli	r3,r20,8
 402e7d4:	04800204 	movi	r18,8
 402e7d8:	003fcd06 	br	402e710 <__umoddi3+0x1d0>
 402e7dc:	30804030 	cmpltui	r2,r6,256
 402e7e0:	1000911e 	bne	r2,zero,402ea28 <__umoddi3+0x4e8>
 402e7e4:	3006d23a 	srli	r3,r6,8
 402e7e8:	04800204 	movi	r18,8
 402e7ec:	003f6d06 	br	402e5a4 <__umoddi3+0x64>
 402e7f0:	39004030 	cmpltui	r4,r7,256
 402e7f4:	2000961e 	bne	r4,zero,402ea50 <__umoddi3+0x510>
 402e7f8:	3808d23a 	srli	r4,r7,8
 402e7fc:	02000204 	movi	r8,8
 402e800:	003faa06 	br	402e6ac <__umoddi3+0x16c>
 402e804:	3d0e983a 	sll	r7,r7,r20
 402e808:	3544d83a 	srl	r2,r6,r21
 402e80c:	8d64d83a 	srl	r18,r17,r21
 402e810:	8d22983a 	sll	r17,r17,r20
 402e814:	11eeb03a 	or	r23,r2,r7
 402e818:	b838d43a 	srli	fp,r23,16
 402e81c:	8544d83a 	srl	r2,r16,r21
 402e820:	9009883a 	mov	r4,r18
 402e824:	e00b883a 	mov	r5,fp
 402e828:	3526983a 	sll	r19,r6,r20
 402e82c:	1462b03a 	or	r17,r2,r17
 402e830:	40226080 	call	4022608 <__umodsi3>
 402e834:	9009883a 	mov	r4,r18
 402e838:	e00b883a 	mov	r5,fp
 402e83c:	1025883a 	mov	r18,r2
 402e840:	40225a40 	call	40225a4 <__udivsi3>
 402e844:	9008943a 	slli	r4,r18,16
 402e848:	8806d43a 	srli	r3,r17,16
 402e84c:	b9ffffcc 	andi	r7,r23,65535
 402e850:	38a5383a 	mul	r18,r7,r2
 402e854:	20c8b03a 	or	r4,r4,r3
 402e858:	8520983a 	sll	r16,r16,r20
 402e85c:	102d883a 	mov	r22,r2
 402e860:	2480062e 	bgeu	r4,r18,402e87c <__umoddi3+0x33c>
 402e864:	25c9883a 	add	r4,r4,r23
 402e868:	10bfffc4 	addi	r2,r2,-1
 402e86c:	25c07d36 	bltu	r4,r23,402ea64 <__umoddi3+0x524>
 402e870:	24807c2e 	bgeu	r4,r18,402ea64 <__umoddi3+0x524>
 402e874:	b5bfff84 	addi	r22,r22,-2
 402e878:	25c9883a 	add	r4,r4,r23
 402e87c:	24a5c83a 	sub	r18,r4,r18
 402e880:	9009883a 	mov	r4,r18
 402e884:	e00b883a 	mov	r5,fp
 402e888:	d9c00015 	stw	r7,0(sp)
 402e88c:	40226080 	call	4022608 <__umodsi3>
 402e890:	9009883a 	mov	r4,r18
 402e894:	e00b883a 	mov	r5,fp
 402e898:	1025883a 	mov	r18,r2
 402e89c:	40225a40 	call	40225a4 <__udivsi3>
 402e8a0:	d9c00017 	ldw	r7,0(sp)
 402e8a4:	9024943a 	slli	r18,r18,16
 402e8a8:	8c7fffcc 	andi	r17,r17,65535
 402e8ac:	388f383a 	mul	r7,r7,r2
 402e8b0:	9448b03a 	or	r4,r18,r17
 402e8b4:	21c0062e 	bgeu	r4,r7,402e8d0 <__umoddi3+0x390>
 402e8b8:	25c9883a 	add	r4,r4,r23
 402e8bc:	10ffffc4 	addi	r3,r2,-1
 402e8c0:	25c06636 	bltu	r4,r23,402ea5c <__umoddi3+0x51c>
 402e8c4:	21c0652e 	bgeu	r4,r7,402ea5c <__umoddi3+0x51c>
 402e8c8:	10bfff84 	addi	r2,r2,-2
 402e8cc:	25c9883a 	add	r4,r4,r23
 402e8d0:	b00a943a 	slli	r5,r22,16
 402e8d4:	11bfffcc 	andi	r6,r2,65535
 402e8d8:	9806d43a 	srli	r3,r19,16
 402e8dc:	2884b03a 	or	r2,r5,r2
 402e8e0:	102cd43a 	srli	r22,r2,16
 402e8e4:	997fffcc 	andi	r5,r19,65535
 402e8e8:	3151383a 	mul	r8,r6,r5
 402e8ec:	b14b383a 	mul	r5,r22,r5
 402e8f0:	30cd383a 	mul	r6,r6,r3
 402e8f4:	4004d43a 	srli	r2,r8,16
 402e8f8:	b0ed383a 	mul	r22,r22,r3
 402e8fc:	314d883a 	add	r6,r6,r5
 402e900:	1185883a 	add	r2,r2,r6
 402e904:	21c9c83a 	sub	r4,r4,r7
 402e908:	1140022e 	bgeu	r2,r5,402e914 <__umoddi3+0x3d4>
 402e90c:	00c00074 	movhi	r3,1
 402e910:	b0ed883a 	add	r22,r22,r3
 402e914:	1006d43a 	srli	r3,r2,16
 402e918:	1004943a 	slli	r2,r2,16
 402e91c:	423fffcc 	andi	r8,r8,65535
 402e920:	1dad883a 	add	r22,r3,r22
 402e924:	1205883a 	add	r2,r2,r8
 402e928:	25803636 	bltu	r4,r22,402ea04 <__umoddi3+0x4c4>
 402e92c:	25803426 	beq	r4,r22,402ea00 <__umoddi3+0x4c0>
 402e930:	8085c83a 	sub	r2,r16,r2
 402e934:	8087803a 	cmpltu	r3,r16,r2
 402e938:	2589c83a 	sub	r4,r4,r22
 402e93c:	20c7c83a 	sub	r3,r4,r3
 402e940:	1d60983a 	sll	r16,r3,r21
 402e944:	1504d83a 	srl	r2,r2,r20
 402e948:	1d06d83a 	srl	r3,r3,r20
 402e94c:	8084b03a 	or	r2,r16,r2
 402e950:	003f4306 	br	402e660 <__umoddi3+0x120>
 402e954:	a4a8983a 	sll	r20,r20,r18
 402e958:	8daad83a 	srl	r21,r17,r22
 402e95c:	8ca2983a 	sll	r17,r17,r18
 402e960:	a02ed43a 	srli	r23,r20,16
 402e964:	a809883a 	mov	r4,r21
 402e968:	85acd83a 	srl	r22,r16,r22
 402e96c:	b80b883a 	mov	r5,r23
 402e970:	40226080 	call	4022608 <__umodsi3>
 402e974:	a809883a 	mov	r4,r21
 402e978:	b80b883a 	mov	r5,r23
 402e97c:	b46cb03a 	or	r22,r22,r17
 402e980:	1027883a 	mov	r19,r2
 402e984:	40225a40 	call	40225a4 <__udivsi3>
 402e988:	9826943a 	slli	r19,r19,16
 402e98c:	b008d43a 	srli	r4,r22,16
 402e990:	a57fffcc 	andi	r21,r20,65535
 402e994:	a8a3383a 	mul	r17,r21,r2
 402e998:	9908b03a 	or	r4,r19,r4
 402e99c:	84a6983a 	sll	r19,r16,r18
 402e9a0:	2440042e 	bgeu	r4,r17,402e9b4 <__umoddi3+0x474>
 402e9a4:	2509883a 	add	r4,r4,r20
 402e9a8:	25000236 	bltu	r4,r20,402e9b4 <__umoddi3+0x474>
 402e9ac:	2440012e 	bgeu	r4,r17,402e9b4 <__umoddi3+0x474>
 402e9b0:	2509883a 	add	r4,r4,r20
 402e9b4:	2463c83a 	sub	r17,r4,r17
 402e9b8:	8809883a 	mov	r4,r17
 402e9bc:	b80b883a 	mov	r5,r23
 402e9c0:	40226080 	call	4022608 <__umodsi3>
 402e9c4:	1021883a 	mov	r16,r2
 402e9c8:	8809883a 	mov	r4,r17
 402e9cc:	b80b883a 	mov	r5,r23
 402e9d0:	8020943a 	slli	r16,r16,16
 402e9d4:	40225a40 	call	40225a4 <__udivsi3>
 402e9d8:	a885383a 	mul	r2,r21,r2
 402e9dc:	b47fffcc 	andi	r17,r22,65535
 402e9e0:	8462b03a 	or	r17,r16,r17
 402e9e4:	8880042e 	bgeu	r17,r2,402e9f8 <__umoddi3+0x4b8>
 402e9e8:	8d23883a 	add	r17,r17,r20
 402e9ec:	8d000236 	bltu	r17,r20,402e9f8 <__umoddi3+0x4b8>
 402e9f0:	8880012e 	bgeu	r17,r2,402e9f8 <__umoddi3+0x4b8>
 402e9f4:	8d23883a 	add	r17,r17,r20
 402e9f8:	88a3c83a 	sub	r17,r17,r2
 402e9fc:	003f4e06 	br	402e738 <__umoddi3+0x1f8>
 402ea00:	80bfcb2e 	bgeu	r16,r2,402e930 <__umoddi3+0x3f0>
 402ea04:	14e7c83a 	sub	r19,r2,r19
 402ea08:	14c5803a 	cmpltu	r2,r2,r19
 402ea0c:	15c5883a 	add	r2,r2,r23
 402ea10:	b0adc83a 	sub	r22,r22,r2
 402ea14:	9805883a 	mov	r2,r19
 402ea18:	003fc506 	br	402e930 <__umoddi3+0x3f0>
 402ea1c:	3006d43a 	srli	r3,r6,16
 402ea20:	04800404 	movi	r18,16
 402ea24:	003edf06 	br	402e5a4 <__umoddi3+0x64>
 402ea28:	3007883a 	mov	r3,r6
 402ea2c:	003edd06 	br	402e5a4 <__umoddi3+0x64>
 402ea30:	3808d43a 	srli	r4,r7,16
 402ea34:	02000404 	movi	r8,16
 402ea38:	003f1c06 	br	402e6ac <__umoddi3+0x16c>
 402ea3c:	a006d43a 	srli	r3,r20,16
 402ea40:	04800404 	movi	r18,16
 402ea44:	003f3206 	br	402e710 <__umoddi3+0x1d0>
 402ea48:	a007883a 	mov	r3,r20
 402ea4c:	003f3006 	br	402e710 <__umoddi3+0x1d0>
 402ea50:	3809883a 	mov	r4,r7
 402ea54:	0011883a 	mov	r8,zero
 402ea58:	003f1406 	br	402e6ac <__umoddi3+0x16c>
 402ea5c:	1805883a 	mov	r2,r3
 402ea60:	003f9b06 	br	402e8d0 <__umoddi3+0x390>
 402ea64:	102d883a 	mov	r22,r2
 402ea68:	003f8406 	br	402e87c <__umoddi3+0x33c>
 402ea6c:	2509883a 	add	r4,r4,r20
 402ea70:	003f4006 	br	402e774 <__umoddi3+0x234>

0402ea74 <__adddf3>:
 402ea74:	02000434 	movhi	r8,16
 402ea78:	423fffc4 	addi	r8,r8,-1
 402ea7c:	2806d53a 	srli	r3,r5,20
 402ea80:	3804d53a 	srli	r2,r7,20
 402ea84:	2a14703a 	and	r10,r5,r8
 402ea88:	3a12703a 	and	r9,r7,r8
 402ea8c:	280ad7fa 	srli	r5,r5,31
 402ea90:	501490fa 	slli	r10,r10,3
 402ea94:	2018d77a 	srli	r12,r4,29
 402ea98:	481290fa 	slli	r9,r9,3
 402ea9c:	3016d77a 	srli	r11,r6,29
 402eaa0:	380ed7fa 	srli	r7,r7,31
 402eaa4:	defffb04 	addi	sp,sp,-20
 402eaa8:	dc800215 	stw	r18,8(sp)
 402eaac:	dc000015 	stw	r16,0(sp)
 402eab0:	1c81ffcc 	andi	r18,r3,2047
 402eab4:	1081ffcc 	andi	r2,r2,2047
 402eab8:	dfc00415 	stw	ra,16(sp)
 402eabc:	dcc00315 	stw	r19,12(sp)
 402eac0:	dc400115 	stw	r17,4(sp)
 402eac4:	201c90fa 	slli	r14,r4,3
 402eac8:	301a90fa 	slli	r13,r6,3
 402eacc:	2821883a 	mov	r16,r5
 402ead0:	6294b03a 	or	r10,r12,r10
 402ead4:	5a52b03a 	or	r9,r11,r9
 402ead8:	9087c83a 	sub	r3,r18,r2
 402eadc:	29c06126 	beq	r5,r7,402ec64 <__adddf3+0x1f0>
 402eae0:	00c0550e 	bge	zero,r3,402ec38 <__adddf3+0x1c4>
 402eae4:	10007326 	beq	r2,zero,402ecb4 <__adddf3+0x240>
 402eae8:	9081ffd8 	cmpnei	r2,r18,2047
 402eaec:	1000bd26 	beq	r2,zero,402ede4 <__adddf3+0x370>
 402eaf0:	4a402034 	orhi	r9,r9,128
 402eaf4:	18800e48 	cmpgei	r2,r3,57
 402eaf8:	1000ef1e 	bne	r2,zero,402eeb8 <__adddf3+0x444>
 402eafc:	18800808 	cmpgei	r2,r3,32
 402eb00:	1001321e 	bne	r2,zero,402efcc <__adddf3+0x558>
 402eb04:	00800804 	movi	r2,32
 402eb08:	10c5c83a 	sub	r2,r2,r3
 402eb0c:	68c8d83a 	srl	r4,r13,r3
 402eb10:	48a2983a 	sll	r17,r9,r2
 402eb14:	689a983a 	sll	r13,r13,r2
 402eb18:	48c6d83a 	srl	r3,r9,r3
 402eb1c:	8922b03a 	or	r17,r17,r4
 402eb20:	681ac03a 	cmpne	r13,r13,zero
 402eb24:	8b62b03a 	or	r17,r17,r13
 402eb28:	50d5c83a 	sub	r10,r10,r3
 402eb2c:	7463c83a 	sub	r17,r14,r17
 402eb30:	7451803a 	cmpltu	r8,r14,r17
 402eb34:	5211c83a 	sub	r8,r10,r8
 402eb38:	4080202c 	andhi	r2,r8,128
 402eb3c:	10008d26 	beq	r2,zero,402ed74 <__adddf3+0x300>
 402eb40:	02402034 	movhi	r9,128
 402eb44:	4a7fffc4 	addi	r9,r9,-1
 402eb48:	4266703a 	and	r19,r8,r9
 402eb4c:	9800b326 	beq	r19,zero,402ee1c <__adddf3+0x3a8>
 402eb50:	9809883a 	mov	r4,r19
 402eb54:	402340c0 	call	402340c <__clzsi2>
 402eb58:	10fffe04 	addi	r3,r2,-8
 402eb5c:	02000804 	movi	r8,32
 402eb60:	40d1c83a 	sub	r8,r8,r3
 402eb64:	8a10d83a 	srl	r8,r17,r8
 402eb68:	98d2983a 	sll	r9,r19,r3
 402eb6c:	88e2983a 	sll	r17,r17,r3
 402eb70:	4250b03a 	or	r8,r8,r9
 402eb74:	1c80b216 	blt	r3,r18,402ee40 <__adddf3+0x3cc>
 402eb78:	1c87c83a 	sub	r3,r3,r18
 402eb7c:	19000044 	addi	r4,r3,1
 402eb80:	20800808 	cmpgei	r2,r4,32
 402eb84:	10006f1e 	bne	r2,zero,402ed44 <__adddf3+0x2d0>
 402eb88:	00800804 	movi	r2,32
 402eb8c:	1105c83a 	sub	r2,r2,r4
 402eb90:	8906d83a 	srl	r3,r17,r4
 402eb94:	88a2983a 	sll	r17,r17,r2
 402eb98:	4084983a 	sll	r2,r8,r2
 402eb9c:	4110d83a 	srl	r8,r8,r4
 402eba0:	8822c03a 	cmpne	r17,r17,zero
 402eba4:	10c4b03a 	or	r2,r2,r3
 402eba8:	1462b03a 	or	r17,r2,r17
 402ebac:	0025883a 	mov	r18,zero
 402ebb0:	888001cc 	andi	r2,r17,7
 402ebb4:	10000726 	beq	r2,zero,402ebd4 <__adddf3+0x160>
 402ebb8:	888003cc 	andi	r2,r17,15
 402ebbc:	10800120 	cmpeqi	r2,r2,4
 402ebc0:	1000041e 	bne	r2,zero,402ebd4 <__adddf3+0x160>
 402ebc4:	88c00104 	addi	r3,r17,4
 402ebc8:	1c63803a 	cmpltu	r17,r3,r17
 402ebcc:	4451883a 	add	r8,r8,r17
 402ebd0:	1823883a 	mov	r17,r3
 402ebd4:	4080202c 	andhi	r2,r8,128
 402ebd8:	10006826 	beq	r2,zero,402ed7c <__adddf3+0x308>
 402ebdc:	90c00044 	addi	r3,r18,1
 402ebe0:	1881ffe0 	cmpeqi	r2,r3,2047
 402ebe4:	18c1ffcc 	andi	r3,r3,2047
 402ebe8:	10007a1e 	bne	r2,zero,402edd4 <__adddf3+0x360>
 402ebec:	00bfe034 	movhi	r2,65408
 402ebf0:	10bfffc4 	addi	r2,r2,-1
 402ebf4:	4090703a 	and	r8,r8,r2
 402ebf8:	4004977a 	slli	r2,r8,29
 402ebfc:	4010927a 	slli	r8,r8,9
 402ec00:	8822d0fa 	srli	r17,r17,3
 402ec04:	4010d33a 	srli	r8,r8,12
 402ec08:	1444b03a 	or	r2,r2,r17
 402ec0c:	1806953a 	slli	r3,r3,20
 402ec10:	802097fa 	slli	r16,r16,31
 402ec14:	1a06b03a 	or	r3,r3,r8
 402ec18:	1c06b03a 	or	r3,r3,r16
 402ec1c:	dfc00417 	ldw	ra,16(sp)
 402ec20:	dcc00317 	ldw	r19,12(sp)
 402ec24:	dc800217 	ldw	r18,8(sp)
 402ec28:	dc400117 	ldw	r17,4(sp)
 402ec2c:	dc000017 	ldw	r16,0(sp)
 402ec30:	dec00504 	addi	sp,sp,20
 402ec34:	f800283a 	ret
 402ec38:	18002626 	beq	r3,zero,402ecd4 <__adddf3+0x260>
 402ec3c:	1487c83a 	sub	r3,r2,r18
 402ec40:	9000ba1e 	bne	r18,zero,402ef2c <__adddf3+0x4b8>
 402ec44:	5388b03a 	or	r4,r10,r14
 402ec48:	20011826 	beq	r4,zero,402f0ac <__adddf3+0x638>
 402ec4c:	193fffc4 	addi	r4,r3,-1
 402ec50:	20015726 	beq	r4,zero,402f1b0 <__adddf3+0x73c>
 402ec54:	18c1ffd8 	cmpnei	r3,r3,2047
 402ec58:	18013026 	beq	r3,zero,402f11c <__adddf3+0x6a8>
 402ec5c:	2007883a 	mov	r3,r4
 402ec60:	0000b506 	br	402ef38 <__adddf3+0x4c4>
 402ec64:	00c07b0e 	bge	zero,r3,402ee54 <__adddf3+0x3e0>
 402ec68:	10002e26 	beq	r2,zero,402ed24 <__adddf3+0x2b0>
 402ec6c:	9081ffd8 	cmpnei	r2,r18,2047
 402ec70:	10005c26 	beq	r2,zero,402ede4 <__adddf3+0x370>
 402ec74:	4a402034 	orhi	r9,r9,128
 402ec78:	18800e48 	cmpgei	r2,r3,57
 402ec7c:	10004b1e 	bne	r2,zero,402edac <__adddf3+0x338>
 402ec80:	18800808 	cmpgei	r2,r3,32
 402ec84:	1000ec26 	beq	r2,zero,402f038 <__adddf3+0x5c4>
 402ec88:	1c7ff804 	addi	r17,r3,-32
 402ec8c:	19000820 	cmpeqi	r4,r3,32
 402ec90:	4c44d83a 	srl	r2,r9,r17
 402ec94:	2000041e 	bne	r4,zero,402eca8 <__adddf3+0x234>
 402ec98:	01001004 	movi	r4,64
 402ec9c:	20c7c83a 	sub	r3,r4,r3
 402eca0:	48d2983a 	sll	r9,r9,r3
 402eca4:	6a5ab03a 	or	r13,r13,r9
 402eca8:	6822c03a 	cmpne	r17,r13,zero
 402ecac:	88a2b03a 	or	r17,r17,r2
 402ecb0:	00004006 	br	402edb4 <__adddf3+0x340>
 402ecb4:	4b44b03a 	or	r2,r9,r13
 402ecb8:	10008226 	beq	r2,zero,402eec4 <__adddf3+0x450>
 402ecbc:	18bfffc4 	addi	r2,r3,-1
 402ecc0:	10011026 	beq	r2,zero,402f104 <__adddf3+0x690>
 402ecc4:	18c1ffd8 	cmpnei	r3,r3,2047
 402ecc8:	18004626 	beq	r3,zero,402ede4 <__adddf3+0x370>
 402eccc:	1007883a 	mov	r3,r2
 402ecd0:	003f8806 	br	402eaf4 <__adddf3+0x80>
 402ecd4:	90800044 	addi	r2,r18,1
 402ecd8:	1081ff8c 	andi	r2,r2,2046
 402ecdc:	1000a51e 	bne	r2,zero,402ef74 <__adddf3+0x500>
 402ece0:	538ab03a 	or	r5,r10,r14
 402ece4:	4b44b03a 	or	r2,r9,r13
 402ece8:	9000f81e 	bne	r18,zero,402f0cc <__adddf3+0x658>
 402ecec:	28013726 	beq	r5,zero,402f1cc <__adddf3+0x758>
 402ecf0:	10011226 	beq	r2,zero,402f13c <__adddf3+0x6c8>
 402ecf4:	7363c83a 	sub	r17,r14,r13
 402ecf8:	7445803a 	cmpltu	r2,r14,r17
 402ecfc:	5251c83a 	sub	r8,r10,r9
 402ed00:	4091c83a 	sub	r8,r8,r2
 402ed04:	4080202c 	andhi	r2,r8,128
 402ed08:	10018f26 	beq	r2,zero,402f348 <__adddf3+0x8d4>
 402ed0c:	6ba3c83a 	sub	r17,r13,r14
 402ed10:	4a95c83a 	sub	r10,r9,r10
 402ed14:	6c51803a 	cmpltu	r8,r13,r17
 402ed18:	5211c83a 	sub	r8,r10,r8
 402ed1c:	3821883a 	mov	r16,r7
 402ed20:	003fa306 	br	402ebb0 <__adddf3+0x13c>
 402ed24:	4b44b03a 	or	r2,r9,r13
 402ed28:	10006626 	beq	r2,zero,402eec4 <__adddf3+0x450>
 402ed2c:	18bfffc4 	addi	r2,r3,-1
 402ed30:	1000ec26 	beq	r2,zero,402f0e4 <__adddf3+0x670>
 402ed34:	18c1ffd8 	cmpnei	r3,r3,2047
 402ed38:	18012d26 	beq	r3,zero,402f1f0 <__adddf3+0x77c>
 402ed3c:	1007883a 	mov	r3,r2
 402ed40:	003fcd06 	br	402ec78 <__adddf3+0x204>
 402ed44:	18fff844 	addi	r3,r3,-31
 402ed48:	20800820 	cmpeqi	r2,r4,32
 402ed4c:	40c6d83a 	srl	r3,r8,r3
 402ed50:	1000041e 	bne	r2,zero,402ed64 <__adddf3+0x2f0>
 402ed54:	00801004 	movi	r2,64
 402ed58:	1109c83a 	sub	r4,r2,r4
 402ed5c:	4110983a 	sll	r8,r8,r4
 402ed60:	8a22b03a 	or	r17,r17,r8
 402ed64:	8822c03a 	cmpne	r17,r17,zero
 402ed68:	88e2b03a 	or	r17,r17,r3
 402ed6c:	0011883a 	mov	r8,zero
 402ed70:	0025883a 	mov	r18,zero
 402ed74:	888001cc 	andi	r2,r17,7
 402ed78:	103f8f1e 	bne	r2,zero,402ebb8 <__adddf3+0x144>
 402ed7c:	8822d0fa 	srli	r17,r17,3
 402ed80:	4004977a 	slli	r2,r8,29
 402ed84:	4014d0fa 	srli	r10,r8,3
 402ed88:	9007883a 	mov	r3,r18
 402ed8c:	8884b03a 	or	r2,r17,r2
 402ed90:	1901ffe0 	cmpeqi	r4,r3,2047
 402ed94:	2000191e 	bne	r4,zero,402edfc <__adddf3+0x388>
 402ed98:	02000434 	movhi	r8,16
 402ed9c:	423fffc4 	addi	r8,r8,-1
 402eda0:	5210703a 	and	r8,r10,r8
 402eda4:	18c1ffcc 	andi	r3,r3,2047
 402eda8:	003f9806 	br	402ec0c <__adddf3+0x198>
 402edac:	4b62b03a 	or	r17,r9,r13
 402edb0:	8822c03a 	cmpne	r17,r17,zero
 402edb4:	8ba3883a 	add	r17,r17,r14
 402edb8:	8b91803a 	cmpltu	r8,r17,r14
 402edbc:	4291883a 	add	r8,r8,r10
 402edc0:	4080202c 	andhi	r2,r8,128
 402edc4:	103feb26 	beq	r2,zero,402ed74 <__adddf3+0x300>
 402edc8:	94800044 	addi	r18,r18,1
 402edcc:	9081ffe0 	cmpeqi	r2,r18,2047
 402edd0:	10007426 	beq	r2,zero,402efa4 <__adddf3+0x530>
 402edd4:	00c1ffc4 	movi	r3,2047
 402edd8:	0011883a 	mov	r8,zero
 402eddc:	0005883a 	mov	r2,zero
 402ede0:	003f8a06 	br	402ec0c <__adddf3+0x198>
 402ede4:	500a977a 	slli	r5,r10,29
 402ede8:	00c80034 	movhi	r3,8192
 402edec:	18ffffc4 	addi	r3,r3,-1
 402edf0:	5014d0fa 	srli	r10,r10,3
 402edf4:	20c4703a 	and	r2,r4,r3
 402edf8:	1144b03a 	or	r2,r2,r5
 402edfc:	1286b03a 	or	r3,r2,r10
 402ee00:	18015426 	beq	r3,zero,402f354 <__adddf3+0x8e0>
 402ee04:	00c00434 	movhi	r3,16
 402ee08:	18ffffc4 	addi	r3,r3,-1
 402ee0c:	52000234 	orhi	r8,r10,8
 402ee10:	40d0703a 	and	r8,r8,r3
 402ee14:	00c1ffc4 	movi	r3,2047
 402ee18:	003f7c06 	br	402ec0c <__adddf3+0x198>
 402ee1c:	8809883a 	mov	r4,r17
 402ee20:	402340c0 	call	402340c <__clzsi2>
 402ee24:	10c00604 	addi	r3,r2,24
 402ee28:	19000808 	cmpgei	r4,r3,32
 402ee2c:	203f4b26 	beq	r4,zero,402eb5c <__adddf3+0xe8>
 402ee30:	123ffe04 	addi	r8,r2,-8
 402ee34:	8a10983a 	sll	r8,r17,r8
 402ee38:	0023883a 	mov	r17,zero
 402ee3c:	1cbf4e0e 	bge	r3,r18,402eb78 <__adddf3+0x104>
 402ee40:	00bfe034 	movhi	r2,65408
 402ee44:	10bfffc4 	addi	r2,r2,-1
 402ee48:	90e5c83a 	sub	r18,r18,r3
 402ee4c:	4090703a 	and	r8,r8,r2
 402ee50:	003f5706 	br	402ebb0 <__adddf3+0x13c>
 402ee54:	18002226 	beq	r3,zero,402eee0 <__adddf3+0x46c>
 402ee58:	1487c83a 	sub	r3,r2,r18
 402ee5c:	90006e26 	beq	r18,zero,402f018 <__adddf3+0x5a4>
 402ee60:	1101ffd8 	cmpnei	r4,r2,2047
 402ee64:	2000e926 	beq	r4,zero,402f20c <__adddf3+0x798>
 402ee68:	52802034 	orhi	r10,r10,128
 402ee6c:	19000e48 	cmpgei	r4,r3,57
 402ee70:	2000b91e 	bne	r4,zero,402f158 <__adddf3+0x6e4>
 402ee74:	19000808 	cmpgei	r4,r3,32
 402ee78:	2001101e 	bne	r4,zero,402f2bc <__adddf3+0x848>
 402ee7c:	01000804 	movi	r4,32
 402ee80:	20c9c83a 	sub	r4,r4,r3
 402ee84:	5122983a 	sll	r17,r10,r4
 402ee88:	70cad83a 	srl	r5,r14,r3
 402ee8c:	7108983a 	sll	r4,r14,r4
 402ee90:	50d4d83a 	srl	r10,r10,r3
 402ee94:	8962b03a 	or	r17,r17,r5
 402ee98:	2008c03a 	cmpne	r4,r4,zero
 402ee9c:	8922b03a 	or	r17,r17,r4
 402eea0:	4a93883a 	add	r9,r9,r10
 402eea4:	8b63883a 	add	r17,r17,r13
 402eea8:	8b51803a 	cmpltu	r8,r17,r13
 402eeac:	4251883a 	add	r8,r8,r9
 402eeb0:	1025883a 	mov	r18,r2
 402eeb4:	003fc206 	br	402edc0 <__adddf3+0x34c>
 402eeb8:	4b62b03a 	or	r17,r9,r13
 402eebc:	8822c03a 	cmpne	r17,r17,zero
 402eec0:	003f1a06 	br	402eb2c <__adddf3+0xb8>
 402eec4:	500c977a 	slli	r6,r10,29
 402eec8:	01480034 	movhi	r5,8192
 402eecc:	297fffc4 	addi	r5,r5,-1
 402eed0:	2144703a 	and	r2,r4,r5
 402eed4:	5014d0fa 	srli	r10,r10,3
 402eed8:	1184b03a 	or	r2,r2,r6
 402eedc:	003fac06 	br	402ed90 <__adddf3+0x31c>
 402eee0:	90800044 	addi	r2,r18,1
 402eee4:	1141ff8c 	andi	r5,r2,2046
 402eee8:	28005e1e 	bne	r5,zero,402f064 <__adddf3+0x5f0>
 402eeec:	5384b03a 	or	r2,r10,r14
 402eef0:	9000a71e 	bne	r18,zero,402f190 <__adddf3+0x71c>
 402eef4:	1000e526 	beq	r2,zero,402f28c <__adddf3+0x818>
 402eef8:	4b44b03a 	or	r2,r9,r13
 402eefc:	10008f26 	beq	r2,zero,402f13c <__adddf3+0x6c8>
 402ef00:	7363883a 	add	r17,r14,r13
 402ef04:	5255883a 	add	r10,r10,r9
 402ef08:	8b91803a 	cmpltu	r8,r17,r14
 402ef0c:	5211883a 	add	r8,r10,r8
 402ef10:	4080202c 	andhi	r2,r8,128
 402ef14:	103f9726 	beq	r2,zero,402ed74 <__adddf3+0x300>
 402ef18:	00bfe034 	movhi	r2,65408
 402ef1c:	10bfffc4 	addi	r2,r2,-1
 402ef20:	4090703a 	and	r8,r8,r2
 402ef24:	04800044 	movi	r18,1
 402ef28:	003f9206 	br	402ed74 <__adddf3+0x300>
 402ef2c:	1101ffd8 	cmpnei	r4,r2,2047
 402ef30:	20007a26 	beq	r4,zero,402f11c <__adddf3+0x6a8>
 402ef34:	52802034 	orhi	r10,r10,128
 402ef38:	19000e48 	cmpgei	r4,r3,57
 402ef3c:	20002e1e 	bne	r4,zero,402eff8 <__adddf3+0x584>
 402ef40:	19000808 	cmpgei	r4,r3,32
 402ef44:	2000871e 	bne	r4,zero,402f164 <__adddf3+0x6f0>
 402ef48:	01000804 	movi	r4,32
 402ef4c:	20c9c83a 	sub	r4,r4,r3
 402ef50:	5122983a 	sll	r17,r10,r4
 402ef54:	70cad83a 	srl	r5,r14,r3
 402ef58:	711c983a 	sll	r14,r14,r4
 402ef5c:	50d4d83a 	srl	r10,r10,r3
 402ef60:	8962b03a 	or	r17,r17,r5
 402ef64:	701cc03a 	cmpne	r14,r14,zero
 402ef68:	8ba2b03a 	or	r17,r17,r14
 402ef6c:	4a93c83a 	sub	r9,r9,r10
 402ef70:	00002306 	br	402f000 <__adddf3+0x58c>
 402ef74:	7363c83a 	sub	r17,r14,r13
 402ef78:	5267c83a 	sub	r19,r10,r9
 402ef7c:	7451803a 	cmpltu	r8,r14,r17
 402ef80:	9a27c83a 	sub	r19,r19,r8
 402ef84:	9880202c 	andhi	r2,r19,128
 402ef88:	1000421e 	bne	r2,zero,402f094 <__adddf3+0x620>
 402ef8c:	8cc4b03a 	or	r2,r17,r19
 402ef90:	103eee1e 	bne	r2,zero,402eb4c <__adddf3+0xd8>
 402ef94:	0015883a 	mov	r10,zero
 402ef98:	0021883a 	mov	r16,zero
 402ef9c:	003f7e06 	br	402ed98 <__adddf3+0x324>
 402efa0:	04800084 	movi	r18,2
 402efa4:	00bfe034 	movhi	r2,65408
 402efa8:	10bfffc4 	addi	r2,r2,-1
 402efac:	8806d07a 	srli	r3,r17,1
 402efb0:	4090703a 	and	r8,r8,r2
 402efb4:	400497fa 	slli	r2,r8,31
 402efb8:	8c40004c 	andi	r17,r17,1
 402efbc:	1c62b03a 	or	r17,r3,r17
 402efc0:	4010d07a 	srli	r8,r8,1
 402efc4:	1462b03a 	or	r17,r2,r17
 402efc8:	003ef906 	br	402ebb0 <__adddf3+0x13c>
 402efcc:	1c7ff804 	addi	r17,r3,-32
 402efd0:	19000820 	cmpeqi	r4,r3,32
 402efd4:	4c44d83a 	srl	r2,r9,r17
 402efd8:	2000041e 	bne	r4,zero,402efec <__adddf3+0x578>
 402efdc:	01001004 	movi	r4,64
 402efe0:	20c7c83a 	sub	r3,r4,r3
 402efe4:	48d2983a 	sll	r9,r9,r3
 402efe8:	6a5ab03a 	or	r13,r13,r9
 402efec:	6822c03a 	cmpne	r17,r13,zero
 402eff0:	88a2b03a 	or	r17,r17,r2
 402eff4:	003ecd06 	br	402eb2c <__adddf3+0xb8>
 402eff8:	5394b03a 	or	r10,r10,r14
 402effc:	5022c03a 	cmpne	r17,r10,zero
 402f000:	6c63c83a 	sub	r17,r13,r17
 402f004:	6c51803a 	cmpltu	r8,r13,r17
 402f008:	4a11c83a 	sub	r8,r9,r8
 402f00c:	3821883a 	mov	r16,r7
 402f010:	1025883a 	mov	r18,r2
 402f014:	003ec806 	br	402eb38 <__adddf3+0xc4>
 402f018:	5388b03a 	or	r4,r10,r14
 402f01c:	20008226 	beq	r4,zero,402f228 <__adddf3+0x7b4>
 402f020:	193fffc4 	addi	r4,r3,-1
 402f024:	2000b026 	beq	r4,zero,402f2e8 <__adddf3+0x874>
 402f028:	18c1ffd8 	cmpnei	r3,r3,2047
 402f02c:	18007726 	beq	r3,zero,402f20c <__adddf3+0x798>
 402f030:	2007883a 	mov	r3,r4
 402f034:	003f8d06 	br	402ee6c <__adddf3+0x3f8>
 402f038:	00800804 	movi	r2,32
 402f03c:	10c5c83a 	sub	r2,r2,r3
 402f040:	68c8d83a 	srl	r4,r13,r3
 402f044:	48a2983a 	sll	r17,r9,r2
 402f048:	689a983a 	sll	r13,r13,r2
 402f04c:	48c6d83a 	srl	r3,r9,r3
 402f050:	8922b03a 	or	r17,r17,r4
 402f054:	681ac03a 	cmpne	r13,r13,zero
 402f058:	8b62b03a 	or	r17,r17,r13
 402f05c:	50d5883a 	add	r10,r10,r3
 402f060:	003f5406 	br	402edb4 <__adddf3+0x340>
 402f064:	10c1ffe0 	cmpeqi	r3,r2,2047
 402f068:	183f5a1e 	bne	r3,zero,402edd4 <__adddf3+0x360>
 402f06c:	7351883a 	add	r8,r14,r13
 402f070:	4387803a 	cmpltu	r3,r8,r14
 402f074:	5255883a 	add	r10,r10,r9
 402f078:	50c7883a 	add	r3,r10,r3
 402f07c:	401ad07a 	srli	r13,r8,1
 402f080:	182297fa 	slli	r17,r3,31
 402f084:	1810d07a 	srli	r8,r3,1
 402f088:	1025883a 	mov	r18,r2
 402f08c:	8b62b03a 	or	r17,r17,r13
 402f090:	003f3806 	br	402ed74 <__adddf3+0x300>
 402f094:	6ba3c83a 	sub	r17,r13,r14
 402f098:	4a93c83a 	sub	r9,r9,r10
 402f09c:	6c51803a 	cmpltu	r8,r13,r17
 402f0a0:	4a27c83a 	sub	r19,r9,r8
 402f0a4:	3821883a 	mov	r16,r7
 402f0a8:	003ea806 	br	402eb4c <__adddf3+0xd8>
 402f0ac:	480a977a 	slli	r5,r9,29
 402f0b0:	01080034 	movhi	r4,8192
 402f0b4:	213fffc4 	addi	r4,r4,-1
 402f0b8:	3104703a 	and	r2,r6,r4
 402f0bc:	4814d0fa 	srli	r10,r9,3
 402f0c0:	1144b03a 	or	r2,r2,r5
 402f0c4:	3821883a 	mov	r16,r7
 402f0c8:	003f3106 	br	402ed90 <__adddf3+0x31c>
 402f0cc:	28005d1e 	bne	r5,zero,402f244 <__adddf3+0x7d0>
 402f0d0:	1000121e 	bne	r2,zero,402f11c <__adddf3+0x6a8>
 402f0d4:	0021883a 	mov	r16,zero
 402f0d8:	4015883a 	mov	r10,r8
 402f0dc:	00bfffc4 	movi	r2,-1
 402f0e0:	003f4806 	br	402ee04 <__adddf3+0x390>
 402f0e4:	7363883a 	add	r17,r14,r13
 402f0e8:	5255883a 	add	r10,r10,r9
 402f0ec:	8b91803a 	cmpltu	r8,r17,r14
 402f0f0:	5211883a 	add	r8,r10,r8
 402f0f4:	4080202c 	andhi	r2,r8,128
 402f0f8:	103fa91e 	bne	r2,zero,402efa0 <__adddf3+0x52c>
 402f0fc:	04800044 	movi	r18,1
 402f100:	003f1c06 	br	402ed74 <__adddf3+0x300>
 402f104:	7363c83a 	sub	r17,r14,r13
 402f108:	5255c83a 	sub	r10,r10,r9
 402f10c:	7451803a 	cmpltu	r8,r14,r17
 402f110:	5211c83a 	sub	r8,r10,r8
 402f114:	04800044 	movi	r18,1
 402f118:	003e8706 	br	402eb38 <__adddf3+0xc4>
 402f11c:	4806977a 	slli	r3,r9,29
 402f120:	00880034 	movhi	r2,8192
 402f124:	10bfffc4 	addi	r2,r2,-1
 402f128:	3084703a 	and	r2,r6,r2
 402f12c:	4814d0fa 	srli	r10,r9,3
 402f130:	10c4b03a 	or	r2,r2,r3
 402f134:	3821883a 	mov	r16,r7
 402f138:	003f3006 	br	402edfc <__adddf3+0x388>
 402f13c:	500a977a 	slli	r5,r10,29
 402f140:	00880034 	movhi	r2,8192
 402f144:	10bfffc4 	addi	r2,r2,-1
 402f148:	2084703a 	and	r2,r4,r2
 402f14c:	5014d0fa 	srli	r10,r10,3
 402f150:	1144b03a 	or	r2,r2,r5
 402f154:	003f1006 	br	402ed98 <__adddf3+0x324>
 402f158:	5394b03a 	or	r10,r10,r14
 402f15c:	5022c03a 	cmpne	r17,r10,zero
 402f160:	003f5006 	br	402eea4 <__adddf3+0x430>
 402f164:	1c7ff804 	addi	r17,r3,-32
 402f168:	19400820 	cmpeqi	r5,r3,32
 402f16c:	5448d83a 	srl	r4,r10,r17
 402f170:	2800041e 	bne	r5,zero,402f184 <__adddf3+0x710>
 402f174:	01401004 	movi	r5,64
 402f178:	28c7c83a 	sub	r3,r5,r3
 402f17c:	50d4983a 	sll	r10,r10,r3
 402f180:	729cb03a 	or	r14,r14,r10
 402f184:	7022c03a 	cmpne	r17,r14,zero
 402f188:	8922b03a 	or	r17,r17,r4
 402f18c:	003f9c06 	br	402f000 <__adddf3+0x58c>
 402f190:	10005a1e 	bne	r2,zero,402f2fc <__adddf3+0x888>
 402f194:	4804977a 	slli	r2,r9,29
 402f198:	00c80034 	movhi	r3,8192
 402f19c:	18ffffc4 	addi	r3,r3,-1
 402f1a0:	30cc703a 	and	r6,r6,r3
 402f1a4:	4814d0fa 	srli	r10,r9,3
 402f1a8:	1184b03a 	or	r2,r2,r6
 402f1ac:	003f1306 	br	402edfc <__adddf3+0x388>
 402f1b0:	6ba3c83a 	sub	r17,r13,r14
 402f1b4:	4a95c83a 	sub	r10,r9,r10
 402f1b8:	6c51803a 	cmpltu	r8,r13,r17
 402f1bc:	5211c83a 	sub	r8,r10,r8
 402f1c0:	3821883a 	mov	r16,r7
 402f1c4:	04800044 	movi	r18,1
 402f1c8:	003e5b06 	br	402eb38 <__adddf3+0xc4>
 402f1cc:	103f7126 	beq	r2,zero,402ef94 <__adddf3+0x520>
 402f1d0:	4808977a 	slli	r4,r9,29
 402f1d4:	00880034 	movhi	r2,8192
 402f1d8:	10bfffc4 	addi	r2,r2,-1
 402f1dc:	3084703a 	and	r2,r6,r2
 402f1e0:	4814d0fa 	srli	r10,r9,3
 402f1e4:	1104b03a 	or	r2,r2,r4
 402f1e8:	3821883a 	mov	r16,r7
 402f1ec:	003eea06 	br	402ed98 <__adddf3+0x324>
 402f1f0:	5006977a 	slli	r3,r10,29
 402f1f4:	00880034 	movhi	r2,8192
 402f1f8:	10bfffc4 	addi	r2,r2,-1
 402f1fc:	2084703a 	and	r2,r4,r2
 402f200:	5014d0fa 	srli	r10,r10,3
 402f204:	10c4b03a 	or	r2,r2,r3
 402f208:	003efc06 	br	402edfc <__adddf3+0x388>
 402f20c:	4806977a 	slli	r3,r9,29
 402f210:	00880034 	movhi	r2,8192
 402f214:	10bfffc4 	addi	r2,r2,-1
 402f218:	3084703a 	and	r2,r6,r2
 402f21c:	4814d0fa 	srli	r10,r9,3
 402f220:	10c4b03a 	or	r2,r2,r3
 402f224:	003ef506 	br	402edfc <__adddf3+0x388>
 402f228:	4808977a 	slli	r4,r9,29
 402f22c:	00880034 	movhi	r2,8192
 402f230:	10bfffc4 	addi	r2,r2,-1
 402f234:	3084703a 	and	r2,r6,r2
 402f238:	4814d0fa 	srli	r10,r9,3
 402f23c:	1104b03a 	or	r2,r2,r4
 402f240:	003ed306 	br	402ed90 <__adddf3+0x31c>
 402f244:	500a977a 	slli	r5,r10,29
 402f248:	5014d0fa 	srli	r10,r10,3
 402f24c:	10001626 	beq	r2,zero,402f2a8 <__adddf3+0x834>
 402f250:	00c80034 	movhi	r3,8192
 402f254:	18ffffc4 	addi	r3,r3,-1
 402f258:	20c4703a 	and	r2,r4,r3
 402f25c:	5100022c 	andhi	r4,r10,8
 402f260:	1144b03a 	or	r2,r2,r5
 402f264:	203ee526 	beq	r4,zero,402edfc <__adddf3+0x388>
 402f268:	4808d0fa 	srli	r4,r9,3
 402f26c:	2140022c 	andhi	r5,r4,8
 402f270:	283ee21e 	bne	r5,zero,402edfc <__adddf3+0x388>
 402f274:	4812977a 	slli	r9,r9,29
 402f278:	30c4703a 	and	r2,r6,r3
 402f27c:	3821883a 	mov	r16,r7
 402f280:	1244b03a 	or	r2,r2,r9
 402f284:	2015883a 	mov	r10,r4
 402f288:	003edc06 	br	402edfc <__adddf3+0x388>
 402f28c:	4804977a 	slli	r2,r9,29
 402f290:	01080034 	movhi	r4,8192
 402f294:	213fffc4 	addi	r4,r4,-1
 402f298:	310c703a 	and	r6,r6,r4
 402f29c:	4814d0fa 	srli	r10,r9,3
 402f2a0:	1184b03a 	or	r2,r2,r6
 402f2a4:	003ebc06 	br	402ed98 <__adddf3+0x324>
 402f2a8:	00880034 	movhi	r2,8192
 402f2ac:	10bfffc4 	addi	r2,r2,-1
 402f2b0:	2084703a 	and	r2,r4,r2
 402f2b4:	1144b03a 	or	r2,r2,r5
 402f2b8:	003ed006 	br	402edfc <__adddf3+0x388>
 402f2bc:	193ff804 	addi	r4,r3,-32
 402f2c0:	19400820 	cmpeqi	r5,r3,32
 402f2c4:	5108d83a 	srl	r4,r10,r4
 402f2c8:	2800041e 	bne	r5,zero,402f2dc <__adddf3+0x868>
 402f2cc:	01401004 	movi	r5,64
 402f2d0:	28c7c83a 	sub	r3,r5,r3
 402f2d4:	50d4983a 	sll	r10,r10,r3
 402f2d8:	729cb03a 	or	r14,r14,r10
 402f2dc:	7022c03a 	cmpne	r17,r14,zero
 402f2e0:	8922b03a 	or	r17,r17,r4
 402f2e4:	003eef06 	br	402eea4 <__adddf3+0x430>
 402f2e8:	7363883a 	add	r17,r14,r13
 402f2ec:	5255883a 	add	r10,r10,r9
 402f2f0:	8b51803a 	cmpltu	r8,r17,r13
 402f2f4:	5211883a 	add	r8,r10,r8
 402f2f8:	003f7e06 	br	402f0f4 <__adddf3+0x680>
 402f2fc:	4b50b03a 	or	r8,r9,r13
 402f300:	500a977a 	slli	r5,r10,29
 402f304:	5014d0fa 	srli	r10,r10,3
 402f308:	403fe726 	beq	r8,zero,402f2a8 <__adddf3+0x834>
 402f30c:	00c80034 	movhi	r3,8192
 402f310:	18ffffc4 	addi	r3,r3,-1
 402f314:	20c4703a 	and	r2,r4,r3
 402f318:	5100022c 	andhi	r4,r10,8
 402f31c:	1144b03a 	or	r2,r2,r5
 402f320:	203eb626 	beq	r4,zero,402edfc <__adddf3+0x388>
 402f324:	4808d0fa 	srli	r4,r9,3
 402f328:	2140022c 	andhi	r5,r4,8
 402f32c:	283eb31e 	bne	r5,zero,402edfc <__adddf3+0x388>
 402f330:	4804977a 	slli	r2,r9,29
 402f334:	30cc703a 	and	r6,r6,r3
 402f338:	3821883a 	mov	r16,r7
 402f33c:	3084b03a 	or	r2,r6,r2
 402f340:	2015883a 	mov	r10,r4
 402f344:	003ead06 	br	402edfc <__adddf3+0x388>
 402f348:	8a04b03a 	or	r2,r17,r8
 402f34c:	103f1126 	beq	r2,zero,402ef94 <__adddf3+0x520>
 402f350:	003e8806 	br	402ed74 <__adddf3+0x300>
 402f354:	0005883a 	mov	r2,zero
 402f358:	00c1ffc4 	movi	r3,2047
 402f35c:	0011883a 	mov	r8,zero
 402f360:	003e2a06 	br	402ec0c <__adddf3+0x198>

0402f364 <__divdf3>:
 402f364:	2804d53a 	srli	r2,r5,20
 402f368:	defff204 	addi	sp,sp,-56
 402f36c:	dc000415 	stw	r16,16(sp)
 402f370:	04000434 	movhi	r16,16
 402f374:	ddc00b15 	stw	r23,44(sp)
 402f378:	dd800a15 	stw	r22,40(sp)
 402f37c:	dc800615 	stw	r18,24(sp)
 402f380:	843fffc4 	addi	r16,r16,-1
 402f384:	dfc00d15 	stw	ra,52(sp)
 402f388:	df000c15 	stw	fp,48(sp)
 402f38c:	dd400915 	stw	r21,36(sp)
 402f390:	dd000815 	stw	r20,32(sp)
 402f394:	dcc00715 	stw	r19,28(sp)
 402f398:	dc400515 	stw	r17,20(sp)
 402f39c:	1081ffcc 	andi	r2,r2,2047
 402f3a0:	282cd7fa 	srli	r22,r5,31
 402f3a4:	302f883a 	mov	r23,r6
 402f3a8:	2025883a 	mov	r18,r4
 402f3ac:	2c20703a 	and	r16,r5,r16
 402f3b0:	10006a26 	beq	r2,zero,402f55c <__divdf3+0x1f8>
 402f3b4:	10c1ffe0 	cmpeqi	r3,r2,2047
 402f3b8:	18007d1e 	bne	r3,zero,402f5b0 <__divdf3+0x24c>
 402f3bc:	2028d77a 	srli	r20,r4,29
 402f3c0:	800a90fa 	slli	r5,r16,3
 402f3c4:	202490fa 	slli	r18,r4,3
 402f3c8:	14ff0044 	addi	r19,r2,-1023
 402f3cc:	a14ab03a 	or	r5,r20,r5
 402f3d0:	2d002034 	orhi	r20,r5,128
 402f3d4:	0021883a 	mov	r16,zero
 402f3d8:	0039883a 	mov	fp,zero
 402f3dc:	3804d53a 	srli	r2,r7,20
 402f3e0:	00c00434 	movhi	r3,16
 402f3e4:	18ffffc4 	addi	r3,r3,-1
 402f3e8:	1081ffcc 	andi	r2,r2,2047
 402f3ec:	3810d7fa 	srli	r8,r7,31
 402f3f0:	38e2703a 	and	r17,r7,r3
 402f3f4:	10004626 	beq	r2,zero,402f510 <__divdf3+0x1ac>
 402f3f8:	10c1ffe0 	cmpeqi	r3,r2,2047
 402f3fc:	1800731e 	bne	r3,zero,402f5cc <__divdf3+0x268>
 402f400:	880690fa 	slli	r3,r17,3
 402f404:	b822d77a 	srli	r17,r23,29
 402f408:	b81290fa 	slli	r9,r23,3
 402f40c:	10bf0044 	addi	r2,r2,-1023
 402f410:	88c6b03a 	or	r3,r17,r3
 402f414:	1c402034 	orhi	r17,r3,128
 402f418:	98a7c83a 	sub	r19,r19,r2
 402f41c:	0007883a 	mov	r3,zero
 402f420:	80800428 	cmpgeui	r2,r16,16
 402f424:	b22af03a 	xor	r21,r22,r8
 402f428:	1000ab1e 	bne	r2,zero,402f6d8 <__divdf3+0x374>
 402f42c:	800490ba 	slli	r2,r16,2
 402f430:	018100f4 	movhi	r6,1027
 402f434:	118d883a 	add	r6,r2,r6
 402f438:	30bd1017 	ldw	r2,-3008(r6)
 402f43c:	1000683a 	jmp	r2
 402f440:	0402f6d8 	cmpnei	r16,zero,3035
 402f444:	0402f4ec 	andhi	r16,zero,3027
 402f448:	0402f49c 	xori	r16,zero,3026
 402f44c:	0402f4fc 	xorhi	r16,zero,3027
 402f450:	0402f49c 	xori	r16,zero,3026
 402f454:	0402f67c 	xorhi	r16,zero,3033
 402f458:	0402f49c 	xori	r16,zero,3026
 402f45c:	0402f4fc 	xorhi	r16,zero,3027
 402f460:	0402f4ec 	andhi	r16,zero,3027
 402f464:	0402f4ec 	andhi	r16,zero,3027
 402f468:	0402f67c 	xorhi	r16,zero,3033
 402f46c:	0402f4fc 	xorhi	r16,zero,3027
 402f470:	0402f480 	call	402f48 <_gp+0x3f8a18>
 402f474:	0402f480 	call	402f48 <_gp+0x3f8a18>
 402f478:	0402f480 	call	402f48 <_gp+0x3f8a18>
 402f47c:	0402f694 	movui	r16,3034
 402f480:	b02b883a 	mov	r21,r22
 402f484:	e08000a0 	cmpeqi	r2,fp,2
 402f488:	1000181e 	bne	r2,zero,402f4ec <__divdf3+0x188>
 402f48c:	e08000e0 	cmpeqi	r2,fp,3
 402f490:	1001c21e 	bne	r2,zero,402fb9c <__divdf3+0x838>
 402f494:	e0800060 	cmpeqi	r2,fp,1
 402f498:	10006526 	beq	r2,zero,402f630 <__divdf3+0x2cc>
 402f49c:	0007883a 	mov	r3,zero
 402f4a0:	000b883a 	mov	r5,zero
 402f4a4:	0025883a 	mov	r18,zero
 402f4a8:	1806953a 	slli	r3,r3,20
 402f4ac:	a82a97fa 	slli	r21,r21,31
 402f4b0:	9005883a 	mov	r2,r18
 402f4b4:	1946b03a 	or	r3,r3,r5
 402f4b8:	1d46b03a 	or	r3,r3,r21
 402f4bc:	dfc00d17 	ldw	ra,52(sp)
 402f4c0:	df000c17 	ldw	fp,48(sp)
 402f4c4:	ddc00b17 	ldw	r23,44(sp)
 402f4c8:	dd800a17 	ldw	r22,40(sp)
 402f4cc:	dd400917 	ldw	r21,36(sp)
 402f4d0:	dd000817 	ldw	r20,32(sp)
 402f4d4:	dcc00717 	ldw	r19,28(sp)
 402f4d8:	dc800617 	ldw	r18,24(sp)
 402f4dc:	dc400517 	ldw	r17,20(sp)
 402f4e0:	dc000417 	ldw	r16,16(sp)
 402f4e4:	dec00e04 	addi	sp,sp,56
 402f4e8:	f800283a 	ret
 402f4ec:	00c1ffc4 	movi	r3,2047
 402f4f0:	000b883a 	mov	r5,zero
 402f4f4:	0025883a 	mov	r18,zero
 402f4f8:	003feb06 	br	402f4a8 <__divdf3+0x144>
 402f4fc:	402b883a 	mov	r21,r8
 402f500:	8829883a 	mov	r20,r17
 402f504:	4825883a 	mov	r18,r9
 402f508:	1839883a 	mov	fp,r3
 402f50c:	003fdd06 	br	402f484 <__divdf3+0x120>
 402f510:	8dd2b03a 	or	r9,r17,r23
 402f514:	48004226 	beq	r9,zero,402f620 <__divdf3+0x2bc>
 402f518:	da000015 	stw	r8,0(sp)
 402f51c:	88013d26 	beq	r17,zero,402fa14 <__divdf3+0x6b0>
 402f520:	8809883a 	mov	r4,r17
 402f524:	402340c0 	call	402340c <__clzsi2>
 402f528:	da000017 	ldw	r8,0(sp)
 402f52c:	117ffd44 	addi	r5,r2,-11
 402f530:	01000744 	movi	r4,29
 402f534:	127ffe04 	addi	r9,r2,-8
 402f538:	2149c83a 	sub	r4,r4,r5
 402f53c:	8a46983a 	sll	r3,r17,r9
 402f540:	b908d83a 	srl	r4,r23,r4
 402f544:	ba52983a 	sll	r9,r23,r9
 402f548:	20e2b03a 	or	r17,r4,r3
 402f54c:	14c5883a 	add	r2,r2,r19
 402f550:	14c0fcc4 	addi	r19,r2,1011
 402f554:	0007883a 	mov	r3,zero
 402f558:	003fb106 	br	402f420 <__divdf3+0xbc>
 402f55c:	8128b03a 	or	r20,r16,r4
 402f560:	2023883a 	mov	r17,r4
 402f564:	a0002926 	beq	r20,zero,402f60c <__divdf3+0x2a8>
 402f568:	d9c00015 	stw	r7,0(sp)
 402f56c:	80013526 	beq	r16,zero,402fa44 <__divdf3+0x6e0>
 402f570:	8009883a 	mov	r4,r16
 402f574:	402340c0 	call	402340c <__clzsi2>
 402f578:	d9c00017 	ldw	r7,0(sp)
 402f57c:	10fffd44 	addi	r3,r2,-11
 402f580:	05000744 	movi	r20,29
 402f584:	113ffe04 	addi	r4,r2,-8
 402f588:	a0e9c83a 	sub	r20,r20,r3
 402f58c:	810a983a 	sll	r5,r16,r4
 402f590:	8d28d83a 	srl	r20,r17,r20
 402f594:	8924983a 	sll	r18,r17,r4
 402f598:	a168b03a 	or	r20,r20,r5
 402f59c:	04ff0344 	movi	r19,-1011
 402f5a0:	98a7c83a 	sub	r19,r19,r2
 402f5a4:	0021883a 	mov	r16,zero
 402f5a8:	0039883a 	mov	fp,zero
 402f5ac:	003f8b06 	br	402f3dc <__divdf3+0x78>
 402f5b0:	8128b03a 	or	r20,r16,r4
 402f5b4:	a000101e 	bne	r20,zero,402f5f8 <__divdf3+0x294>
 402f5b8:	0025883a 	mov	r18,zero
 402f5bc:	04000204 	movi	r16,8
 402f5c0:	04c1ffc4 	movi	r19,2047
 402f5c4:	07000084 	movi	fp,2
 402f5c8:	003f8406 	br	402f3dc <__divdf3+0x78>
 402f5cc:	8dd2b03a 	or	r9,r17,r23
 402f5d0:	9cfe0044 	addi	r19,r19,-2047
 402f5d4:	4800041e 	bne	r9,zero,402f5e8 <__divdf3+0x284>
 402f5d8:	84000094 	ori	r16,r16,2
 402f5dc:	0023883a 	mov	r17,zero
 402f5e0:	00c00084 	movi	r3,2
 402f5e4:	003f8e06 	br	402f420 <__divdf3+0xbc>
 402f5e8:	840000d4 	ori	r16,r16,3
 402f5ec:	b813883a 	mov	r9,r23
 402f5f0:	00c000c4 	movi	r3,3
 402f5f4:	003f8a06 	br	402f420 <__divdf3+0xbc>
 402f5f8:	8029883a 	mov	r20,r16
 402f5fc:	04c1ffc4 	movi	r19,2047
 402f600:	04000304 	movi	r16,12
 402f604:	070000c4 	movi	fp,3
 402f608:	003f7406 	br	402f3dc <__divdf3+0x78>
 402f60c:	0025883a 	mov	r18,zero
 402f610:	04000104 	movi	r16,4
 402f614:	0027883a 	mov	r19,zero
 402f618:	07000044 	movi	fp,1
 402f61c:	003f6f06 	br	402f3dc <__divdf3+0x78>
 402f620:	84000054 	ori	r16,r16,1
 402f624:	0023883a 	mov	r17,zero
 402f628:	00c00044 	movi	r3,1
 402f62c:	003f7c06 	br	402f420 <__divdf3+0xbc>
 402f630:	9c40ffc4 	addi	r17,r19,1023
 402f634:	0440c70e 	bge	zero,r17,402f954 <__divdf3+0x5f0>
 402f638:	908001cc 	andi	r2,r18,7
 402f63c:	1001331e 	bne	r2,zero,402fb0c <__divdf3+0x7a8>
 402f640:	900cd0fa 	srli	r6,r18,3
 402f644:	a080402c 	andhi	r2,r20,256
 402f648:	10000426 	beq	r2,zero,402f65c <__divdf3+0x2f8>
 402f64c:	00bfc034 	movhi	r2,65280
 402f650:	10bfffc4 	addi	r2,r2,-1
 402f654:	a0a8703a 	and	r20,r20,r2
 402f658:	9c410004 	addi	r17,r19,1024
 402f65c:	8881ffc8 	cmpgei	r2,r17,2047
 402f660:	103fa21e 	bne	r2,zero,402f4ec <__divdf3+0x188>
 402f664:	a008977a 	slli	r4,r20,29
 402f668:	a00a927a 	slli	r5,r20,9
 402f66c:	88c1ffcc 	andi	r3,r17,2047
 402f670:	21a4b03a 	or	r18,r4,r6
 402f674:	280ad33a 	srli	r5,r5,12
 402f678:	003f8b06 	br	402f4a8 <__divdf3+0x144>
 402f67c:	01400434 	movhi	r5,16
 402f680:	002b883a 	mov	r21,zero
 402f684:	297fffc4 	addi	r5,r5,-1
 402f688:	04bfffc4 	movi	r18,-1
 402f68c:	00c1ffc4 	movi	r3,2047
 402f690:	003f8506 	br	402f4a8 <__divdf3+0x144>
 402f694:	a080022c 	andhi	r2,r20,8
 402f698:	10000926 	beq	r2,zero,402f6c0 <__divdf3+0x35c>
 402f69c:	8880022c 	andhi	r2,r17,8
 402f6a0:	1000071e 	bne	r2,zero,402f6c0 <__divdf3+0x35c>
 402f6a4:	00800434 	movhi	r2,16
 402f6a8:	89400234 	orhi	r5,r17,8
 402f6ac:	10bfffc4 	addi	r2,r2,-1
 402f6b0:	288a703a 	and	r5,r5,r2
 402f6b4:	402b883a 	mov	r21,r8
 402f6b8:	4825883a 	mov	r18,r9
 402f6bc:	003ff306 	br	402f68c <__divdf3+0x328>
 402f6c0:	00800434 	movhi	r2,16
 402f6c4:	a1400234 	orhi	r5,r20,8
 402f6c8:	10bfffc4 	addi	r2,r2,-1
 402f6cc:	288a703a 	and	r5,r5,r2
 402f6d0:	b02b883a 	mov	r21,r22
 402f6d4:	003fed06 	br	402f68c <__divdf3+0x328>
 402f6d8:	8d00c836 	bltu	r17,r20,402f9fc <__divdf3+0x698>
 402f6dc:	8d00c626 	beq	r17,r20,402f9f8 <__divdf3+0x694>
 402f6e0:	9cffffc4 	addi	r19,r19,-1
 402f6e4:	0021883a 	mov	r16,zero
 402f6e8:	8806923a 	slli	r3,r17,8
 402f6ec:	480cd63a 	srli	r6,r9,24
 402f6f0:	4804923a 	slli	r2,r9,8
 402f6f4:	1838d43a 	srli	fp,r3,16
 402f6f8:	a009883a 	mov	r4,r20
 402f6fc:	30ecb03a 	or	r22,r6,r3
 402f700:	e00b883a 	mov	r5,fp
 402f704:	d8800015 	stw	r2,0(sp)
 402f708:	40225a40 	call	40225a4 <__udivsi3>
 402f70c:	a009883a 	mov	r4,r20
 402f710:	e00b883a 	mov	r5,fp
 402f714:	d8800115 	stw	r2,4(sp)
 402f718:	40226080 	call	4022608 <__umodsi3>
 402f71c:	d8c00117 	ldw	r3,4(sp)
 402f720:	1004943a 	slli	r2,r2,16
 402f724:	9008d43a 	srli	r4,r18,16
 402f728:	b5ffffcc 	andi	r23,r22,65535
 402f72c:	b8e3383a 	mul	r17,r23,r3
 402f730:	2088b03a 	or	r4,r4,r2
 402f734:	2440042e 	bgeu	r4,r17,402f748 <__divdf3+0x3e4>
 402f738:	2589883a 	add	r4,r4,r22
 402f73c:	18bfffc4 	addi	r2,r3,-1
 402f740:	2580d32e 	bgeu	r4,r22,402fa90 <__divdf3+0x72c>
 402f744:	1007883a 	mov	r3,r2
 402f748:	2463c83a 	sub	r17,r4,r17
 402f74c:	e00b883a 	mov	r5,fp
 402f750:	8809883a 	mov	r4,r17
 402f754:	d8c00115 	stw	r3,4(sp)
 402f758:	40225a40 	call	40225a4 <__udivsi3>
 402f75c:	8809883a 	mov	r4,r17
 402f760:	e00b883a 	mov	r5,fp
 402f764:	1029883a 	mov	r20,r2
 402f768:	40226080 	call	4022608 <__umodsi3>
 402f76c:	1008943a 	slli	r4,r2,16
 402f770:	bd13383a 	mul	r9,r23,r20
 402f774:	94bfffcc 	andi	r18,r18,65535
 402f778:	9108b03a 	or	r4,r18,r4
 402f77c:	d8c00117 	ldw	r3,4(sp)
 402f780:	2240042e 	bgeu	r4,r9,402f794 <__divdf3+0x430>
 402f784:	2589883a 	add	r4,r4,r22
 402f788:	a0bfffc4 	addi	r2,r20,-1
 402f78c:	2580bc2e 	bgeu	r4,r22,402fa80 <__divdf3+0x71c>
 402f790:	1029883a 	mov	r20,r2
 402f794:	180a943a 	slli	r5,r3,16
 402f798:	d8800017 	ldw	r2,0(sp)
 402f79c:	2249c83a 	sub	r4,r4,r9
 402f7a0:	2d28b03a 	or	r20,r5,r20
 402f7a4:	100ed43a 	srli	r7,r2,16
 402f7a8:	123fffcc 	andi	r8,r2,65535
 402f7ac:	a00ad43a 	srli	r5,r20,16
 402f7b0:	a0bfffcc 	andi	r2,r20,65535
 402f7b4:	1225383a 	mul	r18,r2,r8
 402f7b8:	2a15383a 	mul	r10,r5,r8
 402f7bc:	3887383a 	mul	r3,r7,r2
 402f7c0:	9004d43a 	srli	r2,r18,16
 402f7c4:	29cb383a 	mul	r5,r5,r7
 402f7c8:	1a87883a 	add	r3,r3,r10
 402f7cc:	10c5883a 	add	r2,r2,r3
 402f7d0:	1280022e 	bgeu	r2,r10,402f7dc <__divdf3+0x478>
 402f7d4:	00c00074 	movhi	r3,1
 402f7d8:	28cb883a 	add	r5,r5,r3
 402f7dc:	1006d43a 	srli	r3,r2,16
 402f7e0:	1004943a 	slli	r2,r2,16
 402f7e4:	94bfffcc 	andi	r18,r18,65535
 402f7e8:	1947883a 	add	r3,r3,r5
 402f7ec:	14a5883a 	add	r18,r2,r18
 402f7f0:	20c07636 	bltu	r4,r3,402f9cc <__divdf3+0x668>
 402f7f4:	20c07426 	beq	r4,r3,402f9c8 <__divdf3+0x664>
 402f7f8:	84a5c83a 	sub	r18,r16,r18
 402f7fc:	20c9c83a 	sub	r4,r4,r3
 402f800:	84a1803a 	cmpltu	r16,r16,r18
 402f804:	2421c83a 	sub	r16,r4,r16
 402f808:	9c40ffc4 	addi	r17,r19,1023
 402f80c:	b400ba26 	beq	r22,r16,402faf8 <__divdf3+0x794>
 402f810:	8009883a 	mov	r4,r16
 402f814:	e00b883a 	mov	r5,fp
 402f818:	da000315 	stw	r8,12(sp)
 402f81c:	d9c00215 	stw	r7,8(sp)
 402f820:	40225a40 	call	40225a4 <__udivsi3>
 402f824:	8009883a 	mov	r4,r16
 402f828:	e00b883a 	mov	r5,fp
 402f82c:	d8800115 	stw	r2,4(sp)
 402f830:	40226080 	call	4022608 <__umodsi3>
 402f834:	da400117 	ldw	r9,4(sp)
 402f838:	1004943a 	slli	r2,r2,16
 402f83c:	9008d43a 	srli	r4,r18,16
 402f840:	ba61383a 	mul	r16,r23,r9
 402f844:	d9c00217 	ldw	r7,8(sp)
 402f848:	2088b03a 	or	r4,r4,r2
 402f84c:	da000317 	ldw	r8,12(sp)
 402f850:	2400062e 	bgeu	r4,r16,402f86c <__divdf3+0x508>
 402f854:	2589883a 	add	r4,r4,r22
 402f858:	48bfffc4 	addi	r2,r9,-1
 402f85c:	2580b536 	bltu	r4,r22,402fb34 <__divdf3+0x7d0>
 402f860:	2400b42e 	bgeu	r4,r16,402fb34 <__divdf3+0x7d0>
 402f864:	4a7fff84 	addi	r9,r9,-2
 402f868:	2589883a 	add	r4,r4,r22
 402f86c:	2421c83a 	sub	r16,r4,r16
 402f870:	8009883a 	mov	r4,r16
 402f874:	e00b883a 	mov	r5,fp
 402f878:	da000315 	stw	r8,12(sp)
 402f87c:	da400215 	stw	r9,8(sp)
 402f880:	d9c00115 	stw	r7,4(sp)
 402f884:	40225a40 	call	40225a4 <__udivsi3>
 402f888:	8009883a 	mov	r4,r16
 402f88c:	e00b883a 	mov	r5,fp
 402f890:	1021883a 	mov	r16,r2
 402f894:	40226080 	call	4022608 <__umodsi3>
 402f898:	1004943a 	slli	r2,r2,16
 402f89c:	bc2f383a 	mul	r23,r23,r16
 402f8a0:	90ffffcc 	andi	r3,r18,65535
 402f8a4:	1886b03a 	or	r3,r3,r2
 402f8a8:	d9c00117 	ldw	r7,4(sp)
 402f8ac:	da400217 	ldw	r9,8(sp)
 402f8b0:	da000317 	ldw	r8,12(sp)
 402f8b4:	1dc0062e 	bgeu	r3,r23,402f8d0 <__divdf3+0x56c>
 402f8b8:	1d87883a 	add	r3,r3,r22
 402f8bc:	80bfffc4 	addi	r2,r16,-1
 402f8c0:	1d809a36 	bltu	r3,r22,402fb2c <__divdf3+0x7c8>
 402f8c4:	1dc0992e 	bgeu	r3,r23,402fb2c <__divdf3+0x7c8>
 402f8c8:	843fff84 	addi	r16,r16,-2
 402f8cc:	1d87883a 	add	r3,r3,r22
 402f8d0:	4808943a 	slli	r4,r9,16
 402f8d4:	1defc83a 	sub	r23,r3,r23
 402f8d8:	2424b03a 	or	r18,r4,r16
 402f8dc:	900ad43a 	srli	r5,r18,16
 402f8e0:	90bfffcc 	andi	r2,r18,65535
 402f8e4:	4087383a 	mul	r3,r8,r2
 402f8e8:	3885383a 	mul	r2,r7,r2
 402f8ec:	2a11383a 	mul	r8,r5,r8
 402f8f0:	1808d43a 	srli	r4,r3,16
 402f8f4:	394f383a 	mul	r7,r7,r5
 402f8f8:	1205883a 	add	r2,r2,r8
 402f8fc:	2089883a 	add	r4,r4,r2
 402f900:	2200022e 	bgeu	r4,r8,402f90c <__divdf3+0x5a8>
 402f904:	00800074 	movhi	r2,1
 402f908:	388f883a 	add	r7,r7,r2
 402f90c:	2004d43a 	srli	r2,r4,16
 402f910:	2008943a 	slli	r4,r4,16
 402f914:	18ffffcc 	andi	r3,r3,65535
 402f918:	11cf883a 	add	r7,r2,r7
 402f91c:	20c9883a 	add	r4,r4,r3
 402f920:	b9c00436 	bltu	r23,r7,402f934 <__divdf3+0x5d0>
 402f924:	b9c00226 	beq	r23,r7,402f930 <__divdf3+0x5cc>
 402f928:	94800054 	ori	r18,r18,1
 402f92c:	003f4106 	br	402f634 <__divdf3+0x2d0>
 402f930:	203f4026 	beq	r4,zero,402f634 <__divdf3+0x2d0>
 402f934:	b5ef883a 	add	r23,r22,r23
 402f938:	90bfffc4 	addi	r2,r18,-1
 402f93c:	bd806936 	bltu	r23,r22,402fae4 <__divdf3+0x780>
 402f940:	b9c08636 	bltu	r23,r7,402fb5c <__divdf3+0x7f8>
 402f944:	b9c09a26 	beq	r23,r7,402fbb0 <__divdf3+0x84c>
 402f948:	1025883a 	mov	r18,r2
 402f94c:	003ff606 	br	402f928 <__divdf3+0x5c4>
 402f950:	04bfffc4 	movi	r18,-1
 402f954:	01400044 	movi	r5,1
 402f958:	2c4bc83a 	sub	r5,r5,r17
 402f95c:	28800e48 	cmpgei	r2,r5,57
 402f960:	103ece1e 	bne	r2,zero,402f49c <__divdf3+0x138>
 402f964:	28800808 	cmpgei	r2,r5,32
 402f968:	10004d1e 	bne	r2,zero,402faa0 <__divdf3+0x73c>
 402f96c:	98810784 	addi	r2,r19,1054
 402f970:	a086983a 	sll	r3,r20,r2
 402f974:	9148d83a 	srl	r4,r18,r5
 402f978:	9084983a 	sll	r2,r18,r2
 402f97c:	a14ad83a 	srl	r5,r20,r5
 402f980:	1924b03a 	or	r18,r3,r4
 402f984:	1004c03a 	cmpne	r2,r2,zero
 402f988:	90a4b03a 	or	r18,r18,r2
 402f98c:	908001cc 	andi	r2,r18,7
 402f990:	10000726 	beq	r2,zero,402f9b0 <__divdf3+0x64c>
 402f994:	908003cc 	andi	r2,r18,15
 402f998:	10800120 	cmpeqi	r2,r2,4
 402f99c:	1000041e 	bne	r2,zero,402f9b0 <__divdf3+0x64c>
 402f9a0:	90800104 	addi	r2,r18,4
 402f9a4:	14a5803a 	cmpltu	r18,r2,r18
 402f9a8:	2c8b883a 	add	r5,r5,r18
 402f9ac:	1025883a 	mov	r18,r2
 402f9b0:	2880202c 	andhi	r2,r5,128
 402f9b4:	10007526 	beq	r2,zero,402fb8c <__divdf3+0x828>
 402f9b8:	00c00044 	movi	r3,1
 402f9bc:	000b883a 	mov	r5,zero
 402f9c0:	0025883a 	mov	r18,zero
 402f9c4:	003eb806 	br	402f4a8 <__divdf3+0x144>
 402f9c8:	84bf8b2e 	bgeu	r16,r18,402f7f8 <__divdf3+0x494>
 402f9cc:	d8800017 	ldw	r2,0(sp)
 402f9d0:	80a1883a 	add	r16,r16,r2
 402f9d4:	8085803a 	cmpltu	r2,r16,r2
 402f9d8:	1585883a 	add	r2,r2,r22
 402f9dc:	2089883a 	add	r4,r4,r2
 402f9e0:	a0bfffc4 	addi	r2,r20,-1
 402f9e4:	b100222e 	bgeu	r22,r4,402fa70 <__divdf3+0x70c>
 402f9e8:	20c05536 	bltu	r4,r3,402fb40 <__divdf3+0x7dc>
 402f9ec:	19005326 	beq	r3,r4,402fb3c <__divdf3+0x7d8>
 402f9f0:	1029883a 	mov	r20,r2
 402f9f4:	003f8006 	br	402f7f8 <__divdf3+0x494>
 402f9f8:	927f3936 	bltu	r18,r9,402f6e0 <__divdf3+0x37c>
 402f9fc:	a00897fa 	slli	r4,r20,31
 402fa00:	9004d07a 	srli	r2,r18,1
 402fa04:	902097fa 	slli	r16,r18,31
 402fa08:	a028d07a 	srli	r20,r20,1
 402fa0c:	20a4b03a 	or	r18,r4,r2
 402fa10:	003f3506 	br	402f6e8 <__divdf3+0x384>
 402fa14:	b809883a 	mov	r4,r23
 402fa18:	402340c0 	call	402340c <__clzsi2>
 402fa1c:	11400544 	addi	r5,r2,21
 402fa20:	29000748 	cmpgei	r4,r5,29
 402fa24:	1007883a 	mov	r3,r2
 402fa28:	da000017 	ldw	r8,0(sp)
 402fa2c:	10800804 	addi	r2,r2,32
 402fa30:	203ebf26 	beq	r4,zero,402f530 <__divdf3+0x1cc>
 402fa34:	18fffe04 	addi	r3,r3,-8
 402fa38:	b8e2983a 	sll	r17,r23,r3
 402fa3c:	0013883a 	mov	r9,zero
 402fa40:	003ec206 	br	402f54c <__divdf3+0x1e8>
 402fa44:	402340c0 	call	402340c <__clzsi2>
 402fa48:	10c00544 	addi	r3,r2,21
 402fa4c:	19000748 	cmpgei	r4,r3,29
 402fa50:	100b883a 	mov	r5,r2
 402fa54:	d9c00017 	ldw	r7,0(sp)
 402fa58:	10800804 	addi	r2,r2,32
 402fa5c:	203ec826 	beq	r4,zero,402f580 <__divdf3+0x21c>
 402fa60:	297ffe04 	addi	r5,r5,-8
 402fa64:	9168983a 	sll	r20,r18,r5
 402fa68:	0025883a 	mov	r18,zero
 402fa6c:	003ecb06 	br	402f59c <__divdf3+0x238>
 402fa70:	b13fdf1e 	bne	r22,r4,402f9f0 <__divdf3+0x68c>
 402fa74:	d9400017 	ldw	r5,0(sp)
 402fa78:	817fdd36 	bltu	r16,r5,402f9f0 <__divdf3+0x68c>
 402fa7c:	003fda06 	br	402f9e8 <__divdf3+0x684>
 402fa80:	227f432e 	bgeu	r4,r9,402f790 <__divdf3+0x42c>
 402fa84:	a53fff84 	addi	r20,r20,-2
 402fa88:	2589883a 	add	r4,r4,r22
 402fa8c:	003f4106 	br	402f794 <__divdf3+0x430>
 402fa90:	247f2c2e 	bgeu	r4,r17,402f744 <__divdf3+0x3e0>
 402fa94:	18ffff84 	addi	r3,r3,-2
 402fa98:	2589883a 	add	r4,r4,r22
 402fa9c:	003f2a06 	br	402f748 <__divdf3+0x3e4>
 402faa0:	00fff844 	movi	r3,-31
 402faa4:	1c47c83a 	sub	r3,r3,r17
 402faa8:	29400820 	cmpeqi	r5,r5,32
 402faac:	a0c6d83a 	srl	r3,r20,r3
 402fab0:	2800031e 	bne	r5,zero,402fac0 <__divdf3+0x75c>
 402fab4:	99410f84 	addi	r5,r19,1086
 402fab8:	a14a983a 	sll	r5,r20,r5
 402fabc:	9164b03a 	or	r18,r18,r5
 402fac0:	9024c03a 	cmpne	r18,r18,zero
 402fac4:	90e4b03a 	or	r18,r18,r3
 402fac8:	910001cc 	andi	r4,r18,7
 402facc:	20002b1e 	bne	r4,zero,402fb7c <__divdf3+0x818>
 402fad0:	000b883a 	mov	r5,zero
 402fad4:	9024d0fa 	srli	r18,r18,3
 402fad8:	0007883a 	mov	r3,zero
 402fadc:	9124b03a 	or	r18,r18,r4
 402fae0:	003e7106 	br	402f4a8 <__divdf3+0x144>
 402fae4:	1025883a 	mov	r18,r2
 402fae8:	b9ff8f1e 	bne	r23,r7,402f928 <__divdf3+0x5c4>
 402faec:	d8800017 	ldw	r2,0(sp)
 402faf0:	20bf8d1e 	bne	r4,r2,402f928 <__divdf3+0x5c4>
 402faf4:	003ecf06 	br	402f634 <__divdf3+0x2d0>
 402faf8:	047f950e 	bge	zero,r17,402f950 <__divdf3+0x5ec>
 402fafc:	000d883a 	mov	r6,zero
 402fb00:	01000044 	movi	r4,1
 402fb04:	a129883a 	add	r20,r20,r4
 402fb08:	003ece06 	br	402f644 <__divdf3+0x2e0>
 402fb0c:	908003cc 	andi	r2,r18,15
 402fb10:	10800118 	cmpnei	r2,r2,4
 402fb14:	103eca26 	beq	r2,zero,402f640 <__divdf3+0x2dc>
 402fb18:	91800104 	addi	r6,r18,4
 402fb1c:	013ffec4 	movi	r4,-5
 402fb20:	300cd0fa 	srli	r6,r6,3
 402fb24:	2489803a 	cmpltu	r4,r4,r18
 402fb28:	003ff606 	br	402fb04 <__divdf3+0x7a0>
 402fb2c:	1021883a 	mov	r16,r2
 402fb30:	003f6706 	br	402f8d0 <__divdf3+0x56c>
 402fb34:	1013883a 	mov	r9,r2
 402fb38:	003f4c06 	br	402f86c <__divdf3+0x508>
 402fb3c:	84bfac2e 	bgeu	r16,r18,402f9f0 <__divdf3+0x68c>
 402fb40:	d8800017 	ldw	r2,0(sp)
 402fb44:	a53fff84 	addi	r20,r20,-2
 402fb48:	80a1883a 	add	r16,r16,r2
 402fb4c:	8085803a 	cmpltu	r2,r16,r2
 402fb50:	1585883a 	add	r2,r2,r22
 402fb54:	2089883a 	add	r4,r4,r2
 402fb58:	003f2706 	br	402f7f8 <__divdf3+0x494>
 402fb5c:	d8c00017 	ldw	r3,0(sp)
 402fb60:	94bfff84 	addi	r18,r18,-2
 402fb64:	18c5883a 	add	r2,r3,r3
 402fb68:	10c7803a 	cmpltu	r3,r2,r3
 402fb6c:	1d8d883a 	add	r6,r3,r22
 402fb70:	b9af883a 	add	r23,r23,r6
 402fb74:	d8800015 	stw	r2,0(sp)
 402fb78:	003fdb06 	br	402fae8 <__divdf3+0x784>
 402fb7c:	908003cc 	andi	r2,r18,15
 402fb80:	10800118 	cmpnei	r2,r2,4
 402fb84:	000b883a 	mov	r5,zero
 402fb88:	103f851e 	bne	r2,zero,402f9a0 <__divdf3+0x63c>
 402fb8c:	2804927a 	slli	r2,r5,9
 402fb90:	2808977a 	slli	r4,r5,29
 402fb94:	100ad33a 	srli	r5,r2,12
 402fb98:	003fce06 	br	402fad4 <__divdf3+0x770>
 402fb9c:	00800434 	movhi	r2,16
 402fba0:	a1400234 	orhi	r5,r20,8
 402fba4:	10bfffc4 	addi	r2,r2,-1
 402fba8:	288a703a 	and	r5,r5,r2
 402fbac:	003eb706 	br	402f68c <__divdf3+0x328>
 402fbb0:	d8c00017 	ldw	r3,0(sp)
 402fbb4:	193fe936 	bltu	r3,r4,402fb5c <__divdf3+0x7f8>
 402fbb8:	1025883a 	mov	r18,r2
 402fbbc:	003fcb06 	br	402faec <__divdf3+0x788>

0402fbc0 <__eqdf2>:
 402fbc0:	2810d53a 	srli	r8,r5,20
 402fbc4:	3806d53a 	srli	r3,r7,20
 402fbc8:	00800434 	movhi	r2,16
 402fbcc:	4201ffcc 	andi	r8,r8,2047
 402fbd0:	10bfffc4 	addi	r2,r2,-1
 402fbd4:	4241ffd8 	cmpnei	r9,r8,2047
 402fbd8:	2814d7fa 	srli	r10,r5,31
 402fbdc:	3816d7fa 	srli	r11,r7,31
 402fbe0:	288a703a 	and	r5,r5,r2
 402fbe4:	388e703a 	and	r7,r7,r2
 402fbe8:	1881ffcc 	andi	r2,r3,2047
 402fbec:	48000626 	beq	r9,zero,402fc08 <__eqdf2+0x48>
 402fbf0:	10c1ffe0 	cmpeqi	r3,r2,2047
 402fbf4:	1800021e 	bne	r3,zero,402fc00 <__eqdf2+0x40>
 402fbf8:	4080011e 	bne	r8,r2,402fc00 <__eqdf2+0x40>
 402fbfc:	29c00826 	beq	r5,r7,402fc20 <__eqdf2+0x60>
 402fc00:	00800044 	movi	r2,1
 402fc04:	f800283a 	ret
 402fc08:	2906b03a 	or	r3,r5,r4
 402fc0c:	183ffc1e 	bne	r3,zero,402fc00 <__eqdf2+0x40>
 402fc10:	1081ffd8 	cmpnei	r2,r2,2047
 402fc14:	103ffa1e 	bne	r2,zero,402fc00 <__eqdf2+0x40>
 402fc18:	398eb03a 	or	r7,r7,r6
 402fc1c:	383ff81e 	bne	r7,zero,402fc00 <__eqdf2+0x40>
 402fc20:	21bff71e 	bne	r4,r6,402fc00 <__eqdf2+0x40>
 402fc24:	52c00426 	beq	r10,r11,402fc38 <__eqdf2+0x78>
 402fc28:	403ff51e 	bne	r8,zero,402fc00 <__eqdf2+0x40>
 402fc2c:	290ab03a 	or	r5,r5,r4
 402fc30:	2804c03a 	cmpne	r2,r5,zero
 402fc34:	f800283a 	ret
 402fc38:	0005883a 	mov	r2,zero
 402fc3c:	f800283a 	ret

0402fc40 <__gedf2>:
 402fc40:	2810d53a 	srli	r8,r5,20
 402fc44:	3812d53a 	srli	r9,r7,20
 402fc48:	00c00434 	movhi	r3,16
 402fc4c:	4201ffcc 	andi	r8,r8,2047
 402fc50:	18ffffc4 	addi	r3,r3,-1
 402fc54:	4281ffd8 	cmpnei	r10,r8,2047
 402fc58:	2816d7fa 	srli	r11,r5,31
 402fc5c:	3804d7fa 	srli	r2,r7,31
 402fc60:	28ca703a 	and	r5,r5,r3
 402fc64:	38ce703a 	and	r7,r7,r3
 402fc68:	48c1ffcc 	andi	r3,r9,2047
 402fc6c:	50000a26 	beq	r10,zero,402fc98 <__gedf2+0x58>
 402fc70:	1a41ffd8 	cmpnei	r9,r3,2047
 402fc74:	48000c26 	beq	r9,zero,402fca8 <__gedf2+0x68>
 402fc78:	4000171e 	bne	r8,zero,402fcd8 <__gedf2+0x98>
 402fc7c:	2912b03a 	or	r9,r5,r4
 402fc80:	1800121e 	bne	r3,zero,402fccc <__gedf2+0x8c>
 402fc84:	3994b03a 	or	r10,r7,r6
 402fc88:	5000101e 	bne	r10,zero,402fccc <__gedf2+0x8c>
 402fc8c:	48000a1e 	bne	r9,zero,402fcb8 <__gedf2+0x78>
 402fc90:	0005883a 	mov	r2,zero
 402fc94:	f800283a 	ret
 402fc98:	2912b03a 	or	r9,r5,r4
 402fc9c:	48001d1e 	bne	r9,zero,402fd14 <__gedf2+0xd4>
 402fca0:	1a41ffe0 	cmpeqi	r9,r3,2047
 402fca4:	48000c26 	beq	r9,zero,402fcd8 <__gedf2+0x98>
 402fca8:	3992b03a 	or	r9,r7,r6
 402fcac:	4800191e 	bne	r9,zero,402fd14 <__gedf2+0xd4>
 402fcb0:	40000526 	beq	r8,zero,402fcc8 <__gedf2+0x88>
 402fcb4:	58800c26 	beq	r11,r2,402fce8 <__gedf2+0xa8>
 402fcb8:	00800044 	movi	r2,1
 402fcbc:	58000526 	beq	r11,zero,402fcd4 <__gedf2+0x94>
 402fcc0:	00bfffc4 	movi	r2,-1
 402fcc4:	f800283a 	ret
 402fcc8:	2912b03a 	or	r9,r5,r4
 402fccc:	483ff91e 	bne	r9,zero,402fcb4 <__gedf2+0x74>
 402fcd0:	103ffb26 	beq	r2,zero,402fcc0 <__gedf2+0x80>
 402fcd4:	f800283a 	ret
 402fcd8:	183ff61e 	bne	r3,zero,402fcb4 <__gedf2+0x74>
 402fcdc:	3992b03a 	or	r9,r7,r6
 402fce0:	483ff41e 	bne	r9,zero,402fcb4 <__gedf2+0x74>
 402fce4:	003ff406 	br	402fcb8 <__gedf2+0x78>
 402fce8:	1a000716 	blt	r3,r8,402fd08 <__gedf2+0xc8>
 402fcec:	40fff816 	blt	r8,r3,402fcd0 <__gedf2+0x90>
 402fcf0:	397ff136 	bltu	r7,r5,402fcb8 <__gedf2+0x78>
 402fcf4:	29c00926 	beq	r5,r7,402fd1c <__gedf2+0xdc>
 402fcf8:	29ffe52e 	bgeu	r5,r7,402fc90 <__gedf2+0x50>
 402fcfc:	583ff026 	beq	r11,zero,402fcc0 <__gedf2+0x80>
 402fd00:	5805883a 	mov	r2,r11
 402fd04:	f800283a 	ret
 402fd08:	103fed1e 	bne	r2,zero,402fcc0 <__gedf2+0x80>
 402fd0c:	00800044 	movi	r2,1
 402fd10:	f800283a 	ret
 402fd14:	00bfff84 	movi	r2,-2
 402fd18:	f800283a 	ret
 402fd1c:	313fe636 	bltu	r6,r4,402fcb8 <__gedf2+0x78>
 402fd20:	21bfdb2e 	bgeu	r4,r6,402fc90 <__gedf2+0x50>
 402fd24:	003ff506 	br	402fcfc <__gedf2+0xbc>

0402fd28 <__ledf2>:
 402fd28:	2810d53a 	srli	r8,r5,20
 402fd2c:	3812d53a 	srli	r9,r7,20
 402fd30:	00c00434 	movhi	r3,16
 402fd34:	4201ffcc 	andi	r8,r8,2047
 402fd38:	18ffffc4 	addi	r3,r3,-1
 402fd3c:	4281ffd8 	cmpnei	r10,r8,2047
 402fd40:	2816d7fa 	srli	r11,r5,31
 402fd44:	3804d7fa 	srli	r2,r7,31
 402fd48:	28ca703a 	and	r5,r5,r3
 402fd4c:	38ce703a 	and	r7,r7,r3
 402fd50:	48c1ffcc 	andi	r3,r9,2047
 402fd54:	50000a26 	beq	r10,zero,402fd80 <__ledf2+0x58>
 402fd58:	1a41ffd8 	cmpnei	r9,r3,2047
 402fd5c:	48000c26 	beq	r9,zero,402fd90 <__ledf2+0x68>
 402fd60:	4000191e 	bne	r8,zero,402fdc8 <__ledf2+0xa0>
 402fd64:	2912b03a 	or	r9,r5,r4
 402fd68:	18000d1e 	bne	r3,zero,402fda0 <__ledf2+0x78>
 402fd6c:	3994b03a 	or	r10,r7,r6
 402fd70:	50000b1e 	bne	r10,zero,402fda0 <__ledf2+0x78>
 402fd74:	48000c1e 	bne	r9,zero,402fda8 <__ledf2+0x80>
 402fd78:	0005883a 	mov	r2,zero
 402fd7c:	f800283a 	ret
 402fd80:	2912b03a 	or	r9,r5,r4
 402fd84:	48000c1e 	bne	r9,zero,402fdb8 <__ledf2+0x90>
 402fd88:	1a41ffe0 	cmpeqi	r9,r3,2047
 402fd8c:	48000e26 	beq	r9,zero,402fdc8 <__ledf2+0xa0>
 402fd90:	3992b03a 	or	r9,r7,r6
 402fd94:	4800081e 	bne	r9,zero,402fdb8 <__ledf2+0x90>
 402fd98:	4000021e 	bne	r8,zero,402fda4 <__ledf2+0x7c>
 402fd9c:	2912b03a 	or	r9,r5,r4
 402fda0:	48000726 	beq	r9,zero,402fdc0 <__ledf2+0x98>
 402fda4:	58800c26 	beq	r11,r2,402fdd8 <__ledf2+0xb0>
 402fda8:	00800044 	movi	r2,1
 402fdac:	58000526 	beq	r11,zero,402fdc4 <__ledf2+0x9c>
 402fdb0:	00bfffc4 	movi	r2,-1
 402fdb4:	f800283a 	ret
 402fdb8:	00800084 	movi	r2,2
 402fdbc:	f800283a 	ret
 402fdc0:	103ffb26 	beq	r2,zero,402fdb0 <__ledf2+0x88>
 402fdc4:	f800283a 	ret
 402fdc8:	183ff61e 	bne	r3,zero,402fda4 <__ledf2+0x7c>
 402fdcc:	3992b03a 	or	r9,r7,r6
 402fdd0:	483ff41e 	bne	r9,zero,402fda4 <__ledf2+0x7c>
 402fdd4:	003ff406 	br	402fda8 <__ledf2+0x80>
 402fdd8:	1a00030e 	bge	r3,r8,402fde8 <__ledf2+0xc0>
 402fddc:	103ff41e 	bne	r2,zero,402fdb0 <__ledf2+0x88>
 402fde0:	00800044 	movi	r2,1
 402fde4:	f800283a 	ret
 402fde8:	40fff516 	blt	r8,r3,402fdc0 <__ledf2+0x98>
 402fdec:	397fee36 	bltu	r7,r5,402fda8 <__ledf2+0x80>
 402fdf0:	29c00426 	beq	r5,r7,402fe04 <__ledf2+0xdc>
 402fdf4:	29ffe02e 	bgeu	r5,r7,402fd78 <__ledf2+0x50>
 402fdf8:	583fed26 	beq	r11,zero,402fdb0 <__ledf2+0x88>
 402fdfc:	5805883a 	mov	r2,r11
 402fe00:	f800283a 	ret
 402fe04:	313fe836 	bltu	r6,r4,402fda8 <__ledf2+0x80>
 402fe08:	21bfdb2e 	bgeu	r4,r6,402fd78 <__ledf2+0x50>
 402fe0c:	003ffa06 	br	402fdf8 <__ledf2+0xd0>

0402fe10 <__muldf3>:
 402fe10:	2804d53a 	srli	r2,r5,20
 402fe14:	defff504 	addi	sp,sp,-44
 402fe18:	02000434 	movhi	r8,16
 402fe1c:	df000915 	stw	fp,36(sp)
 402fe20:	dd000515 	stw	r20,20(sp)
 402fe24:	dcc00415 	stw	r19,16(sp)
 402fe28:	dc000115 	stw	r16,4(sp)
 402fe2c:	423fffc4 	addi	r8,r8,-1
 402fe30:	dfc00a15 	stw	ra,40(sp)
 402fe34:	ddc00815 	stw	r23,32(sp)
 402fe38:	dd800715 	stw	r22,28(sp)
 402fe3c:	dd400615 	stw	r21,24(sp)
 402fe40:	dc800315 	stw	r18,12(sp)
 402fe44:	dc400215 	stw	r17,8(sp)
 402fe48:	1081ffcc 	andi	r2,r2,2047
 402fe4c:	2828d7fa 	srli	r20,r5,31
 402fe50:	2027883a 	mov	r19,r4
 402fe54:	3039883a 	mov	fp,r6
 402fe58:	2a20703a 	and	r16,r5,r8
 402fe5c:	1000e726 	beq	r2,zero,40301fc <__muldf3+0x3ec>
 402fe60:	10c1ffe0 	cmpeqi	r3,r2,2047
 402fe64:	1800f91e 	bne	r3,zero,403024c <__muldf3+0x43c>
 402fe68:	800a90fa 	slli	r5,r16,3
 402fe6c:	2020d77a 	srli	r16,r4,29
 402fe70:	202490fa 	slli	r18,r4,3
 402fe74:	14ff0044 	addi	r19,r2,-1023
 402fe78:	8160b03a 	or	r16,r16,r5
 402fe7c:	84002034 	orhi	r16,r16,128
 402fe80:	002b883a 	mov	r21,zero
 402fe84:	002d883a 	mov	r22,zero
 402fe88:	3804d53a 	srli	r2,r7,20
 402fe8c:	00c00434 	movhi	r3,16
 402fe90:	18ffffc4 	addi	r3,r3,-1
 402fe94:	1081ffcc 	andi	r2,r2,2047
 402fe98:	382ed7fa 	srli	r23,r7,31
 402fe9c:	38e2703a 	and	r17,r7,r3
 402fea0:	1000c526 	beq	r2,zero,40301b8 <__muldf3+0x3a8>
 402fea4:	10c1ffe0 	cmpeqi	r3,r2,2047
 402fea8:	1800ef1e 	bne	r3,zero,4030268 <__muldf3+0x458>
 402feac:	880690fa 	slli	r3,r17,3
 402feb0:	e022d77a 	srli	r17,fp,29
 402feb4:	e00a90fa 	slli	r5,fp,3
 402feb8:	10bf0044 	addi	r2,r2,-1023
 402febc:	88e2b03a 	or	r17,r17,r3
 402fec0:	8c402034 	orhi	r17,r17,128
 402fec4:	98a7883a 	add	r19,r19,r2
 402fec8:	0007883a 	mov	r3,zero
 402fecc:	a8800428 	cmpgeui	r2,r21,16
 402fed0:	a5ccf03a 	xor	r6,r20,r23
 402fed4:	9a000044 	addi	r8,r19,1
 402fed8:	1000371e 	bne	r2,zero,402ffb8 <__muldf3+0x1a8>
 402fedc:	a80490ba 	slli	r2,r21,2
 402fee0:	010100f4 	movhi	r4,1027
 402fee4:	1109883a 	add	r4,r2,r4
 402fee8:	20bfbc17 	ldw	r2,-272(r4)
 402feec:	1000683a 	jmp	r2
 402fef0:	0402ffb8 	rdprs	r16,zero,3070
 402fef4:	0402ff34 	movhi	r16,3068
 402fef8:	0402ff34 	movhi	r16,3068
 402fefc:	0402ff30 	cmpltui	r16,zero,3068
 402ff00:	0402ff40 	call	402ff4 <_gp+0x3f8ac4>
 402ff04:	0402ff40 	call	402ff4 <_gp+0x3f8ac4>
 402ff08:	040302dc 	xori	r16,zero,3083
 402ff0c:	0402ff30 	cmpltui	r16,zero,3068
 402ff10:	0402ff40 	call	402ff4 <_gp+0x3f8ac4>
 402ff14:	040302dc 	xori	r16,zero,3083
 402ff18:	0402ff40 	call	402ff4 <_gp+0x3f8ac4>
 402ff1c:	0402ff30 	cmpltui	r16,zero,3068
 402ff20:	04030284 	movi	r16,3082
 402ff24:	04030284 	movi	r16,3082
 402ff28:	04030284 	movi	r16,3082
 402ff2c:	04030368 	cmpgeui	r16,zero,3085
 402ff30:	b80d883a 	mov	r6,r23
 402ff34:	8821883a 	mov	r16,r17
 402ff38:	2825883a 	mov	r18,r5
 402ff3c:	182d883a 	mov	r22,r3
 402ff40:	b08000a0 	cmpeqi	r2,r22,2
 402ff44:	1000181e 	bne	r2,zero,402ffa8 <__muldf3+0x198>
 402ff48:	b08000e0 	cmpeqi	r2,r22,3
 402ff4c:	1001481e 	bne	r2,zero,4030470 <__muldf3+0x660>
 402ff50:	b0800060 	cmpeqi	r2,r22,1
 402ff54:	10007e26 	beq	r2,zero,4030150 <__muldf3+0x340>
 402ff58:	0007883a 	mov	r3,zero
 402ff5c:	0021883a 	mov	r16,zero
 402ff60:	0025883a 	mov	r18,zero
 402ff64:	1806953a 	slli	r3,r3,20
 402ff68:	300c97fa 	slli	r6,r6,31
 402ff6c:	9005883a 	mov	r2,r18
 402ff70:	1c06b03a 	or	r3,r3,r16
 402ff74:	1986b03a 	or	r3,r3,r6
 402ff78:	dfc00a17 	ldw	ra,40(sp)
 402ff7c:	df000917 	ldw	fp,36(sp)
 402ff80:	ddc00817 	ldw	r23,32(sp)
 402ff84:	dd800717 	ldw	r22,28(sp)
 402ff88:	dd400617 	ldw	r21,24(sp)
 402ff8c:	dd000517 	ldw	r20,20(sp)
 402ff90:	dcc00417 	ldw	r19,16(sp)
 402ff94:	dc800317 	ldw	r18,12(sp)
 402ff98:	dc400217 	ldw	r17,8(sp)
 402ff9c:	dc000117 	ldw	r16,4(sp)
 402ffa0:	dec00b04 	addi	sp,sp,44
 402ffa4:	f800283a 	ret
 402ffa8:	00c1ffc4 	movi	r3,2047
 402ffac:	0021883a 	mov	r16,zero
 402ffb0:	0025883a 	mov	r18,zero
 402ffb4:	003feb06 	br	402ff64 <__muldf3+0x154>
 402ffb8:	9004d43a 	srli	r2,r18,16
 402ffbc:	281ed43a 	srli	r15,r5,16
 402ffc0:	94bfffcc 	andi	r18,r18,65535
 402ffc4:	297fffcc 	andi	r5,r5,65535
 402ffc8:	2c89383a 	mul	r4,r5,r18
 402ffcc:	114f383a 	mul	r7,r2,r5
 402ffd0:	7c87383a 	mul	r3,r15,r18
 402ffd4:	2012d43a 	srli	r9,r4,16
 402ffd8:	13dd383a 	mul	r14,r2,r15
 402ffdc:	19c7883a 	add	r3,r3,r7
 402ffe0:	48d3883a 	add	r9,r9,r3
 402ffe4:	49c0022e 	bgeu	r9,r7,402fff0 <__muldf3+0x1e0>
 402ffe8:	00c00074 	movhi	r3,1
 402ffec:	70dd883a 	add	r14,r14,r3
 402fff0:	881ad43a 	srli	r13,r17,16
 402fff4:	8c7fffcc 	andi	r17,r17,65535
 402fff8:	8c87383a 	mul	r3,r17,r18
 402fffc:	144f383a 	mul	r7,r2,r17
 4030000:	6ca5383a 	mul	r18,r13,r18
 4030004:	1816d43a 	srli	r11,r3,16
 4030008:	4814943a 	slli	r10,r9,16
 403000c:	91e5883a 	add	r18,r18,r7
 4030010:	213fffcc 	andi	r4,r4,65535
 4030014:	5c97883a 	add	r11,r11,r18
 4030018:	4818d43a 	srli	r12,r9,16
 403001c:	1345383a 	mul	r2,r2,r13
 4030020:	5115883a 	add	r10,r10,r4
 4030024:	59c0022e 	bgeu	r11,r7,4030030 <__muldf3+0x220>
 4030028:	01000074 	movhi	r4,1
 403002c:	1105883a 	add	r2,r2,r4
 4030030:	8028d43a 	srli	r20,r16,16
 4030034:	827fffcc 	andi	r9,r16,65535
 4030038:	2a6b383a 	mul	r21,r5,r9
 403003c:	7a49383a 	mul	r4,r15,r9
 4030040:	a14b383a 	mul	r5,r20,r5
 4030044:	580e943a 	slli	r7,r11,16
 4030048:	a82cd43a 	srli	r22,r21,16
 403004c:	5824d43a 	srli	r18,r11,16
 4030050:	18ffffcc 	andi	r3,r3,65535
 4030054:	2149883a 	add	r4,r4,r5
 4030058:	38cf883a 	add	r7,r7,r3
 403005c:	b109883a 	add	r4,r22,r4
 4030060:	7d1f383a 	mul	r15,r15,r20
 4030064:	9097883a 	add	r11,r18,r2
 4030068:	61c7883a 	add	r3,r12,r7
 403006c:	2140022e 	bgeu	r4,r5,4030078 <__muldf3+0x268>
 4030070:	00800074 	movhi	r2,1
 4030074:	789f883a 	add	r15,r15,r2
 4030078:	8a65383a 	mul	r18,r17,r9
 403007c:	6a53383a 	mul	r9,r13,r9
 4030080:	a463383a 	mul	r17,r20,r17
 4030084:	9020d43a 	srli	r16,r18,16
 4030088:	200ad43a 	srli	r5,r4,16
 403008c:	2008943a 	slli	r4,r4,16
 4030090:	4c53883a 	add	r9,r9,r17
 4030094:	ab3fffcc 	andi	r12,r21,65535
 4030098:	8253883a 	add	r9,r16,r9
 403009c:	6d1b383a 	mul	r13,r13,r20
 40300a0:	2bdf883a 	add	r15,r5,r15
 40300a4:	2309883a 	add	r4,r4,r12
 40300a8:	4c40022e 	bgeu	r9,r17,40300b4 <__muldf3+0x2a4>
 40300ac:	00800074 	movhi	r2,1
 40300b0:	689b883a 	add	r13,r13,r2
 40300b4:	4804943a 	slli	r2,r9,16
 40300b8:	917fffcc 	andi	r5,r18,65535
 40300bc:	1b87883a 	add	r3,r3,r14
 40300c0:	1145883a 	add	r2,r2,r5
 40300c4:	19cf803a 	cmpltu	r7,r3,r7
 40300c8:	12c5883a 	add	r2,r2,r11
 40300cc:	1907883a 	add	r3,r3,r4
 40300d0:	11dd883a 	add	r14,r2,r7
 40300d4:	1909803a 	cmpltu	r4,r3,r4
 40300d8:	73cb883a 	add	r5,r14,r15
 40300dc:	4812d43a 	srli	r9,r9,16
 40300e0:	2919883a 	add	r12,r5,r4
 40300e4:	12c5803a 	cmpltu	r2,r2,r11
 40300e8:	71e1803a 	cmpltu	r16,r14,r7
 40300ec:	1420b03a 	or	r16,r2,r16
 40300f0:	2bcb803a 	cmpltu	r5,r5,r15
 40300f4:	6109803a 	cmpltu	r4,r12,r4
 40300f8:	2908b03a 	or	r4,r5,r4
 40300fc:	8261883a 	add	r16,r16,r9
 4030100:	1824927a 	slli	r18,r3,9
 4030104:	8121883a 	add	r16,r16,r4
 4030108:	8361883a 	add	r16,r16,r13
 403010c:	8020927a 	slli	r16,r16,9
 4030110:	1806d5fa 	srli	r3,r3,23
 4030114:	600ad5fa 	srli	r5,r12,23
 4030118:	6004927a 	slli	r2,r12,9
 403011c:	92a4b03a 	or	r18,r18,r10
 4030120:	9024c03a 	cmpne	r18,r18,zero
 4030124:	90e4b03a 	or	r18,r18,r3
 4030128:	80c0402c 	andhi	r3,r16,256
 403012c:	90a4b03a 	or	r18,r18,r2
 4030130:	8160b03a 	or	r16,r16,r5
 4030134:	1800b326 	beq	r3,zero,4030404 <__muldf3+0x5f4>
 4030138:	9006d07a 	srli	r3,r18,1
 403013c:	800497fa 	slli	r2,r16,31
 4030140:	9480004c 	andi	r18,r18,1
 4030144:	8020d07a 	srli	r16,r16,1
 4030148:	1c86b03a 	or	r3,r3,r18
 403014c:	18a4b03a 	or	r18,r3,r2
 4030150:	4100ffc4 	addi	r4,r8,1023
 4030154:	0100670e 	bge	zero,r4,40302f4 <__muldf3+0x4e4>
 4030158:	908001cc 	andi	r2,r18,7
 403015c:	10000726 	beq	r2,zero,403017c <__muldf3+0x36c>
 4030160:	908003cc 	andi	r2,r18,15
 4030164:	10800120 	cmpeqi	r2,r2,4
 4030168:	1000041e 	bne	r2,zero,403017c <__muldf3+0x36c>
 403016c:	90800104 	addi	r2,r18,4
 4030170:	14a5803a 	cmpltu	r18,r2,r18
 4030174:	84a1883a 	add	r16,r16,r18
 4030178:	1025883a 	mov	r18,r2
 403017c:	8080402c 	andhi	r2,r16,256
 4030180:	10000426 	beq	r2,zero,4030194 <__muldf3+0x384>
 4030184:	00bfc034 	movhi	r2,65280
 4030188:	10bfffc4 	addi	r2,r2,-1
 403018c:	80a0703a 	and	r16,r16,r2
 4030190:	41010004 	addi	r4,r8,1024
 4030194:	2081ffc8 	cmpgei	r2,r4,2047
 4030198:	103f831e 	bne	r2,zero,402ffa8 <__muldf3+0x198>
 403019c:	8004977a 	slli	r2,r16,29
 40301a0:	9024d0fa 	srli	r18,r18,3
 40301a4:	8020927a 	slli	r16,r16,9
 40301a8:	20c1ffcc 	andi	r3,r4,2047
 40301ac:	14a4b03a 	or	r18,r2,r18
 40301b0:	8020d33a 	srli	r16,r16,12
 40301b4:	003f6b06 	br	402ff64 <__muldf3+0x154>
 40301b8:	8f0ab03a 	or	r5,r17,fp
 40301bc:	28004326 	beq	r5,zero,40302cc <__muldf3+0x4bc>
 40301c0:	88008526 	beq	r17,zero,40303d8 <__muldf3+0x5c8>
 40301c4:	8809883a 	mov	r4,r17
 40301c8:	402340c0 	call	402340c <__clzsi2>
 40301cc:	11bffd44 	addi	r6,r2,-11
 40301d0:	01000744 	movi	r4,29
 40301d4:	117ffe04 	addi	r5,r2,-8
 40301d8:	2189c83a 	sub	r4,r4,r6
 40301dc:	8962983a 	sll	r17,r17,r5
 40301e0:	e108d83a 	srl	r4,fp,r4
 40301e4:	e14a983a 	sll	r5,fp,r5
 40301e8:	2462b03a 	or	r17,r4,r17
 40301ec:	9885c83a 	sub	r2,r19,r2
 40301f0:	14ff0344 	addi	r19,r2,-1011
 40301f4:	0007883a 	mov	r3,zero
 40301f8:	003f3406 	br	402fecc <__muldf3+0xbc>
 40301fc:	8124b03a 	or	r18,r16,r4
 4030200:	90002d26 	beq	r18,zero,40302b8 <__muldf3+0x4a8>
 4030204:	d9c00015 	stw	r7,0(sp)
 4030208:	80006826 	beq	r16,zero,40303ac <__muldf3+0x59c>
 403020c:	8009883a 	mov	r4,r16
 4030210:	402340c0 	call	402340c <__clzsi2>
 4030214:	d9c00017 	ldw	r7,0(sp)
 4030218:	113ffd44 	addi	r4,r2,-11
 403021c:	00c00744 	movi	r3,29
 4030220:	14bffe04 	addi	r18,r2,-8
 4030224:	1907c83a 	sub	r3,r3,r4
 4030228:	84a0983a 	sll	r16,r16,r18
 403022c:	98c6d83a 	srl	r3,r19,r3
 4030230:	9ca4983a 	sll	r18,r19,r18
 4030234:	1c20b03a 	or	r16,r3,r16
 4030238:	04ff0344 	movi	r19,-1011
 403023c:	98a7c83a 	sub	r19,r19,r2
 4030240:	002b883a 	mov	r21,zero
 4030244:	002d883a 	mov	r22,zero
 4030248:	003f0f06 	br	402fe88 <__muldf3+0x78>
 403024c:	8124b03a 	or	r18,r16,r4
 4030250:	9000141e 	bne	r18,zero,40302a4 <__muldf3+0x494>
 4030254:	0021883a 	mov	r16,zero
 4030258:	05400204 	movi	r21,8
 403025c:	04c1ffc4 	movi	r19,2047
 4030260:	05800084 	movi	r22,2
 4030264:	003f0806 	br	402fe88 <__muldf3+0x78>
 4030268:	8f0ab03a 	or	r5,r17,fp
 403026c:	9cc1ffc4 	addi	r19,r19,2047
 4030270:	2800081e 	bne	r5,zero,4030294 <__muldf3+0x484>
 4030274:	ad400094 	ori	r21,r21,2
 4030278:	0023883a 	mov	r17,zero
 403027c:	00c00084 	movi	r3,2
 4030280:	003f1206 	br	402fecc <__muldf3+0xbc>
 4030284:	b08000a0 	cmpeqi	r2,r22,2
 4030288:	a00d883a 	mov	r6,r20
 403028c:	103f2e26 	beq	r2,zero,402ff48 <__muldf3+0x138>
 4030290:	003f4506 	br	402ffa8 <__muldf3+0x198>
 4030294:	ad4000d4 	ori	r21,r21,3
 4030298:	e00b883a 	mov	r5,fp
 403029c:	00c000c4 	movi	r3,3
 40302a0:	003f0a06 	br	402fecc <__muldf3+0xbc>
 40302a4:	2025883a 	mov	r18,r4
 40302a8:	05400304 	movi	r21,12
 40302ac:	04c1ffc4 	movi	r19,2047
 40302b0:	058000c4 	movi	r22,3
 40302b4:	003ef406 	br	402fe88 <__muldf3+0x78>
 40302b8:	0021883a 	mov	r16,zero
 40302bc:	05400104 	movi	r21,4
 40302c0:	0027883a 	mov	r19,zero
 40302c4:	05800044 	movi	r22,1
 40302c8:	003eef06 	br	402fe88 <__muldf3+0x78>
 40302cc:	ad400054 	ori	r21,r21,1
 40302d0:	0023883a 	mov	r17,zero
 40302d4:	00c00044 	movi	r3,1
 40302d8:	003efc06 	br	402fecc <__muldf3+0xbc>
 40302dc:	04000434 	movhi	r16,16
 40302e0:	000d883a 	mov	r6,zero
 40302e4:	843fffc4 	addi	r16,r16,-1
 40302e8:	04bfffc4 	movi	r18,-1
 40302ec:	00c1ffc4 	movi	r3,2047
 40302f0:	003f1c06 	br	402ff64 <__muldf3+0x154>
 40302f4:	00800044 	movi	r2,1
 40302f8:	1105c83a 	sub	r2,r2,r4
 40302fc:	10c00e48 	cmpgei	r3,r2,57
 4030300:	183f151e 	bne	r3,zero,402ff58 <__muldf3+0x148>
 4030304:	10c00808 	cmpgei	r3,r2,32
 4030308:	1800401e 	bne	r3,zero,403040c <__muldf3+0x5fc>
 403030c:	42010784 	addi	r8,r8,1054
 4030310:	8206983a 	sll	r3,r16,r8
 4030314:	9088d83a 	srl	r4,r18,r2
 4030318:	9210983a 	sll	r8,r18,r8
 403031c:	80a0d83a 	srl	r16,r16,r2
 4030320:	1904b03a 	or	r2,r3,r4
 4030324:	4024c03a 	cmpne	r18,r8,zero
 4030328:	1484b03a 	or	r2,r2,r18
 403032c:	10c001cc 	andi	r3,r2,7
 4030330:	18000726 	beq	r3,zero,4030350 <__muldf3+0x540>
 4030334:	10c003cc 	andi	r3,r2,15
 4030338:	18c00120 	cmpeqi	r3,r3,4
 403033c:	1800041e 	bne	r3,zero,4030350 <__muldf3+0x540>
 4030340:	10c00104 	addi	r3,r2,4
 4030344:	1885803a 	cmpltu	r2,r3,r2
 4030348:	80a1883a 	add	r16,r16,r2
 403034c:	1805883a 	mov	r2,r3
 4030350:	80c0202c 	andhi	r3,r16,128
 4030354:	18004226 	beq	r3,zero,4030460 <__muldf3+0x650>
 4030358:	00c00044 	movi	r3,1
 403035c:	0021883a 	mov	r16,zero
 4030360:	0025883a 	mov	r18,zero
 4030364:	003eff06 	br	402ff64 <__muldf3+0x154>
 4030368:	8080022c 	andhi	r2,r16,8
 403036c:	10000926 	beq	r2,zero,4030394 <__muldf3+0x584>
 4030370:	8880022c 	andhi	r2,r17,8
 4030374:	1000071e 	bne	r2,zero,4030394 <__muldf3+0x584>
 4030378:	00800434 	movhi	r2,16
 403037c:	8c000234 	orhi	r16,r17,8
 4030380:	10bfffc4 	addi	r2,r2,-1
 4030384:	80a0703a 	and	r16,r16,r2
 4030388:	b80d883a 	mov	r6,r23
 403038c:	2825883a 	mov	r18,r5
 4030390:	003fd606 	br	40302ec <__muldf3+0x4dc>
 4030394:	00800434 	movhi	r2,16
 4030398:	84000234 	orhi	r16,r16,8
 403039c:	10bfffc4 	addi	r2,r2,-1
 40303a0:	80a0703a 	and	r16,r16,r2
 40303a4:	a00d883a 	mov	r6,r20
 40303a8:	003fd006 	br	40302ec <__muldf3+0x4dc>
 40303ac:	402340c0 	call	402340c <__clzsi2>
 40303b0:	11000544 	addi	r4,r2,21
 40303b4:	21400748 	cmpgei	r5,r4,29
 40303b8:	1007883a 	mov	r3,r2
 40303bc:	d9c00017 	ldw	r7,0(sp)
 40303c0:	10800804 	addi	r2,r2,32
 40303c4:	283f9526 	beq	r5,zero,403021c <__muldf3+0x40c>
 40303c8:	18fffe04 	addi	r3,r3,-8
 40303cc:	98e0983a 	sll	r16,r19,r3
 40303d0:	0025883a 	mov	r18,zero
 40303d4:	003f9806 	br	4030238 <__muldf3+0x428>
 40303d8:	e009883a 	mov	r4,fp
 40303dc:	402340c0 	call	402340c <__clzsi2>
 40303e0:	11800544 	addi	r6,r2,21
 40303e4:	31000748 	cmpgei	r4,r6,29
 40303e8:	1007883a 	mov	r3,r2
 40303ec:	10800804 	addi	r2,r2,32
 40303f0:	203f7726 	beq	r4,zero,40301d0 <__muldf3+0x3c0>
 40303f4:	1c7ffe04 	addi	r17,r3,-8
 40303f8:	e462983a 	sll	r17,fp,r17
 40303fc:	000b883a 	mov	r5,zero
 4030400:	003f7a06 	br	40301ec <__muldf3+0x3dc>
 4030404:	9811883a 	mov	r8,r19
 4030408:	003f5106 	br	4030150 <__muldf3+0x340>
 403040c:	00fff844 	movi	r3,-31
 4030410:	1907c83a 	sub	r3,r3,r4
 4030414:	10800820 	cmpeqi	r2,r2,32
 4030418:	80c6d83a 	srl	r3,r16,r3
 403041c:	1000031e 	bne	r2,zero,403042c <__muldf3+0x61c>
 4030420:	42010f84 	addi	r8,r8,1086
 4030424:	8220983a 	sll	r16,r16,r8
 4030428:	9424b03a 	or	r18,r18,r16
 403042c:	9024c03a 	cmpne	r18,r18,zero
 4030430:	90c4b03a 	or	r2,r18,r3
 4030434:	148001cc 	andi	r18,r2,7
 4030438:	9000051e 	bne	r18,zero,4030450 <__muldf3+0x640>
 403043c:	0021883a 	mov	r16,zero
 4030440:	1004d0fa 	srli	r2,r2,3
 4030444:	0007883a 	mov	r3,zero
 4030448:	14a4b03a 	or	r18,r2,r18
 403044c:	003ec506 	br	402ff64 <__muldf3+0x154>
 4030450:	10c003cc 	andi	r3,r2,15
 4030454:	18c00118 	cmpnei	r3,r3,4
 4030458:	0021883a 	mov	r16,zero
 403045c:	183fb81e 	bne	r3,zero,4030340 <__muldf3+0x530>
 4030460:	8006927a 	slli	r3,r16,9
 4030464:	8024977a 	slli	r18,r16,29
 4030468:	1820d33a 	srli	r16,r3,12
 403046c:	003ff406 	br	4030440 <__muldf3+0x630>
 4030470:	00800434 	movhi	r2,16
 4030474:	84000234 	orhi	r16,r16,8
 4030478:	10bfffc4 	addi	r2,r2,-1
 403047c:	80a0703a 	and	r16,r16,r2
 4030480:	003f9a06 	br	40302ec <__muldf3+0x4dc>

04030484 <__subdf3>:
 4030484:	00800434 	movhi	r2,16
 4030488:	3810d53a 	srli	r8,r7,20
 403048c:	10bfffc4 	addi	r2,r2,-1
 4030490:	2806d53a 	srli	r3,r5,20
 4030494:	2892703a 	and	r9,r5,r2
 4030498:	3884703a 	and	r2,r7,r2
 403049c:	280ad7fa 	srli	r5,r5,31
 40304a0:	481290fa 	slli	r9,r9,3
 40304a4:	2018d77a 	srli	r12,r4,29
 40304a8:	100490fa 	slli	r2,r2,3
 40304ac:	3016d77a 	srli	r11,r6,29
 40304b0:	defffb04 	addi	sp,sp,-20
 40304b4:	4201ffcc 	andi	r8,r8,2047
 40304b8:	dc800215 	stw	r18,8(sp)
 40304bc:	dc400115 	stw	r17,4(sp)
 40304c0:	1c81ffcc 	andi	r18,r3,2047
 40304c4:	dfc00415 	stw	ra,16(sp)
 40304c8:	dcc00315 	stw	r19,12(sp)
 40304cc:	dc000015 	stw	r16,0(sp)
 40304d0:	4281ffd8 	cmpnei	r10,r8,2047
 40304d4:	2823883a 	mov	r17,r5
 40304d8:	201c90fa 	slli	r14,r4,3
 40304dc:	380ed7fa 	srli	r7,r7,31
 40304e0:	301a90fa 	slli	r13,r6,3
 40304e4:	29403fcc 	andi	r5,r5,255
 40304e8:	6252b03a 	or	r9,r12,r9
 40304ec:	589eb03a 	or	r15,r11,r2
 40304f0:	9207c83a 	sub	r3,r18,r8
 40304f4:	50006826 	beq	r10,zero,4030698 <__subdf3+0x214>
 40304f8:	3ac0005c 	xori	r11,r7,1
 40304fc:	2ac07326 	beq	r5,r11,40306cc <__subdf3+0x248>
 4030500:	00c0590e 	bge	zero,r3,4030668 <__subdf3+0x1e4>
 4030504:	4000691e 	bne	r8,zero,40306ac <__subdf3+0x228>
 4030508:	7b44b03a 	or	r2,r15,r13
 403050c:	1000fb26 	beq	r2,zero,40308fc <__subdf3+0x478>
 4030510:	18bfffc4 	addi	r2,r3,-1
 4030514:	10019126 	beq	r2,zero,4030b5c <__subdf3+0x6d8>
 4030518:	18c1ffd8 	cmpnei	r3,r3,2047
 403051c:	1800c326 	beq	r3,zero,403082c <__subdf3+0x3a8>
 4030520:	1007883a 	mov	r3,r2
 4030524:	18800e48 	cmpgei	r2,r3,57
 4030528:	1000651e 	bne	r2,zero,40306c0 <__subdf3+0x23c>
 403052c:	18800808 	cmpgei	r2,r3,32
 4030530:	1001331e 	bne	r2,zero,4030a00 <__subdf3+0x57c>
 4030534:	00800804 	movi	r2,32
 4030538:	10c5c83a 	sub	r2,r2,r3
 403053c:	78a0983a 	sll	r16,r15,r2
 4030540:	68c8d83a 	srl	r4,r13,r3
 4030544:	689a983a 	sll	r13,r13,r2
 4030548:	78c4d83a 	srl	r2,r15,r3
 403054c:	8120b03a 	or	r16,r16,r4
 4030550:	681ac03a 	cmpne	r13,r13,zero
 4030554:	8360b03a 	or	r16,r16,r13
 4030558:	4893c83a 	sub	r9,r9,r2
 403055c:	7421c83a 	sub	r16,r14,r16
 4030560:	7409803a 	cmpltu	r4,r14,r16
 4030564:	4909c83a 	sub	r4,r9,r4
 4030568:	2080202c 	andhi	r2,r4,128
 403056c:	10009326 	beq	r2,zero,40307bc <__subdf3+0x338>
 4030570:	04c02034 	movhi	r19,128
 4030574:	9cffffc4 	addi	r19,r19,-1
 4030578:	24e6703a 	and	r19,r4,r19
 403057c:	9800b926 	beq	r19,zero,4030864 <__subdf3+0x3e0>
 4030580:	9809883a 	mov	r4,r19
 4030584:	402340c0 	call	402340c <__clzsi2>
 4030588:	10fffe04 	addi	r3,r2,-8
 403058c:	01000804 	movi	r4,32
 4030590:	20c9c83a 	sub	r4,r4,r3
 4030594:	8108d83a 	srl	r4,r16,r4
 4030598:	98e6983a 	sll	r19,r19,r3
 403059c:	80e0983a 	sll	r16,r16,r3
 40305a0:	24c8b03a 	or	r4,r4,r19
 40305a4:	1c80b816 	blt	r3,r18,4030888 <__subdf3+0x404>
 40305a8:	1c87c83a 	sub	r3,r3,r18
 40305ac:	19400044 	addi	r5,r3,1
 40305b0:	28800808 	cmpgei	r2,r5,32
 40305b4:	1000751e 	bne	r2,zero,403078c <__subdf3+0x308>
 40305b8:	00800804 	movi	r2,32
 40305bc:	1145c83a 	sub	r2,r2,r5
 40305c0:	8146d83a 	srl	r3,r16,r5
 40305c4:	80a0983a 	sll	r16,r16,r2
 40305c8:	2084983a 	sll	r2,r4,r2
 40305cc:	2148d83a 	srl	r4,r4,r5
 40305d0:	8020c03a 	cmpne	r16,r16,zero
 40305d4:	10c4b03a 	or	r2,r2,r3
 40305d8:	1420b03a 	or	r16,r2,r16
 40305dc:	0025883a 	mov	r18,zero
 40305e0:	808001cc 	andi	r2,r16,7
 40305e4:	10000726 	beq	r2,zero,4030604 <__subdf3+0x180>
 40305e8:	808003cc 	andi	r2,r16,15
 40305ec:	10800120 	cmpeqi	r2,r2,4
 40305f0:	1000041e 	bne	r2,zero,4030604 <__subdf3+0x180>
 40305f4:	80800104 	addi	r2,r16,4
 40305f8:	1421803a 	cmpltu	r16,r2,r16
 40305fc:	2409883a 	add	r4,r4,r16
 4030600:	1021883a 	mov	r16,r2
 4030604:	2080202c 	andhi	r2,r4,128
 4030608:	10006e26 	beq	r2,zero,40307c4 <__subdf3+0x340>
 403060c:	90c00044 	addi	r3,r18,1
 4030610:	1881ffe0 	cmpeqi	r2,r3,2047
 4030614:	18c1ffcc 	andi	r3,r3,2047
 4030618:	1000801e 	bne	r2,zero,403081c <__subdf3+0x398>
 403061c:	00bfe034 	movhi	r2,65408
 4030620:	10bfffc4 	addi	r2,r2,-1
 4030624:	2088703a 	and	r4,r4,r2
 4030628:	2004977a 	slli	r2,r4,29
 403062c:	2008927a 	slli	r4,r4,9
 4030630:	8020d0fa 	srli	r16,r16,3
 4030634:	2008d33a 	srli	r4,r4,12
 4030638:	1404b03a 	or	r2,r2,r16
 403063c:	1806953a 	slli	r3,r3,20
 4030640:	882297fa 	slli	r17,r17,31
 4030644:	1906b03a 	or	r3,r3,r4
 4030648:	1c46b03a 	or	r3,r3,r17
 403064c:	dfc00417 	ldw	ra,16(sp)
 4030650:	dcc00317 	ldw	r19,12(sp)
 4030654:	dc800217 	ldw	r18,8(sp)
 4030658:	dc400117 	ldw	r17,4(sp)
 403065c:	dc000017 	ldw	r16,0(sp)
 4030660:	dec00504 	addi	sp,sp,20
 4030664:	f800283a 	ret
 4030668:	18002c26 	beq	r3,zero,403071c <__subdf3+0x298>
 403066c:	4487c83a 	sub	r3,r8,r18
 4030670:	5823883a 	mov	r17,r11
 4030674:	9000bb1e 	bne	r18,zero,4030964 <__subdf3+0x4e0>
 4030678:	4b84b03a 	or	r2,r9,r14
 403067c:	10011726 	beq	r2,zero,4030adc <__subdf3+0x658>
 4030680:	18bfffc4 	addi	r2,r3,-1
 4030684:	10016326 	beq	r2,zero,4030c14 <__subdf3+0x790>
 4030688:	18c1ffd8 	cmpnei	r3,r3,2047
 403068c:	18012c26 	beq	r3,zero,4030b40 <__subdf3+0x6bc>
 4030690:	1007883a 	mov	r3,r2
 4030694:	0000b506 	br	403096c <__subdf3+0x4e8>
 4030698:	7b44b03a 	or	r2,r15,r13
 403069c:	103f9626 	beq	r2,zero,40304f8 <__subdf3+0x74>
 40306a0:	3ac03fcc 	andi	r11,r7,255
 40306a4:	29c07d26 	beq	r5,r7,403089c <__subdf3+0x418>
 40306a8:	00ffef0e 	bge	zero,r3,4030668 <__subdf3+0x1e4>
 40306ac:	9081ffd8 	cmpnei	r2,r18,2047
 40306b0:	10005e26 	beq	r2,zero,403082c <__subdf3+0x3a8>
 40306b4:	18800e48 	cmpgei	r2,r3,57
 40306b8:	7bc02034 	orhi	r15,r15,128
 40306bc:	103f9b26 	beq	r2,zero,403052c <__subdf3+0xa8>
 40306c0:	7b60b03a 	or	r16,r15,r13
 40306c4:	8020c03a 	cmpne	r16,r16,zero
 40306c8:	003fa406 	br	403055c <__subdf3+0xd8>
 40306cc:	00c0730e 	bge	zero,r3,403089c <__subdf3+0x418>
 40306d0:	40002626 	beq	r8,zero,403076c <__subdf3+0x2e8>
 40306d4:	9081ffd8 	cmpnei	r2,r18,2047
 40306d8:	10005426 	beq	r2,zero,403082c <__subdf3+0x3a8>
 40306dc:	7bc02034 	orhi	r15,r15,128
 40306e0:	18800e48 	cmpgei	r2,r3,57
 40306e4:	1000431e 	bne	r2,zero,40307f4 <__subdf3+0x370>
 40306e8:	18800808 	cmpgei	r2,r3,32
 40306ec:	1000de26 	beq	r2,zero,4030a68 <__subdf3+0x5e4>
 40306f0:	1c3ff804 	addi	r16,r3,-32
 40306f4:	18800820 	cmpeqi	r2,r3,32
 40306f8:	7c0ad83a 	srl	r5,r15,r16
 40306fc:	1000041e 	bne	r2,zero,4030710 <__subdf3+0x28c>
 4030700:	00801004 	movi	r2,64
 4030704:	10c5c83a 	sub	r2,r2,r3
 4030708:	7884983a 	sll	r2,r15,r2
 403070c:	689ab03a 	or	r13,r13,r2
 4030710:	6820c03a 	cmpne	r16,r13,zero
 4030714:	8160b03a 	or	r16,r16,r5
 4030718:	00003806 	br	40307fc <__subdf3+0x378>
 403071c:	90800044 	addi	r2,r18,1
 4030720:	1081ff8c 	andi	r2,r2,2046
 4030724:	1000a01e 	bne	r2,zero,40309a8 <__subdf3+0x524>
 4030728:	4b8ab03a 	or	r5,r9,r14
 403072c:	7b44b03a 	or	r2,r15,r13
 4030730:	9000f11e 	bne	r18,zero,4030af8 <__subdf3+0x674>
 4030734:	28012e26 	beq	r5,zero,4030bf0 <__subdf3+0x76c>
 4030738:	10010e26 	beq	r2,zero,4030b74 <__subdf3+0x6f0>
 403073c:	7361c83a 	sub	r16,r14,r13
 4030740:	7405803a 	cmpltu	r2,r14,r16
 4030744:	4bc9c83a 	sub	r4,r9,r15
 4030748:	2089c83a 	sub	r4,r4,r2
 403074c:	2080202c 	andhi	r2,r4,128
 4030750:	10016d26 	beq	r2,zero,4030d08 <__subdf3+0x884>
 4030754:	6ba1c83a 	sub	r16,r13,r14
 4030758:	7a49c83a 	sub	r4,r15,r9
 403075c:	6c1b803a 	cmpltu	r13,r13,r16
 4030760:	2349c83a 	sub	r4,r4,r13
 4030764:	5823883a 	mov	r17,r11
 4030768:	003f9d06 	br	40305e0 <__subdf3+0x15c>
 403076c:	7b44b03a 	or	r2,r15,r13
 4030770:	10006226 	beq	r2,zero,40308fc <__subdf3+0x478>
 4030774:	18bfffc4 	addi	r2,r3,-1
 4030778:	1000e926 	beq	r2,zero,4030b20 <__subdf3+0x69c>
 403077c:	18c1ffd8 	cmpnei	r3,r3,2047
 4030780:	18012a26 	beq	r3,zero,4030c2c <__subdf3+0x7a8>
 4030784:	1007883a 	mov	r3,r2
 4030788:	003fd506 	br	40306e0 <__subdf3+0x25c>
 403078c:	18fff844 	addi	r3,r3,-31
 4030790:	28800820 	cmpeqi	r2,r5,32
 4030794:	20c6d83a 	srl	r3,r4,r3
 4030798:	1000041e 	bne	r2,zero,40307ac <__subdf3+0x328>
 403079c:	00801004 	movi	r2,64
 40307a0:	114bc83a 	sub	r5,r2,r5
 40307a4:	2148983a 	sll	r4,r4,r5
 40307a8:	8120b03a 	or	r16,r16,r4
 40307ac:	8020c03a 	cmpne	r16,r16,zero
 40307b0:	80e0b03a 	or	r16,r16,r3
 40307b4:	0009883a 	mov	r4,zero
 40307b8:	0025883a 	mov	r18,zero
 40307bc:	808001cc 	andi	r2,r16,7
 40307c0:	103f891e 	bne	r2,zero,40305e8 <__subdf3+0x164>
 40307c4:	8020d0fa 	srli	r16,r16,3
 40307c8:	2004977a 	slli	r2,r4,29
 40307cc:	2012d0fa 	srli	r9,r4,3
 40307d0:	9007883a 	mov	r3,r18
 40307d4:	8084b03a 	or	r2,r16,r2
 40307d8:	1901ffe0 	cmpeqi	r4,r3,2047
 40307dc:	2000191e 	bne	r4,zero,4030844 <__subdf3+0x3c0>
 40307e0:	01000434 	movhi	r4,16
 40307e4:	213fffc4 	addi	r4,r4,-1
 40307e8:	4908703a 	and	r4,r9,r4
 40307ec:	18c1ffcc 	andi	r3,r3,2047
 40307f0:	003f9206 	br	403063c <__subdf3+0x1b8>
 40307f4:	7b60b03a 	or	r16,r15,r13
 40307f8:	8020c03a 	cmpne	r16,r16,zero
 40307fc:	83a1883a 	add	r16,r16,r14
 4030800:	8389803a 	cmpltu	r4,r16,r14
 4030804:	2249883a 	add	r4,r4,r9
 4030808:	2080202c 	andhi	r2,r4,128
 403080c:	103feb26 	beq	r2,zero,40307bc <__subdf3+0x338>
 4030810:	94800044 	addi	r18,r18,1
 4030814:	9081ffe0 	cmpeqi	r2,r18,2047
 4030818:	10006f26 	beq	r2,zero,40309d8 <__subdf3+0x554>
 403081c:	00c1ffc4 	movi	r3,2047
 4030820:	0009883a 	mov	r4,zero
 4030824:	0005883a 	mov	r2,zero
 4030828:	003f8406 	br	403063c <__subdf3+0x1b8>
 403082c:	4806977a 	slli	r3,r9,29
 4030830:	00880034 	movhi	r2,8192
 4030834:	10bfffc4 	addi	r2,r2,-1
 4030838:	4812d0fa 	srli	r9,r9,3
 403083c:	2088703a 	and	r4,r4,r2
 4030840:	20c4b03a 	or	r2,r4,r3
 4030844:	4886b03a 	or	r3,r9,r2
 4030848:	18013726 	beq	r3,zero,4030d28 <__subdf3+0x8a4>
 403084c:	00c00434 	movhi	r3,16
 4030850:	18ffffc4 	addi	r3,r3,-1
 4030854:	49000234 	orhi	r4,r9,8
 4030858:	20c8703a 	and	r4,r4,r3
 403085c:	00c1ffc4 	movi	r3,2047
 4030860:	003f7606 	br	403063c <__subdf3+0x1b8>
 4030864:	8009883a 	mov	r4,r16
 4030868:	402340c0 	call	402340c <__clzsi2>
 403086c:	10c00604 	addi	r3,r2,24
 4030870:	19000808 	cmpgei	r4,r3,32
 4030874:	203f4526 	beq	r4,zero,403058c <__subdf3+0x108>
 4030878:	113ffe04 	addi	r4,r2,-8
 403087c:	8108983a 	sll	r4,r16,r4
 4030880:	0021883a 	mov	r16,zero
 4030884:	1cbf480e 	bge	r3,r18,40305a8 <__subdf3+0x124>
 4030888:	00bfe034 	movhi	r2,65408
 403088c:	10bfffc4 	addi	r2,r2,-1
 4030890:	90e5c83a 	sub	r18,r18,r3
 4030894:	2088703a 	and	r4,r4,r2
 4030898:	003f5106 	br	40305e0 <__subdf3+0x15c>
 403089c:	18001e26 	beq	r3,zero,4030918 <__subdf3+0x494>
 40308a0:	4487c83a 	sub	r3,r8,r18
 40308a4:	90006826 	beq	r18,zero,4030a48 <__subdf3+0x5c4>
 40308a8:	5000a526 	beq	r10,zero,4030b40 <__subdf3+0x6bc>
 40308ac:	4a402034 	orhi	r9,r9,128
 40308b0:	18800e48 	cmpgei	r2,r3,57
 40308b4:	1000b61e 	bne	r2,zero,4030b90 <__subdf3+0x70c>
 40308b8:	18800808 	cmpgei	r2,r3,32
 40308bc:	1001021e 	bne	r2,zero,4030cc8 <__subdf3+0x844>
 40308c0:	00800804 	movi	r2,32
 40308c4:	10c5c83a 	sub	r2,r2,r3
 40308c8:	48a0983a 	sll	r16,r9,r2
 40308cc:	70c8d83a 	srl	r4,r14,r3
 40308d0:	7084983a 	sll	r2,r14,r2
 40308d4:	48d2d83a 	srl	r9,r9,r3
 40308d8:	8120b03a 	or	r16,r16,r4
 40308dc:	1004c03a 	cmpne	r2,r2,zero
 40308e0:	80a0b03a 	or	r16,r16,r2
 40308e4:	7a5f883a 	add	r15,r15,r9
 40308e8:	8361883a 	add	r16,r16,r13
 40308ec:	8349803a 	cmpltu	r4,r16,r13
 40308f0:	23c9883a 	add	r4,r4,r15
 40308f4:	4025883a 	mov	r18,r8
 40308f8:	003fc306 	br	4030808 <__subdf3+0x384>
 40308fc:	480a977a 	slli	r5,r9,29
 4030900:	00880034 	movhi	r2,8192
 4030904:	10bfffc4 	addi	r2,r2,-1
 4030908:	2088703a 	and	r4,r4,r2
 403090c:	4812d0fa 	srli	r9,r9,3
 4030910:	2144b03a 	or	r2,r4,r5
 4030914:	003fb006 	br	40307d8 <__subdf3+0x354>
 4030918:	90800044 	addi	r2,r18,1
 403091c:	1141ff8c 	andi	r5,r2,2046
 4030920:	28005c1e 	bne	r5,zero,4030a94 <__subdf3+0x610>
 4030924:	4b84b03a 	or	r2,r9,r14
 4030928:	9000a71e 	bne	r18,zero,4030bc8 <__subdf3+0x744>
 403092c:	1000df26 	beq	r2,zero,4030cac <__subdf3+0x828>
 4030930:	7b44b03a 	or	r2,r15,r13
 4030934:	10008f26 	beq	r2,zero,4030b74 <__subdf3+0x6f0>
 4030938:	7361883a 	add	r16,r14,r13
 403093c:	4bc9883a 	add	r4,r9,r15
 4030940:	839d803a 	cmpltu	r14,r16,r14
 4030944:	2389883a 	add	r4,r4,r14
 4030948:	2080202c 	andhi	r2,r4,128
 403094c:	103f9b26 	beq	r2,zero,40307bc <__subdf3+0x338>
 4030950:	00bfe034 	movhi	r2,65408
 4030954:	10bfffc4 	addi	r2,r2,-1
 4030958:	2088703a 	and	r4,r4,r2
 403095c:	04800044 	movi	r18,1
 4030960:	003f9606 	br	40307bc <__subdf3+0x338>
 4030964:	50007626 	beq	r10,zero,4030b40 <__subdf3+0x6bc>
 4030968:	4a402034 	orhi	r9,r9,128
 403096c:	18800e48 	cmpgei	r2,r3,57
 4030970:	10002e1e 	bne	r2,zero,4030a2c <__subdf3+0x5a8>
 4030974:	18800808 	cmpgei	r2,r3,32
 4030978:	1000881e 	bne	r2,zero,4030b9c <__subdf3+0x718>
 403097c:	00800804 	movi	r2,32
 4030980:	10c5c83a 	sub	r2,r2,r3
 4030984:	48a0983a 	sll	r16,r9,r2
 4030988:	70c8d83a 	srl	r4,r14,r3
 403098c:	709c983a 	sll	r14,r14,r2
 4030990:	48d2d83a 	srl	r9,r9,r3
 4030994:	8120b03a 	or	r16,r16,r4
 4030998:	701cc03a 	cmpne	r14,r14,zero
 403099c:	83a0b03a 	or	r16,r16,r14
 40309a0:	7a5fc83a 	sub	r15,r15,r9
 40309a4:	00002306 	br	4030a34 <__subdf3+0x5b0>
 40309a8:	7361c83a 	sub	r16,r14,r13
 40309ac:	4be7c83a 	sub	r19,r9,r15
 40309b0:	7409803a 	cmpltu	r4,r14,r16
 40309b4:	9927c83a 	sub	r19,r19,r4
 40309b8:	9880202c 	andhi	r2,r19,128
 40309bc:	1000411e 	bne	r2,zero,4030ac4 <__subdf3+0x640>
 40309c0:	84c4b03a 	or	r2,r16,r19
 40309c4:	103eed1e 	bne	r2,zero,403057c <__subdf3+0xf8>
 40309c8:	0013883a 	mov	r9,zero
 40309cc:	0023883a 	mov	r17,zero
 40309d0:	003f8306 	br	40307e0 <__subdf3+0x35c>
 40309d4:	04800084 	movi	r18,2
 40309d8:	00bfe034 	movhi	r2,65408
 40309dc:	10bfffc4 	addi	r2,r2,-1
 40309e0:	8006d07a 	srli	r3,r16,1
 40309e4:	2088703a 	and	r4,r4,r2
 40309e8:	200497fa 	slli	r2,r4,31
 40309ec:	8400004c 	andi	r16,r16,1
 40309f0:	1c20b03a 	or	r16,r3,r16
 40309f4:	2008d07a 	srli	r4,r4,1
 40309f8:	1420b03a 	or	r16,r2,r16
 40309fc:	003ef806 	br	40305e0 <__subdf3+0x15c>
 4030a00:	1c3ff804 	addi	r16,r3,-32
 4030a04:	18800820 	cmpeqi	r2,r3,32
 4030a08:	7c0ad83a 	srl	r5,r15,r16
 4030a0c:	1000041e 	bne	r2,zero,4030a20 <__subdf3+0x59c>
 4030a10:	00801004 	movi	r2,64
 4030a14:	10c5c83a 	sub	r2,r2,r3
 4030a18:	7884983a 	sll	r2,r15,r2
 4030a1c:	689ab03a 	or	r13,r13,r2
 4030a20:	6820c03a 	cmpne	r16,r13,zero
 4030a24:	8160b03a 	or	r16,r16,r5
 4030a28:	003ecc06 	br	403055c <__subdf3+0xd8>
 4030a2c:	4b92b03a 	or	r9,r9,r14
 4030a30:	4820c03a 	cmpne	r16,r9,zero
 4030a34:	6c21c83a 	sub	r16,r13,r16
 4030a38:	6c09803a 	cmpltu	r4,r13,r16
 4030a3c:	7909c83a 	sub	r4,r15,r4
 4030a40:	4025883a 	mov	r18,r8
 4030a44:	003ec806 	br	4030568 <__subdf3+0xe4>
 4030a48:	4b84b03a 	or	r2,r9,r14
 4030a4c:	10007e26 	beq	r2,zero,4030c48 <__subdf3+0x7c4>
 4030a50:	18bfffc4 	addi	r2,r3,-1
 4030a54:	1000a726 	beq	r2,zero,4030cf4 <__subdf3+0x870>
 4030a58:	18c1ffd8 	cmpnei	r3,r3,2047
 4030a5c:	18003826 	beq	r3,zero,4030b40 <__subdf3+0x6bc>
 4030a60:	1007883a 	mov	r3,r2
 4030a64:	003f9206 	br	40308b0 <__subdf3+0x42c>
 4030a68:	00800804 	movi	r2,32
 4030a6c:	10c5c83a 	sub	r2,r2,r3
 4030a70:	78a0983a 	sll	r16,r15,r2
 4030a74:	68c8d83a 	srl	r4,r13,r3
 4030a78:	689a983a 	sll	r13,r13,r2
 4030a7c:	78c4d83a 	srl	r2,r15,r3
 4030a80:	8120b03a 	or	r16,r16,r4
 4030a84:	681ac03a 	cmpne	r13,r13,zero
 4030a88:	8360b03a 	or	r16,r16,r13
 4030a8c:	4893883a 	add	r9,r9,r2
 4030a90:	003f5a06 	br	40307fc <__subdf3+0x378>
 4030a94:	10c1ffe0 	cmpeqi	r3,r2,2047
 4030a98:	183f601e 	bne	r3,zero,403081c <__subdf3+0x398>
 4030a9c:	735b883a 	add	r13,r14,r13
 4030aa0:	6b9d803a 	cmpltu	r14,r13,r14
 4030aa4:	4bc9883a 	add	r4,r9,r15
 4030aa8:	2389883a 	add	r4,r4,r14
 4030aac:	202097fa 	slli	r16,r4,31
 4030ab0:	681ad07a 	srli	r13,r13,1
 4030ab4:	2008d07a 	srli	r4,r4,1
 4030ab8:	1025883a 	mov	r18,r2
 4030abc:	8360b03a 	or	r16,r16,r13
 4030ac0:	003f3e06 	br	40307bc <__subdf3+0x338>
 4030ac4:	6ba1c83a 	sub	r16,r13,r14
 4030ac8:	7a49c83a 	sub	r4,r15,r9
 4030acc:	6c1b803a 	cmpltu	r13,r13,r16
 4030ad0:	2367c83a 	sub	r19,r4,r13
 4030ad4:	5823883a 	mov	r17,r11
 4030ad8:	003ea806 	br	403057c <__subdf3+0xf8>
 4030adc:	7808977a 	slli	r4,r15,29
 4030ae0:	00880034 	movhi	r2,8192
 4030ae4:	10bfffc4 	addi	r2,r2,-1
 4030ae8:	308c703a 	and	r6,r6,r2
 4030aec:	7812d0fa 	srli	r9,r15,3
 4030af0:	3104b03a 	or	r2,r6,r4
 4030af4:	003f3806 	br	40307d8 <__subdf3+0x354>
 4030af8:	28005a1e 	bne	r5,zero,4030c64 <__subdf3+0x7e0>
 4030afc:	10008526 	beq	r2,zero,4030d14 <__subdf3+0x890>
 4030b00:	7806977a 	slli	r3,r15,29
 4030b04:	00880034 	movhi	r2,8192
 4030b08:	10bfffc4 	addi	r2,r2,-1
 4030b0c:	3084703a 	and	r2,r6,r2
 4030b10:	7812d0fa 	srli	r9,r15,3
 4030b14:	10c4b03a 	or	r2,r2,r3
 4030b18:	5823883a 	mov	r17,r11
 4030b1c:	003f4906 	br	4030844 <__subdf3+0x3c0>
 4030b20:	7361883a 	add	r16,r14,r13
 4030b24:	4bc9883a 	add	r4,r9,r15
 4030b28:	839d803a 	cmpltu	r14,r16,r14
 4030b2c:	2389883a 	add	r4,r4,r14
 4030b30:	2080202c 	andhi	r2,r4,128
 4030b34:	103fa71e 	bne	r2,zero,40309d4 <__subdf3+0x550>
 4030b38:	04800044 	movi	r18,1
 4030b3c:	003f1f06 	br	40307bc <__subdf3+0x338>
 4030b40:	7806977a 	slli	r3,r15,29
 4030b44:	00880034 	movhi	r2,8192
 4030b48:	10bfffc4 	addi	r2,r2,-1
 4030b4c:	3084703a 	and	r2,r6,r2
 4030b50:	7812d0fa 	srli	r9,r15,3
 4030b54:	10c4b03a 	or	r2,r2,r3
 4030b58:	003f3a06 	br	4030844 <__subdf3+0x3c0>
 4030b5c:	7361c83a 	sub	r16,r14,r13
 4030b60:	4bc9c83a 	sub	r4,r9,r15
 4030b64:	741d803a 	cmpltu	r14,r14,r16
 4030b68:	2389c83a 	sub	r4,r4,r14
 4030b6c:	04800044 	movi	r18,1
 4030b70:	003e7d06 	br	4030568 <__subdf3+0xe4>
 4030b74:	480a977a 	slli	r5,r9,29
 4030b78:	00880034 	movhi	r2,8192
 4030b7c:	10bfffc4 	addi	r2,r2,-1
 4030b80:	2084703a 	and	r2,r4,r2
 4030b84:	4812d0fa 	srli	r9,r9,3
 4030b88:	1144b03a 	or	r2,r2,r5
 4030b8c:	003f1406 	br	40307e0 <__subdf3+0x35c>
 4030b90:	4b92b03a 	or	r9,r9,r14
 4030b94:	4820c03a 	cmpne	r16,r9,zero
 4030b98:	003f5306 	br	40308e8 <__subdf3+0x464>
 4030b9c:	1c3ff804 	addi	r16,r3,-32
 4030ba0:	19000820 	cmpeqi	r4,r3,32
 4030ba4:	4c04d83a 	srl	r2,r9,r16
 4030ba8:	2000041e 	bne	r4,zero,4030bbc <__subdf3+0x738>
 4030bac:	01001004 	movi	r4,64
 4030bb0:	20c7c83a 	sub	r3,r4,r3
 4030bb4:	48d2983a 	sll	r9,r9,r3
 4030bb8:	725cb03a 	or	r14,r14,r9
 4030bbc:	7020c03a 	cmpne	r16,r14,zero
 4030bc0:	80a0b03a 	or	r16,r16,r2
 4030bc4:	003f9b06 	br	4030a34 <__subdf3+0x5b0>
 4030bc8:	103fdd26 	beq	r2,zero,4030b40 <__subdf3+0x6bc>
 4030bcc:	7b5ab03a 	or	r13,r15,r13
 4030bd0:	480a977a 	slli	r5,r9,29
 4030bd4:	4812d0fa 	srli	r9,r9,3
 4030bd8:	6800251e 	bne	r13,zero,4030c70 <__subdf3+0x7ec>
 4030bdc:	00880034 	movhi	r2,8192
 4030be0:	10bfffc4 	addi	r2,r2,-1
 4030be4:	2084703a 	and	r2,r4,r2
 4030be8:	1144b03a 	or	r2,r2,r5
 4030bec:	003f1506 	br	4030844 <__subdf3+0x3c0>
 4030bf0:	103f7526 	beq	r2,zero,40309c8 <__subdf3+0x544>
 4030bf4:	7808977a 	slli	r4,r15,29
 4030bf8:	00880034 	movhi	r2,8192
 4030bfc:	10bfffc4 	addi	r2,r2,-1
 4030c00:	3084703a 	and	r2,r6,r2
 4030c04:	7812d0fa 	srli	r9,r15,3
 4030c08:	1104b03a 	or	r2,r2,r4
 4030c0c:	5823883a 	mov	r17,r11
 4030c10:	003ef306 	br	40307e0 <__subdf3+0x35c>
 4030c14:	6ba1c83a 	sub	r16,r13,r14
 4030c18:	7a49c83a 	sub	r4,r15,r9
 4030c1c:	6c1b803a 	cmpltu	r13,r13,r16
 4030c20:	2349c83a 	sub	r4,r4,r13
 4030c24:	04800044 	movi	r18,1
 4030c28:	003e4f06 	br	4030568 <__subdf3+0xe4>
 4030c2c:	4806977a 	slli	r3,r9,29
 4030c30:	00880034 	movhi	r2,8192
 4030c34:	10bfffc4 	addi	r2,r2,-1
 4030c38:	2084703a 	and	r2,r4,r2
 4030c3c:	4812d0fa 	srli	r9,r9,3
 4030c40:	10c4b03a 	or	r2,r2,r3
 4030c44:	003eff06 	br	4030844 <__subdf3+0x3c0>
 4030c48:	7808977a 	slli	r4,r15,29
 4030c4c:	00880034 	movhi	r2,8192
 4030c50:	10bfffc4 	addi	r2,r2,-1
 4030c54:	3084703a 	and	r2,r6,r2
 4030c58:	7812d0fa 	srli	r9,r15,3
 4030c5c:	1104b03a 	or	r2,r2,r4
 4030c60:	003edd06 	br	40307d8 <__subdf3+0x354>
 4030c64:	480a977a 	slli	r5,r9,29
 4030c68:	4812d0fa 	srli	r9,r9,3
 4030c6c:	103fdb26 	beq	r2,zero,4030bdc <__subdf3+0x758>
 4030c70:	00c80034 	movhi	r3,8192
 4030c74:	18ffffc4 	addi	r3,r3,-1
 4030c78:	20c4703a 	and	r2,r4,r3
 4030c7c:	4900022c 	andhi	r4,r9,8
 4030c80:	1144b03a 	or	r2,r2,r5
 4030c84:	203eef26 	beq	r4,zero,4030844 <__subdf3+0x3c0>
 4030c88:	7808d0fa 	srli	r4,r15,3
 4030c8c:	2140022c 	andhi	r5,r4,8
 4030c90:	283eec1e 	bne	r5,zero,4030844 <__subdf3+0x3c0>
 4030c94:	7804977a 	slli	r2,r15,29
 4030c98:	30cc703a 	and	r6,r6,r3
 4030c9c:	5823883a 	mov	r17,r11
 4030ca0:	3084b03a 	or	r2,r6,r2
 4030ca4:	2013883a 	mov	r9,r4
 4030ca8:	003ee606 	br	4030844 <__subdf3+0x3c0>
 4030cac:	7808977a 	slli	r4,r15,29
 4030cb0:	00880034 	movhi	r2,8192
 4030cb4:	10bfffc4 	addi	r2,r2,-1
 4030cb8:	3084703a 	and	r2,r6,r2
 4030cbc:	7812d0fa 	srli	r9,r15,3
 4030cc0:	1104b03a 	or	r2,r2,r4
 4030cc4:	003ec606 	br	40307e0 <__subdf3+0x35c>
 4030cc8:	18bff804 	addi	r2,r3,-32
 4030ccc:	19000820 	cmpeqi	r4,r3,32
 4030cd0:	4884d83a 	srl	r2,r9,r2
 4030cd4:	2000041e 	bne	r4,zero,4030ce8 <__subdf3+0x864>
 4030cd8:	01001004 	movi	r4,64
 4030cdc:	20c7c83a 	sub	r3,r4,r3
 4030ce0:	48d2983a 	sll	r9,r9,r3
 4030ce4:	725cb03a 	or	r14,r14,r9
 4030ce8:	7020c03a 	cmpne	r16,r14,zero
 4030cec:	80a0b03a 	or	r16,r16,r2
 4030cf0:	003efd06 	br	40308e8 <__subdf3+0x464>
 4030cf4:	7361883a 	add	r16,r14,r13
 4030cf8:	4bc9883a 	add	r4,r9,r15
 4030cfc:	835b803a 	cmpltu	r13,r16,r13
 4030d00:	2349883a 	add	r4,r4,r13
 4030d04:	003f8a06 	br	4030b30 <__subdf3+0x6ac>
 4030d08:	8104b03a 	or	r2,r16,r4
 4030d0c:	103f2e26 	beq	r2,zero,40309c8 <__subdf3+0x544>
 4030d10:	003eaa06 	br	40307bc <__subdf3+0x338>
 4030d14:	02400434 	movhi	r9,16
 4030d18:	0023883a 	mov	r17,zero
 4030d1c:	00bfffc4 	movi	r2,-1
 4030d20:	4a7fffc4 	addi	r9,r9,-1
 4030d24:	003ec906 	br	403084c <__subdf3+0x3c8>
 4030d28:	0005883a 	mov	r2,zero
 4030d2c:	00c1ffc4 	movi	r3,2047
 4030d30:	0009883a 	mov	r4,zero
 4030d34:	003e4106 	br	403063c <__subdf3+0x1b8>

04030d38 <__unorddf2>:
 4030d38:	2806d53a 	srli	r3,r5,20
 4030d3c:	3810d53a 	srli	r8,r7,20
 4030d40:	02400434 	movhi	r9,16
 4030d44:	18c1ffcc 	andi	r3,r3,2047
 4030d48:	4a7fffc4 	addi	r9,r9,-1
 4030d4c:	18c1ffd8 	cmpnei	r3,r3,2047
 4030d50:	2a4a703a 	and	r5,r5,r9
 4030d54:	3a4e703a 	and	r7,r7,r9
 4030d58:	4201ffcc 	andi	r8,r8,2047
 4030d5c:	18000426 	beq	r3,zero,4030d70 <__unorddf2+0x38>
 4030d60:	4201ffd8 	cmpnei	r8,r8,2047
 4030d64:	40000626 	beq	r8,zero,4030d80 <__unorddf2+0x48>
 4030d68:	0005883a 	mov	r2,zero
 4030d6c:	f800283a 	ret
 4030d70:	290ab03a 	or	r5,r5,r4
 4030d74:	283ffa26 	beq	r5,zero,4030d60 <__unorddf2+0x28>
 4030d78:	00800044 	movi	r2,1
 4030d7c:	f800283a 	ret
 4030d80:	398eb03a 	or	r7,r7,r6
 4030d84:	3804c03a 	cmpne	r2,r7,zero
 4030d88:	f800283a 	ret

04030d8c <__fixdfsi>:
 4030d8c:	2806d53a 	srli	r3,r5,20
 4030d90:	01800434 	movhi	r6,16
 4030d94:	31bfffc4 	addi	r6,r6,-1
 4030d98:	18c1ffcc 	andi	r3,r3,2047
 4030d9c:	19c0ffd0 	cmplti	r7,r3,1023
 4030da0:	2810d7fa 	srli	r8,r5,31
 4030da4:	298a703a 	and	r5,r5,r6
 4030da8:	3800061e 	bne	r7,zero,4030dc4 <__fixdfsi+0x38>
 4030dac:	18810790 	cmplti	r2,r3,1054
 4030db0:	1000061e 	bne	r2,zero,4030dcc <__fixdfsi+0x40>
 4030db4:	00a00034 	movhi	r2,32768
 4030db8:	10bfffc4 	addi	r2,r2,-1
 4030dbc:	4085883a 	add	r2,r8,r2
 4030dc0:	f800283a 	ret
 4030dc4:	0005883a 	mov	r2,zero
 4030dc8:	f800283a 	ret
 4030dcc:	01810cc4 	movi	r6,1075
 4030dd0:	30cdc83a 	sub	r6,r6,r3
 4030dd4:	30800808 	cmpgei	r2,r6,32
 4030dd8:	29400434 	orhi	r5,r5,16
 4030ddc:	1000071e 	bne	r2,zero,4030dfc <__fixdfsi+0x70>
 4030de0:	18befb44 	addi	r2,r3,-1043
 4030de4:	2884983a 	sll	r2,r5,r2
 4030de8:	2188d83a 	srl	r4,r4,r6
 4030dec:	1104b03a 	or	r2,r2,r4
 4030df0:	403ff526 	beq	r8,zero,4030dc8 <__fixdfsi+0x3c>
 4030df4:	0085c83a 	sub	r2,zero,r2
 4030df8:	f800283a 	ret
 4030dfc:	008104c4 	movi	r2,1043
 4030e00:	10c5c83a 	sub	r2,r2,r3
 4030e04:	2884d83a 	srl	r2,r5,r2
 4030e08:	003ff906 	br	4030df0 <__fixdfsi+0x64>

04030e0c <__floatsidf>:
 4030e0c:	defffd04 	addi	sp,sp,-12
 4030e10:	dfc00215 	stw	ra,8(sp)
 4030e14:	dc400115 	stw	r17,4(sp)
 4030e18:	dc000015 	stw	r16,0(sp)
 4030e1c:	20001326 	beq	r4,zero,4030e6c <__floatsidf+0x60>
 4030e20:	2022d7fa 	srli	r17,r4,31
 4030e24:	2021883a 	mov	r16,r4
 4030e28:	20002416 	blt	r4,zero,4030ebc <__floatsidf+0xb0>
 4030e2c:	8009883a 	mov	r4,r16
 4030e30:	402340c0 	call	402340c <__clzsi2>
 4030e34:	01010784 	movi	r4,1054
 4030e38:	2089c83a 	sub	r4,r4,r2
 4030e3c:	114002c8 	cmpgei	r5,r2,11
 4030e40:	20c1ffcc 	andi	r3,r4,2047
 4030e44:	2800161e 	bne	r5,zero,4030ea0 <__floatsidf+0x94>
 4030e48:	010002c4 	movi	r4,11
 4030e4c:	2089c83a 	sub	r4,r4,r2
 4030e50:	810ad83a 	srl	r5,r16,r4
 4030e54:	01000434 	movhi	r4,16
 4030e58:	10800544 	addi	r2,r2,21
 4030e5c:	213fffc4 	addi	r4,r4,-1
 4030e60:	8084983a 	sll	r2,r16,r2
 4030e64:	290a703a 	and	r5,r5,r4
 4030e68:	00000406 	br	4030e7c <__floatsidf+0x70>
 4030e6c:	0023883a 	mov	r17,zero
 4030e70:	0007883a 	mov	r3,zero
 4030e74:	000b883a 	mov	r5,zero
 4030e78:	0005883a 	mov	r2,zero
 4030e7c:	1808953a 	slli	r4,r3,20
 4030e80:	880697fa 	slli	r3,r17,31
 4030e84:	2148b03a 	or	r4,r4,r5
 4030e88:	20c6b03a 	or	r3,r4,r3
 4030e8c:	dfc00217 	ldw	ra,8(sp)
 4030e90:	dc400117 	ldw	r17,4(sp)
 4030e94:	dc000017 	ldw	r16,0(sp)
 4030e98:	dec00304 	addi	sp,sp,12
 4030e9c:	f800283a 	ret
 4030ea0:	10bffd44 	addi	r2,r2,-11
 4030ea4:	808a983a 	sll	r5,r16,r2
 4030ea8:	00800434 	movhi	r2,16
 4030eac:	10bfffc4 	addi	r2,r2,-1
 4030eb0:	288a703a 	and	r5,r5,r2
 4030eb4:	0005883a 	mov	r2,zero
 4030eb8:	003ff006 	br	4030e7c <__floatsidf+0x70>
 4030ebc:	0121c83a 	sub	r16,zero,r4
 4030ec0:	003fda06 	br	4030e2c <__floatsidf+0x20>

04030ec4 <__floatunsidf>:
 4030ec4:	defffe04 	addi	sp,sp,-8
 4030ec8:	dc000015 	stw	r16,0(sp)
 4030ecc:	dfc00115 	stw	ra,4(sp)
 4030ed0:	2021883a 	mov	r16,r4
 4030ed4:	20000f26 	beq	r4,zero,4030f14 <__floatunsidf+0x50>
 4030ed8:	402340c0 	call	402340c <__clzsi2>
 4030edc:	00c10784 	movi	r3,1054
 4030ee0:	1887c83a 	sub	r3,r3,r2
 4030ee4:	110002c8 	cmpgei	r4,r2,11
 4030ee8:	18c1ffcc 	andi	r3,r3,2047
 4030eec:	2000121e 	bne	r4,zero,4030f38 <__floatunsidf+0x74>
 4030ef0:	014002c4 	movi	r5,11
 4030ef4:	288bc83a 	sub	r5,r5,r2
 4030ef8:	814ad83a 	srl	r5,r16,r5
 4030efc:	01000434 	movhi	r4,16
 4030f00:	10800544 	addi	r2,r2,21
 4030f04:	213fffc4 	addi	r4,r4,-1
 4030f08:	80a0983a 	sll	r16,r16,r2
 4030f0c:	290a703a 	and	r5,r5,r4
 4030f10:	00000206 	br	4030f1c <__floatunsidf+0x58>
 4030f14:	0007883a 	mov	r3,zero
 4030f18:	000b883a 	mov	r5,zero
 4030f1c:	1806953a 	slli	r3,r3,20
 4030f20:	8005883a 	mov	r2,r16
 4030f24:	1946b03a 	or	r3,r3,r5
 4030f28:	dfc00117 	ldw	ra,4(sp)
 4030f2c:	dc000017 	ldw	r16,0(sp)
 4030f30:	dec00204 	addi	sp,sp,8
 4030f34:	f800283a 	ret
 4030f38:	117ffd44 	addi	r5,r2,-11
 4030f3c:	814a983a 	sll	r5,r16,r5
 4030f40:	00800434 	movhi	r2,16
 4030f44:	10bfffc4 	addi	r2,r2,-1
 4030f48:	288a703a 	and	r5,r5,r2
 4030f4c:	0021883a 	mov	r16,zero
 4030f50:	003ff206 	br	4030f1c <__floatunsidf+0x58>

04030f54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4030f54:	defffe04 	addi	sp,sp,-8
 4030f58:	dfc00115 	stw	ra,4(sp)
 4030f5c:	df000015 	stw	fp,0(sp)
 4030f60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4030f64:	d0a00a17 	ldw	r2,-32728(gp)
 4030f68:	10000326 	beq	r2,zero,4030f78 <alt_get_errno+0x24>
 4030f6c:	d0a00a17 	ldw	r2,-32728(gp)
 4030f70:	103ee83a 	callr	r2
 4030f74:	00000106 	br	4030f7c <alt_get_errno+0x28>
 4030f78:	d0a01104 	addi	r2,gp,-32700
}
 4030f7c:	e037883a 	mov	sp,fp
 4030f80:	dfc00117 	ldw	ra,4(sp)
 4030f84:	df000017 	ldw	fp,0(sp)
 4030f88:	dec00204 	addi	sp,sp,8
 4030f8c:	f800283a 	ret

04030f90 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 4030f90:	defffb04 	addi	sp,sp,-20
 4030f94:	dfc00415 	stw	ra,16(sp)
 4030f98:	df000315 	stw	fp,12(sp)
 4030f9c:	df000304 	addi	fp,sp,12
 4030fa0:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 4030fa4:	e0bffd17 	ldw	r2,-12(fp)
 4030fa8:	10000616 	blt	r2,zero,4030fc4 <close+0x34>
 4030fac:	e0bffd17 	ldw	r2,-12(fp)
 4030fb0:	10c00324 	muli	r3,r2,12
 4030fb4:	00800034 	movhi	r2,0
 4030fb8:	1084c904 	addi	r2,r2,4900
 4030fbc:	1885883a 	add	r2,r3,r2
 4030fc0:	00000106 	br	4030fc8 <close+0x38>
 4030fc4:	0005883a 	mov	r2,zero
 4030fc8:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
 4030fcc:	e0bfff17 	ldw	r2,-4(fp)
 4030fd0:	10001926 	beq	r2,zero,4031038 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 4030fd4:	e0bfff17 	ldw	r2,-4(fp)
 4030fd8:	10800017 	ldw	r2,0(r2)
 4030fdc:	10800417 	ldw	r2,16(r2)
 4030fe0:	10000626 	beq	r2,zero,4030ffc <close+0x6c>
 4030fe4:	e0bfff17 	ldw	r2,-4(fp)
 4030fe8:	10800017 	ldw	r2,0(r2)
 4030fec:	10800417 	ldw	r2,16(r2)
 4030ff0:	e13fff17 	ldw	r4,-4(fp)
 4030ff4:	103ee83a 	callr	r2
 4030ff8:	00000106 	br	4031000 <close+0x70>
 4030ffc:	0005883a 	mov	r2,zero
 4031000:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 4031004:	e13ffd17 	ldw	r4,-12(fp)
 4031008:	4031bd80 	call	4031bd8 <alt_release_fd>
    if (rval < 0)
 403100c:	e0bffe17 	ldw	r2,-8(fp)
 4031010:	1000070e 	bge	r2,zero,4031030 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 4031014:	4030f540 	call	4030f54 <alt_get_errno>
 4031018:	1007883a 	mov	r3,r2
 403101c:	e0bffe17 	ldw	r2,-8(fp)
 4031020:	0085c83a 	sub	r2,zero,r2
 4031024:	18800015 	stw	r2,0(r3)
      return -1;
 4031028:	00bfffc4 	movi	r2,-1
 403102c:	00000706 	br	403104c <close+0xbc>
    }
    return 0;
 4031030:	0005883a 	mov	r2,zero
 4031034:	00000506 	br	403104c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4031038:	4030f540 	call	4030f54 <alt_get_errno>
 403103c:	1007883a 	mov	r3,r2
 4031040:	00801444 	movi	r2,81
 4031044:	18800015 	stw	r2,0(r3)
    return -1;
 4031048:	00bfffc4 	movi	r2,-1
  }
}
 403104c:	e037883a 	mov	sp,fp
 4031050:	dfc00117 	ldw	ra,4(sp)
 4031054:	df000017 	ldw	fp,0(sp)
 4031058:	dec00204 	addi	sp,sp,8
 403105c:	f800283a 	ret

04031060 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 4031060:	defffc04 	addi	sp,sp,-16
 4031064:	df000315 	stw	fp,12(sp)
 4031068:	df000304 	addi	fp,sp,12
 403106c:	e13fff15 	stw	r4,-4(fp)
 4031070:	e17ffe15 	stw	r5,-8(fp)
 4031074:	e1bffd15 	stw	r6,-12(fp)
  return len;
 4031078:	e0bffd17 	ldw	r2,-12(fp)
}
 403107c:	e037883a 	mov	sp,fp
 4031080:	df000017 	ldw	fp,0(sp)
 4031084:	dec00104 	addi	sp,sp,4
 4031088:	f800283a 	ret

0403108c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 403108c:	defffd04 	addi	sp,sp,-12
 4031090:	df000215 	stw	fp,8(sp)
 4031094:	df000204 	addi	fp,sp,8
 4031098:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 403109c:	0001883a 	nop
 40310a0:	e0bffe17 	ldw	r2,-8(fp)
 40310a4:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 40310a8:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 40310ac:	10000226 	beq	r2,zero,40310b8 <_exit+0x2c>
    ALT_SIM_FAIL();
 40310b0:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
 40310b4:	00000106 	br	40310bc <_exit+0x30>
    ALT_SIM_PASS();
 40310b8:	002af0b0 	cmpltui	zero,zero,43970
}
 40310bc:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 40310c0:	003fff06 	br	40310c0 <_exit+0x34>

040310c4 <alt_get_errno>:
{
 40310c4:	defffe04 	addi	sp,sp,-8
 40310c8:	dfc00115 	stw	ra,4(sp)
 40310cc:	df000015 	stw	fp,0(sp)
 40310d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40310d4:	d0a00a17 	ldw	r2,-32728(gp)
 40310d8:	10000326 	beq	r2,zero,40310e8 <alt_get_errno+0x24>
 40310dc:	d0a00a17 	ldw	r2,-32728(gp)
 40310e0:	103ee83a 	callr	r2
 40310e4:	00000106 	br	40310ec <alt_get_errno+0x28>
 40310e8:	d0a01104 	addi	r2,gp,-32700
}
 40310ec:	e037883a 	mov	sp,fp
 40310f0:	dfc00117 	ldw	ra,4(sp)
 40310f4:	df000017 	ldw	fp,0(sp)
 40310f8:	dec00204 	addi	sp,sp,8
 40310fc:	f800283a 	ret

04031100 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 4031100:	defffb04 	addi	sp,sp,-20
 4031104:	dfc00415 	stw	ra,16(sp)
 4031108:	df000315 	stw	fp,12(sp)
 403110c:	df000304 	addi	fp,sp,12
 4031110:	e13ffe15 	stw	r4,-8(fp)
 4031114:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4031118:	e0bffe17 	ldw	r2,-8(fp)
 403111c:	10000616 	blt	r2,zero,4031138 <fstat+0x38>
 4031120:	e0bffe17 	ldw	r2,-8(fp)
 4031124:	10c00324 	muli	r3,r2,12
 4031128:	00800034 	movhi	r2,0
 403112c:	1084c904 	addi	r2,r2,4900
 4031130:	1885883a 	add	r2,r3,r2
 4031134:	00000106 	br	403113c <fstat+0x3c>
 4031138:	0005883a 	mov	r2,zero
 403113c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 4031140:	e0bfff17 	ldw	r2,-4(fp)
 4031144:	10001026 	beq	r2,zero,4031188 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 4031148:	e0bfff17 	ldw	r2,-4(fp)
 403114c:	10800017 	ldw	r2,0(r2)
 4031150:	10800817 	ldw	r2,32(r2)
 4031154:	10000726 	beq	r2,zero,4031174 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 4031158:	e0bfff17 	ldw	r2,-4(fp)
 403115c:	10800017 	ldw	r2,0(r2)
 4031160:	10800817 	ldw	r2,32(r2)
 4031164:	e17ffd17 	ldw	r5,-12(fp)
 4031168:	e13fff17 	ldw	r4,-4(fp)
 403116c:	103ee83a 	callr	r2
 4031170:	00000a06 	br	403119c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 4031174:	e0bffd17 	ldw	r2,-12(fp)
 4031178:	00c80004 	movi	r3,8192
 403117c:	10c00115 	stw	r3,4(r2)
      return 0;
 4031180:	0005883a 	mov	r2,zero
 4031184:	00000506 	br	403119c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4031188:	40310c40 	call	40310c4 <alt_get_errno>
 403118c:	1007883a 	mov	r3,r2
 4031190:	00801444 	movi	r2,81
 4031194:	18800015 	stw	r2,0(r3)
    return -1;
 4031198:	00bfffc4 	movi	r2,-1
  }
}
 403119c:	e037883a 	mov	sp,fp
 40311a0:	dfc00117 	ldw	ra,4(sp)
 40311a4:	df000017 	ldw	fp,0(sp)
 40311a8:	dec00204 	addi	sp,sp,8
 40311ac:	f800283a 	ret

040311b0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 40311b0:	deffff04 	addi	sp,sp,-4
 40311b4:	df000015 	stw	fp,0(sp)
 40311b8:	d839883a 	mov	fp,sp
  return 0;
 40311bc:	0005883a 	mov	r2,zero
}
 40311c0:	e037883a 	mov	sp,fp
 40311c4:	df000017 	ldw	fp,0(sp)
 40311c8:	dec00104 	addi	sp,sp,4
 40311cc:	f800283a 	ret

040311d0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 40311d0:	defff004 	addi	sp,sp,-64
 40311d4:	df000f15 	stw	fp,60(sp)
 40311d8:	df000f04 	addi	fp,sp,60
 40311dc:	e13ff315 	stw	r4,-52(fp)
 40311e0:	e17ff215 	stw	r5,-56(fp)
 40311e4:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
 40311e8:	00bffa84 	movi	r2,-22
 40311ec:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 40311f0:	e0bff317 	ldw	r2,-52(fp)
 40311f4:	10800828 	cmpgeui	r2,r2,32
 40311f8:	1000501e 	bne	r2,zero,403133c <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
 40311fc:	0005303a 	rdctl	r2,status
 4031200:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4031204:	e0fffd17 	ldw	r3,-12(fp)
 4031208:	00bfff84 	movi	r2,-2
 403120c:	1884703a 	and	r2,r3,r2
 4031210:	1001703a 	wrctl	status,r2
  return context;
 4031214:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 4031218:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
 403121c:	e0bff317 	ldw	r2,-52(fp)
 4031220:	100890fa 	slli	r4,r2,3
 4031224:	e0fff117 	ldw	r3,-60(fp)
 4031228:	00800034 	movhi	r2,0
 403122c:	2085883a 	add	r2,r4,r2
 4031230:	10c9d615 	stw	r3,10072(r2)
    alt_irq[id].context = context;
 4031234:	e0bff317 	ldw	r2,-52(fp)
 4031238:	100890fa 	slli	r4,r2,3
 403123c:	e0fff217 	ldw	r3,-56(fp)
 4031240:	00800034 	movhi	r2,0
 4031244:	2085883a 	add	r2,r4,r2
 4031248:	10c9d715 	stw	r3,10076(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 403124c:	e0bff117 	ldw	r2,-60(fp)
 4031250:	10001a26 	beq	r2,zero,40312bc <alt_irq_register+0xec>
 4031254:	e0bff317 	ldw	r2,-52(fp)
 4031258:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
 403125c:	0005303a 	rdctl	r2,status
 4031260:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4031264:	e0fffb17 	ldw	r3,-20(fp)
 4031268:	00bfff84 	movi	r2,-2
 403126c:	1884703a 	and	r2,r3,r2
 4031270:	1001703a 	wrctl	status,r2
  return context;
 4031274:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4031278:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
 403127c:	00c00044 	movi	r3,1
 4031280:	e0bffc17 	ldw	r2,-16(fp)
 4031284:	1884983a 	sll	r2,r3,r2
 4031288:	1007883a 	mov	r3,r2
 403128c:	d0a01617 	ldw	r2,-32680(gp)
 4031290:	1884b03a 	or	r2,r3,r2
 4031294:	d0a01615 	stw	r2,-32680(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4031298:	d0a01617 	ldw	r2,-32680(gp)
 403129c:	100170fa 	wrctl	ienable,r2
 40312a0:	e0bffa17 	ldw	r2,-24(fp)
 40312a4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
 40312a8:	e0bff917 	ldw	r2,-28(fp)
 40312ac:	1001703a 	wrctl	status,r2
}
 40312b0:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
 40312b4:	0005883a 	mov	r2,zero
 40312b8:	00001a06 	br	4031324 <alt_irq_register+0x154>
 40312bc:	e0bff317 	ldw	r2,-52(fp)
 40312c0:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
 40312c4:	0005303a 	rdctl	r2,status
 40312c8:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40312cc:	e0fff717 	ldw	r3,-36(fp)
 40312d0:	00bfff84 	movi	r2,-2
 40312d4:	1884703a 	and	r2,r3,r2
 40312d8:	1001703a 	wrctl	status,r2
  return context;
 40312dc:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
 40312e0:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
 40312e4:	00c00044 	movi	r3,1
 40312e8:	e0bff817 	ldw	r2,-32(fp)
 40312ec:	1884983a 	sll	r2,r3,r2
 40312f0:	0084303a 	nor	r2,zero,r2
 40312f4:	1007883a 	mov	r3,r2
 40312f8:	d0a01617 	ldw	r2,-32680(gp)
 40312fc:	1884703a 	and	r2,r3,r2
 4031300:	d0a01615 	stw	r2,-32680(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4031304:	d0a01617 	ldw	r2,-32680(gp)
 4031308:	100170fa 	wrctl	ienable,r2
 403130c:	e0bff617 	ldw	r2,-40(fp)
 4031310:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
 4031314:	e0bff517 	ldw	r2,-44(fp)
 4031318:	1001703a 	wrctl	status,r2
}
 403131c:	0001883a 	nop
  return 0;
 4031320:	0005883a 	mov	r2,zero
 4031324:	e0bfff15 	stw	r2,-4(fp)
 4031328:	e0bffe17 	ldw	r2,-8(fp)
 403132c:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
 4031330:	e0bff417 	ldw	r2,-48(fp)
 4031334:	1001703a 	wrctl	status,r2
}
 4031338:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
 403133c:	e0bfff17 	ldw	r2,-4(fp)
}
 4031340:	e037883a 	mov	sp,fp
 4031344:	df000017 	ldw	fp,0(sp)
 4031348:	dec00104 	addi	sp,sp,4
 403134c:	f800283a 	ret

04031350 <alt_get_errno>:
{
 4031350:	defffe04 	addi	sp,sp,-8
 4031354:	dfc00115 	stw	ra,4(sp)
 4031358:	df000015 	stw	fp,0(sp)
 403135c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031360:	d0a00a17 	ldw	r2,-32728(gp)
 4031364:	10000326 	beq	r2,zero,4031374 <alt_get_errno+0x24>
 4031368:	d0a00a17 	ldw	r2,-32728(gp)
 403136c:	103ee83a 	callr	r2
 4031370:	00000106 	br	4031378 <alt_get_errno+0x28>
 4031374:	d0a01104 	addi	r2,gp,-32700
}
 4031378:	e037883a 	mov	sp,fp
 403137c:	dfc00117 	ldw	ra,4(sp)
 4031380:	df000017 	ldw	fp,0(sp)
 4031384:	dec00204 	addi	sp,sp,8
 4031388:	f800283a 	ret

0403138c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 403138c:	deffea04 	addi	sp,sp,-88
 4031390:	dfc01515 	stw	ra,84(sp)
 4031394:	df001415 	stw	fp,80(sp)
 4031398:	df001404 	addi	fp,sp,80
 403139c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 40313a0:	e0bfec17 	ldw	r2,-80(fp)
 40313a4:	10000616 	blt	r2,zero,40313c0 <isatty+0x34>
 40313a8:	e0bfec17 	ldw	r2,-80(fp)
 40313ac:	10c00324 	muli	r3,r2,12
 40313b0:	00800034 	movhi	r2,0
 40313b4:	1084c904 	addi	r2,r2,4900
 40313b8:	1885883a 	add	r2,r3,r2
 40313bc:	00000106 	br	40313c4 <isatty+0x38>
 40313c0:	0005883a 	mov	r2,zero
 40313c4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 40313c8:	e0bfff17 	ldw	r2,-4(fp)
 40313cc:	10000e26 	beq	r2,zero,4031408 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 40313d0:	e0bfff17 	ldw	r2,-4(fp)
 40313d4:	10800017 	ldw	r2,0(r2)
 40313d8:	10800817 	ldw	r2,32(r2)
 40313dc:	1000021e 	bne	r2,zero,40313e8 <isatty+0x5c>
    {
      return 1;
 40313e0:	00800044 	movi	r2,1
 40313e4:	00000d06 	br	403141c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 40313e8:	e0bfed04 	addi	r2,fp,-76
 40313ec:	100b883a 	mov	r5,r2
 40313f0:	e13fec17 	ldw	r4,-80(fp)
 40313f4:	40311000 	call	4031100 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 40313f8:	e0bfee17 	ldw	r2,-72(fp)
 40313fc:	10880020 	cmpeqi	r2,r2,8192
 4031400:	10803fcc 	andi	r2,r2,255
 4031404:	00000506 	br	403141c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4031408:	40313500 	call	4031350 <alt_get_errno>
 403140c:	1007883a 	mov	r3,r2
 4031410:	00801444 	movi	r2,81
 4031414:	18800015 	stw	r2,0(r3)
    return 0;
 4031418:	0005883a 	mov	r2,zero
  }
}
 403141c:	e037883a 	mov	sp,fp
 4031420:	dfc00117 	ldw	ra,4(sp)
 4031424:	df000017 	ldw	fp,0(sp)
 4031428:	dec00204 	addi	sp,sp,8
 403142c:	f800283a 	ret

04031430 <alt_get_errno>:
{
 4031430:	defffe04 	addi	sp,sp,-8
 4031434:	dfc00115 	stw	ra,4(sp)
 4031438:	df000015 	stw	fp,0(sp)
 403143c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031440:	d0a00a17 	ldw	r2,-32728(gp)
 4031444:	10000326 	beq	r2,zero,4031454 <alt_get_errno+0x24>
 4031448:	d0a00a17 	ldw	r2,-32728(gp)
 403144c:	103ee83a 	callr	r2
 4031450:	00000106 	br	4031458 <alt_get_errno+0x28>
 4031454:	d0a01104 	addi	r2,gp,-32700
}
 4031458:	e037883a 	mov	sp,fp
 403145c:	dfc00117 	ldw	ra,4(sp)
 4031460:	df000017 	ldw	fp,0(sp)
 4031464:	dec00204 	addi	sp,sp,8
 4031468:	f800283a 	ret

0403146c <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 403146c:	defffb04 	addi	sp,sp,-20
 4031470:	dfc00415 	stw	ra,16(sp)
 4031474:	df000315 	stw	fp,12(sp)
 4031478:	df000304 	addi	fp,sp,12
 403147c:	e13ffe15 	stw	r4,-8(fp)
 4031480:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
 4031484:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
 4031488:	e0bffe17 	ldw	r2,-8(fp)
 403148c:	00802e16 	blt	zero,r2,4031548 <kill+0xdc>
 4031490:	e0bffd17 	ldw	r2,-12(fp)
 4031494:	10800828 	cmpgeui	r2,r2,32
 4031498:	1000281e 	bne	r2,zero,403153c <kill+0xd0>
 403149c:	e0bffd17 	ldw	r2,-12(fp)
 40314a0:	100690ba 	slli	r3,r2,2
 40314a4:	008100f4 	movhi	r2,1027
 40314a8:	1885883a 	add	r2,r3,r2
 40314ac:	10852d17 	ldw	r2,5300(r2)
 40314b0:	1000683a 	jmp	r2
 40314b4:	0403155c 	xori	r16,zero,3157
 40314b8:	0403153c 	xorhi	r16,zero,3156
 40314bc:	0403153c 	xorhi	r16,zero,3156
 40314c0:	04031534 	movhi	r16,3156
 40314c4:	04031534 	movhi	r16,3156
 40314c8:	04031534 	movhi	r16,3156
 40314cc:	04031534 	movhi	r16,3156
 40314d0:	0403153c 	xorhi	r16,zero,3156
 40314d4:	04031534 	movhi	r16,3156
 40314d8:	04031534 	movhi	r16,3156
 40314dc:	04031534 	movhi	r16,3156
 40314e0:	04031534 	movhi	r16,3156
 40314e4:	04031534 	movhi	r16,3156
 40314e8:	04031534 	movhi	r16,3156
 40314ec:	04031534 	movhi	r16,3156
 40314f0:	04031534 	movhi	r16,3156
 40314f4:	0403155c 	xori	r16,zero,3157
 40314f8:	0403153c 	xorhi	r16,zero,3156
 40314fc:	0403153c 	xorhi	r16,zero,3156
 4031500:	0403153c 	xorhi	r16,zero,3156
 4031504:	0403155c 	xori	r16,zero,3157
 4031508:	0403153c 	xorhi	r16,zero,3156
 403150c:	0403153c 	xorhi	r16,zero,3156
 4031510:	04031534 	movhi	r16,3156
 4031514:	04031534 	movhi	r16,3156
 4031518:	04031534 	movhi	r16,3156
 403151c:	04031534 	movhi	r16,3156
 4031520:	04031534 	movhi	r16,3156
 4031524:	0403153c 	xorhi	r16,zero,3156
 4031528:	0403153c 	xorhi	r16,zero,3156
 403152c:	04031534 	movhi	r16,3156
 4031530:	04031534 	movhi	r16,3156
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 4031534:	0009883a 	mov	r4,zero
 4031538:	403108c0 	call	403108c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 403153c:	00800584 	movi	r2,22
 4031540:	e0bfff15 	stw	r2,-4(fp)
 4031544:	00000606 	br	4031560 <kill+0xf4>
    }
  }

  else if (pid > 0)
 4031548:	e0bffe17 	ldw	r2,-8(fp)
 403154c:	0080040e 	bge	zero,r2,4031560 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 4031550:	008000c4 	movi	r2,3
 4031554:	e0bfff15 	stw	r2,-4(fp)
 4031558:	00000106 	br	4031560 <kill+0xf4>
      break;
 403155c:	0001883a 	nop
  }

  if (status)
 4031560:	e0bfff17 	ldw	r2,-4(fp)
 4031564:	10000626 	beq	r2,zero,4031580 <kill+0x114>
  {
    ALT_ERRNO = status;
 4031568:	40314300 	call	4031430 <alt_get_errno>
 403156c:	1007883a 	mov	r3,r2
 4031570:	e0bfff17 	ldw	r2,-4(fp)
 4031574:	18800015 	stw	r2,0(r3)
    return -1;
 4031578:	00bfffc4 	movi	r2,-1
 403157c:	00000106 	br	4031584 <kill+0x118>
  }

  return 0;
 4031580:	0005883a 	mov	r2,zero
}
 4031584:	e037883a 	mov	sp,fp
 4031588:	dfc00117 	ldw	ra,4(sp)
 403158c:	df000017 	ldw	fp,0(sp)
 4031590:	dec00204 	addi	sp,sp,8
 4031594:	f800283a 	ret

04031598 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 4031598:	defffc04 	addi	sp,sp,-16
 403159c:	df000315 	stw	fp,12(sp)
 40315a0:	df000304 	addi	fp,sp,12
 40315a4:	e13fff15 	stw	r4,-4(fp)
 40315a8:	e17ffe15 	stw	r5,-8(fp)
 40315ac:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
 40315b0:	e0fffe17 	ldw	r3,-8(fp)
 40315b4:	e0bfff17 	ldw	r2,-4(fp)
 40315b8:	18800c26 	beq	r3,r2,40315ec <alt_load_section+0x54>
  {
    while( to != end )
 40315bc:	00000806 	br	40315e0 <alt_load_section+0x48>
    {
      *to++ = *from++;
 40315c0:	e0ffff17 	ldw	r3,-4(fp)
 40315c4:	18800104 	addi	r2,r3,4
 40315c8:	e0bfff15 	stw	r2,-4(fp)
 40315cc:	e0bffe17 	ldw	r2,-8(fp)
 40315d0:	11000104 	addi	r4,r2,4
 40315d4:	e13ffe15 	stw	r4,-8(fp)
 40315d8:	18c00017 	ldw	r3,0(r3)
 40315dc:	10c00015 	stw	r3,0(r2)
    while( to != end )
 40315e0:	e0fffe17 	ldw	r3,-8(fp)
 40315e4:	e0bffd17 	ldw	r2,-12(fp)
 40315e8:	18bff51e 	bne	r3,r2,40315c0 <alt_load_section+0x28>
    }
  }
}
 40315ec:	0001883a 	nop
 40315f0:	e037883a 	mov	sp,fp
 40315f4:	df000017 	ldw	fp,0(sp)
 40315f8:	dec00104 	addi	sp,sp,4
 40315fc:	f800283a 	ret

04031600 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 4031600:	defffe04 	addi	sp,sp,-8
 4031604:	dfc00115 	stw	ra,4(sp)
 4031608:	df000015 	stw	fp,0(sp)
 403160c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 4031610:	01800034 	movhi	r6,0
 4031614:	31895b04 	addi	r6,r6,9580
 4031618:	01400034 	movhi	r5,0
 403161c:	29424904 	addi	r5,r5,2340
 4031620:	010100f4 	movhi	r4,1027
 4031624:	2110e004 	addi	r4,r4,17280
 4031628:	40315980 	call	4031598 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 403162c:	018100b4 	movhi	r6,1026
 4031630:	31808f04 	addi	r6,r6,572
 4031634:	014100b4 	movhi	r5,1026
 4031638:	29400804 	addi	r5,r5,32
 403163c:	010100b4 	movhi	r4,1026
 4031640:	21000804 	addi	r4,r4,32
 4031644:	40315980 	call	4031598 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 4031648:	01800034 	movhi	r6,0
 403164c:	31824904 	addi	r6,r6,2340
 4031650:	01400034 	movhi	r5,0
 4031654:	29400004 	addi	r5,r5,0
 4031658:	010100f4 	movhi	r4,1027
 403165c:	210e9704 	addi	r4,r4,14940
 4031660:	40315980 	call	4031598 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 4031664:	4032f640 	call	4032f64 <alt_dcache_flush_all>
  alt_icache_flush_all();
 4031668:	40333940 	call	4033394 <alt_icache_flush_all>
}
 403166c:	0001883a 	nop
 4031670:	e037883a 	mov	sp,fp
 4031674:	dfc00117 	ldw	ra,4(sp)
 4031678:	df000017 	ldw	fp,0(sp)
 403167c:	dec00204 	addi	sp,sp,8
 4031680:	f800283a 	ret

04031684 <alt_get_errno>:
{
 4031684:	defffe04 	addi	sp,sp,-8
 4031688:	dfc00115 	stw	ra,4(sp)
 403168c:	df000015 	stw	fp,0(sp)
 4031690:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031694:	d0a00a17 	ldw	r2,-32728(gp)
 4031698:	10000326 	beq	r2,zero,40316a8 <alt_get_errno+0x24>
 403169c:	d0a00a17 	ldw	r2,-32728(gp)
 40316a0:	103ee83a 	callr	r2
 40316a4:	00000106 	br	40316ac <alt_get_errno+0x28>
 40316a8:	d0a01104 	addi	r2,gp,-32700
}
 40316ac:	e037883a 	mov	sp,fp
 40316b0:	dfc00117 	ldw	ra,4(sp)
 40316b4:	df000017 	ldw	fp,0(sp)
 40316b8:	dec00204 	addi	sp,sp,8
 40316bc:	f800283a 	ret

040316c0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 40316c0:	defff904 	addi	sp,sp,-28
 40316c4:	dfc00615 	stw	ra,24(sp)
 40316c8:	df000515 	stw	fp,20(sp)
 40316cc:	df000504 	addi	fp,sp,20
 40316d0:	e13ffd15 	stw	r4,-12(fp)
 40316d4:	e17ffc15 	stw	r5,-16(fp)
 40316d8:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 40316dc:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 40316e0:	e0bffd17 	ldw	r2,-12(fp)
 40316e4:	10000616 	blt	r2,zero,4031700 <lseek+0x40>
 40316e8:	e0bffd17 	ldw	r2,-12(fp)
 40316ec:	10c00324 	muli	r3,r2,12
 40316f0:	00800034 	movhi	r2,0
 40316f4:	1084c904 	addi	r2,r2,4900
 40316f8:	1885883a 	add	r2,r3,r2
 40316fc:	00000106 	br	4031704 <lseek+0x44>
 4031700:	0005883a 	mov	r2,zero
 4031704:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
 4031708:	e0bffe17 	ldw	r2,-8(fp)
 403170c:	10001026 	beq	r2,zero,4031750 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 4031710:	e0bffe17 	ldw	r2,-8(fp)
 4031714:	10800017 	ldw	r2,0(r2)
 4031718:	10800717 	ldw	r2,28(r2)
 403171c:	10000926 	beq	r2,zero,4031744 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 4031720:	e0bffe17 	ldw	r2,-8(fp)
 4031724:	10800017 	ldw	r2,0(r2)
 4031728:	10800717 	ldw	r2,28(r2)
 403172c:	e1bffb17 	ldw	r6,-20(fp)
 4031730:	e17ffc17 	ldw	r5,-16(fp)
 4031734:	e13ffe17 	ldw	r4,-8(fp)
 4031738:	103ee83a 	callr	r2
 403173c:	e0bfff15 	stw	r2,-4(fp)
 4031740:	00000506 	br	4031758 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 4031744:	00bfde84 	movi	r2,-134
 4031748:	e0bfff15 	stw	r2,-4(fp)
 403174c:	00000206 	br	4031758 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 4031750:	00bfebc4 	movi	r2,-81
 4031754:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
 4031758:	e0bfff17 	ldw	r2,-4(fp)
 403175c:	1000070e 	bge	r2,zero,403177c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 4031760:	40316840 	call	4031684 <alt_get_errno>
 4031764:	1007883a 	mov	r3,r2
 4031768:	e0bfff17 	ldw	r2,-4(fp)
 403176c:	0085c83a 	sub	r2,zero,r2
 4031770:	18800015 	stw	r2,0(r3)
    rc = -1;
 4031774:	00bfffc4 	movi	r2,-1
 4031778:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
 403177c:	e0bfff17 	ldw	r2,-4(fp)
}
 4031780:	e037883a 	mov	sp,fp
 4031784:	dfc00117 	ldw	ra,4(sp)
 4031788:	df000017 	ldw	fp,0(sp)
 403178c:	dec00204 	addi	sp,sp,8
 4031790:	f800283a 	ret

04031794 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 4031794:	defffd04 	addi	sp,sp,-12
 4031798:	dfc00215 	stw	ra,8(sp)
 403179c:	df000115 	stw	fp,4(sp)
 40317a0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 40317a4:	0009883a 	mov	r4,zero
 40317a8:	4031e500 	call	4031e50 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 40317ac:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 40317b0:	4031e8c0 	call	4031e8c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 40317b4:	01800034 	movhi	r6,0
 40317b8:	31823b04 	addi	r6,r6,2284
 40317bc:	01400034 	movhi	r5,0
 40317c0:	29423b04 	addi	r5,r5,2284
 40317c4:	01000034 	movhi	r4,0
 40317c8:	21023b04 	addi	r4,r4,2284
 40317cc:	40334780 	call	4033478 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 40317d0:	40330940 	call	4033094 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 40317d4:	010100f4 	movhi	r4,1027
 40317d8:	210c3e04 	addi	r4,r4,12536
 40317dc:	40337ec0 	call	40337ec <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 40317e0:	d0a01717 	ldw	r2,-32676(gp)
 40317e4:	d0e01817 	ldw	r3,-32672(gp)
 40317e8:	d1201917 	ldw	r4,-32668(gp)
 40317ec:	200d883a 	mov	r6,r4
 40317f0:	180b883a 	mov	r5,r3
 40317f4:	1009883a 	mov	r4,r2
 40317f8:	40202880 	call	4020288 <main>
 40317fc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 4031800:	01000044 	movi	r4,1
 4031804:	4030f900 	call	4030f90 <close>
  exit (result);
 4031808:	e13fff17 	ldw	r4,-4(fp)
 403180c:	40338000 	call	4033800 <exit>

04031810 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 4031810:	defffe04 	addi	sp,sp,-8
 4031814:	df000115 	stw	fp,4(sp)
 4031818:	df000104 	addi	fp,sp,4
 403181c:	e13fff15 	stw	r4,-4(fp)
}
 4031820:	0001883a 	nop
 4031824:	e037883a 	mov	sp,fp
 4031828:	df000017 	ldw	fp,0(sp)
 403182c:	dec00104 	addi	sp,sp,4
 4031830:	f800283a 	ret

04031834 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 4031834:	defffe04 	addi	sp,sp,-8
 4031838:	df000115 	stw	fp,4(sp)
 403183c:	df000104 	addi	fp,sp,4
 4031840:	e13fff15 	stw	r4,-4(fp)
}
 4031844:	0001883a 	nop
 4031848:	e037883a 	mov	sp,fp
 403184c:	df000017 	ldw	fp,0(sp)
 4031850:	dec00104 	addi	sp,sp,4
 4031854:	f800283a 	ret

04031858 <alt_get_errno>:
{
 4031858:	defffe04 	addi	sp,sp,-8
 403185c:	dfc00115 	stw	ra,4(sp)
 4031860:	df000015 	stw	fp,0(sp)
 4031864:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031868:	d0a00a17 	ldw	r2,-32728(gp)
 403186c:	10000326 	beq	r2,zero,403187c <alt_get_errno+0x24>
 4031870:	d0a00a17 	ldw	r2,-32728(gp)
 4031874:	103ee83a 	callr	r2
 4031878:	00000106 	br	4031880 <alt_get_errno+0x28>
 403187c:	d0a01104 	addi	r2,gp,-32700
}
 4031880:	e037883a 	mov	sp,fp
 4031884:	dfc00117 	ldw	ra,4(sp)
 4031888:	df000017 	ldw	fp,0(sp)
 403188c:	dec00204 	addi	sp,sp,8
 4031890:	f800283a 	ret

04031894 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 4031894:	defffd04 	addi	sp,sp,-12
 4031898:	df000215 	stw	fp,8(sp)
 403189c:	df000204 	addi	fp,sp,8
 40318a0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 40318a4:	e0bffe17 	ldw	r2,-8(fp)
 40318a8:	10800217 	ldw	r2,8(r2)
 40318ac:	10d00034 	orhi	r3,r2,16384
 40318b0:	e0bffe17 	ldw	r2,-8(fp)
 40318b4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 40318b8:	e03fff15 	stw	zero,-4(fp)
 40318bc:	00001a06 	br	4031928 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 40318c0:	e0bfff17 	ldw	r2,-4(fp)
 40318c4:	10c00324 	muli	r3,r2,12
 40318c8:	00800034 	movhi	r2,0
 40318cc:	1885883a 	add	r2,r3,r2
 40318d0:	10c4c917 	ldw	r3,4900(r2)
 40318d4:	e0bffe17 	ldw	r2,-8(fp)
 40318d8:	10800017 	ldw	r2,0(r2)
 40318dc:	18800f1e 	bne	r3,r2,403191c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 40318e0:	e0bfff17 	ldw	r2,-4(fp)
 40318e4:	10c00324 	muli	r3,r2,12
 40318e8:	00800034 	movhi	r2,0
 40318ec:	1885883a 	add	r2,r3,r2
 40318f0:	1084cb17 	ldw	r2,4908(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
 40318f4:	1000090e 	bge	r2,zero,403191c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
 40318f8:	e0bfff17 	ldw	r2,-4(fp)
 40318fc:	10c00324 	muli	r3,r2,12
 4031900:	00800034 	movhi	r2,0
 4031904:	1084c904 	addi	r2,r2,4900
 4031908:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 403190c:	e0fffe17 	ldw	r3,-8(fp)
 4031910:	18800226 	beq	r3,r2,403191c <alt_file_locked+0x88>
    {
      return -EACCES;
 4031914:	00bffcc4 	movi	r2,-13
 4031918:	00000806 	br	403193c <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
 403191c:	e0bfff17 	ldw	r2,-4(fp)
 4031920:	10800044 	addi	r2,r2,1
 4031924:	e0bfff15 	stw	r2,-4(fp)
 4031928:	d0a00917 	ldw	r2,-32732(gp)
 403192c:	1007883a 	mov	r3,r2
 4031930:	e0bfff17 	ldw	r2,-4(fp)
 4031934:	18bfe22e 	bgeu	r3,r2,40318c0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 4031938:	0005883a 	mov	r2,zero
}
 403193c:	e037883a 	mov	sp,fp
 4031940:	df000017 	ldw	fp,0(sp)
 4031944:	dec00104 	addi	sp,sp,4
 4031948:	f800283a 	ret

0403194c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 403194c:	defff604 	addi	sp,sp,-40
 4031950:	dfc00915 	stw	ra,36(sp)
 4031954:	df000815 	stw	fp,32(sp)
 4031958:	df000804 	addi	fp,sp,32
 403195c:	e13ffa15 	stw	r4,-24(fp)
 4031960:	e17ff915 	stw	r5,-28(fp)
 4031964:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4031968:	00bfffc4 	movi	r2,-1
 403196c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
 4031970:	00bffb44 	movi	r2,-19
 4031974:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
 4031978:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 403197c:	d1600704 	addi	r5,gp,-32740
 4031980:	e13ffa17 	ldw	r4,-24(fp)
 4031984:	403315c0 	call	403315c <alt_find_dev>
 4031988:	e0bfff15 	stw	r2,-4(fp)
 403198c:	e0bfff17 	ldw	r2,-4(fp)
 4031990:	1000051e 	bne	r2,zero,40319a8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 4031994:	e13ffa17 	ldw	r4,-24(fp)
 4031998:	40331ec0 	call	40331ec <alt_find_file>
 403199c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
 40319a0:	00800044 	movi	r2,1
 40319a4:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 40319a8:	e0bfff17 	ldw	r2,-4(fp)
 40319ac:	10002926 	beq	r2,zero,4031a54 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 40319b0:	e13fff17 	ldw	r4,-4(fp)
 40319b4:	40332f40 	call	40332f4 <alt_get_fd>
 40319b8:	e0bffe15 	stw	r2,-8(fp)
 40319bc:	e0bffe17 	ldw	r2,-8(fp)
 40319c0:	1000030e 	bge	r2,zero,40319d0 <open+0x84>
    {
      status = index;
 40319c4:	e0bffe17 	ldw	r2,-8(fp)
 40319c8:	e0bffd15 	stw	r2,-12(fp)
 40319cc:	00002306 	br	4031a5c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 40319d0:	e0bffe17 	ldw	r2,-8(fp)
 40319d4:	10c00324 	muli	r3,r2,12
 40319d8:	00800034 	movhi	r2,0
 40319dc:	1084c904 	addi	r2,r2,4900
 40319e0:	1885883a 	add	r2,r3,r2
 40319e4:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 40319e8:	e0fff917 	ldw	r3,-28(fp)
 40319ec:	00900034 	movhi	r2,16384
 40319f0:	10bfffc4 	addi	r2,r2,-1
 40319f4:	1886703a 	and	r3,r3,r2
 40319f8:	e0bffb17 	ldw	r2,-20(fp)
 40319fc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 4031a00:	e0bffc17 	ldw	r2,-16(fp)
 4031a04:	1000051e 	bne	r2,zero,4031a1c <open+0xd0>
 4031a08:	e13ffb17 	ldw	r4,-20(fp)
 4031a0c:	40318940 	call	4031894 <alt_file_locked>
 4031a10:	e0bffd15 	stw	r2,-12(fp)
 4031a14:	e0bffd17 	ldw	r2,-12(fp)
 4031a18:	10001016 	blt	r2,zero,4031a5c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4031a1c:	e0bfff17 	ldw	r2,-4(fp)
 4031a20:	10800317 	ldw	r2,12(r2)
 4031a24:	10000826 	beq	r2,zero,4031a48 <open+0xfc>
 4031a28:	e0bfff17 	ldw	r2,-4(fp)
 4031a2c:	10800317 	ldw	r2,12(r2)
 4031a30:	e1fff817 	ldw	r7,-32(fp)
 4031a34:	e1bff917 	ldw	r6,-28(fp)
 4031a38:	e17ffa17 	ldw	r5,-24(fp)
 4031a3c:	e13ffb17 	ldw	r4,-20(fp)
 4031a40:	103ee83a 	callr	r2
 4031a44:	00000106 	br	4031a4c <open+0x100>
 4031a48:	0005883a 	mov	r2,zero
 4031a4c:	e0bffd15 	stw	r2,-12(fp)
 4031a50:	00000206 	br	4031a5c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 4031a54:	00bffb44 	movi	r2,-19
 4031a58:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4031a5c:	e0bffd17 	ldw	r2,-12(fp)
 4031a60:	1000090e 	bge	r2,zero,4031a88 <open+0x13c>
  {
    alt_release_fd (index);  
 4031a64:	e13ffe17 	ldw	r4,-8(fp)
 4031a68:	4031bd80 	call	4031bd8 <alt_release_fd>
    ALT_ERRNO = -status;
 4031a6c:	40318580 	call	4031858 <alt_get_errno>
 4031a70:	1007883a 	mov	r3,r2
 4031a74:	e0bffd17 	ldw	r2,-12(fp)
 4031a78:	0085c83a 	sub	r2,zero,r2
 4031a7c:	18800015 	stw	r2,0(r3)
    return -1;
 4031a80:	00bfffc4 	movi	r2,-1
 4031a84:	00000106 	br	4031a8c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 4031a88:	e0bffe17 	ldw	r2,-8(fp)
}
 4031a8c:	e037883a 	mov	sp,fp
 4031a90:	dfc00117 	ldw	ra,4(sp)
 4031a94:	df000017 	ldw	fp,0(sp)
 4031a98:	dec00204 	addi	sp,sp,8
 4031a9c:	f800283a 	ret

04031aa0 <alt_get_errno>:
{
 4031aa0:	defffe04 	addi	sp,sp,-8
 4031aa4:	dfc00115 	stw	ra,4(sp)
 4031aa8:	df000015 	stw	fp,0(sp)
 4031aac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031ab0:	d0a00a17 	ldw	r2,-32728(gp)
 4031ab4:	10000326 	beq	r2,zero,4031ac4 <alt_get_errno+0x24>
 4031ab8:	d0a00a17 	ldw	r2,-32728(gp)
 4031abc:	103ee83a 	callr	r2
 4031ac0:	00000106 	br	4031ac8 <alt_get_errno+0x28>
 4031ac4:	d0a01104 	addi	r2,gp,-32700
}
 4031ac8:	e037883a 	mov	sp,fp
 4031acc:	dfc00117 	ldw	ra,4(sp)
 4031ad0:	df000017 	ldw	fp,0(sp)
 4031ad4:	dec00204 	addi	sp,sp,8
 4031ad8:	f800283a 	ret

04031adc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 4031adc:	defff904 	addi	sp,sp,-28
 4031ae0:	dfc00615 	stw	ra,24(sp)
 4031ae4:	df000515 	stw	fp,20(sp)
 4031ae8:	df000504 	addi	fp,sp,20
 4031aec:	e13ffd15 	stw	r4,-12(fp)
 4031af0:	e17ffc15 	stw	r5,-16(fp)
 4031af4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4031af8:	e0bffd17 	ldw	r2,-12(fp)
 4031afc:	10000616 	blt	r2,zero,4031b18 <read+0x3c>
 4031b00:	e0bffd17 	ldw	r2,-12(fp)
 4031b04:	10c00324 	muli	r3,r2,12
 4031b08:	00800034 	movhi	r2,0
 4031b0c:	1084c904 	addi	r2,r2,4900
 4031b10:	1885883a 	add	r2,r3,r2
 4031b14:	00000106 	br	4031b1c <read+0x40>
 4031b18:	0005883a 	mov	r2,zero
 4031b1c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 4031b20:	e0bfff17 	ldw	r2,-4(fp)
 4031b24:	10002226 	beq	r2,zero,4031bb0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4031b28:	e0bfff17 	ldw	r2,-4(fp)
 4031b2c:	10800217 	ldw	r2,8(r2)
 4031b30:	108000cc 	andi	r2,r2,3
 4031b34:	10800060 	cmpeqi	r2,r2,1
 4031b38:	1000181e 	bne	r2,zero,4031b9c <read+0xc0>
        (fd->dev->read))
 4031b3c:	e0bfff17 	ldw	r2,-4(fp)
 4031b40:	10800017 	ldw	r2,0(r2)
 4031b44:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4031b48:	10001426 	beq	r2,zero,4031b9c <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 4031b4c:	e0bfff17 	ldw	r2,-4(fp)
 4031b50:	10800017 	ldw	r2,0(r2)
 4031b54:	10800517 	ldw	r2,20(r2)
 4031b58:	e0fffb17 	ldw	r3,-20(fp)
 4031b5c:	180d883a 	mov	r6,r3
 4031b60:	e17ffc17 	ldw	r5,-16(fp)
 4031b64:	e13fff17 	ldw	r4,-4(fp)
 4031b68:	103ee83a 	callr	r2
 4031b6c:	e0bffe15 	stw	r2,-8(fp)
 4031b70:	e0bffe17 	ldw	r2,-8(fp)
 4031b74:	1000070e 	bge	r2,zero,4031b94 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 4031b78:	4031aa00 	call	4031aa0 <alt_get_errno>
 4031b7c:	1007883a 	mov	r3,r2
 4031b80:	e0bffe17 	ldw	r2,-8(fp)
 4031b84:	0085c83a 	sub	r2,zero,r2
 4031b88:	18800015 	stw	r2,0(r3)
          return -1;
 4031b8c:	00bfffc4 	movi	r2,-1
 4031b90:	00000c06 	br	4031bc4 <read+0xe8>
        }
        return rval;
 4031b94:	e0bffe17 	ldw	r2,-8(fp)
 4031b98:	00000a06 	br	4031bc4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 4031b9c:	4031aa00 	call	4031aa0 <alt_get_errno>
 4031ba0:	1007883a 	mov	r3,r2
 4031ba4:	00800344 	movi	r2,13
 4031ba8:	18800015 	stw	r2,0(r3)
 4031bac:	00000406 	br	4031bc0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 4031bb0:	4031aa00 	call	4031aa0 <alt_get_errno>
 4031bb4:	1007883a 	mov	r3,r2
 4031bb8:	00801444 	movi	r2,81
 4031bbc:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4031bc0:	00bfffc4 	movi	r2,-1
}
 4031bc4:	e037883a 	mov	sp,fp
 4031bc8:	dfc00117 	ldw	ra,4(sp)
 4031bcc:	df000017 	ldw	fp,0(sp)
 4031bd0:	dec00204 	addi	sp,sp,8
 4031bd4:	f800283a 	ret

04031bd8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 4031bd8:	defffe04 	addi	sp,sp,-8
 4031bdc:	df000115 	stw	fp,4(sp)
 4031be0:	df000104 	addi	fp,sp,4
 4031be4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 4031be8:	e0bfff17 	ldw	r2,-4(fp)
 4031bec:	108000d0 	cmplti	r2,r2,3
 4031bf0:	10000a1e 	bne	r2,zero,4031c1c <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
 4031bf4:	e0bfff17 	ldw	r2,-4(fp)
 4031bf8:	10c00324 	muli	r3,r2,12
 4031bfc:	00800034 	movhi	r2,0
 4031c00:	1885883a 	add	r2,r3,r2
 4031c04:	1004cb15 	stw	zero,4908(r2)
    alt_fd_list[fd].dev      = 0;
 4031c08:	e0bfff17 	ldw	r2,-4(fp)
 4031c0c:	10c00324 	muli	r3,r2,12
 4031c10:	00800034 	movhi	r2,0
 4031c14:	1885883a 	add	r2,r3,r2
 4031c18:	1004c915 	stw	zero,4900(r2)
  }
}
 4031c1c:	0001883a 	nop
 4031c20:	e037883a 	mov	sp,fp
 4031c24:	df000017 	ldw	fp,0(sp)
 4031c28:	dec00104 	addi	sp,sp,4
 4031c2c:	f800283a 	ret

04031c30 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 4031c30:	defff904 	addi	sp,sp,-28
 4031c34:	df000615 	stw	fp,24(sp)
 4031c38:	df000604 	addi	fp,sp,24
 4031c3c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
 4031c40:	0005303a 	rdctl	r2,status
 4031c44:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4031c48:	e0fffd17 	ldw	r3,-12(fp)
 4031c4c:	00bfff84 	movi	r2,-2
 4031c50:	1884703a 	and	r2,r3,r2
 4031c54:	1001703a 	wrctl	status,r2
  return context;
 4031c58:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 4031c5c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 4031c60:	d0a00c17 	ldw	r2,-32720(gp)
 4031c64:	10c000c4 	addi	r3,r2,3
 4031c68:	00bfff04 	movi	r2,-4
 4031c6c:	1884703a 	and	r2,r3,r2
 4031c70:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 4031c74:	d0e00c17 	ldw	r3,-32720(gp)
 4031c78:	e0bffa17 	ldw	r2,-24(fp)
 4031c7c:	1887883a 	add	r3,r3,r2
 4031c80:	00810034 	movhi	r2,1024
 4031c84:	10800004 	addi	r2,r2,0
 4031c88:	10c0072e 	bgeu	r2,r3,4031ca8 <sbrk+0x78>
 4031c8c:	e0bfff17 	ldw	r2,-4(fp)
 4031c90:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 4031c94:	e0bffc17 	ldw	r2,-16(fp)
 4031c98:	1001703a 	wrctl	status,r2
}
 4031c9c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 4031ca0:	00bfffc4 	movi	r2,-1
 4031ca4:	00000c06 	br	4031cd8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 4031ca8:	d0a00c17 	ldw	r2,-32720(gp)
 4031cac:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
 4031cb0:	d0e00c17 	ldw	r3,-32720(gp)
 4031cb4:	e0bffa17 	ldw	r2,-24(fp)
 4031cb8:	1885883a 	add	r2,r3,r2
 4031cbc:	d0a00c15 	stw	r2,-32720(gp)
 4031cc0:	e0bfff17 	ldw	r2,-4(fp)
 4031cc4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 4031cc8:	e0bffb17 	ldw	r2,-20(fp)
 4031ccc:	1001703a 	wrctl	status,r2
}
 4031cd0:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 4031cd4:	e0bffe17 	ldw	r2,-8(fp)
} 
 4031cd8:	e037883a 	mov	sp,fp
 4031cdc:	df000017 	ldw	fp,0(sp)
 4031ce0:	dec00104 	addi	sp,sp,4
 4031ce4:	f800283a 	ret

04031ce8 <alt_get_errno>:
{
 4031ce8:	defffe04 	addi	sp,sp,-8
 4031cec:	dfc00115 	stw	ra,4(sp)
 4031cf0:	df000015 	stw	fp,0(sp)
 4031cf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4031cf8:	d0a00a17 	ldw	r2,-32728(gp)
 4031cfc:	10000326 	beq	r2,zero,4031d0c <alt_get_errno+0x24>
 4031d00:	d0a00a17 	ldw	r2,-32728(gp)
 4031d04:	103ee83a 	callr	r2
 4031d08:	00000106 	br	4031d10 <alt_get_errno+0x28>
 4031d0c:	d0a01104 	addi	r2,gp,-32700
}
 4031d10:	e037883a 	mov	sp,fp
 4031d14:	dfc00117 	ldw	ra,4(sp)
 4031d18:	df000017 	ldw	fp,0(sp)
 4031d1c:	dec00204 	addi	sp,sp,8
 4031d20:	f800283a 	ret

04031d24 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 4031d24:	defff904 	addi	sp,sp,-28
 4031d28:	dfc00615 	stw	ra,24(sp)
 4031d2c:	df000515 	stw	fp,20(sp)
 4031d30:	df000504 	addi	fp,sp,20
 4031d34:	e13ffd15 	stw	r4,-12(fp)
 4031d38:	e17ffc15 	stw	r5,-16(fp)
 4031d3c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4031d40:	e0bffd17 	ldw	r2,-12(fp)
 4031d44:	10000616 	blt	r2,zero,4031d60 <write+0x3c>
 4031d48:	e0bffd17 	ldw	r2,-12(fp)
 4031d4c:	10c00324 	muli	r3,r2,12
 4031d50:	00800034 	movhi	r2,0
 4031d54:	1084c904 	addi	r2,r2,4900
 4031d58:	1885883a 	add	r2,r3,r2
 4031d5c:	00000106 	br	4031d64 <write+0x40>
 4031d60:	0005883a 	mov	r2,zero
 4031d64:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 4031d68:	e0bfff17 	ldw	r2,-4(fp)
 4031d6c:	10002126 	beq	r2,zero,4031df4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 4031d70:	e0bfff17 	ldw	r2,-4(fp)
 4031d74:	10800217 	ldw	r2,8(r2)
 4031d78:	108000cc 	andi	r2,r2,3
 4031d7c:	10001826 	beq	r2,zero,4031de0 <write+0xbc>
 4031d80:	e0bfff17 	ldw	r2,-4(fp)
 4031d84:	10800017 	ldw	r2,0(r2)
 4031d88:	10800617 	ldw	r2,24(r2)
 4031d8c:	10001426 	beq	r2,zero,4031de0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 4031d90:	e0bfff17 	ldw	r2,-4(fp)
 4031d94:	10800017 	ldw	r2,0(r2)
 4031d98:	10800617 	ldw	r2,24(r2)
 4031d9c:	e0fffb17 	ldw	r3,-20(fp)
 4031da0:	180d883a 	mov	r6,r3
 4031da4:	e17ffc17 	ldw	r5,-16(fp)
 4031da8:	e13fff17 	ldw	r4,-4(fp)
 4031dac:	103ee83a 	callr	r2
 4031db0:	e0bffe15 	stw	r2,-8(fp)
 4031db4:	e0bffe17 	ldw	r2,-8(fp)
 4031db8:	1000070e 	bge	r2,zero,4031dd8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 4031dbc:	4031ce80 	call	4031ce8 <alt_get_errno>
 4031dc0:	1007883a 	mov	r3,r2
 4031dc4:	e0bffe17 	ldw	r2,-8(fp)
 4031dc8:	0085c83a 	sub	r2,zero,r2
 4031dcc:	18800015 	stw	r2,0(r3)
        return -1;
 4031dd0:	00bfffc4 	movi	r2,-1
 4031dd4:	00000c06 	br	4031e08 <write+0xe4>
      }
      return rval;
 4031dd8:	e0bffe17 	ldw	r2,-8(fp)
 4031ddc:	00000a06 	br	4031e08 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 4031de0:	4031ce80 	call	4031ce8 <alt_get_errno>
 4031de4:	1007883a 	mov	r3,r2
 4031de8:	00800344 	movi	r2,13
 4031dec:	18800015 	stw	r2,0(r3)
 4031df0:	00000406 	br	4031e04 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 4031df4:	4031ce80 	call	4031ce8 <alt_get_errno>
 4031df8:	1007883a 	mov	r3,r2
 4031dfc:	00801444 	movi	r2,81
 4031e00:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4031e04:	00bfffc4 	movi	r2,-1
}
 4031e08:	e037883a 	mov	sp,fp
 4031e0c:	dfc00117 	ldw	ra,4(sp)
 4031e10:	df000017 	ldw	fp,0(sp)
 4031e14:	dec00204 	addi	sp,sp,8
 4031e18:	f800283a 	ret

04031e1c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 4031e1c:	defffd04 	addi	sp,sp,-12
 4031e20:	dfc00215 	stw	ra,8(sp)
 4031e24:	df000115 	stw	fp,4(sp)
 4031e28:	df000104 	addi	fp,sp,4
 4031e2c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 4031e30:	d1600704 	addi	r5,gp,-32740
 4031e34:	e13fff17 	ldw	r4,-4(fp)
 4031e38:	4032fec0 	call	4032fec <alt_dev_llist_insert>
}
 4031e3c:	e037883a 	mov	sp,fp
 4031e40:	dfc00117 	ldw	ra,4(sp)
 4031e44:	df000017 	ldw	fp,0(sp)
 4031e48:	dec00204 	addi	sp,sp,8
 4031e4c:	f800283a 	ret

04031e50 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 4031e50:	defffd04 	addi	sp,sp,-12
 4031e54:	dfc00215 	stw	ra,8(sp)
 4031e58:	df000115 	stw	fp,4(sp)
 4031e5c:	df000104 	addi	fp,sp,4
 4031e60:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 4031e64:	40336a00 	call	40336a0 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 4031e68:	00800044 	movi	r2,1
 4031e6c:	1001703a 	wrctl	status,r2
}
 4031e70:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
 4031e74:	0001883a 	nop
 4031e78:	e037883a 	mov	sp,fp
 4031e7c:	dfc00117 	ldw	ra,4(sp)
 4031e80:	df000017 	ldw	fp,0(sp)
 4031e84:	dec00204 	addi	sp,sp,8
 4031e88:	f800283a 	ret

04031e8c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 4031e8c:	defffe04 	addi	sp,sp,-8
 4031e90:	dfc00115 	stw	ra,4(sp)
 4031e94:	df000015 	stw	fp,0(sp)
 4031e98:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 4031e9c:	01c0fa04 	movi	r7,1000
 4031ea0:	01800084 	movi	r6,2
 4031ea4:	000b883a 	mov	r5,zero
 4031ea8:	01010134 	movhi	r4,1028
 4031eac:	21040004 	addi	r4,r4,4096
 4031eb0:	40329e80 	call	40329e8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 4031eb4:	01800044 	movi	r6,1
 4031eb8:	000b883a 	mov	r5,zero
 4031ebc:	01000034 	movhi	r4,0
 4031ec0:	21053304 	addi	r4,r4,5324
 4031ec4:	40320600 	call	4032060 <altera_avalon_jtag_uart_init>
 4031ec8:	01000034 	movhi	r4,0
 4031ecc:	21052904 	addi	r4,r4,5284
 4031ed0:	4031e1c0 	call	4031e1c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 4031ed4:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
 4031ed8:	01000034 	movhi	r4,0
 4031edc:	21094104 	addi	r4,r4,9476
 4031ee0:	4031e1c0 	call	4031e1c <alt_dev_reg>
}
 4031ee4:	0001883a 	nop
 4031ee8:	e037883a 	mov	sp,fp
 4031eec:	dfc00117 	ldw	ra,4(sp)
 4031ef0:	df000017 	ldw	fp,0(sp)
 4031ef4:	dec00204 	addi	sp,sp,8
 4031ef8:	f800283a 	ret

04031efc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 4031efc:	defffa04 	addi	sp,sp,-24
 4031f00:	dfc00515 	stw	ra,20(sp)
 4031f04:	df000415 	stw	fp,16(sp)
 4031f08:	df000404 	addi	fp,sp,16
 4031f0c:	e13ffe15 	stw	r4,-8(fp)
 4031f10:	e17ffd15 	stw	r5,-12(fp)
 4031f14:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4031f18:	e0bffe17 	ldw	r2,-8(fp)
 4031f1c:	10800017 	ldw	r2,0(r2)
 4031f20:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 4031f24:	e0bfff17 	ldw	r2,-4(fp)
 4031f28:	10c00a04 	addi	r3,r2,40
 4031f2c:	e0bffe17 	ldw	r2,-8(fp)
 4031f30:	10800217 	ldw	r2,8(r2)
 4031f34:	100f883a 	mov	r7,r2
 4031f38:	e1bffc17 	ldw	r6,-16(fp)
 4031f3c:	e17ffd17 	ldw	r5,-12(fp)
 4031f40:	1809883a 	mov	r4,r3
 4031f44:	40325200 	call	4032520 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 4031f48:	e037883a 	mov	sp,fp
 4031f4c:	dfc00117 	ldw	ra,4(sp)
 4031f50:	df000017 	ldw	fp,0(sp)
 4031f54:	dec00204 	addi	sp,sp,8
 4031f58:	f800283a 	ret

04031f5c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 4031f5c:	defffa04 	addi	sp,sp,-24
 4031f60:	dfc00515 	stw	ra,20(sp)
 4031f64:	df000415 	stw	fp,16(sp)
 4031f68:	df000404 	addi	fp,sp,16
 4031f6c:	e13ffe15 	stw	r4,-8(fp)
 4031f70:	e17ffd15 	stw	r5,-12(fp)
 4031f74:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4031f78:	e0bffe17 	ldw	r2,-8(fp)
 4031f7c:	10800017 	ldw	r2,0(r2)
 4031f80:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 4031f84:	e0bfff17 	ldw	r2,-4(fp)
 4031f88:	10c00a04 	addi	r3,r2,40
 4031f8c:	e0bffe17 	ldw	r2,-8(fp)
 4031f90:	10800217 	ldw	r2,8(r2)
 4031f94:	100f883a 	mov	r7,r2
 4031f98:	e1bffc17 	ldw	r6,-16(fp)
 4031f9c:	e17ffd17 	ldw	r5,-12(fp)
 4031fa0:	1809883a 	mov	r4,r3
 4031fa4:	40327400 	call	4032740 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 4031fa8:	e037883a 	mov	sp,fp
 4031fac:	dfc00117 	ldw	ra,4(sp)
 4031fb0:	df000017 	ldw	fp,0(sp)
 4031fb4:	dec00204 	addi	sp,sp,8
 4031fb8:	f800283a 	ret

04031fbc <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 4031fbc:	defffc04 	addi	sp,sp,-16
 4031fc0:	dfc00315 	stw	ra,12(sp)
 4031fc4:	df000215 	stw	fp,8(sp)
 4031fc8:	df000204 	addi	fp,sp,8
 4031fcc:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4031fd0:	e0bffe17 	ldw	r2,-8(fp)
 4031fd4:	10800017 	ldw	r2,0(r2)
 4031fd8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 4031fdc:	e0bfff17 	ldw	r2,-4(fp)
 4031fe0:	10c00a04 	addi	r3,r2,40
 4031fe4:	e0bffe17 	ldw	r2,-8(fp)
 4031fe8:	10800217 	ldw	r2,8(r2)
 4031fec:	100b883a 	mov	r5,r2
 4031ff0:	1809883a 	mov	r4,r3
 4031ff4:	40323c40 	call	40323c4 <altera_avalon_jtag_uart_close>
}
 4031ff8:	e037883a 	mov	sp,fp
 4031ffc:	dfc00117 	ldw	ra,4(sp)
 4032000:	df000017 	ldw	fp,0(sp)
 4032004:	dec00204 	addi	sp,sp,8
 4032008:	f800283a 	ret

0403200c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 403200c:	defffa04 	addi	sp,sp,-24
 4032010:	dfc00515 	stw	ra,20(sp)
 4032014:	df000415 	stw	fp,16(sp)
 4032018:	df000404 	addi	fp,sp,16
 403201c:	e13ffe15 	stw	r4,-8(fp)
 4032020:	e17ffd15 	stw	r5,-12(fp)
 4032024:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 4032028:	e0bffe17 	ldw	r2,-8(fp)
 403202c:	10800017 	ldw	r2,0(r2)
 4032030:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 4032034:	e0bfff17 	ldw	r2,-4(fp)
 4032038:	10800a04 	addi	r2,r2,40
 403203c:	e1bffc17 	ldw	r6,-16(fp)
 4032040:	e17ffd17 	ldw	r5,-12(fp)
 4032044:	1009883a 	mov	r4,r2
 4032048:	403242c0 	call	403242c <altera_avalon_jtag_uart_ioctl>
}
 403204c:	e037883a 	mov	sp,fp
 4032050:	dfc00117 	ldw	ra,4(sp)
 4032054:	df000017 	ldw	fp,0(sp)
 4032058:	dec00204 	addi	sp,sp,8
 403205c:	f800283a 	ret

04032060 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 4032060:	defffb04 	addi	sp,sp,-20
 4032064:	dfc00415 	stw	ra,16(sp)
 4032068:	df000315 	stw	fp,12(sp)
 403206c:	df000304 	addi	fp,sp,12
 4032070:	e13fff15 	stw	r4,-4(fp)
 4032074:	e17ffe15 	stw	r5,-8(fp)
 4032078:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 403207c:	e0bfff17 	ldw	r2,-4(fp)
 4032080:	00c00044 	movi	r3,1
 4032084:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 4032088:	e0bfff17 	ldw	r2,-4(fp)
 403208c:	10800017 	ldw	r2,0(r2)
 4032090:	10800104 	addi	r2,r2,4
 4032094:	1007883a 	mov	r3,r2
 4032098:	e0bfff17 	ldw	r2,-4(fp)
 403209c:	10800817 	ldw	r2,32(r2)
 40320a0:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 40320a4:	e0bffd17 	ldw	r2,-12(fp)
 40320a8:	018100f4 	movhi	r6,1027
 40320ac:	31884504 	addi	r6,r6,8468
 40320b0:	e17fff17 	ldw	r5,-4(fp)
 40320b4:	1009883a 	mov	r4,r2
 40320b8:	40311d00 	call	40311d0 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 40320bc:	e0bfff17 	ldw	r2,-4(fp)
 40320c0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 40320c4:	e0bfff17 	ldw	r2,-4(fp)
 40320c8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 40320cc:	d0e01a17 	ldw	r3,-32664(gp)
 40320d0:	e1ffff17 	ldw	r7,-4(fp)
 40320d4:	018100f4 	movhi	r6,1027
 40320d8:	3188c904 	addi	r6,r6,8996
 40320dc:	180b883a 	mov	r5,r3
 40320e0:	1009883a 	mov	r4,r2
 40320e4:	4032e300 	call	4032e30 <alt_alarm_start>
 40320e8:	1000040e 	bge	r2,zero,40320fc <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 40320ec:	e0ffff17 	ldw	r3,-4(fp)
 40320f0:	00a00034 	movhi	r2,32768
 40320f4:	10bfffc4 	addi	r2,r2,-1
 40320f8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 40320fc:	0001883a 	nop
 4032100:	e037883a 	mov	sp,fp
 4032104:	dfc00117 	ldw	ra,4(sp)
 4032108:	df000017 	ldw	fp,0(sp)
 403210c:	dec00204 	addi	sp,sp,8
 4032110:	f800283a 	ret

04032114 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 4032114:	defff704 	addi	sp,sp,-36
 4032118:	df000815 	stw	fp,32(sp)
 403211c:	df000804 	addi	fp,sp,32
 4032120:	e13ff915 	stw	r4,-28(fp)
 4032124:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 4032128:	e0bff917 	ldw	r2,-28(fp)
 403212c:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
 4032130:	e0bffd17 	ldw	r2,-12(fp)
 4032134:	10800017 	ldw	r2,0(r2)
 4032138:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 403213c:	e0bffc17 	ldw	r2,-16(fp)
 4032140:	10800104 	addi	r2,r2,4
 4032144:	10800037 	ldwio	r2,0(r2)
 4032148:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 403214c:	e0bffb17 	ldw	r2,-20(fp)
 4032150:	1080c00c 	andi	r2,r2,768
 4032154:	10006d26 	beq	r2,zero,403230c <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 4032158:	e0bffb17 	ldw	r2,-20(fp)
 403215c:	1080400c 	andi	r2,r2,256
 4032160:	10003526 	beq	r2,zero,4032238 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 4032164:	00800074 	movhi	r2,1
 4032168:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 403216c:	e0bffd17 	ldw	r2,-12(fp)
 4032170:	10800a17 	ldw	r2,40(r2)
 4032174:	10800044 	addi	r2,r2,1
 4032178:	1081ffcc 	andi	r2,r2,2047
 403217c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 4032180:	e0bffd17 	ldw	r2,-12(fp)
 4032184:	10800b17 	ldw	r2,44(r2)
 4032188:	e0fffa17 	ldw	r3,-24(fp)
 403218c:	18801526 	beq	r3,r2,40321e4 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 4032190:	e0bffc17 	ldw	r2,-16(fp)
 4032194:	10800037 	ldwio	r2,0(r2)
 4032198:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 403219c:	e0bfff17 	ldw	r2,-4(fp)
 40321a0:	10a0000c 	andi	r2,r2,32768
 40321a4:	10001126 	beq	r2,zero,40321ec <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 40321a8:	e0bffd17 	ldw	r2,-12(fp)
 40321ac:	10800a17 	ldw	r2,40(r2)
 40321b0:	e0ffff17 	ldw	r3,-4(fp)
 40321b4:	1809883a 	mov	r4,r3
 40321b8:	e0fffd17 	ldw	r3,-12(fp)
 40321bc:	1885883a 	add	r2,r3,r2
 40321c0:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40321c4:	e0bffd17 	ldw	r2,-12(fp)
 40321c8:	10800a17 	ldw	r2,40(r2)
 40321cc:	10800044 	addi	r2,r2,1
 40321d0:	10c1ffcc 	andi	r3,r2,2047
 40321d4:	e0bffd17 	ldw	r2,-12(fp)
 40321d8:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 40321dc:	0001883a 	nop
      {
 40321e0:	003fe206 	br	403216c <altera_avalon_jtag_uart_irq+0x58>
          break;
 40321e4:	0001883a 	nop
 40321e8:	00000106 	br	40321f0 <altera_avalon_jtag_uart_irq+0xdc>
          break;
 40321ec:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 40321f0:	e0bfff17 	ldw	r2,-4(fp)
 40321f4:	10bfffec 	andhi	r2,r2,65535
 40321f8:	10000f26 	beq	r2,zero,4032238 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 40321fc:	e0bffd17 	ldw	r2,-12(fp)
 4032200:	10c00817 	ldw	r3,32(r2)
 4032204:	00bfff84 	movi	r2,-2
 4032208:	1886703a 	and	r3,r3,r2
 403220c:	e0bffd17 	ldw	r2,-12(fp)
 4032210:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 4032214:	e0bffc17 	ldw	r2,-16(fp)
 4032218:	10800104 	addi	r2,r2,4
 403221c:	1007883a 	mov	r3,r2
 4032220:	e0bffd17 	ldw	r2,-12(fp)
 4032224:	10800817 	ldw	r2,32(r2)
 4032228:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 403222c:	e0bffc17 	ldw	r2,-16(fp)
 4032230:	10800104 	addi	r2,r2,4
 4032234:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 4032238:	e0bffb17 	ldw	r2,-20(fp)
 403223c:	1080800c 	andi	r2,r2,512
 4032240:	103fbe26 	beq	r2,zero,403213c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 4032244:	e0bffb17 	ldw	r2,-20(fp)
 4032248:	1004d43a 	srli	r2,r2,16
 403224c:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 4032250:	00001406 	br	40322a4 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 4032254:	e0bffc17 	ldw	r2,-16(fp)
 4032258:	e0fffd17 	ldw	r3,-12(fp)
 403225c:	18c00d17 	ldw	r3,52(r3)
 4032260:	e13ffd17 	ldw	r4,-12(fp)
 4032264:	20c7883a 	add	r3,r4,r3
 4032268:	18c20e03 	ldbu	r3,2104(r3)
 403226c:	18c03fcc 	andi	r3,r3,255
 4032270:	18c0201c 	xori	r3,r3,128
 4032274:	18ffe004 	addi	r3,r3,-128
 4032278:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 403227c:	e0bffd17 	ldw	r2,-12(fp)
 4032280:	10800d17 	ldw	r2,52(r2)
 4032284:	10800044 	addi	r2,r2,1
 4032288:	10c1ffcc 	andi	r3,r2,2047
 403228c:	e0bffd17 	ldw	r2,-12(fp)
 4032290:	10c00d15 	stw	r3,52(r2)
 4032294:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 4032298:	e0bffe17 	ldw	r2,-8(fp)
 403229c:	10bfffc4 	addi	r2,r2,-1
 40322a0:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
 40322a4:	e0bffe17 	ldw	r2,-8(fp)
 40322a8:	10000526 	beq	r2,zero,40322c0 <altera_avalon_jtag_uart_irq+0x1ac>
 40322ac:	e0bffd17 	ldw	r2,-12(fp)
 40322b0:	10c00d17 	ldw	r3,52(r2)
 40322b4:	e0bffd17 	ldw	r2,-12(fp)
 40322b8:	10800c17 	ldw	r2,48(r2)
 40322bc:	18bfe51e 	bne	r3,r2,4032254 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
 40322c0:	e0bffe17 	ldw	r2,-8(fp)
 40322c4:	103f9d26 	beq	r2,zero,403213c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 40322c8:	e0bffd17 	ldw	r2,-12(fp)
 40322cc:	10c00817 	ldw	r3,32(r2)
 40322d0:	00bfff44 	movi	r2,-3
 40322d4:	1886703a 	and	r3,r3,r2
 40322d8:	e0bffd17 	ldw	r2,-12(fp)
 40322dc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 40322e0:	e0bffd17 	ldw	r2,-12(fp)
 40322e4:	10800017 	ldw	r2,0(r2)
 40322e8:	10800104 	addi	r2,r2,4
 40322ec:	1007883a 	mov	r3,r2
 40322f0:	e0bffd17 	ldw	r2,-12(fp)
 40322f4:	10800817 	ldw	r2,32(r2)
 40322f8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40322fc:	e0bffc17 	ldw	r2,-16(fp)
 4032300:	10800104 	addi	r2,r2,4
 4032304:	10800037 	ldwio	r2,0(r2)
  {
 4032308:	003f8c06 	br	403213c <altera_avalon_jtag_uart_irq+0x28>
      break;
 403230c:	0001883a 	nop
      }
    }
  }
}
 4032310:	0001883a 	nop
 4032314:	e037883a 	mov	sp,fp
 4032318:	df000017 	ldw	fp,0(sp)
 403231c:	dec00104 	addi	sp,sp,4
 4032320:	f800283a 	ret

04032324 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 4032324:	defffc04 	addi	sp,sp,-16
 4032328:	df000315 	stw	fp,12(sp)
 403232c:	df000304 	addi	fp,sp,12
 4032330:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 4032334:	e0bffd17 	ldw	r2,-12(fp)
 4032338:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 403233c:	e0bfff17 	ldw	r2,-4(fp)
 4032340:	10800017 	ldw	r2,0(r2)
 4032344:	10800104 	addi	r2,r2,4
 4032348:	10800037 	ldwio	r2,0(r2)
 403234c:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 4032350:	e0bffe17 	ldw	r2,-8(fp)
 4032354:	1081000c 	andi	r2,r2,1024
 4032358:	10000b26 	beq	r2,zero,4032388 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 403235c:	e0bfff17 	ldw	r2,-4(fp)
 4032360:	10800017 	ldw	r2,0(r2)
 4032364:	10800104 	addi	r2,r2,4
 4032368:	1007883a 	mov	r3,r2
 403236c:	e0bfff17 	ldw	r2,-4(fp)
 4032370:	10800817 	ldw	r2,32(r2)
 4032374:	10810014 	ori	r2,r2,1024
 4032378:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 403237c:	e0bfff17 	ldw	r2,-4(fp)
 4032380:	10000915 	stw	zero,36(r2)
 4032384:	00000a06 	br	40323b0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 4032388:	e0bfff17 	ldw	r2,-4(fp)
 403238c:	10c00917 	ldw	r3,36(r2)
 4032390:	00a00034 	movhi	r2,32768
 4032394:	10bfff04 	addi	r2,r2,-4
 4032398:	10c00536 	bltu	r2,r3,40323b0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 403239c:	e0bfff17 	ldw	r2,-4(fp)
 40323a0:	10800917 	ldw	r2,36(r2)
 40323a4:	10c00044 	addi	r3,r2,1
 40323a8:	e0bfff17 	ldw	r2,-4(fp)
 40323ac:	10c00915 	stw	r3,36(r2)
 40323b0:	d0a01a17 	ldw	r2,-32664(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 40323b4:	e037883a 	mov	sp,fp
 40323b8:	df000017 	ldw	fp,0(sp)
 40323bc:	dec00104 	addi	sp,sp,4
 40323c0:	f800283a 	ret

040323c4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 40323c4:	defffd04 	addi	sp,sp,-12
 40323c8:	df000215 	stw	fp,8(sp)
 40323cc:	df000204 	addi	fp,sp,8
 40323d0:	e13fff15 	stw	r4,-4(fp)
 40323d4:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40323d8:	00000506 	br	40323f0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 40323dc:	e0bffe17 	ldw	r2,-8(fp)
 40323e0:	1090000c 	andi	r2,r2,16384
 40323e4:	10000226 	beq	r2,zero,40323f0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 40323e8:	00bffd44 	movi	r2,-11
 40323ec:	00000b06 	br	403241c <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40323f0:	e0bfff17 	ldw	r2,-4(fp)
 40323f4:	10c00d17 	ldw	r3,52(r2)
 40323f8:	e0bfff17 	ldw	r2,-4(fp)
 40323fc:	10800c17 	ldw	r2,48(r2)
 4032400:	18800526 	beq	r3,r2,4032418 <altera_avalon_jtag_uart_close+0x54>
 4032404:	e0bfff17 	ldw	r2,-4(fp)
 4032408:	10c00917 	ldw	r3,36(r2)
 403240c:	e0bfff17 	ldw	r2,-4(fp)
 4032410:	10800117 	ldw	r2,4(r2)
 4032414:	18bff136 	bltu	r3,r2,40323dc <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
 4032418:	0005883a 	mov	r2,zero
}
 403241c:	e037883a 	mov	sp,fp
 4032420:	df000017 	ldw	fp,0(sp)
 4032424:	dec00104 	addi	sp,sp,4
 4032428:	f800283a 	ret

0403242c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 403242c:	defffa04 	addi	sp,sp,-24
 4032430:	df000515 	stw	fp,20(sp)
 4032434:	df000504 	addi	fp,sp,20
 4032438:	e13ffd15 	stw	r4,-12(fp)
 403243c:	e17ffc15 	stw	r5,-16(fp)
 4032440:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
 4032444:	00bff9c4 	movi	r2,-25
 4032448:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
 403244c:	e0bffc17 	ldw	r2,-16(fp)
 4032450:	109a8060 	cmpeqi	r2,r2,27137
 4032454:	1000041e 	bne	r2,zero,4032468 <altera_avalon_jtag_uart_ioctl+0x3c>
 4032458:	e0bffc17 	ldw	r2,-16(fp)
 403245c:	109a80a0 	cmpeqi	r2,r2,27138
 4032460:	1000181e 	bne	r2,zero,40324c4 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 4032464:	00002906 	br	403250c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
 4032468:	e0bffd17 	ldw	r2,-12(fp)
 403246c:	10c00117 	ldw	r3,4(r2)
 4032470:	00a00034 	movhi	r2,32768
 4032474:	10bfffc4 	addi	r2,r2,-1
 4032478:	18802126 	beq	r3,r2,4032500 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
 403247c:	e0bffb17 	ldw	r2,-20(fp)
 4032480:	10800017 	ldw	r2,0(r2)
 4032484:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 4032488:	e0bffe17 	ldw	r2,-8(fp)
 403248c:	10800090 	cmplti	r2,r2,2
 4032490:	1000061e 	bne	r2,zero,40324ac <altera_avalon_jtag_uart_ioctl+0x80>
 4032494:	e0fffe17 	ldw	r3,-8(fp)
 4032498:	00a00034 	movhi	r2,32768
 403249c:	10bfffc4 	addi	r2,r2,-1
 40324a0:	18800226 	beq	r3,r2,40324ac <altera_avalon_jtag_uart_ioctl+0x80>
 40324a4:	e0bffe17 	ldw	r2,-8(fp)
 40324a8:	00000206 	br	40324b4 <altera_avalon_jtag_uart_ioctl+0x88>
 40324ac:	00a00034 	movhi	r2,32768
 40324b0:	10bfff84 	addi	r2,r2,-2
 40324b4:	e0fffd17 	ldw	r3,-12(fp)
 40324b8:	18800115 	stw	r2,4(r3)
      rc = 0;
 40324bc:	e03fff15 	stw	zero,-4(fp)
    break;
 40324c0:	00000f06 	br	4032500 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
 40324c4:	e0bffd17 	ldw	r2,-12(fp)
 40324c8:	10c00117 	ldw	r3,4(r2)
 40324cc:	00a00034 	movhi	r2,32768
 40324d0:	10bfffc4 	addi	r2,r2,-1
 40324d4:	18800c26 	beq	r3,r2,4032508 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 40324d8:	e0bffd17 	ldw	r2,-12(fp)
 40324dc:	10c00917 	ldw	r3,36(r2)
 40324e0:	e0bffd17 	ldw	r2,-12(fp)
 40324e4:	10800117 	ldw	r2,4(r2)
 40324e8:	1885803a 	cmpltu	r2,r3,r2
 40324ec:	10c03fcc 	andi	r3,r2,255
 40324f0:	e0bffb17 	ldw	r2,-20(fp)
 40324f4:	10c00015 	stw	r3,0(r2)
      rc = 0;
 40324f8:	e03fff15 	stw	zero,-4(fp)
    break;
 40324fc:	00000206 	br	4032508 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
 4032500:	0001883a 	nop
 4032504:	00000106 	br	403250c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
 4032508:	0001883a 	nop
  }

  return rc;
 403250c:	e0bfff17 	ldw	r2,-4(fp)
}
 4032510:	e037883a 	mov	sp,fp
 4032514:	df000017 	ldw	fp,0(sp)
 4032518:	dec00104 	addi	sp,sp,4
 403251c:	f800283a 	ret

04032520 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 4032520:	defff304 	addi	sp,sp,-52
 4032524:	dfc00c15 	stw	ra,48(sp)
 4032528:	df000b15 	stw	fp,44(sp)
 403252c:	df000b04 	addi	fp,sp,44
 4032530:	e13ff815 	stw	r4,-32(fp)
 4032534:	e17ff715 	stw	r5,-36(fp)
 4032538:	e1bff615 	stw	r6,-40(fp)
 403253c:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
 4032540:	e0bff717 	ldw	r2,-36(fp)
 4032544:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 4032548:	00004706 	br	4032668 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 403254c:	e0bff817 	ldw	r2,-32(fp)
 4032550:	10800a17 	ldw	r2,40(r2)
 4032554:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
 4032558:	e0bff817 	ldw	r2,-32(fp)
 403255c:	10800b17 	ldw	r2,44(r2)
 4032560:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
 4032564:	e0fffd17 	ldw	r3,-12(fp)
 4032568:	e0bffc17 	ldw	r2,-16(fp)
 403256c:	18800536 	bltu	r3,r2,4032584 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 4032570:	e0fffd17 	ldw	r3,-12(fp)
 4032574:	e0bffc17 	ldw	r2,-16(fp)
 4032578:	1885c83a 	sub	r2,r3,r2
 403257c:	e0bffe15 	stw	r2,-8(fp)
 4032580:	00000406 	br	4032594 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 4032584:	00c20004 	movi	r3,2048
 4032588:	e0bffc17 	ldw	r2,-16(fp)
 403258c:	1885c83a 	sub	r2,r3,r2
 4032590:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 4032594:	e0bffe17 	ldw	r2,-8(fp)
 4032598:	10001e26 	beq	r2,zero,4032614 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 403259c:	e0fff617 	ldw	r3,-40(fp)
 40325a0:	e0bffe17 	ldw	r2,-8(fp)
 40325a4:	1880022e 	bgeu	r3,r2,40325b0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 40325a8:	e0bff617 	ldw	r2,-40(fp)
 40325ac:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 40325b0:	e0bff817 	ldw	r2,-32(fp)
 40325b4:	10c00e04 	addi	r3,r2,56
 40325b8:	e0bffc17 	ldw	r2,-16(fp)
 40325bc:	1885883a 	add	r2,r3,r2
 40325c0:	e1bffe17 	ldw	r6,-8(fp)
 40325c4:	100b883a 	mov	r5,r2
 40325c8:	e13fff17 	ldw	r4,-4(fp)
 40325cc:	40256900 	call	4025690 <memcpy>
      ptr   += n;
 40325d0:	e0ffff17 	ldw	r3,-4(fp)
 40325d4:	e0bffe17 	ldw	r2,-8(fp)
 40325d8:	1885883a 	add	r2,r3,r2
 40325dc:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
 40325e0:	e0fff617 	ldw	r3,-40(fp)
 40325e4:	e0bffe17 	ldw	r2,-8(fp)
 40325e8:	1885c83a 	sub	r2,r3,r2
 40325ec:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40325f0:	e0fffc17 	ldw	r3,-16(fp)
 40325f4:	e0bffe17 	ldw	r2,-8(fp)
 40325f8:	1885883a 	add	r2,r3,r2
 40325fc:	10c1ffcc 	andi	r3,r2,2047
 4032600:	e0bff817 	ldw	r2,-32(fp)
 4032604:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 4032608:	e0bff617 	ldw	r2,-40(fp)
 403260c:	00bfcf16 	blt	zero,r2,403254c <altera_avalon_jtag_uart_read+0x2c>
 4032610:	00000106 	br	4032618 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
 4032614:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
 4032618:	e0ffff17 	ldw	r3,-4(fp)
 403261c:	e0bff717 	ldw	r2,-36(fp)
 4032620:	1880141e 	bne	r3,r2,4032674 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 4032624:	e0bff517 	ldw	r2,-44(fp)
 4032628:	1090000c 	andi	r2,r2,16384
 403262c:	1000131e 	bne	r2,zero,403267c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 4032630:	0001883a 	nop
 4032634:	e0bff817 	ldw	r2,-32(fp)
 4032638:	10800a17 	ldw	r2,40(r2)
 403263c:	e0fffd17 	ldw	r3,-12(fp)
 4032640:	1880051e 	bne	r3,r2,4032658 <altera_avalon_jtag_uart_read+0x138>
 4032644:	e0bff817 	ldw	r2,-32(fp)
 4032648:	10c00917 	ldw	r3,36(r2)
 403264c:	e0bff817 	ldw	r2,-32(fp)
 4032650:	10800117 	ldw	r2,4(r2)
 4032654:	18bff736 	bltu	r3,r2,4032634 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 4032658:	e0bff817 	ldw	r2,-32(fp)
 403265c:	10800a17 	ldw	r2,40(r2)
 4032660:	e0fffd17 	ldw	r3,-12(fp)
 4032664:	18800726 	beq	r3,r2,4032684 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
 4032668:	e0bff617 	ldw	r2,-40(fp)
 403266c:	00bfb716 	blt	zero,r2,403254c <altera_avalon_jtag_uart_read+0x2c>
 4032670:	00000506 	br	4032688 <altera_avalon_jtag_uart_read+0x168>
      break;
 4032674:	0001883a 	nop
 4032678:	00000306 	br	4032688 <altera_avalon_jtag_uart_read+0x168>
      break;
 403267c:	0001883a 	nop
 4032680:	00000106 	br	4032688 <altera_avalon_jtag_uart_read+0x168>
      break;
 4032684:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 4032688:	e0ffff17 	ldw	r3,-4(fp)
 403268c:	e0bff717 	ldw	r2,-36(fp)
 4032690:	18801926 	beq	r3,r2,40326f8 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
 4032694:	0005303a 	rdctl	r2,status
 4032698:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 403269c:	e0fff917 	ldw	r3,-28(fp)
 40326a0:	00bfff84 	movi	r2,-2
 40326a4:	1884703a 	and	r2,r3,r2
 40326a8:	1001703a 	wrctl	status,r2
  return context;
 40326ac:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 40326b0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 40326b4:	e0bff817 	ldw	r2,-32(fp)
 40326b8:	10800817 	ldw	r2,32(r2)
 40326bc:	10c00054 	ori	r3,r2,1
 40326c0:	e0bff817 	ldw	r2,-32(fp)
 40326c4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 40326c8:	e0bff817 	ldw	r2,-32(fp)
 40326cc:	10800017 	ldw	r2,0(r2)
 40326d0:	10800104 	addi	r2,r2,4
 40326d4:	1007883a 	mov	r3,r2
 40326d8:	e0bff817 	ldw	r2,-32(fp)
 40326dc:	10800817 	ldw	r2,32(r2)
 40326e0:	18800035 	stwio	r2,0(r3)
 40326e4:	e0bffb17 	ldw	r2,-20(fp)
 40326e8:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 40326ec:	e0bffa17 	ldw	r2,-24(fp)
 40326f0:	1001703a 	wrctl	status,r2
}
 40326f4:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 40326f8:	e0ffff17 	ldw	r3,-4(fp)
 40326fc:	e0bff717 	ldw	r2,-36(fp)
 4032700:	18800426 	beq	r3,r2,4032714 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
 4032704:	e0ffff17 	ldw	r3,-4(fp)
 4032708:	e0bff717 	ldw	r2,-36(fp)
 403270c:	1885c83a 	sub	r2,r3,r2
 4032710:	00000606 	br	403272c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 4032714:	e0bff517 	ldw	r2,-44(fp)
 4032718:	1090000c 	andi	r2,r2,16384
 403271c:	10000226 	beq	r2,zero,4032728 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
 4032720:	00bffd44 	movi	r2,-11
 4032724:	00000106 	br	403272c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 4032728:	00bffec4 	movi	r2,-5
}
 403272c:	e037883a 	mov	sp,fp
 4032730:	dfc00117 	ldw	ra,4(sp)
 4032734:	df000017 	ldw	fp,0(sp)
 4032738:	dec00204 	addi	sp,sp,8
 403273c:	f800283a 	ret

04032740 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 4032740:	defff304 	addi	sp,sp,-52
 4032744:	dfc00c15 	stw	ra,48(sp)
 4032748:	df000b15 	stw	fp,44(sp)
 403274c:	df000b04 	addi	fp,sp,44
 4032750:	e13ff815 	stw	r4,-32(fp)
 4032754:	e17ff715 	stw	r5,-36(fp)
 4032758:	e1bff615 	stw	r6,-40(fp)
 403275c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 4032760:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 4032764:	e0bff717 	ldw	r2,-36(fp)
 4032768:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 403276c:	00003706 	br	403284c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 4032770:	e0bff817 	ldw	r2,-32(fp)
 4032774:	10800c17 	ldw	r2,48(r2)
 4032778:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
 403277c:	e0bff817 	ldw	r2,-32(fp)
 4032780:	10800d17 	ldw	r2,52(r2)
 4032784:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
 4032788:	e0fffc17 	ldw	r3,-16(fp)
 403278c:	e0bfff17 	ldw	r2,-4(fp)
 4032790:	1880062e 	bgeu	r3,r2,40327ac <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 4032794:	e0ffff17 	ldw	r3,-4(fp)
 4032798:	e0bffc17 	ldw	r2,-16(fp)
 403279c:	1885c83a 	sub	r2,r3,r2
 40327a0:	10bfffc4 	addi	r2,r2,-1
 40327a4:	e0bffe15 	stw	r2,-8(fp)
 40327a8:	00000b06 	br	40327d8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 40327ac:	e0bfff17 	ldw	r2,-4(fp)
 40327b0:	10000526 	beq	r2,zero,40327c8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 40327b4:	00c20004 	movi	r3,2048
 40327b8:	e0bffc17 	ldw	r2,-16(fp)
 40327bc:	1885c83a 	sub	r2,r3,r2
 40327c0:	e0bffe15 	stw	r2,-8(fp)
 40327c4:	00000406 	br	40327d8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 40327c8:	00c1ffc4 	movi	r3,2047
 40327cc:	e0bffc17 	ldw	r2,-16(fp)
 40327d0:	1885c83a 	sub	r2,r3,r2
 40327d4:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 40327d8:	e0bffe17 	ldw	r2,-8(fp)
 40327dc:	10001e26 	beq	r2,zero,4032858 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 40327e0:	e0fff617 	ldw	r3,-40(fp)
 40327e4:	e0bffe17 	ldw	r2,-8(fp)
 40327e8:	1880022e 	bgeu	r3,r2,40327f4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 40327ec:	e0bff617 	ldw	r2,-40(fp)
 40327f0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 40327f4:	e0bff817 	ldw	r2,-32(fp)
 40327f8:	10c20e04 	addi	r3,r2,2104
 40327fc:	e0bffc17 	ldw	r2,-16(fp)
 4032800:	1885883a 	add	r2,r3,r2
 4032804:	e1bffe17 	ldw	r6,-8(fp)
 4032808:	e17ff717 	ldw	r5,-36(fp)
 403280c:	1009883a 	mov	r4,r2
 4032810:	40256900 	call	4025690 <memcpy>
      ptr   += n;
 4032814:	e0fff717 	ldw	r3,-36(fp)
 4032818:	e0bffe17 	ldw	r2,-8(fp)
 403281c:	1885883a 	add	r2,r3,r2
 4032820:	e0bff715 	stw	r2,-36(fp)
      count -= n;
 4032824:	e0fff617 	ldw	r3,-40(fp)
 4032828:	e0bffe17 	ldw	r2,-8(fp)
 403282c:	1885c83a 	sub	r2,r3,r2
 4032830:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4032834:	e0fffc17 	ldw	r3,-16(fp)
 4032838:	e0bffe17 	ldw	r2,-8(fp)
 403283c:	1885883a 	add	r2,r3,r2
 4032840:	10c1ffcc 	andi	r3,r2,2047
 4032844:	e0bff817 	ldw	r2,-32(fp)
 4032848:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
 403284c:	e0bff617 	ldw	r2,-40(fp)
 4032850:	00bfc716 	blt	zero,r2,4032770 <altera_avalon_jtag_uart_write+0x30>
 4032854:	00000106 	br	403285c <altera_avalon_jtag_uart_write+0x11c>
        break;
 4032858:	0001883a 	nop
  NIOS2_READ_STATUS (context);
 403285c:	0005303a 	rdctl	r2,status
 4032860:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4032864:	e0fff917 	ldw	r3,-28(fp)
 4032868:	00bfff84 	movi	r2,-2
 403286c:	1884703a 	and	r2,r3,r2
 4032870:	1001703a 	wrctl	status,r2
  return context;
 4032874:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 4032878:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 403287c:	e0bff817 	ldw	r2,-32(fp)
 4032880:	10800817 	ldw	r2,32(r2)
 4032884:	10c00094 	ori	r3,r2,2
 4032888:	e0bff817 	ldw	r2,-32(fp)
 403288c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4032890:	e0bff817 	ldw	r2,-32(fp)
 4032894:	10800017 	ldw	r2,0(r2)
 4032898:	10800104 	addi	r2,r2,4
 403289c:	1007883a 	mov	r3,r2
 40328a0:	e0bff817 	ldw	r2,-32(fp)
 40328a4:	10800817 	ldw	r2,32(r2)
 40328a8:	18800035 	stwio	r2,0(r3)
 40328ac:	e0bffb17 	ldw	r2,-20(fp)
 40328b0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 40328b4:	e0bffa17 	ldw	r2,-24(fp)
 40328b8:	1001703a 	wrctl	status,r2
}
 40328bc:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 40328c0:	e0bff617 	ldw	r2,-40(fp)
 40328c4:	0080100e 	bge	zero,r2,4032908 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 40328c8:	e0bff517 	ldw	r2,-44(fp)
 40328cc:	1090000c 	andi	r2,r2,16384
 40328d0:	1000101e 	bne	r2,zero,4032914 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 40328d4:	0001883a 	nop
 40328d8:	e0bff817 	ldw	r2,-32(fp)
 40328dc:	10800d17 	ldw	r2,52(r2)
 40328e0:	e0ffff17 	ldw	r3,-4(fp)
 40328e4:	1880051e 	bne	r3,r2,40328fc <altera_avalon_jtag_uart_write+0x1bc>
 40328e8:	e0bff817 	ldw	r2,-32(fp)
 40328ec:	10c00917 	ldw	r3,36(r2)
 40328f0:	e0bff817 	ldw	r2,-32(fp)
 40328f4:	10800117 	ldw	r2,4(r2)
 40328f8:	18bff736 	bltu	r3,r2,40328d8 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 40328fc:	e0bff817 	ldw	r2,-32(fp)
 4032900:	10800917 	ldw	r2,36(r2)
 4032904:	1000051e 	bne	r2,zero,403291c <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
 4032908:	e0bff617 	ldw	r2,-40(fp)
 403290c:	00bfcf16 	blt	zero,r2,403284c <altera_avalon_jtag_uart_write+0x10c>
 4032910:	00000306 	br	4032920 <altera_avalon_jtag_uart_write+0x1e0>
        break;
 4032914:	0001883a 	nop
 4032918:	00000106 	br	4032920 <altera_avalon_jtag_uart_write+0x1e0>
         break;
 403291c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 4032920:	e0fff717 	ldw	r3,-36(fp)
 4032924:	e0bffd17 	ldw	r2,-12(fp)
 4032928:	18800426 	beq	r3,r2,403293c <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
 403292c:	e0fff717 	ldw	r3,-36(fp)
 4032930:	e0bffd17 	ldw	r2,-12(fp)
 4032934:	1885c83a 	sub	r2,r3,r2
 4032938:	00000606 	br	4032954 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
 403293c:	e0bff517 	ldw	r2,-44(fp)
 4032940:	1090000c 	andi	r2,r2,16384
 4032944:	10000226 	beq	r2,zero,4032950 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
 4032948:	00bffd44 	movi	r2,-11
 403294c:	00000106 	br	4032954 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 4032950:	00bffec4 	movi	r2,-5
}
 4032954:	e037883a 	mov	sp,fp
 4032958:	dfc00117 	ldw	ra,4(sp)
 403295c:	df000017 	ldw	fp,0(sp)
 4032960:	dec00204 	addi	sp,sp,8
 4032964:	f800283a 	ret

04032968 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 4032968:	defff904 	addi	sp,sp,-28
 403296c:	dfc00615 	stw	ra,24(sp)
 4032970:	df000515 	stw	fp,20(sp)
 4032974:	df000504 	addi	fp,sp,20
 4032978:	e13ffc15 	stw	r4,-16(fp)
 403297c:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 4032980:	0007883a 	mov	r3,zero
 4032984:	e0bffc17 	ldw	r2,-16(fp)
 4032988:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 403298c:	e0bffc17 	ldw	r2,-16(fp)
 4032990:	10800104 	addi	r2,r2,4
 4032994:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
 4032998:	0005303a 	rdctl	r2,status
 403299c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40329a0:	e0fffd17 	ldw	r3,-12(fp)
 40329a4:	00bfff84 	movi	r2,-2
 40329a8:	1884703a 	and	r2,r3,r2
 40329ac:	1001703a 	wrctl	status,r2
  return context;
 40329b0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 40329b4:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
 40329b8:	40335980 	call	4033598 <alt_tick>
 40329bc:	e0bfff17 	ldw	r2,-4(fp)
 40329c0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 40329c4:	e0bffe17 	ldw	r2,-8(fp)
 40329c8:	1001703a 	wrctl	status,r2
}
 40329cc:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
 40329d0:	0001883a 	nop
 40329d4:	e037883a 	mov	sp,fp
 40329d8:	dfc00117 	ldw	ra,4(sp)
 40329dc:	df000017 	ldw	fp,0(sp)
 40329e0:	dec00204 	addi	sp,sp,8
 40329e4:	f800283a 	ret

040329e8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 40329e8:	defff904 	addi	sp,sp,-28
 40329ec:	dfc00615 	stw	ra,24(sp)
 40329f0:	df000515 	stw	fp,20(sp)
 40329f4:	df000504 	addi	fp,sp,20
 40329f8:	e13ffe15 	stw	r4,-8(fp)
 40329fc:	e17ffd15 	stw	r5,-12(fp)
 4032a00:	e1bffc15 	stw	r6,-16(fp)
 4032a04:	e1fffb15 	stw	r7,-20(fp)
 4032a08:	e0bffb17 	ldw	r2,-20(fp)
 4032a0c:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 4032a10:	d0a01a17 	ldw	r2,-32664(gp)
 4032a14:	1000031e 	bne	r2,zero,4032a24 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
 4032a18:	e0bfff17 	ldw	r2,-4(fp)
 4032a1c:	d0a01a15 	stw	r2,-32664(gp)
    return 0;
 4032a20:	00000106 	br	4032a28 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
 4032a24:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 4032a28:	e0bffe17 	ldw	r2,-8(fp)
 4032a2c:	10800104 	addi	r2,r2,4
 4032a30:	00c001c4 	movi	r3,7
 4032a34:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
 4032a38:	018100f4 	movhi	r6,1027
 4032a3c:	318a5a04 	addi	r6,r6,10600
 4032a40:	e17ffe17 	ldw	r5,-8(fp)
 4032a44:	e13ffc17 	ldw	r4,-16(fp)
 4032a48:	40311d00 	call	40311d0 <alt_irq_register>
#endif  
}
 4032a4c:	0001883a 	nop
 4032a50:	e037883a 	mov	sp,fp
 4032a54:	dfc00117 	ldw	ra,4(sp)
 4032a58:	df000017 	ldw	fp,0(sp)
 4032a5c:	dec00204 	addi	sp,sp,8
 4032a60:	f800283a 	ret

04032a64 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
 4032a64:	defffc04 	addi	sp,sp,-16
 4032a68:	dfc00315 	stw	ra,12(sp)
 4032a6c:	df000215 	stw	fp,8(sp)
 4032a70:	df000204 	addi	fp,sp,8
 4032a74:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
 4032a78:	d1600704 	addi	r5,gp,-32740
 4032a7c:	e13ffe17 	ldw	r4,-8(fp)
 4032a80:	403315c0 	call	403315c <alt_find_dev>
 4032a84:	e0bfff15 	stw	r2,-4(fp)

  return dev;
 4032a88:	e0bfff17 	ldw	r2,-4(fp)
}
 4032a8c:	e037883a 	mov	sp,fp
 4032a90:	dfc00117 	ldw	ra,4(sp)
 4032a94:	df000017 	ldw	fp,0(sp)
 4032a98:	dec00204 	addi	sp,sp,8
 4032a9c:	f800283a 	ret

04032aa0 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
 4032aa0:	defffd04 	addi	sp,sp,-12
 4032aa4:	df000215 	stw	fp,8(sp)
 4032aa8:	df000204 	addi	fp,sp,8
 4032aac:	e13fff15 	stw	r4,-4(fp)
 4032ab0:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
 4032ab4:	e0bfff17 	ldw	r2,-4(fp)
 4032ab8:	10800a17 	ldw	r2,40(r2)
 4032abc:	10800023 	ldbuio	r2,0(r2)
 4032ac0:	10803fcc 	andi	r2,r2,255
 4032ac4:	1007883a 	mov	r3,r2
 4032ac8:	e0bffe17 	ldw	r2,-8(fp)
 4032acc:	10c00005 	stb	r3,0(r2)

	return 0;
 4032ad0:	0005883a 	mov	r2,zero
}
 4032ad4:	e037883a 	mov	sp,fp
 4032ad8:	df000017 	ldw	fp,0(sp)
 4032adc:	dec00104 	addi	sp,sp,4
 4032ae0:	f800283a 	ret

04032ae4 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
 4032ae4:	defffc04 	addi	sp,sp,-16
 4032ae8:	df000315 	stw	fp,12(sp)
 4032aec:	df000304 	addi	fp,sp,12
 4032af0:	e13fff15 	stw	r4,-4(fp)
 4032af4:	2805883a 	mov	r2,r5
 4032af8:	e1bffd15 	stw	r6,-12(fp)
 4032afc:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032b00:	e0bfff17 	ldw	r2,-4(fp)
 4032b04:	10800a17 	ldw	r2,40(r2)
 4032b08:	1007883a 	mov	r3,r2
 4032b0c:	e0bffe03 	ldbu	r2,-8(fp)
 4032b10:	10800fcc 	andi	r2,r2,63
 4032b14:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 4032b18:	e0bfff17 	ldw	r2,-4(fp)
 4032b1c:	10800a17 	ldw	r2,40(r2)
 4032b20:	10800044 	addi	r2,r2,1
 4032b24:	10800023 	ldbuio	r2,0(r2)
 4032b28:	10803fcc 	andi	r2,r2,255
 4032b2c:	1007883a 	mov	r3,r2
 4032b30:	e0bffd17 	ldw	r2,-12(fp)
 4032b34:	10c00005 	stb	r3,0(r2)

	return 0;
 4032b38:	0005883a 	mov	r2,zero
}
 4032b3c:	e037883a 	mov	sp,fp
 4032b40:	df000017 	ldw	fp,0(sp)
 4032b44:	dec00104 	addi	sp,sp,4
 4032b48:	f800283a 	ret

04032b4c <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
 4032b4c:	defffc04 	addi	sp,sp,-16
 4032b50:	df000315 	stw	fp,12(sp)
 4032b54:	df000304 	addi	fp,sp,12
 4032b58:	e13fff15 	stw	r4,-4(fp)
 4032b5c:	2805883a 	mov	r2,r5
 4032b60:	3007883a 	mov	r3,r6
 4032b64:	e0bffe05 	stb	r2,-8(fp)
 4032b68:	1805883a 	mov	r2,r3
 4032b6c:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032b70:	e0bfff17 	ldw	r2,-4(fp)
 4032b74:	10800a17 	ldw	r2,40(r2)
 4032b78:	1007883a 	mov	r3,r2
 4032b7c:	e0bffe03 	ldbu	r2,-8(fp)
 4032b80:	10800fcc 	andi	r2,r2,63
 4032b84:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
 4032b88:	e0bfff17 	ldw	r2,-4(fp)
 4032b8c:	10800a17 	ldw	r2,40(r2)
 4032b90:	10800044 	addi	r2,r2,1
 4032b94:	1007883a 	mov	r3,r2
 4032b98:	e0bffd03 	ldbu	r2,-12(fp)
 4032b9c:	18800025 	stbio	r2,0(r3)

	return 0;
 4032ba0:	0005883a 	mov	r2,zero
}
 4032ba4:	e037883a 	mov	sp,fp
 4032ba8:	df000017 	ldw	fp,0(sp)
 4032bac:	dec00104 	addi	sp,sp,4
 4032bb0:	f800283a 	ret

04032bb4 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
 4032bb4:	defffd04 	addi	sp,sp,-12
 4032bb8:	df000215 	stw	fp,8(sp)
 4032bbc:	df000204 	addi	fp,sp,8
 4032bc0:	e13fff15 	stw	r4,-4(fp)
 4032bc4:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032bc8:	e0bfff17 	ldw	r2,-4(fp)
 4032bcc:	10800a17 	ldw	r2,40(r2)
 4032bd0:	1007883a 	mov	r3,r2
 4032bd4:	00800c84 	movi	r2,50
 4032bd8:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 4032bdc:	e0bfff17 	ldw	r2,-4(fp)
 4032be0:	10800a17 	ldw	r2,40(r2)
 4032be4:	10800044 	addi	r2,r2,1
 4032be8:	10800023 	ldbuio	r2,0(r2)
 4032bec:	10803fcc 	andi	r2,r2,255
 4032bf0:	10ffffcc 	andi	r3,r2,65535
 4032bf4:	e0bffe17 	ldw	r2,-8(fp)
 4032bf8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032bfc:	e0bfff17 	ldw	r2,-4(fp)
 4032c00:	10800a17 	ldw	r2,40(r2)
 4032c04:	1007883a 	mov	r3,r2
 4032c08:	00800cc4 	movi	r2,51
 4032c0c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 4032c10:	e0bfff17 	ldw	r2,-4(fp)
 4032c14:	10800a17 	ldw	r2,40(r2)
 4032c18:	10800044 	addi	r2,r2,1
 4032c1c:	10800023 	ldbuio	r2,0(r2)
 4032c20:	10803fcc 	andi	r2,r2,255
 4032c24:	1006923a 	slli	r3,r2,8
 4032c28:	00804034 	movhi	r2,256
 4032c2c:	10bfc004 	addi	r2,r2,-256
 4032c30:	1884703a 	and	r2,r3,r2
 4032c34:	e0fffe17 	ldw	r3,-8(fp)
 4032c38:	18c00017 	ldw	r3,0(r3)
 4032c3c:	10c5883a 	add	r2,r2,r3
 4032c40:	1007883a 	mov	r3,r2
 4032c44:	e0bffe17 	ldw	r2,-8(fp)
 4032c48:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
 4032c4c:	e0bffe17 	ldw	r2,-8(fp)
 4032c50:	10800017 	ldw	r2,0(r2)
 4032c54:	10a0000c 	andi	r2,r2,32768
 4032c58:	10000626 	beq	r2,zero,4032c74 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
 4032c5c:	e0bffe17 	ldw	r2,-8(fp)
 4032c60:	10800017 	ldw	r2,0(r2)
 4032c64:	10bffff4 	orhi	r2,r2,65535
 4032c68:	1007883a 	mov	r3,r2
 4032c6c:	e0bffe17 	ldw	r2,-8(fp)
 4032c70:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 4032c74:	0005883a 	mov	r2,zero
}
 4032c78:	e037883a 	mov	sp,fp
 4032c7c:	df000017 	ldw	fp,0(sp)
 4032c80:	dec00104 	addi	sp,sp,4
 4032c84:	f800283a 	ret

04032c88 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
 4032c88:	defffd04 	addi	sp,sp,-12
 4032c8c:	df000215 	stw	fp,8(sp)
 4032c90:	df000204 	addi	fp,sp,8
 4032c94:	e13fff15 	stw	r4,-4(fp)
 4032c98:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032c9c:	e0bfff17 	ldw	r2,-4(fp)
 4032ca0:	10800a17 	ldw	r2,40(r2)
 4032ca4:	1007883a 	mov	r3,r2
 4032ca8:	00800d04 	movi	r2,52
 4032cac:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 4032cb0:	e0bfff17 	ldw	r2,-4(fp)
 4032cb4:	10800a17 	ldw	r2,40(r2)
 4032cb8:	10800044 	addi	r2,r2,1
 4032cbc:	10800023 	ldbuio	r2,0(r2)
 4032cc0:	10803fcc 	andi	r2,r2,255
 4032cc4:	10ffffcc 	andi	r3,r2,65535
 4032cc8:	e0bffe17 	ldw	r2,-8(fp)
 4032ccc:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032cd0:	e0bfff17 	ldw	r2,-4(fp)
 4032cd4:	10800a17 	ldw	r2,40(r2)
 4032cd8:	1007883a 	mov	r3,r2
 4032cdc:	00800d44 	movi	r2,53
 4032ce0:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 4032ce4:	e0bfff17 	ldw	r2,-4(fp)
 4032ce8:	10800a17 	ldw	r2,40(r2)
 4032cec:	10800044 	addi	r2,r2,1
 4032cf0:	10800023 	ldbuio	r2,0(r2)
 4032cf4:	10803fcc 	andi	r2,r2,255
 4032cf8:	1006923a 	slli	r3,r2,8
 4032cfc:	00804034 	movhi	r2,256
 4032d00:	10bfc004 	addi	r2,r2,-256
 4032d04:	1884703a 	and	r2,r3,r2
 4032d08:	e0fffe17 	ldw	r3,-8(fp)
 4032d0c:	18c00017 	ldw	r3,0(r3)
 4032d10:	10c5883a 	add	r2,r2,r3
 4032d14:	1007883a 	mov	r3,r2
 4032d18:	e0bffe17 	ldw	r2,-8(fp)
 4032d1c:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
 4032d20:	e0bffe17 	ldw	r2,-8(fp)
 4032d24:	10800017 	ldw	r2,0(r2)
 4032d28:	10a0000c 	andi	r2,r2,32768
 4032d2c:	10000626 	beq	r2,zero,4032d48 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
 4032d30:	e0bffe17 	ldw	r2,-8(fp)
 4032d34:	10800017 	ldw	r2,0(r2)
 4032d38:	10bffff4 	orhi	r2,r2,65535
 4032d3c:	1007883a 	mov	r3,r2
 4032d40:	e0bffe17 	ldw	r2,-8(fp)
 4032d44:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 4032d48:	0005883a 	mov	r2,zero
}
 4032d4c:	e037883a 	mov	sp,fp
 4032d50:	df000017 	ldw	fp,0(sp)
 4032d54:	dec00104 	addi	sp,sp,4
 4032d58:	f800283a 	ret

04032d5c <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
 4032d5c:	defffd04 	addi	sp,sp,-12
 4032d60:	df000215 	stw	fp,8(sp)
 4032d64:	df000204 	addi	fp,sp,8
 4032d68:	e13fff15 	stw	r4,-4(fp)
 4032d6c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032d70:	e0bfff17 	ldw	r2,-4(fp)
 4032d74:	10800a17 	ldw	r2,40(r2)
 4032d78:	1007883a 	mov	r3,r2
 4032d7c:	00800d84 	movi	r2,54
 4032d80:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 4032d84:	e0bfff17 	ldw	r2,-4(fp)
 4032d88:	10800a17 	ldw	r2,40(r2)
 4032d8c:	10800044 	addi	r2,r2,1
 4032d90:	10800023 	ldbuio	r2,0(r2)
 4032d94:	10803fcc 	andi	r2,r2,255
 4032d98:	10ffffcc 	andi	r3,r2,65535
 4032d9c:	e0bffe17 	ldw	r2,-8(fp)
 4032da0:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 4032da4:	e0bfff17 	ldw	r2,-4(fp)
 4032da8:	10800a17 	ldw	r2,40(r2)
 4032dac:	1007883a 	mov	r3,r2
 4032db0:	00800dc4 	movi	r2,55
 4032db4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 4032db8:	e0bfff17 	ldw	r2,-4(fp)
 4032dbc:	10800a17 	ldw	r2,40(r2)
 4032dc0:	10800044 	addi	r2,r2,1
 4032dc4:	10800023 	ldbuio	r2,0(r2)
 4032dc8:	10803fcc 	andi	r2,r2,255
 4032dcc:	1006923a 	slli	r3,r2,8
 4032dd0:	00804034 	movhi	r2,256
 4032dd4:	10bfc004 	addi	r2,r2,-256
 4032dd8:	1884703a 	and	r2,r3,r2
 4032ddc:	e0fffe17 	ldw	r3,-8(fp)
 4032de0:	18c00017 	ldw	r3,0(r3)
 4032de4:	10c5883a 	add	r2,r2,r3
 4032de8:	1007883a 	mov	r3,r2
 4032dec:	e0bffe17 	ldw	r2,-8(fp)
 4032df0:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
 4032df4:	e0bffe17 	ldw	r2,-8(fp)
 4032df8:	10800017 	ldw	r2,0(r2)
 4032dfc:	10a0000c 	andi	r2,r2,32768
 4032e00:	10000626 	beq	r2,zero,4032e1c <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
 4032e04:	e0bffe17 	ldw	r2,-8(fp)
 4032e08:	10800017 	ldw	r2,0(r2)
 4032e0c:	10bffff4 	orhi	r2,r2,65535
 4032e10:	1007883a 	mov	r3,r2
 4032e14:	e0bffe17 	ldw	r2,-8(fp)
 4032e18:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 4032e1c:	0005883a 	mov	r2,zero
}
 4032e20:	e037883a 	mov	sp,fp
 4032e24:	df000017 	ldw	fp,0(sp)
 4032e28:	dec00104 	addi	sp,sp,4
 4032e2c:	f800283a 	ret

04032e30 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 4032e30:	defff504 	addi	sp,sp,-44
 4032e34:	df000a15 	stw	fp,40(sp)
 4032e38:	df000a04 	addi	fp,sp,40
 4032e3c:	e13ff915 	stw	r4,-28(fp)
 4032e40:	e17ff815 	stw	r5,-32(fp)
 4032e44:	e1bff715 	stw	r6,-36(fp)
 4032e48:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 4032e4c:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
 4032e50:	d0a01a17 	ldw	r2,-32664(gp)
  
  if (alt_ticks_per_second ())
 4032e54:	10003e26 	beq	r2,zero,4032f50 <alt_alarm_start+0x120>
  {
    if (alarm)
 4032e58:	e0bff917 	ldw	r2,-28(fp)
 4032e5c:	10003a26 	beq	r2,zero,4032f48 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
 4032e60:	e0bff917 	ldw	r2,-28(fp)
 4032e64:	e0fff717 	ldw	r3,-36(fp)
 4032e68:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 4032e6c:	e0bff917 	ldw	r2,-28(fp)
 4032e70:	e0fff617 	ldw	r3,-40(fp)
 4032e74:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
 4032e78:	0005303a 	rdctl	r2,status
 4032e7c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4032e80:	e0fffd17 	ldw	r3,-12(fp)
 4032e84:	00bfff84 	movi	r2,-2
 4032e88:	1884703a 	and	r2,r3,r2
 4032e8c:	1001703a 	wrctl	status,r2
  return context;
 4032e90:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
 4032e94:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4032e98:	d0a01b17 	ldw	r2,-32660(gp)
      
      current_nticks = alt_nticks();
 4032e9c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 4032ea0:	e0fff817 	ldw	r3,-32(fp)
 4032ea4:	e0bfff17 	ldw	r2,-4(fp)
 4032ea8:	1885883a 	add	r2,r3,r2
 4032eac:	10c00044 	addi	r3,r2,1
 4032eb0:	e0bff917 	ldw	r2,-28(fp)
 4032eb4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 4032eb8:	e0bff917 	ldw	r2,-28(fp)
 4032ebc:	10c00217 	ldw	r3,8(r2)
 4032ec0:	e0bfff17 	ldw	r2,-4(fp)
 4032ec4:	1880042e 	bgeu	r3,r2,4032ed8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 4032ec8:	e0bff917 	ldw	r2,-28(fp)
 4032ecc:	00c00044 	movi	r3,1
 4032ed0:	10c00405 	stb	r3,16(r2)
 4032ed4:	00000206 	br	4032ee0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 4032ed8:	e0bff917 	ldw	r2,-28(fp)
 4032edc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 4032ee0:	e0bff917 	ldw	r2,-28(fp)
 4032ee4:	d0e00d04 	addi	r3,gp,-32716
 4032ee8:	e0fffb15 	stw	r3,-20(fp)
 4032eec:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4032ef0:	e0bffa17 	ldw	r2,-24(fp)
 4032ef4:	e0fffb17 	ldw	r3,-20(fp)
 4032ef8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 4032efc:	e0bffb17 	ldw	r2,-20(fp)
 4032f00:	10c00017 	ldw	r3,0(r2)
 4032f04:	e0bffa17 	ldw	r2,-24(fp)
 4032f08:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 4032f0c:	e0bffb17 	ldw	r2,-20(fp)
 4032f10:	10800017 	ldw	r2,0(r2)
 4032f14:	e0fffa17 	ldw	r3,-24(fp)
 4032f18:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 4032f1c:	e0bffb17 	ldw	r2,-20(fp)
 4032f20:	e0fffa17 	ldw	r3,-24(fp)
 4032f24:	10c00015 	stw	r3,0(r2)
}
 4032f28:	0001883a 	nop
 4032f2c:	e0bffe17 	ldw	r2,-8(fp)
 4032f30:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 4032f34:	e0bffc17 	ldw	r2,-16(fp)
 4032f38:	1001703a 	wrctl	status,r2
}
 4032f3c:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
 4032f40:	0005883a 	mov	r2,zero
 4032f44:	00000306 	br	4032f54 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
 4032f48:	00bffa84 	movi	r2,-22
 4032f4c:	00000106 	br	4032f54 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
 4032f50:	00bfde84 	movi	r2,-134
  }
}
 4032f54:	e037883a 	mov	sp,fp
 4032f58:	df000017 	ldw	fp,0(sp)
 4032f5c:	dec00104 	addi	sp,sp,4
 4032f60:	f800283a 	ret

04032f64 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 4032f64:	defffe04 	addi	sp,sp,-8
 4032f68:	df000115 	stw	fp,4(sp)
 4032f6c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4032f70:	e03fff15 	stw	zero,-4(fp)
 4032f74:	00000506 	br	4032f8c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 4032f78:	e0bfff17 	ldw	r2,-4(fp)
 4032f7c:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4032f80:	e0bfff17 	ldw	r2,-4(fp)
 4032f84:	10800804 	addi	r2,r2,32
 4032f88:	e0bfff15 	stw	r2,-4(fp)
 4032f8c:	e0bfff17 	ldw	r2,-4(fp)
 4032f90:	10820030 	cmpltui	r2,r2,2048
 4032f94:	103ff81e 	bne	r2,zero,4032f78 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 4032f98:	0001883a 	nop
 4032f9c:	0001883a 	nop
 4032fa0:	e037883a 	mov	sp,fp
 4032fa4:	df000017 	ldw	fp,0(sp)
 4032fa8:	dec00104 	addi	sp,sp,4
 4032fac:	f800283a 	ret

04032fb0 <alt_get_errno>:
{
 4032fb0:	defffe04 	addi	sp,sp,-8
 4032fb4:	dfc00115 	stw	ra,4(sp)
 4032fb8:	df000015 	stw	fp,0(sp)
 4032fbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4032fc0:	d0a00a17 	ldw	r2,-32728(gp)
 4032fc4:	10000326 	beq	r2,zero,4032fd4 <alt_get_errno+0x24>
 4032fc8:	d0a00a17 	ldw	r2,-32728(gp)
 4032fcc:	103ee83a 	callr	r2
 4032fd0:	00000106 	br	4032fd8 <alt_get_errno+0x28>
 4032fd4:	d0a01104 	addi	r2,gp,-32700
}
 4032fd8:	e037883a 	mov	sp,fp
 4032fdc:	dfc00117 	ldw	ra,4(sp)
 4032fe0:	df000017 	ldw	fp,0(sp)
 4032fe4:	dec00204 	addi	sp,sp,8
 4032fe8:	f800283a 	ret

04032fec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 4032fec:	defffa04 	addi	sp,sp,-24
 4032ff0:	dfc00515 	stw	ra,20(sp)
 4032ff4:	df000415 	stw	fp,16(sp)
 4032ff8:	df000404 	addi	fp,sp,16
 4032ffc:	e13ffd15 	stw	r4,-12(fp)
 4033000:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 4033004:	e0bffd17 	ldw	r2,-12(fp)
 4033008:	10000326 	beq	r2,zero,4033018 <alt_dev_llist_insert+0x2c>
 403300c:	e0bffd17 	ldw	r2,-12(fp)
 4033010:	10800217 	ldw	r2,8(r2)
 4033014:	1000061e 	bne	r2,zero,4033030 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 4033018:	4032fb00 	call	4032fb0 <alt_get_errno>
 403301c:	1007883a 	mov	r3,r2
 4033020:	00800584 	movi	r2,22
 4033024:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 4033028:	00bffa84 	movi	r2,-22
 403302c:	00001406 	br	4033080 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 4033030:	e0bffd17 	ldw	r2,-12(fp)
 4033034:	e0fffc17 	ldw	r3,-16(fp)
 4033038:	e0ffff15 	stw	r3,-4(fp)
 403303c:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
 4033040:	e0bffe17 	ldw	r2,-8(fp)
 4033044:	e0ffff17 	ldw	r3,-4(fp)
 4033048:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 403304c:	e0bfff17 	ldw	r2,-4(fp)
 4033050:	10c00017 	ldw	r3,0(r2)
 4033054:	e0bffe17 	ldw	r2,-8(fp)
 4033058:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
 403305c:	e0bfff17 	ldw	r2,-4(fp)
 4033060:	10800017 	ldw	r2,0(r2)
 4033064:	e0fffe17 	ldw	r3,-8(fp)
 4033068:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 403306c:	e0bfff17 	ldw	r2,-4(fp)
 4033070:	e0fffe17 	ldw	r3,-8(fp)
 4033074:	10c00015 	stw	r3,0(r2)
}
 4033078:	0001883a 	nop

  return 0;  
 403307c:	0005883a 	mov	r2,zero
}
 4033080:	e037883a 	mov	sp,fp
 4033084:	dfc00117 	ldw	ra,4(sp)
 4033088:	df000017 	ldw	fp,0(sp)
 403308c:	dec00204 	addi	sp,sp,8
 4033090:	f800283a 	ret

04033094 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 4033094:	defffd04 	addi	sp,sp,-12
 4033098:	dfc00215 	stw	ra,8(sp)
 403309c:	df000115 	stw	fp,4(sp)
 40330a0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 40330a4:	008100f4 	movhi	r2,1027
 40330a8:	108e9604 	addi	r2,r2,14936
 40330ac:	e0bfff15 	stw	r2,-4(fp)
 40330b0:	00000606 	br	40330cc <_do_ctors+0x38>
        (*ctor) (); 
 40330b4:	e0bfff17 	ldw	r2,-4(fp)
 40330b8:	10800017 	ldw	r2,0(r2)
 40330bc:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 40330c0:	e0bfff17 	ldw	r2,-4(fp)
 40330c4:	10bfff04 	addi	r2,r2,-4
 40330c8:	e0bfff15 	stw	r2,-4(fp)
 40330cc:	e0ffff17 	ldw	r3,-4(fp)
 40330d0:	008100f4 	movhi	r2,1027
 40330d4:	108e9704 	addi	r2,r2,14940
 40330d8:	18bff62e 	bgeu	r3,r2,40330b4 <_do_ctors+0x20>
}
 40330dc:	0001883a 	nop
 40330e0:	0001883a 	nop
 40330e4:	e037883a 	mov	sp,fp
 40330e8:	dfc00117 	ldw	ra,4(sp)
 40330ec:	df000017 	ldw	fp,0(sp)
 40330f0:	dec00204 	addi	sp,sp,8
 40330f4:	f800283a 	ret

040330f8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 40330f8:	defffd04 	addi	sp,sp,-12
 40330fc:	dfc00215 	stw	ra,8(sp)
 4033100:	df000115 	stw	fp,4(sp)
 4033104:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4033108:	008100f4 	movhi	r2,1027
 403310c:	108e9604 	addi	r2,r2,14936
 4033110:	e0bfff15 	stw	r2,-4(fp)
 4033114:	00000606 	br	4033130 <_do_dtors+0x38>
        (*dtor) (); 
 4033118:	e0bfff17 	ldw	r2,-4(fp)
 403311c:	10800017 	ldw	r2,0(r2)
 4033120:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4033124:	e0bfff17 	ldw	r2,-4(fp)
 4033128:	10bfff04 	addi	r2,r2,-4
 403312c:	e0bfff15 	stw	r2,-4(fp)
 4033130:	e0ffff17 	ldw	r3,-4(fp)
 4033134:	008100f4 	movhi	r2,1027
 4033138:	108e9704 	addi	r2,r2,14940
 403313c:	18bff62e 	bgeu	r3,r2,4033118 <_do_dtors+0x20>
}
 4033140:	0001883a 	nop
 4033144:	0001883a 	nop
 4033148:	e037883a 	mov	sp,fp
 403314c:	dfc00117 	ldw	ra,4(sp)
 4033150:	df000017 	ldw	fp,0(sp)
 4033154:	dec00204 	addi	sp,sp,8
 4033158:	f800283a 	ret

0403315c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 403315c:	defffa04 	addi	sp,sp,-24
 4033160:	dfc00515 	stw	ra,20(sp)
 4033164:	df000415 	stw	fp,16(sp)
 4033168:	df000404 	addi	fp,sp,16
 403316c:	e13ffd15 	stw	r4,-12(fp)
 4033170:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
 4033174:	e0bffc17 	ldw	r2,-16(fp)
 4033178:	10800017 	ldw	r2,0(r2)
 403317c:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 4033180:	e13ffd17 	ldw	r4,-12(fp)
 4033184:	40260940 	call	4026094 <strlen>
 4033188:	10800044 	addi	r2,r2,1
 403318c:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4033190:	00000d06 	br	40331c8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 4033194:	e0bfff17 	ldw	r2,-4(fp)
 4033198:	10800217 	ldw	r2,8(r2)
 403319c:	e0fffe17 	ldw	r3,-8(fp)
 40331a0:	180d883a 	mov	r6,r3
 40331a4:	e17ffd17 	ldw	r5,-12(fp)
 40331a8:	1009883a 	mov	r4,r2
 40331ac:	40338340 	call	4033834 <memcmp>
 40331b0:	1000021e 	bne	r2,zero,40331bc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 40331b4:	e0bfff17 	ldw	r2,-4(fp)
 40331b8:	00000706 	br	40331d8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 40331bc:	e0bfff17 	ldw	r2,-4(fp)
 40331c0:	10800017 	ldw	r2,0(r2)
 40331c4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
 40331c8:	e0ffff17 	ldw	r3,-4(fp)
 40331cc:	e0bffc17 	ldw	r2,-16(fp)
 40331d0:	18bff01e 	bne	r3,r2,4033194 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
 40331d4:	0005883a 	mov	r2,zero
}
 40331d8:	e037883a 	mov	sp,fp
 40331dc:	dfc00117 	ldw	ra,4(sp)
 40331e0:	df000017 	ldw	fp,0(sp)
 40331e4:	dec00204 	addi	sp,sp,8
 40331e8:	f800283a 	ret

040331ec <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 40331ec:	defffb04 	addi	sp,sp,-20
 40331f0:	dfc00415 	stw	ra,16(sp)
 40331f4:	df000315 	stw	fp,12(sp)
 40331f8:	df000304 	addi	fp,sp,12
 40331fc:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4033200:	d0a00517 	ldw	r2,-32748(gp)
 4033204:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4033208:	00003106 	br	40332d0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 403320c:	e0bfff17 	ldw	r2,-4(fp)
 4033210:	10800217 	ldw	r2,8(r2)
 4033214:	1009883a 	mov	r4,r2
 4033218:	40260940 	call	4026094 <strlen>
 403321c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4033220:	e0bfff17 	ldw	r2,-4(fp)
 4033224:	10c00217 	ldw	r3,8(r2)
 4033228:	e0bffe17 	ldw	r2,-8(fp)
 403322c:	10bfffc4 	addi	r2,r2,-1
 4033230:	1885883a 	add	r2,r3,r2
 4033234:	10800003 	ldbu	r2,0(r2)
 4033238:	10803fcc 	andi	r2,r2,255
 403323c:	1080201c 	xori	r2,r2,128
 4033240:	10bfe004 	addi	r2,r2,-128
 4033244:	10800bd8 	cmpnei	r2,r2,47
 4033248:	1000031e 	bne	r2,zero,4033258 <alt_find_file+0x6c>
    {
      len -= 1;
 403324c:	e0bffe17 	ldw	r2,-8(fp)
 4033250:	10bfffc4 	addi	r2,r2,-1
 4033254:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4033258:	e0bffe17 	ldw	r2,-8(fp)
 403325c:	e0fffd17 	ldw	r3,-12(fp)
 4033260:	1885883a 	add	r2,r3,r2
 4033264:	10800003 	ldbu	r2,0(r2)
 4033268:	10803fcc 	andi	r2,r2,255
 403326c:	1080201c 	xori	r2,r2,128
 4033270:	10bfe004 	addi	r2,r2,-128
 4033274:	10800be0 	cmpeqi	r2,r2,47
 4033278:	1000081e 	bne	r2,zero,403329c <alt_find_file+0xb0>
 403327c:	e0bffe17 	ldw	r2,-8(fp)
 4033280:	e0fffd17 	ldw	r3,-12(fp)
 4033284:	1885883a 	add	r2,r3,r2
 4033288:	10800003 	ldbu	r2,0(r2)
 403328c:	10803fcc 	andi	r2,r2,255
 4033290:	1080201c 	xori	r2,r2,128
 4033294:	10bfe004 	addi	r2,r2,-128
 4033298:	10000a1e 	bne	r2,zero,40332c4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 403329c:	e0bfff17 	ldw	r2,-4(fp)
 40332a0:	10800217 	ldw	r2,8(r2)
 40332a4:	e0fffe17 	ldw	r3,-8(fp)
 40332a8:	180d883a 	mov	r6,r3
 40332ac:	e17ffd17 	ldw	r5,-12(fp)
 40332b0:	1009883a 	mov	r4,r2
 40332b4:	40338340 	call	4033834 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
 40332b8:	1000021e 	bne	r2,zero,40332c4 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
 40332bc:	e0bfff17 	ldw	r2,-4(fp)
 40332c0:	00000706 	br	40332e0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 40332c4:	e0bfff17 	ldw	r2,-4(fp)
 40332c8:	10800017 	ldw	r2,0(r2)
 40332cc:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
 40332d0:	e0ffff17 	ldw	r3,-4(fp)
 40332d4:	d0a00504 	addi	r2,gp,-32748
 40332d8:	18bfcc1e 	bne	r3,r2,403320c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
 40332dc:	0005883a 	mov	r2,zero
}
 40332e0:	e037883a 	mov	sp,fp
 40332e4:	dfc00117 	ldw	ra,4(sp)
 40332e8:	df000017 	ldw	fp,0(sp)
 40332ec:	dec00204 	addi	sp,sp,8
 40332f0:	f800283a 	ret

040332f4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 40332f4:	defffc04 	addi	sp,sp,-16
 40332f8:	df000315 	stw	fp,12(sp)
 40332fc:	df000304 	addi	fp,sp,12
 4033300:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
 4033304:	00bffa04 	movi	r2,-24
 4033308:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 403330c:	e03fff15 	stw	zero,-4(fp)
 4033310:	00001706 	br	4033370 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
 4033314:	e0bfff17 	ldw	r2,-4(fp)
 4033318:	10c00324 	muli	r3,r2,12
 403331c:	00800034 	movhi	r2,0
 4033320:	1885883a 	add	r2,r3,r2
 4033324:	1084c917 	ldw	r2,4900(r2)
 4033328:	10000e1e 	bne	r2,zero,4033364 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
 403332c:	e0bfff17 	ldw	r2,-4(fp)
 4033330:	11000324 	muli	r4,r2,12
 4033334:	e0fffd17 	ldw	r3,-12(fp)
 4033338:	00800034 	movhi	r2,0
 403333c:	2085883a 	add	r2,r4,r2
 4033340:	10c4c915 	stw	r3,4900(r2)
      if (i > alt_max_fd)
 4033344:	d0e00917 	ldw	r3,-32732(gp)
 4033348:	e0bfff17 	ldw	r2,-4(fp)
 403334c:	1880020e 	bge	r3,r2,4033358 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
 4033350:	e0bfff17 	ldw	r2,-4(fp)
 4033354:	d0a00915 	stw	r2,-32732(gp)
      }
      rc = i;
 4033358:	e0bfff17 	ldw	r2,-4(fp)
 403335c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 4033360:	00000706 	br	4033380 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
 4033364:	e0bfff17 	ldw	r2,-4(fp)
 4033368:	10800044 	addi	r2,r2,1
 403336c:	e0bfff15 	stw	r2,-4(fp)
 4033370:	e0bfff17 	ldw	r2,-4(fp)
 4033374:	10800810 	cmplti	r2,r2,32
 4033378:	103fe61e 	bne	r2,zero,4033314 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
 403337c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 4033380:	e0bffe17 	ldw	r2,-8(fp)
}
 4033384:	e037883a 	mov	sp,fp
 4033388:	df000017 	ldw	fp,0(sp)
 403338c:	dec00104 	addi	sp,sp,4
 4033390:	f800283a 	ret

04033394 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 4033394:	defffe04 	addi	sp,sp,-8
 4033398:	dfc00115 	stw	ra,4(sp)
 403339c:	df000015 	stw	fp,0(sp)
 40333a0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 40333a4:	01440004 	movi	r5,4096
 40333a8:	0009883a 	mov	r4,zero
 40333ac:	40336c40 	call	40336c4 <alt_icache_flush>
#endif
}
 40333b0:	0001883a 	nop
 40333b4:	e037883a 	mov	sp,fp
 40333b8:	dfc00117 	ldw	ra,4(sp)
 40333bc:	df000017 	ldw	fp,0(sp)
 40333c0:	dec00204 	addi	sp,sp,8
 40333c4:	f800283a 	ret

040333c8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 40333c8:	defff904 	addi	sp,sp,-28
 40333cc:	dfc00615 	stw	ra,24(sp)
 40333d0:	df000515 	stw	fp,20(sp)
 40333d4:	df000504 	addi	fp,sp,20
 40333d8:	e13ffe15 	stw	r4,-8(fp)
 40333dc:	e17ffd15 	stw	r5,-12(fp)
 40333e0:	e1bffc15 	stw	r6,-16(fp)
 40333e4:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
 40333e8:	e1bffb17 	ldw	r6,-20(fp)
 40333ec:	e17ffc17 	ldw	r5,-16(fp)
 40333f0:	e13ffd17 	ldw	r4,-12(fp)
 40333f4:	403194c0 	call	403194c <open>
 40333f8:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
 40333fc:	e0bfff17 	ldw	r2,-4(fp)
 4033400:	10001716 	blt	r2,zero,4033460 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
 4033404:	e0bfff17 	ldw	r2,-4(fp)
 4033408:	10c00324 	muli	r3,r2,12
 403340c:	00800034 	movhi	r2,0
 4033410:	1885883a 	add	r2,r3,r2
 4033414:	10c4c917 	ldw	r3,4900(r2)
 4033418:	e0bffe17 	ldw	r2,-8(fp)
 403341c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 4033420:	e0bfff17 	ldw	r2,-4(fp)
 4033424:	10c00324 	muli	r3,r2,12
 4033428:	00800034 	movhi	r2,0
 403342c:	1885883a 	add	r2,r3,r2
 4033430:	10c4ca17 	ldw	r3,4904(r2)
 4033434:	e0bffe17 	ldw	r2,-8(fp)
 4033438:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 403343c:	e0bfff17 	ldw	r2,-4(fp)
 4033440:	10c00324 	muli	r3,r2,12
 4033444:	00800034 	movhi	r2,0
 4033448:	1885883a 	add	r2,r3,r2
 403344c:	10c4cb17 	ldw	r3,4908(r2)
 4033450:	e0bffe17 	ldw	r2,-8(fp)
 4033454:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 4033458:	e13fff17 	ldw	r4,-4(fp)
 403345c:	4031bd80 	call	4031bd8 <alt_release_fd>
  }
} 
 4033460:	0001883a 	nop
 4033464:	e037883a 	mov	sp,fp
 4033468:	dfc00117 	ldw	ra,4(sp)
 403346c:	df000017 	ldw	fp,0(sp)
 4033470:	dec00204 	addi	sp,sp,8
 4033474:	f800283a 	ret

04033478 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 4033478:	defffb04 	addi	sp,sp,-20
 403347c:	dfc00415 	stw	ra,16(sp)
 4033480:	df000315 	stw	fp,12(sp)
 4033484:	df000304 	addi	fp,sp,12
 4033488:	e13fff15 	stw	r4,-4(fp)
 403348c:	e17ffe15 	stw	r5,-8(fp)
 4033490:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 4033494:	01c07fc4 	movi	r7,511
 4033498:	01800044 	movi	r6,1
 403349c:	e17fff17 	ldw	r5,-4(fp)
 40334a0:	01000034 	movhi	r4,0
 40334a4:	2104cc04 	addi	r4,r4,4912
 40334a8:	40333c80 	call	40333c8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 40334ac:	01c07fc4 	movi	r7,511
 40334b0:	000d883a 	mov	r6,zero
 40334b4:	e17ffe17 	ldw	r5,-8(fp)
 40334b8:	01000034 	movhi	r4,0
 40334bc:	2104c904 	addi	r4,r4,4900
 40334c0:	40333c80 	call	40333c8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 40334c4:	01c07fc4 	movi	r7,511
 40334c8:	01800044 	movi	r6,1
 40334cc:	e17ffd17 	ldw	r5,-12(fp)
 40334d0:	01000034 	movhi	r4,0
 40334d4:	2104cf04 	addi	r4,r4,4924
 40334d8:	40333c80 	call	40333c8 <alt_open_fd>
}  
 40334dc:	0001883a 	nop
 40334e0:	e037883a 	mov	sp,fp
 40334e4:	dfc00117 	ldw	ra,4(sp)
 40334e8:	df000017 	ldw	fp,0(sp)
 40334ec:	dec00204 	addi	sp,sp,8
 40334f0:	f800283a 	ret

040334f4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 40334f4:	defffa04 	addi	sp,sp,-24
 40334f8:	df000515 	stw	fp,20(sp)
 40334fc:	df000504 	addi	fp,sp,20
 4033500:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
 4033504:	0005303a 	rdctl	r2,status
 4033508:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 403350c:	e0fffc17 	ldw	r3,-16(fp)
 4033510:	00bfff84 	movi	r2,-2
 4033514:	1884703a 	and	r2,r3,r2
 4033518:	1001703a 	wrctl	status,r2
  return context;
 403351c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 4033520:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
 4033524:	e0bffb17 	ldw	r2,-20(fp)
 4033528:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 403352c:	e0bffd17 	ldw	r2,-12(fp)
 4033530:	10800017 	ldw	r2,0(r2)
 4033534:	e0fffd17 	ldw	r3,-12(fp)
 4033538:	18c00117 	ldw	r3,4(r3)
 403353c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 4033540:	e0bffd17 	ldw	r2,-12(fp)
 4033544:	10800117 	ldw	r2,4(r2)
 4033548:	e0fffd17 	ldw	r3,-12(fp)
 403354c:	18c00017 	ldw	r3,0(r3)
 4033550:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 4033554:	e0bffd17 	ldw	r2,-12(fp)
 4033558:	e0fffd17 	ldw	r3,-12(fp)
 403355c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 4033560:	e0bffd17 	ldw	r2,-12(fp)
 4033564:	e0fffd17 	ldw	r3,-12(fp)
 4033568:	10c00015 	stw	r3,0(r2)
} 
 403356c:	0001883a 	nop
 4033570:	e0bfff17 	ldw	r2,-4(fp)
 4033574:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 4033578:	e0bffe17 	ldw	r2,-8(fp)
 403357c:	1001703a 	wrctl	status,r2
}
 4033580:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
 4033584:	0001883a 	nop
 4033588:	e037883a 	mov	sp,fp
 403358c:	df000017 	ldw	fp,0(sp)
 4033590:	dec00104 	addi	sp,sp,4
 4033594:	f800283a 	ret

04033598 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 4033598:	defffb04 	addi	sp,sp,-20
 403359c:	dfc00415 	stw	ra,16(sp)
 40335a0:	df000315 	stw	fp,12(sp)
 40335a4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 40335a8:	d0a00d17 	ldw	r2,-32716(gp)
 40335ac:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 40335b0:	d0a01b17 	ldw	r2,-32660(gp)
 40335b4:	10800044 	addi	r2,r2,1
 40335b8:	d0a01b15 	stw	r2,-32660(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 40335bc:	00002e06 	br	4033678 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 40335c0:	e0bfff17 	ldw	r2,-4(fp)
 40335c4:	10800017 	ldw	r2,0(r2)
 40335c8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 40335cc:	e0bfff17 	ldw	r2,-4(fp)
 40335d0:	10800403 	ldbu	r2,16(r2)
 40335d4:	10803fcc 	andi	r2,r2,255
 40335d8:	10000426 	beq	r2,zero,40335ec <alt_tick+0x54>
 40335dc:	d0a01b17 	ldw	r2,-32660(gp)
 40335e0:	1000021e 	bne	r2,zero,40335ec <alt_tick+0x54>
    {
      alarm->rollover = 0;
 40335e4:	e0bfff17 	ldw	r2,-4(fp)
 40335e8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 40335ec:	e0bfff17 	ldw	r2,-4(fp)
 40335f0:	10800217 	ldw	r2,8(r2)
 40335f4:	d0e01b17 	ldw	r3,-32660(gp)
 40335f8:	18801d36 	bltu	r3,r2,4033670 <alt_tick+0xd8>
 40335fc:	e0bfff17 	ldw	r2,-4(fp)
 4033600:	10800403 	ldbu	r2,16(r2)
 4033604:	10803fcc 	andi	r2,r2,255
 4033608:	1000191e 	bne	r2,zero,4033670 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 403360c:	e0bfff17 	ldw	r2,-4(fp)
 4033610:	10800317 	ldw	r2,12(r2)
 4033614:	e0ffff17 	ldw	r3,-4(fp)
 4033618:	18c00517 	ldw	r3,20(r3)
 403361c:	1809883a 	mov	r4,r3
 4033620:	103ee83a 	callr	r2
 4033624:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 4033628:	e0bffd17 	ldw	r2,-12(fp)
 403362c:	1000031e 	bne	r2,zero,403363c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 4033630:	e13fff17 	ldw	r4,-4(fp)
 4033634:	40334f40 	call	40334f4 <alt_alarm_stop>
 4033638:	00000d06 	br	4033670 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 403363c:	e0bfff17 	ldw	r2,-4(fp)
 4033640:	10c00217 	ldw	r3,8(r2)
 4033644:	e0bffd17 	ldw	r2,-12(fp)
 4033648:	1887883a 	add	r3,r3,r2
 403364c:	e0bfff17 	ldw	r2,-4(fp)
 4033650:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 4033654:	e0bfff17 	ldw	r2,-4(fp)
 4033658:	10c00217 	ldw	r3,8(r2)
 403365c:	d0a01b17 	ldw	r2,-32660(gp)
 4033660:	1880032e 	bgeu	r3,r2,4033670 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 4033664:	e0bfff17 	ldw	r2,-4(fp)
 4033668:	00c00044 	movi	r3,1
 403366c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 4033670:	e0bffe17 	ldw	r2,-8(fp)
 4033674:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
 4033678:	e0ffff17 	ldw	r3,-4(fp)
 403367c:	d0a00d04 	addi	r2,gp,-32716
 4033680:	18bfcf1e 	bne	r3,r2,40335c0 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 4033684:	0001883a 	nop
}
 4033688:	0001883a 	nop
 403368c:	e037883a 	mov	sp,fp
 4033690:	dfc00117 	ldw	ra,4(sp)
 4033694:	df000017 	ldw	fp,0(sp)
 4033698:	dec00204 	addi	sp,sp,8
 403369c:	f800283a 	ret

040336a0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 40336a0:	deffff04 	addi	sp,sp,-4
 40336a4:	df000015 	stw	fp,0(sp)
 40336a8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 40336ac:	000170fa 	wrctl	ienable,zero
}
 40336b0:	0001883a 	nop
 40336b4:	e037883a 	mov	sp,fp
 40336b8:	df000017 	ldw	fp,0(sp)
 40336bc:	dec00104 	addi	sp,sp,4
 40336c0:	f800283a 	ret

040336c4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 40336c4:	defffb04 	addi	sp,sp,-20
 40336c8:	df000415 	stw	fp,16(sp)
 40336cc:	df000404 	addi	fp,sp,16
 40336d0:	e13ffd15 	stw	r4,-12(fp)
 40336d4:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 40336d8:	e0bffc17 	ldw	r2,-16(fp)
 40336dc:	10840070 	cmpltui	r2,r2,4097
 40336e0:	1000021e 	bne	r2,zero,40336ec <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 40336e4:	00840004 	movi	r2,4096
 40336e8:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
 40336ec:	e0fffd17 	ldw	r3,-12(fp)
 40336f0:	e0bffc17 	ldw	r2,-16(fp)
 40336f4:	1885883a 	add	r2,r3,r2
 40336f8:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 40336fc:	e0bffd17 	ldw	r2,-12(fp)
 4033700:	e0bfff15 	stw	r2,-4(fp)
 4033704:	00000506 	br	403371c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 4033708:	e0bfff17 	ldw	r2,-4(fp)
 403370c:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4033710:	e0bfff17 	ldw	r2,-4(fp)
 4033714:	10800804 	addi	r2,r2,32
 4033718:	e0bfff15 	stw	r2,-4(fp)
 403371c:	e0ffff17 	ldw	r3,-4(fp)
 4033720:	e0bffe17 	ldw	r2,-8(fp)
 4033724:	18bff836 	bltu	r3,r2,4033708 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 4033728:	e0bffd17 	ldw	r2,-12(fp)
 403372c:	108007cc 	andi	r2,r2,31
 4033730:	10000226 	beq	r2,zero,403373c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 4033734:	e0bfff17 	ldw	r2,-4(fp)
 4033738:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 403373c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 4033740:	0001883a 	nop
 4033744:	e037883a 	mov	sp,fp
 4033748:	df000017 	ldw	fp,0(sp)
 403374c:	dec00104 	addi	sp,sp,4
 4033750:	f800283a 	ret

04033754 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4033754:	defffe04 	addi	sp,sp,-8
 4033758:	df000115 	stw	fp,4(sp)
 403375c:	df000104 	addi	fp,sp,4
 4033760:	e13fff15 	stw	r4,-4(fp)
 4033764:	e0bfff17 	ldw	r2,-4(fp)
 4033768:	10bffe84 	addi	r2,r2,-6
 403376c:	10c00428 	cmpgeui	r3,r2,16
 4033770:	1800191e 	bne	r3,zero,40337d8 <alt_exception_cause_generated_bad_addr+0x84>
 4033774:	100690ba 	slli	r3,r2,2
 4033778:	008100f4 	movhi	r2,1027
 403377c:	1885883a 	add	r2,r3,r2
 4033780:	108de217 	ldw	r2,14216(r2)
 4033784:	1000683a 	jmp	r2
 4033788:	040337c8 	cmpgei	r16,zero,3295
 403378c:	040337c8 	cmpgei	r16,zero,3295
 4033790:	040337d8 	cmpnei	r16,zero,3295
 4033794:	040337d8 	cmpnei	r16,zero,3295
 4033798:	040337d8 	cmpnei	r16,zero,3295
 403379c:	040337c8 	cmpgei	r16,zero,3295
 40337a0:	040337d0 	cmplti	r16,zero,3295
 40337a4:	040337d8 	cmpnei	r16,zero,3295
 40337a8:	040337c8 	cmpgei	r16,zero,3295
 40337ac:	040337c8 	cmpgei	r16,zero,3295
 40337b0:	040337d8 	cmpnei	r16,zero,3295
 40337b4:	040337c8 	cmpgei	r16,zero,3295
 40337b8:	040337d0 	cmplti	r16,zero,3295
 40337bc:	040337d8 	cmpnei	r16,zero,3295
 40337c0:	040337d8 	cmpnei	r16,zero,3295
 40337c4:	040337c8 	cmpgei	r16,zero,3295
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 40337c8:	00800044 	movi	r2,1
 40337cc:	00000306 	br	40337dc <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 40337d0:	0005883a 	mov	r2,zero
 40337d4:	00000106 	br	40337dc <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
 40337d8:	0005883a 	mov	r2,zero
  }
}
 40337dc:	e037883a 	mov	sp,fp
 40337e0:	df000017 	ldw	fp,0(sp)
 40337e4:	dec00104 	addi	sp,sp,4
 40337e8:	f800283a 	ret

040337ec <atexit>:
 40337ec:	200b883a 	mov	r5,r4
 40337f0:	000f883a 	mov	r7,zero
 40337f4:	000d883a 	mov	r6,zero
 40337f8:	0009883a 	mov	r4,zero
 40337fc:	40338ac1 	jmpi	40338ac <__register_exitproc>

04033800 <exit>:
 4033800:	defffe04 	addi	sp,sp,-8
 4033804:	000b883a 	mov	r5,zero
 4033808:	dc000015 	stw	r16,0(sp)
 403380c:	dfc00115 	stw	ra,4(sp)
 4033810:	2021883a 	mov	r16,r4
 4033814:	403393c0 	call	403393c <__call_exitprocs>
 4033818:	00800034 	movhi	r2,0
 403381c:	11094d17 	ldw	r4,9524(r2)
 4033820:	20800f17 	ldw	r2,60(r4)
 4033824:	10000126 	beq	r2,zero,403382c <exit+0x2c>
 4033828:	103ee83a 	callr	r2
 403382c:	8009883a 	mov	r4,r16
 4033830:	403108c0 	call	403108c <_exit>

04033834 <memcmp>:
 4033834:	30800130 	cmpltui	r2,r6,4
 4033838:	10000b1e 	bne	r2,zero,4033868 <memcmp+0x34>
 403383c:	2144b03a 	or	r2,r4,r5
 4033840:	108000cc 	andi	r2,r2,3
 4033844:	1000171e 	bne	r2,zero,40338a4 <memcmp+0x70>
 4033848:	20c00017 	ldw	r3,0(r4)
 403384c:	28800017 	ldw	r2,0(r5)
 4033850:	1880141e 	bne	r3,r2,40338a4 <memcmp+0x70>
 4033854:	31bfff04 	addi	r6,r6,-4
 4033858:	30800128 	cmpgeui	r2,r6,4
 403385c:	21000104 	addi	r4,r4,4
 4033860:	29400104 	addi	r5,r5,4
 4033864:	103ff81e 	bne	r2,zero,4033848 <memcmp+0x14>
 4033868:	30bfffc4 	addi	r2,r6,-1
 403386c:	30000b26 	beq	r6,zero,403389c <memcmp+0x68>
 4033870:	11800044 	addi	r6,r2,1
 4033874:	218d883a 	add	r6,r4,r6
 4033878:	00000106 	br	4033880 <memcmp+0x4c>
 403387c:	21800726 	beq	r4,r6,403389c <memcmp+0x68>
 4033880:	20800003 	ldbu	r2,0(r4)
 4033884:	28c00003 	ldbu	r3,0(r5)
 4033888:	21000044 	addi	r4,r4,1
 403388c:	29400044 	addi	r5,r5,1
 4033890:	10fffa26 	beq	r2,r3,403387c <memcmp+0x48>
 4033894:	10c5c83a 	sub	r2,r2,r3
 4033898:	f800283a 	ret
 403389c:	0005883a 	mov	r2,zero
 40338a0:	f800283a 	ret
 40338a4:	30bfffc4 	addi	r2,r6,-1
 40338a8:	003ff106 	br	4033870 <memcmp+0x3c>

040338ac <__register_exitproc>:
 40338ac:	00800034 	movhi	r2,0
 40338b0:	10c94d17 	ldw	r3,9524(r2)
 40338b4:	18805217 	ldw	r2,328(r3)
 40338b8:	10001726 	beq	r2,zero,4033918 <__register_exitproc+0x6c>
 40338bc:	10c00117 	ldw	r3,4(r2)
 40338c0:	1a000808 	cmpgei	r8,r3,32
 40338c4:	40001b1e 	bne	r8,zero,4033934 <__register_exitproc+0x88>
 40338c8:	20000b26 	beq	r4,zero,40338f8 <__register_exitproc+0x4c>
 40338cc:	181090ba 	slli	r8,r3,2
 40338d0:	02400044 	movi	r9,1
 40338d4:	48d2983a 	sll	r9,r9,r3
 40338d8:	1211883a 	add	r8,r2,r8
 40338dc:	41802215 	stw	r6,136(r8)
 40338e0:	11806217 	ldw	r6,392(r2)
 40338e4:	21000098 	cmpnei	r4,r4,2
 40338e8:	324cb03a 	or	r6,r6,r9
 40338ec:	11806215 	stw	r6,392(r2)
 40338f0:	41c04215 	stw	r7,264(r8)
 40338f4:	20000b26 	beq	r4,zero,4033924 <__register_exitproc+0x78>
 40338f8:	19000084 	addi	r4,r3,2
 40338fc:	200890ba 	slli	r4,r4,2
 4033900:	18c00044 	addi	r3,r3,1
 4033904:	10c00115 	stw	r3,4(r2)
 4033908:	1105883a 	add	r2,r2,r4
 403390c:	11400015 	stw	r5,0(r2)
 4033910:	0005883a 	mov	r2,zero
 4033914:	f800283a 	ret
 4033918:	18805304 	addi	r2,r3,332
 403391c:	18805215 	stw	r2,328(r3)
 4033920:	003fe606 	br	40338bc <__register_exitproc+0x10>
 4033924:	11006317 	ldw	r4,396(r2)
 4033928:	2252b03a 	or	r9,r4,r9
 403392c:	12406315 	stw	r9,396(r2)
 4033930:	003ff106 	br	40338f8 <__register_exitproc+0x4c>
 4033934:	00bfffc4 	movi	r2,-1
 4033938:	f800283a 	ret

0403393c <__call_exitprocs>:
 403393c:	defff704 	addi	sp,sp,-36
 4033940:	00800034 	movhi	r2,0
 4033944:	dcc00315 	stw	r19,12(sp)
 4033948:	14c94d17 	ldw	r19,9524(r2)
 403394c:	dc800215 	stw	r18,8(sp)
 4033950:	dfc00815 	stw	ra,32(sp)
 4033954:	9c805217 	ldw	r18,328(r19)
 4033958:	ddc00715 	stw	r23,28(sp)
 403395c:	dd800615 	stw	r22,24(sp)
 4033960:	dd400515 	stw	r21,20(sp)
 4033964:	dd000415 	stw	r20,16(sp)
 4033968:	dc400115 	stw	r17,4(sp)
 403396c:	dc000015 	stw	r16,0(sp)
 4033970:	90001026 	beq	r18,zero,40339b4 <__call_exitprocs+0x78>
 4033974:	202b883a 	mov	r21,r4
 4033978:	282d883a 	mov	r22,r5
 403397c:	05000044 	movi	r20,1
 4033980:	94000117 	ldw	r16,4(r18)
 4033984:	847fffc4 	addi	r17,r16,-1
 4033988:	88000a16 	blt	r17,zero,40339b4 <__call_exitprocs+0x78>
 403398c:	84000044 	addi	r16,r16,1
 4033990:	802090ba 	slli	r16,r16,2
 4033994:	9421883a 	add	r16,r18,r16
 4033998:	b0001126 	beq	r22,zero,40339e0 <__call_exitprocs+0xa4>
 403399c:	80804017 	ldw	r2,256(r16)
 40339a0:	15800f26 	beq	r2,r22,40339e0 <__call_exitprocs+0xa4>
 40339a4:	8c7fffc4 	addi	r17,r17,-1
 40339a8:	88bfffd8 	cmpnei	r2,r17,-1
 40339ac:	843fff04 	addi	r16,r16,-4
 40339b0:	103ff91e 	bne	r2,zero,4033998 <__call_exitprocs+0x5c>
 40339b4:	dfc00817 	ldw	ra,32(sp)
 40339b8:	ddc00717 	ldw	r23,28(sp)
 40339bc:	dd800617 	ldw	r22,24(sp)
 40339c0:	dd400517 	ldw	r21,20(sp)
 40339c4:	dd000417 	ldw	r20,16(sp)
 40339c8:	dcc00317 	ldw	r19,12(sp)
 40339cc:	dc800217 	ldw	r18,8(sp)
 40339d0:	dc400117 	ldw	r17,4(sp)
 40339d4:	dc000017 	ldw	r16,0(sp)
 40339d8:	dec00904 	addi	sp,sp,36
 40339dc:	f800283a 	ret
 40339e0:	90800117 	ldw	r2,4(r18)
 40339e4:	81800017 	ldw	r6,0(r16)
 40339e8:	10bfffc4 	addi	r2,r2,-1
 40339ec:	14401726 	beq	r2,r17,4033a4c <__call_exitprocs+0x110>
 40339f0:	80000015 	stw	zero,0(r16)
 40339f4:	303feb26 	beq	r6,zero,40339a4 <__call_exitprocs+0x68>
 40339f8:	a446983a 	sll	r3,r20,r17
 40339fc:	90806217 	ldw	r2,392(r18)
 4033a00:	95c00117 	ldw	r23,4(r18)
 4033a04:	1884703a 	and	r2,r3,r2
 4033a08:	1000081e 	bne	r2,zero,4033a2c <__call_exitprocs+0xf0>
 4033a0c:	303ee83a 	callr	r6
 4033a10:	90c00117 	ldw	r3,4(r18)
 4033a14:	98805217 	ldw	r2,328(r19)
 4033a18:	1dc0011e 	bne	r3,r23,4033a20 <__call_exitprocs+0xe4>
 4033a1c:	90bfe126 	beq	r18,r2,40339a4 <__call_exitprocs+0x68>
 4033a20:	103fe426 	beq	r2,zero,40339b4 <__call_exitprocs+0x78>
 4033a24:	1025883a 	mov	r18,r2
 4033a28:	003fd506 	br	4033980 <__call_exitprocs+0x44>
 4033a2c:	90806317 	ldw	r2,396(r18)
 4033a30:	81002017 	ldw	r4,128(r16)
 4033a34:	1886703a 	and	r3,r3,r2
 4033a38:	1800061e 	bne	r3,zero,4033a54 <__call_exitprocs+0x118>
 4033a3c:	200b883a 	mov	r5,r4
 4033a40:	a809883a 	mov	r4,r21
 4033a44:	303ee83a 	callr	r6
 4033a48:	003ff106 	br	4033a10 <__call_exitprocs+0xd4>
 4033a4c:	94400115 	stw	r17,4(r18)
 4033a50:	003fe806 	br	40339f4 <__call_exitprocs+0xb8>
 4033a54:	303ee83a 	callr	r6
 4033a58:	003fed06 	br	4033a10 <__call_exitprocs+0xd4>
